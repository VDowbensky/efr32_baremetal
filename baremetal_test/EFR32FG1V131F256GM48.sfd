/*
 * *******************************************************************************
 * * # License 
 * * Copyright 2020 Silicon Laboratories Inc. www.silabs.com 
 * *******************************************************************************
 * * 
 * * SPDX-License-Identifier: Zlib 
 * * 
 * * The licensor of this software is Silicon Laboratories Inc. 
 * * 
 * * This software is provided 'as-is', without any express or implied 
 * * warranty. In no event will the authors be held liable for any damages 
 * * arising from the use of this software. 
 * * 
 * * Permission is granted to anyone to use this software for any purpose, 
 * * including commercial applications, and to alter it and redistribute it 
 * * freely, subject to the following restrictions: 
 * * 
 * * 1. The origin of this software must not be misrepresented; you must not 
 * * claim that you wrote the original software. If you use this software 
 * * in a product, an acknowledgment in the product documentation would be 
 * * appreciated but is not required. 
 * * 2. Altered source versions must be plainly marked as such, and must not be 
 * * misrepresented as being the original software. 
 * * 3. This notice may not be removed or altered from any source distribution. 
 * * 
 * *******************************************************************************
 *
 * @file     EFR32FG1V131F256GM48.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  3.0.0
 * @date     25. August 2021
 * @note     Generated by SVDConv V3.3.39 on Wednesday, 25.08.2021 16:42:40
 *           from File 'EFR32FG1V131F256GM48_updated.svd',
 *           last modified on Wednesday, 25.08.2021 13:41:42
 */




// -----------------------------  Register Item Address: MSC_CTRL  --------------------------------
// SVD Line: 60

unsigned int MSC_CTRL __AT (0x400E0000);



// ----------------------------  Field Item: MSC_CTRL_ADDRFAULTEN  --------------------------------
// SVD Line: 69

//  <item> SFDITEM_FIELD__MSC_CTRL_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E0000) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CTRL ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_CTRL_CLKDISFAULTEN  -------------------------------
// SVD Line: 76

//  <item> SFDITEM_FIELD__MSC_CTRL_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E0000) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CTRL ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_CTRL_PWRUPONDEMAND  -------------------------------
// SVD Line: 83

//  <item> SFDITEM_FIELD__MSC_CTRL_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E0000) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CTRL ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MSC_CTRL_IFCREADCLEAR  -------------------------------
// SVD Line: 90

//  <item> SFDITEM_FIELD__MSC_CTRL_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E0000) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CTRL ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MSC_CTRL  ------------------------------------
// SVD Line: 60

//  <rtree> SFDITEM_REG__MSC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0000) Memory System Control Register </i>
//    <loc> ( (unsigned int)((MSC_CTRL >> 0) & 0xFFFFFFFF), ((MSC_CTRL = (MSC_CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_CTRL_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__MSC_CTRL_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__MSC_CTRL_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__MSC_CTRL_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MSC_READCTRL  ------------------------------
// SVD Line: 99

unsigned int MSC_READCTRL __AT (0x400E0004);



// -----------------------------  Field Item: MSC_READCTRL_IFCDIS  --------------------------------
// SVD Line: 108

//  <item> SFDITEM_FIELD__MSC_READCTRL_IFCDIS
//    <name> IFCDIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E0004) Internal Flash Cache Disable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_READCTRL ) </loc>
//      <o.3..3> IFCDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MSC_READCTRL_AIDIS  ---------------------------------
// SVD Line: 115

//  <item> SFDITEM_FIELD__MSC_READCTRL_AIDIS
//    <name> AIDIS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E0004) Automatic Invalidate Disable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_READCTRL ) </loc>
//      <o.4..4> AIDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MSC_READCTRL_ICCDIS  --------------------------------
// SVD Line: 122

//  <item> SFDITEM_FIELD__MSC_READCTRL_ICCDIS
//    <name> ICCDIS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E0004) Interrupt Context Cache Disable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_READCTRL ) </loc>
//      <o.5..5> ICCDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MSC_READCTRL_PREFETCH  -------------------------------
// SVD Line: 129

//  <item> SFDITEM_FIELD__MSC_READCTRL_PREFETCH
//    <name> PREFETCH </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E0004) Prefetch Mode </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_READCTRL ) </loc>
//      <o.8..8> PREFETCH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MSC_READCTRL_USEHPROT  -------------------------------
// SVD Line: 136

//  <item> SFDITEM_FIELD__MSC_READCTRL_USEHPROT
//    <name> USEHPROT </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400E0004) AHB_HPROT Mode </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_READCTRL ) </loc>
//      <o.9..9> USEHPROT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MSC_READCTRL_MODE  ---------------------------------
// SVD Line: 143

//  <item> SFDITEM_FIELD__MSC_READCTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E0004) \nRead Mode\n0 : WS0 = Zero wait-states inserted in fetch or read transfers\n1 : WS1 = One wait-state inserted for each fetch or read transfer. See Flash Wait-States table for details\n2 : Reserved - do not use\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) MSC_READCTRL ) </loc>
//      <o.25..24> MODE
//        <0=> 0: WS0 = Zero wait-states inserted in fetch or read transfers
//        <1=> 1: WS1 = One wait-state inserted for each fetch or read transfer. See Flash Wait-States table for details
//        <2=> 2: 
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: MSC_READCTRL_SCBTP  ---------------------------------
// SVD Line: 162

//  <item> SFDITEM_FIELD__MSC_READCTRL_SCBTP
//    <name> SCBTP </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E0004) Suppress Conditional Branch Target Perfetch </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_READCTRL ) </loc>
//      <o.28..28> SCBTP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MSC_READCTRL  ----------------------------------
// SVD Line: 99

//  <rtree> SFDITEM_REG__MSC_READCTRL
//    <name> READCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0004) Read Control Register </i>
//    <loc> ( (unsigned int)((MSC_READCTRL >> 0) & 0xFFFFFFFF), ((MSC_READCTRL = (MSC_READCTRL & ~(0x13000338UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x13000338) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_READCTRL_IFCDIS </item>
//    <item> SFDITEM_FIELD__MSC_READCTRL_AIDIS </item>
//    <item> SFDITEM_FIELD__MSC_READCTRL_ICCDIS </item>
//    <item> SFDITEM_FIELD__MSC_READCTRL_PREFETCH </item>
//    <item> SFDITEM_FIELD__MSC_READCTRL_USEHPROT </item>
//    <item> SFDITEM_FIELD__MSC_READCTRL_MODE </item>
//    <item> SFDITEM_FIELD__MSC_READCTRL_SCBTP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MSC_WRITECTRL  ------------------------------
// SVD Line: 171

unsigned int MSC_WRITECTRL __AT (0x400E0008);



// -----------------------------  Field Item: MSC_WRITECTRL_WREN  ---------------------------------
// SVD Line: 180

//  <item> SFDITEM_FIELD__MSC_WRITECTRL_WREN
//    <name> WREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E0008) Enable Write/Erase Controller </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECTRL ) </loc>
//      <o.0..0> WREN
//    </check>
//  </item>
//  


// -------------------------  Field Item: MSC_WRITECTRL_IRQERASEABORT  ----------------------------
// SVD Line: 187

//  <item> SFDITEM_FIELD__MSC_WRITECTRL_IRQERASEABORT
//    <name> IRQERASEABORT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E0008) Abort Page Erase on Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECTRL ) </loc>
//      <o.1..1> IRQERASEABORT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MSC_WRITECTRL  ---------------------------------
// SVD Line: 171

//  <rtree> SFDITEM_REG__MSC_WRITECTRL
//    <name> WRITECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0008) Write Control Register </i>
//    <loc> ( (unsigned int)((MSC_WRITECTRL >> 0) & 0xFFFFFFFF), ((MSC_WRITECTRL = (MSC_WRITECTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_WRITECTRL_WREN </item>
//    <item> SFDITEM_FIELD__MSC_WRITECTRL_IRQERASEABORT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MSC_WRITECMD  ------------------------------
// SVD Line: 196

unsigned int MSC_WRITECMD __AT (0x400E000C);



// ----------------------------  Field Item: MSC_WRITECMD_LADDRIM  --------------------------------
// SVD Line: 205

//  <item> SFDITEM_FIELD__MSC_WRITECMD_LADDRIM
//    <name> LADDRIM </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E000C) Load MSC_ADDRB Into ADDR </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.0..0> LADDRIM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_WRITECMD_ERASEPAGE  -------------------------------
// SVD Line: 212

//  <item> SFDITEM_FIELD__MSC_WRITECMD_ERASEPAGE
//    <name> ERASEPAGE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E000C) Erase Page </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.1..1> ERASEPAGE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MSC_WRITECMD_WRITEEND  -------------------------------
// SVD Line: 219

//  <item> SFDITEM_FIELD__MSC_WRITECMD_WRITEEND
//    <name> WRITEEND </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E000C) End Write Mode </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.2..2> WRITEEND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_WRITECMD_WRITEONCE  -------------------------------
// SVD Line: 226

//  <item> SFDITEM_FIELD__MSC_WRITECMD_WRITEONCE
//    <name> WRITEONCE </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E000C) Word Write-Once Trigger </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.3..3> WRITEONCE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_WRITECMD_WRITETRIG  -------------------------------
// SVD Line: 233

//  <item> SFDITEM_FIELD__MSC_WRITECMD_WRITETRIG
//    <name> WRITETRIG </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E000C) Word Write Sequence Trigger </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.4..4> WRITETRIG
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_WRITECMD_ERASEABORT  ------------------------------
// SVD Line: 240

//  <item> SFDITEM_FIELD__MSC_WRITECMD_ERASEABORT
//    <name> ERASEABORT </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E000C) Abort Erase Sequence </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.5..5> ERASEABORT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_WRITECMD_ERASEMAIN0  ------------------------------
// SVD Line: 247

//  <item> SFDITEM_FIELD__MSC_WRITECMD_ERASEMAIN0
//    <name> ERASEMAIN0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x400E000C) Mass Erase Region 0 </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.8..8> ERASEMAIN0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_WRITECMD_CLEARWDATA  ------------------------------
// SVD Line: 254

//  <item> SFDITEM_FIELD__MSC_WRITECMD_CLEARWDATA
//    <name> CLEARWDATA </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x400E000C) Clear WDATA State </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_WRITECMD ) </loc>
//      <o.12..12> CLEARWDATA
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MSC_WRITECMD  ----------------------------------
// SVD Line: 196

//  <rtree> SFDITEM_REG__MSC_WRITECMD
//    <name> WRITECMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E000C) Write Command Register </i>
//    <loc> ( (unsigned int)((MSC_WRITECMD >> 0) & 0xFFFFFFFF), ((MSC_WRITECMD = (MSC_WRITECMD & ~(0x113FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x113F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_LADDRIM </item>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_ERASEPAGE </item>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_WRITEEND </item>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_WRITEONCE </item>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_WRITETRIG </item>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_ERASEABORT </item>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_ERASEMAIN0 </item>
//    <item> SFDITEM_FIELD__MSC_WRITECMD_CLEARWDATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MSC_ADDRB  --------------------------------
// SVD Line: 263

unsigned int MSC_ADDRB __AT (0x400E0010);



// -------------------------------  Field Item: MSC_ADDRB_ADDRB  ----------------------------------
// SVD Line: 272

//  <item> SFDITEM_FIELD__MSC_ADDRB_ADDRB
//    <name> ADDRB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0010) Page Erase or Write Address Buffer </i>
//    <edit> 
//      <loc> ( (unsigned int)((MSC_ADDRB >> 0) & 0xFFFFFFFF), ((MSC_ADDRB = (MSC_ADDRB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: MSC_ADDRB  -----------------------------------
// SVD Line: 263

//  <rtree> SFDITEM_REG__MSC_ADDRB
//    <name> ADDRB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0010) Page Erase/Write Address Buffer </i>
//    <loc> ( (unsigned int)((MSC_ADDRB >> 0) & 0xFFFFFFFF), ((MSC_ADDRB = (MSC_ADDRB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_ADDRB_ADDRB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MSC_WDATA  --------------------------------
// SVD Line: 281

unsigned int MSC_WDATA __AT (0x400E0018);



// -------------------------------  Field Item: MSC_WDATA_WDATA  ----------------------------------
// SVD Line: 290

//  <item> SFDITEM_FIELD__MSC_WDATA_WDATA
//    <name> WDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0018) Write Data </i>
//    <edit> 
//      <loc> ( (unsigned int)((MSC_WDATA >> 0) & 0xFFFFFFFF), ((MSC_WDATA = (MSC_WDATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: MSC_WDATA  -----------------------------------
// SVD Line: 281

//  <rtree> SFDITEM_REG__MSC_WDATA
//    <name> WDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0018) Write Data Register </i>
//    <loc> ( (unsigned int)((MSC_WDATA >> 0) & 0xFFFFFFFF), ((MSC_WDATA = (MSC_WDATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_WDATA_WDATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MSC_STATUS  -------------------------------
// SVD Line: 299

unsigned int MSC_STATUS __AT (0x400E001C);



// -------------------------------  Field Item: MSC_STATUS_BUSY  ----------------------------------
// SVD Line: 308

//  <item> SFDITEM_FIELD__MSC_STATUS_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E001C) Erase/Write Busy </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STATUS ) </loc>
//      <o.0..0> BUSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MSC_STATUS_LOCKED  ---------------------------------
// SVD Line: 315

//  <item> SFDITEM_FIELD__MSC_STATUS_LOCKED
//    <name> LOCKED </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E001C) Access Locked </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STATUS ) </loc>
//      <o.1..1> LOCKED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MSC_STATUS_INVADDR  ---------------------------------
// SVD Line: 322

//  <item> SFDITEM_FIELD__MSC_STATUS_INVADDR
//    <name> INVADDR </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E001C) Invalid Write Address or Erase Page </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STATUS ) </loc>
//      <o.2..2> INVADDR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MSC_STATUS_WDATAREADY  -------------------------------
// SVD Line: 329

//  <item> SFDITEM_FIELD__MSC_STATUS_WDATAREADY
//    <name> WDATAREADY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E001C) WDATA Write Ready </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STATUS ) </loc>
//      <o.3..3> WDATAREADY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_STATUS_WORDTIMEOUT  -------------------------------
// SVD Line: 336

//  <item> SFDITEM_FIELD__MSC_STATUS_WORDTIMEOUT
//    <name> WORDTIMEOUT </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E001C) Flash Write Word Timeout </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STATUS ) </loc>
//      <o.4..4> WORDTIMEOUT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MSC_STATUS_ERASEABORTED  ------------------------------
// SVD Line: 343

//  <item> SFDITEM_FIELD__MSC_STATUS_ERASEABORTED
//    <name> ERASEABORTED </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400E001C) The Current Flash Erase Operation Aborted </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STATUS ) </loc>
//      <o.5..5> ERASEABORTED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MSC_STATUS_PCRUNNING  --------------------------------
// SVD Line: 350

//  <item> SFDITEM_FIELD__MSC_STATUS_PCRUNNING
//    <name> PCRUNNING </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x400E001C) Performance Counters Running </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STATUS ) </loc>
//      <o.6..6> PCRUNNING
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MSC_STATUS  -----------------------------------
// SVD Line: 299

//  <rtree> SFDITEM_REG__MSC_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E001C) Status Register </i>
//    <loc> ( (unsigned int)((MSC_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MSC_STATUS_BUSY </item>
//    <item> SFDITEM_FIELD__MSC_STATUS_LOCKED </item>
//    <item> SFDITEM_FIELD__MSC_STATUS_INVADDR </item>
//    <item> SFDITEM_FIELD__MSC_STATUS_WDATAREADY </item>
//    <item> SFDITEM_FIELD__MSC_STATUS_WORDTIMEOUT </item>
//    <item> SFDITEM_FIELD__MSC_STATUS_ERASEABORTED </item>
//    <item> SFDITEM_FIELD__MSC_STATUS_PCRUNNING </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: MSC_IF  ---------------------------------
// SVD Line: 359

unsigned int MSC_IF __AT (0x400E0030);



// --------------------------------  Field Item: MSC_IF_ERASE  ------------------------------------
// SVD Line: 368

//  <item> SFDITEM_FIELD__MSC_IF_ERASE
//    <name> ERASE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E0030) Erase Done Interrupt Read Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IF ) </loc>
//      <o.0..0> ERASE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IF_WRITE  ------------------------------------
// SVD Line: 375

//  <item> SFDITEM_FIELD__MSC_IF_WRITE
//    <name> WRITE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E0030) Write Done Interrupt Read Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IF ) </loc>
//      <o.1..1> WRITE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: MSC_IF_CHOF  ------------------------------------
// SVD Line: 382

//  <item> SFDITEM_FIELD__MSC_IF_CHOF
//    <name> CHOF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E0030) Cache Hits Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IF ) </loc>
//      <o.2..2> CHOF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: MSC_IF_CMOF  ------------------------------------
// SVD Line: 389

//  <item> SFDITEM_FIELD__MSC_IF_CMOF
//    <name> CMOF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E0030) Cache Misses Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IF ) </loc>
//      <o.3..3> CMOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IF_PWRUPF  -----------------------------------
// SVD Line: 396

//  <item> SFDITEM_FIELD__MSC_IF_PWRUPF
//    <name> PWRUPF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E0030) Flash Power Up Sequence Complete Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IF ) </loc>
//      <o.4..4> PWRUPF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: MSC_IF_ICACHERR  ----------------------------------
// SVD Line: 403

//  <item> SFDITEM_FIELD__MSC_IF_ICACHERR
//    <name> ICACHERR </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400E0030) ICache RAM Parity Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IF ) </loc>
//      <o.5..5> ICACHERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: MSC_IF  -------------------------------------
// SVD Line: 359

//  <rtree> SFDITEM_REG__MSC_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E0030) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((MSC_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MSC_IF_ERASE </item>
//    <item> SFDITEM_FIELD__MSC_IF_WRITE </item>
//    <item> SFDITEM_FIELD__MSC_IF_CHOF </item>
//    <item> SFDITEM_FIELD__MSC_IF_CMOF </item>
//    <item> SFDITEM_FIELD__MSC_IF_PWRUPF </item>
//    <item> SFDITEM_FIELD__MSC_IF_ICACHERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MSC_IFS  ---------------------------------
// SVD Line: 412

unsigned int MSC_IFS __AT (0x400E0034);



// --------------------------------  Field Item: MSC_IFS_ERASE  -----------------------------------
// SVD Line: 421

//  <item> SFDITEM_FIELD__MSC_IFS_ERASE
//    <name> ERASE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E0034) Set ERASE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFS ) </loc>
//      <o.0..0> ERASE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IFS_WRITE  -----------------------------------
// SVD Line: 428

//  <item> SFDITEM_FIELD__MSC_IFS_WRITE
//    <name> WRITE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E0034) Set WRITE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFS ) </loc>
//      <o.1..1> WRITE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IFS_CHOF  ------------------------------------
// SVD Line: 435

//  <item> SFDITEM_FIELD__MSC_IFS_CHOF
//    <name> CHOF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E0034) Set CHOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFS ) </loc>
//      <o.2..2> CHOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IFS_CMOF  ------------------------------------
// SVD Line: 442

//  <item> SFDITEM_FIELD__MSC_IFS_CMOF
//    <name> CMOF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E0034) Set CMOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFS ) </loc>
//      <o.3..3> CMOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: MSC_IFS_PWRUPF  -----------------------------------
// SVD Line: 449

//  <item> SFDITEM_FIELD__MSC_IFS_PWRUPF
//    <name> PWRUPF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E0034) Set PWRUPF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFS ) </loc>
//      <o.4..4> PWRUPF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MSC_IFS_ICACHERR  ----------------------------------
// SVD Line: 456

//  <item> SFDITEM_FIELD__MSC_IFS_ICACHERR
//    <name> ICACHERR </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E0034) Set ICACHERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFS ) </loc>
//      <o.5..5> ICACHERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: MSC_IFS  ------------------------------------
// SVD Line: 412

//  <rtree> SFDITEM_REG__MSC_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E0034) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((MSC_IFS >> 0) & 0xFFFFFFFF), ((MSC_IFS = (MSC_IFS & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_IFS_ERASE </item>
//    <item> SFDITEM_FIELD__MSC_IFS_WRITE </item>
//    <item> SFDITEM_FIELD__MSC_IFS_CHOF </item>
//    <item> SFDITEM_FIELD__MSC_IFS_CMOF </item>
//    <item> SFDITEM_FIELD__MSC_IFS_PWRUPF </item>
//    <item> SFDITEM_FIELD__MSC_IFS_ICACHERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MSC_IFC  ---------------------------------
// SVD Line: 465

unsigned int MSC_IFC __AT (0x400E0038);



// --------------------------------  Field Item: MSC_IFC_ERASE  -----------------------------------
// SVD Line: 474

//  <item> SFDITEM_FIELD__MSC_IFC_ERASE
//    <name> ERASE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E0038) Clear ERASE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFC ) </loc>
//      <o.0..0> ERASE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IFC_WRITE  -----------------------------------
// SVD Line: 481

//  <item> SFDITEM_FIELD__MSC_IFC_WRITE
//    <name> WRITE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E0038) Clear WRITE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFC ) </loc>
//      <o.1..1> WRITE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IFC_CHOF  ------------------------------------
// SVD Line: 488

//  <item> SFDITEM_FIELD__MSC_IFC_CHOF
//    <name> CHOF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E0038) Clear CHOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFC ) </loc>
//      <o.2..2> CHOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IFC_CMOF  ------------------------------------
// SVD Line: 495

//  <item> SFDITEM_FIELD__MSC_IFC_CMOF
//    <name> CMOF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E0038) Clear CMOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFC ) </loc>
//      <o.3..3> CMOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: MSC_IFC_PWRUPF  -----------------------------------
// SVD Line: 502

//  <item> SFDITEM_FIELD__MSC_IFC_PWRUPF
//    <name> PWRUPF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E0038) Clear PWRUPF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFC ) </loc>
//      <o.4..4> PWRUPF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MSC_IFC_ICACHERR  ----------------------------------
// SVD Line: 509

//  <item> SFDITEM_FIELD__MSC_IFC_ICACHERR
//    <name> ICACHERR </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E0038) Clear ICACHERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IFC ) </loc>
//      <o.5..5> ICACHERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: MSC_IFC  ------------------------------------
// SVD Line: 465

//  <rtree> SFDITEM_REG__MSC_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E0038) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((MSC_IFC >> 0) & 0xFFFFFFFF), ((MSC_IFC = (MSC_IFC & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_IFC_ERASE </item>
//    <item> SFDITEM_FIELD__MSC_IFC_WRITE </item>
//    <item> SFDITEM_FIELD__MSC_IFC_CHOF </item>
//    <item> SFDITEM_FIELD__MSC_IFC_CMOF </item>
//    <item> SFDITEM_FIELD__MSC_IFC_PWRUPF </item>
//    <item> SFDITEM_FIELD__MSC_IFC_ICACHERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MSC_IEN  ---------------------------------
// SVD Line: 518

unsigned int MSC_IEN __AT (0x400E003C);



// --------------------------------  Field Item: MSC_IEN_ERASE  -----------------------------------
// SVD Line: 527

//  <item> SFDITEM_FIELD__MSC_IEN_ERASE
//    <name> ERASE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E003C) ERASE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IEN ) </loc>
//      <o.0..0> ERASE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IEN_WRITE  -----------------------------------
// SVD Line: 534

//  <item> SFDITEM_FIELD__MSC_IEN_WRITE
//    <name> WRITE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E003C) WRITE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IEN ) </loc>
//      <o.1..1> WRITE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IEN_CHOF  ------------------------------------
// SVD Line: 541

//  <item> SFDITEM_FIELD__MSC_IEN_CHOF
//    <name> CHOF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E003C) CHOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IEN ) </loc>
//      <o.2..2> CHOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: MSC_IEN_CMOF  ------------------------------------
// SVD Line: 548

//  <item> SFDITEM_FIELD__MSC_IEN_CMOF
//    <name> CMOF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E003C) CMOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IEN ) </loc>
//      <o.3..3> CMOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: MSC_IEN_PWRUPF  -----------------------------------
// SVD Line: 555

//  <item> SFDITEM_FIELD__MSC_IEN_PWRUPF
//    <name> PWRUPF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E003C) PWRUPF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IEN ) </loc>
//      <o.4..4> PWRUPF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MSC_IEN_ICACHERR  ----------------------------------
// SVD Line: 562

//  <item> SFDITEM_FIELD__MSC_IEN_ICACHERR
//    <name> ICACHERR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E003C) ICACHERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_IEN ) </loc>
//      <o.5..5> ICACHERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: MSC_IEN  ------------------------------------
// SVD Line: 518

//  <rtree> SFDITEM_REG__MSC_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E003C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((MSC_IEN >> 0) & 0xFFFFFFFF), ((MSC_IEN = (MSC_IEN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_IEN_ERASE </item>
//    <item> SFDITEM_FIELD__MSC_IEN_WRITE </item>
//    <item> SFDITEM_FIELD__MSC_IEN_CHOF </item>
//    <item> SFDITEM_FIELD__MSC_IEN_CMOF </item>
//    <item> SFDITEM_FIELD__MSC_IEN_PWRUPF </item>
//    <item> SFDITEM_FIELD__MSC_IEN_ICACHERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MSC_LOCK  --------------------------------
// SVD Line: 571

unsigned int MSC_LOCK __AT (0x400E0040);



// ------------------------------  Field Item: MSC_LOCK_LOCKKEY  ----------------------------------
// SVD Line: 580

//  <item> SFDITEM_FIELD__MSC_LOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400E0040) Configuration Lock </i>
//    <edit> 
//      <loc> ( (unsigned short)((MSC_LOCK >> 0) & 0xFFFF), ((MSC_LOCK = (MSC_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: MSC_LOCK  ------------------------------------
// SVD Line: 571

//  <rtree> SFDITEM_REG__MSC_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0040) Configuration Lock Register </i>
//    <loc> ( (unsigned int)((MSC_LOCK >> 0) & 0xFFFFFFFF), ((MSC_LOCK = (MSC_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_LOCK_LOCKKEY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MSC_CACHECMD  ------------------------------
// SVD Line: 599

unsigned int MSC_CACHECMD __AT (0x400E0044);



// ----------------------------  Field Item: MSC_CACHECMD_INVCACHE  -------------------------------
// SVD Line: 608

//  <item> SFDITEM_FIELD__MSC_CACHECMD_INVCACHE
//    <name> INVCACHE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E0044) Invalidate Instruction Cache </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CACHECMD ) </loc>
//      <o.0..0> INVCACHE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MSC_CACHECMD_STARTPC  --------------------------------
// SVD Line: 615

//  <item> SFDITEM_FIELD__MSC_CACHECMD_STARTPC
//    <name> STARTPC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E0044) Start Performance Counters </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CACHECMD ) </loc>
//      <o.1..1> STARTPC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MSC_CACHECMD_STOPPC  --------------------------------
// SVD Line: 622

//  <item> SFDITEM_FIELD__MSC_CACHECMD_STOPPC
//    <name> STOPPC </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E0044) Stop Performance Counters </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CACHECMD ) </loc>
//      <o.2..2> STOPPC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MSC_CACHECMD  ----------------------------------
// SVD Line: 599

//  <rtree> SFDITEM_REG__MSC_CACHECMD
//    <name> CACHECMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E0044) Flash Cache Command Register </i>
//    <loc> ( (unsigned int)((MSC_CACHECMD >> 0) & 0xFFFFFFFF), ((MSC_CACHECMD = (MSC_CACHECMD & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_CACHECMD_INVCACHE </item>
//    <item> SFDITEM_FIELD__MSC_CACHECMD_STARTPC </item>
//    <item> SFDITEM_FIELD__MSC_CACHECMD_STOPPC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MSC_CACHEHITS  ------------------------------
// SVD Line: 631

unsigned int MSC_CACHEHITS __AT (0x400E0048);



// ---------------------------  Field Item: MSC_CACHEHITS_CACHEHITS  ------------------------------
// SVD Line: 640

//  <item> SFDITEM_FIELD__MSC_CACHEHITS_CACHEHITS
//    <name> CACHEHITS </name>
//    <r> 
//    <i> [Bits 19..0] RO (@ 0x400E0048) Cache Hits Since Last Performance Counter Start Command </i>
//    <edit> 
//      <loc> ( (unsigned int)((MSC_CACHEHITS >> 0) & 0xFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MSC_CACHEHITS  ---------------------------------
// SVD Line: 631

//  <rtree> SFDITEM_REG__MSC_CACHEHITS
//    <name> CACHEHITS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E0048) Cache Hits Performance Counter </i>
//    <loc> ( (unsigned int)((MSC_CACHEHITS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MSC_CACHEHITS_CACHEHITS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: MSC_CACHEMISSES  -----------------------------
// SVD Line: 649

unsigned int MSC_CACHEMISSES __AT (0x400E004C);



// -------------------------  Field Item: MSC_CACHEMISSES_CACHEMISSES  ----------------------------
// SVD Line: 658

//  <item> SFDITEM_FIELD__MSC_CACHEMISSES_CACHEMISSES
//    <name> CACHEMISSES </name>
//    <r> 
//    <i> [Bits 19..0] RO (@ 0x400E004C) Cache Misses Since Last Performance Counter Start Command </i>
//    <edit> 
//      <loc> ( (unsigned int)((MSC_CACHEMISSES >> 0) & 0xFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MSC_CACHEMISSES  --------------------------------
// SVD Line: 649

//  <rtree> SFDITEM_REG__MSC_CACHEMISSES
//    <name> CACHEMISSES </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E004C) Cache Misses Performance Counter </i>
//    <loc> ( (unsigned int)((MSC_CACHEMISSES >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MSC_CACHEMISSES_CACHEMISSES </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MSC_MASSLOCK  ------------------------------
// SVD Line: 667

unsigned int MSC_MASSLOCK __AT (0x400E0054);



// ----------------------------  Field Item: MSC_MASSLOCK_LOCKKEY  --------------------------------
// SVD Line: 676

//  <item> SFDITEM_FIELD__MSC_MASSLOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400E0054) Mass Erase Lock </i>
//    <edit> 
//      <loc> ( (unsigned short)((MSC_MASSLOCK >> 0) & 0xFFFF), ((MSC_MASSLOCK = (MSC_MASSLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MSC_MASSLOCK  ----------------------------------
// SVD Line: 667

//  <rtree> SFDITEM_REG__MSC_MASSLOCK
//    <name> MASSLOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E0054) Mass Erase Lock Register </i>
//    <loc> ( (unsigned int)((MSC_MASSLOCK >> 0) & 0xFFFFFFFF), ((MSC_MASSLOCK = (MSC_MASSLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_MASSLOCK_LOCKKEY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MSC_STARTUP  -------------------------------
// SVD Line: 695

unsigned int MSC_STARTUP __AT (0x400E005C);



// -----------------------------  Field Item: MSC_STARTUP_STDLY0  ---------------------------------
// SVD Line: 704

//  <item> SFDITEM_FIELD__MSC_STARTUP_STDLY0
//    <name> STDLY0 </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x400E005C) Startup Delay 0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((MSC_STARTUP >> 0) & 0x3FF), ((MSC_STARTUP = (MSC_STARTUP & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MSC_STARTUP_STDLY1  ---------------------------------
// SVD Line: 711

//  <item> SFDITEM_FIELD__MSC_STARTUP_STDLY1
//    <name> STDLY1 </name>
//    <rw> 
//    <i> [Bits 21..12] RW (@ 0x400E005C) Startup Delay 0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((MSC_STARTUP >> 12) & 0x3FF), ((MSC_STARTUP = (MSC_STARTUP & ~(0x3FFUL << 12 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MSC_STARTUP_ASTWAIT  --------------------------------
// SVD Line: 718

//  <item> SFDITEM_FIELD__MSC_STARTUP_ASTWAIT
//    <name> ASTWAIT </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400E005C) Active Startup Wait </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STARTUP ) </loc>
//      <o.24..24> ASTWAIT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MSC_STARTUP_STWSEN  ---------------------------------
// SVD Line: 725

//  <item> SFDITEM_FIELD__MSC_STARTUP_STWSEN
//    <name> STWSEN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E005C) Startup Waitstates Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STARTUP ) </loc>
//      <o.25..25> STWSEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MSC_STARTUP_STWSAEN  --------------------------------
// SVD Line: 732

//  <item> SFDITEM_FIELD__MSC_STARTUP_STWSAEN
//    <name> STWSAEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E005C) Startup Waitstates Always Enable </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_STARTUP ) </loc>
//      <o.26..26> STWSAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MSC_STARTUP_STWS  ----------------------------------
// SVD Line: 739

//  <item> SFDITEM_FIELD__MSC_STARTUP_STWS
//    <name> STWS </name>
//    <rw> 
//    <i> [Bits 30..28] RW (@ 0x400E005C) Startup Waitstates </i>
//    <edit> 
//      <loc> ( (unsigned char)((MSC_STARTUP >> 28) & 0x7), ((MSC_STARTUP = (MSC_STARTUP & ~(0x7UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MSC_STARTUP  ----------------------------------
// SVD Line: 695

//  <rtree> SFDITEM_REG__MSC_STARTUP
//    <name> STARTUP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E005C) Startup Control </i>
//    <loc> ( (unsigned int)((MSC_STARTUP >> 0) & 0xFFFFFFFF), ((MSC_STARTUP = (MSC_STARTUP & ~(0x773FF3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x773FF3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_STARTUP_STDLY0 </item>
//    <item> SFDITEM_FIELD__MSC_STARTUP_STDLY1 </item>
//    <item> SFDITEM_FIELD__MSC_STARTUP_ASTWAIT </item>
//    <item> SFDITEM_FIELD__MSC_STARTUP_STWSEN </item>
//    <item> SFDITEM_FIELD__MSC_STARTUP_STWSAEN </item>
//    <item> SFDITEM_FIELD__MSC_STARTUP_STWS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MSC_CMD  ---------------------------------
// SVD Line: 748

unsigned int MSC_CMD __AT (0x400E0074);



// --------------------------------  Field Item: MSC_CMD_PWRUP  -----------------------------------
// SVD Line: 757

//  <item> SFDITEM_FIELD__MSC_CMD_PWRUP
//    <name> PWRUP </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E0074) Flash Power Up Command </i>
//    <check> 
//      <loc> ( (unsigned int) MSC_CMD ) </loc>
//      <o.0..0> PWRUP
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: MSC_CMD  ------------------------------------
// SVD Line: 748

//  <rtree> SFDITEM_REG__MSC_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E0074) Command Register </i>
//    <loc> ( (unsigned int)((MSC_CMD >> 0) & 0xFFFFFFFF), ((MSC_CMD = (MSC_CMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MSC_CMD_PWRUP </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: MSC  --------------------------------------
// SVD Line: 46

//  <view> MSC
//    <name> MSC </name>
//    <item> SFDITEM_REG__MSC_CTRL </item>
//    <item> SFDITEM_REG__MSC_READCTRL </item>
//    <item> SFDITEM_REG__MSC_WRITECTRL </item>
//    <item> SFDITEM_REG__MSC_WRITECMD </item>
//    <item> SFDITEM_REG__MSC_ADDRB </item>
//    <item> SFDITEM_REG__MSC_WDATA </item>
//    <item> SFDITEM_REG__MSC_STATUS </item>
//    <item> SFDITEM_REG__MSC_IF </item>
//    <item> SFDITEM_REG__MSC_IFS </item>
//    <item> SFDITEM_REG__MSC_IFC </item>
//    <item> SFDITEM_REG__MSC_IEN </item>
//    <item> SFDITEM_REG__MSC_LOCK </item>
//    <item> SFDITEM_REG__MSC_CACHECMD </item>
//    <item> SFDITEM_REG__MSC_CACHEHITS </item>
//    <item> SFDITEM_REG__MSC_CACHEMISSES </item>
//    <item> SFDITEM_REG__MSC_MASSLOCK </item>
//    <item> SFDITEM_REG__MSC_STARTUP </item>
//    <item> SFDITEM_REG__MSC_CMD </item>
//  </view>
//  


// -----------------------------  Register Item Address: EMU_CTRL  --------------------------------
// SVD Line: 782

unsigned int EMU_CTRL __AT (0x400E3000);



// ------------------------------  Field Item: EMU_CTRL_EM2BLOCK  ---------------------------------
// SVD Line: 791

//  <item> SFDITEM_FIELD__EMU_CTRL_EM2BLOCK
//    <name> EM2BLOCK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E3000) Energy Mode 2 Block </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_CTRL ) </loc>
//      <o.1..1> EM2BLOCK
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: EMU_CTRL  ------------------------------------
// SVD Line: 782

//  <rtree> SFDITEM_REG__EMU_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3000) Control Register </i>
//    <loc> ( (unsigned int)((EMU_CTRL >> 0) & 0xFFFFFFFF), ((EMU_CTRL = (EMU_CTRL & ~(0x2UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_CTRL_EM2BLOCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EMU_STATUS  -------------------------------
// SVD Line: 800

unsigned int EMU_STATUS __AT (0x400E3004);



// -----------------------------  Field Item: EMU_STATUS_VMONRDY  ---------------------------------
// SVD Line: 809

//  <item> SFDITEM_FIELD__EMU_STATUS_VMONRDY
//    <name> VMONRDY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E3004) VMON Ready </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_STATUS ) </loc>
//      <o.0..0> VMONRDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_STATUS_VMONAVDD  --------------------------------
// SVD Line: 816

//  <item> SFDITEM_FIELD__EMU_STATUS_VMONAVDD
//    <name> VMONAVDD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E3004) VMON AVDD Channel </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_STATUS ) </loc>
//      <o.1..1> VMONAVDD
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_STATUS_VMONALTAVDD  -------------------------------
// SVD Line: 823

//  <item> SFDITEM_FIELD__EMU_STATUS_VMONALTAVDD
//    <name> VMONALTAVDD </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E3004) Alternate VMON AVDD Channel </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_STATUS ) </loc>
//      <o.2..2> VMONALTAVDD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_STATUS_VMONDVDD  --------------------------------
// SVD Line: 830

//  <item> SFDITEM_FIELD__EMU_STATUS_VMONDVDD
//    <name> VMONDVDD </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E3004) VMON DVDD Channel </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_STATUS ) </loc>
//      <o.3..3> VMONDVDD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_STATUS_VMONIO0  ---------------------------------
// SVD Line: 837

//  <item> SFDITEM_FIELD__EMU_STATUS_VMONIO0
//    <name> VMONIO0 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E3004) VMON IOVDD0 Channel </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_STATUS ) </loc>
//      <o.4..4> VMONIO0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_STATUS_VMONFVDD  --------------------------------
// SVD Line: 844

//  <item> SFDITEM_FIELD__EMU_STATUS_VMONFVDD
//    <name> VMONFVDD </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x400E3004) VMON VDDFLASH Channel </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_STATUS ) </loc>
//      <o.8..8> VMONFVDD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_STATUS_EM4IORET  --------------------------------
// SVD Line: 851

//  <item> SFDITEM_FIELD__EMU_STATUS_EM4IORET
//    <name> EM4IORET </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x400E3004) IO Retention Status </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_STATUS ) </loc>
//      <o.20..20> EM4IORET
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: EMU_STATUS  -----------------------------------
// SVD Line: 800

//  <rtree> SFDITEM_REG__EMU_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E3004) Status Register </i>
//    <loc> ( (unsigned int)((EMU_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EMU_STATUS_VMONRDY </item>
//    <item> SFDITEM_FIELD__EMU_STATUS_VMONAVDD </item>
//    <item> SFDITEM_FIELD__EMU_STATUS_VMONALTAVDD </item>
//    <item> SFDITEM_FIELD__EMU_STATUS_VMONDVDD </item>
//    <item> SFDITEM_FIELD__EMU_STATUS_VMONIO0 </item>
//    <item> SFDITEM_FIELD__EMU_STATUS_VMONFVDD </item>
//    <item> SFDITEM_FIELD__EMU_STATUS_EM4IORET </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EMU_LOCK  --------------------------------
// SVD Line: 860

unsigned int EMU_LOCK __AT (0x400E3008);



// ------------------------------  Field Item: EMU_LOCK_LOCKKEY  ----------------------------------
// SVD Line: 869

//  <item> SFDITEM_FIELD__EMU_LOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400E3008) Configuration Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((EMU_LOCK >> 0) & 0xFFFF), ((EMU_LOCK = (EMU_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: EMU_LOCK  ------------------------------------
// SVD Line: 860

//  <rtree> SFDITEM_REG__EMU_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3008) Configuration Lock Register </i>
//    <loc> ( (unsigned int)((EMU_LOCK >> 0) & 0xFFFFFFFF), ((EMU_LOCK = (EMU_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_LOCK_LOCKKEY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_RAM0CTRL  ------------------------------
// SVD Line: 888

unsigned int EMU_RAM0CTRL __AT (0x400E300C);



// --------------------------  Field Item: EMU_RAM0CTRL_RAMPOWERDOWN  -----------------------------
// SVD Line: 897

//  <item> SFDITEM_FIELD__EMU_RAM0CTRL_RAMPOWERDOWN
//    <name> RAMPOWERDOWN </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E300C) \nRAM0 Blockset Power-down\n0 : NONE = None of the RAM blocks powered down\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : BLK4 = Power down RAM blocks 4 and above\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : BLK3TO4 = Power down RAM blocks 3 and above\n13 : Reserved - do not use\n14 : BLK2TO4 = Power down RAM blocks 2 and above\n15 : BLK1TO4 = Power down RAM blocks 1 and above </i>
//    <combo> 
//      <loc> ( (unsigned int) EMU_RAM0CTRL ) </loc>
//      <o.3..0> RAMPOWERDOWN
//        <0=> 0: NONE = None of the RAM blocks powered down
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: BLK4 = Power down RAM blocks 4 and above
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: BLK3TO4 = Power down RAM blocks 3 and above
//        <13=> 13: 
//        <14=> 14: BLK2TO4 = Power down RAM blocks 2 and above
//        <15=> 15: BLK1TO4 = Power down RAM blocks 1 and above
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: EMU_RAM0CTRL  ----------------------------------
// SVD Line: 888

//  <rtree> SFDITEM_REG__EMU_RAM0CTRL
//    <name> RAM0CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E300C) Memory Control Register </i>
//    <loc> ( (unsigned int)((EMU_RAM0CTRL >> 0) & 0xFFFFFFFF), ((EMU_RAM0CTRL = (EMU_RAM0CTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_RAM0CTRL_RAMPOWERDOWN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EMU_CMD  ---------------------------------
// SVD Line: 933

unsigned int EMU_CMD __AT (0x400E3010);



// -----------------------------  Field Item: EMU_CMD_EM4UNLATCH  ---------------------------------
// SVD Line: 942

//  <item> SFDITEM_FIELD__EMU_CMD_EM4UNLATCH
//    <name> EM4UNLATCH </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E3010) EM4 Unlatch </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_CMD ) </loc>
//      <o.0..0> EM4UNLATCH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: EMU_CMD  ------------------------------------
// SVD Line: 933

//  <rtree> SFDITEM_REG__EMU_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E3010) Command Register </i>
//    <loc> ( (unsigned int)((EMU_CMD >> 0) & 0xFFFFFFFF), ((EMU_CMD = (EMU_CMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_CMD_EM4UNLATCH </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_EM4CTRL  -------------------------------
// SVD Line: 951

unsigned int EMU_EM4CTRL __AT (0x400E3018);



// ----------------------------  Field Item: EMU_EM4CTRL_EM4STATE  --------------------------------
// SVD Line: 960

//  <item> SFDITEM_FIELD__EMU_EM4CTRL_EM4STATE
//    <name> EM4STATE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E3018) Energy Mode 4 State </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_EM4CTRL ) </loc>
//      <o.0..0> EM4STATE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_EM4CTRL_RETAINLFRCO  ------------------------------
// SVD Line: 967

//  <item> SFDITEM_FIELD__EMU_EM4CTRL_RETAINLFRCO
//    <name> RETAINLFRCO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E3018) LFRCO Retain During EM4 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_EM4CTRL ) </loc>
//      <o.1..1> RETAINLFRCO
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_EM4CTRL_RETAINLFXO  -------------------------------
// SVD Line: 974

//  <item> SFDITEM_FIELD__EMU_EM4CTRL_RETAINLFXO
//    <name> RETAINLFXO </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E3018) LFXO Retain During EM4 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_EM4CTRL ) </loc>
//      <o.2..2> RETAINLFXO
//    </check>
//  </item>
//  


// --------------------------  Field Item: EMU_EM4CTRL_RETAINULFRCO  ------------------------------
// SVD Line: 981

//  <item> SFDITEM_FIELD__EMU_EM4CTRL_RETAINULFRCO
//    <name> RETAINULFRCO </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E3018) ULFRCO Retain During EM4S </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_EM4CTRL ) </loc>
//      <o.3..3> RETAINULFRCO
//    </check>
//  </item>
//  


// --------------------------  Field Item: EMU_EM4CTRL_EM4IORETMODE  ------------------------------
// SVD Line: 988

//  <item> SFDITEM_FIELD__EMU_EM4CTRL_EM4IORETMODE
//    <name> EM4IORETMODE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x400E3018) \nEM4 IO Retention Disable\n0 : DISABLE = No Retention: Pads enter reset state when entering EM4\n1 : EM4EXIT = Retention through EM4: Pads enter reset state when exiting EM4\n2 : SWUNLATCH = Retention through EM4 and Wakeup: software writes UNLATCH register to remove retention\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) EMU_EM4CTRL ) </loc>
//      <o.5..4> EM4IORETMODE
//        <0=> 0: DISABLE = No Retention: Pads enter reset state when entering EM4
//        <1=> 1: EM4EXIT = Retention through EM4: Pads enter reset state when exiting EM4
//        <2=> 2: SWUNLATCH = Retention through EM4 and Wakeup: software writes UNLATCH register to remove retention
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: EMU_EM4CTRL_EM4ENTRY  --------------------------------
// SVD Line: 1012

//  <item> SFDITEM_FIELD__EMU_EM4CTRL_EM4ENTRY
//    <name> EM4ENTRY </name>
//    <w> 
//    <i> [Bits 17..16] WO (@ 0x400E3018) Energy Mode 4 Entry </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_EM4CTRL >> 16) & 0x0), ((EMU_EM4CTRL = (EMU_EM4CTRL & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: EMU_EM4CTRL  ----------------------------------
// SVD Line: 951

//  <rtree> SFDITEM_REG__EMU_EM4CTRL
//    <name> EM4CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3018) EM4 Control Register </i>
//    <loc> ( (unsigned int)((EMU_EM4CTRL >> 0) & 0xFFFFFFFF), ((EMU_EM4CTRL = (EMU_EM4CTRL & ~(0x3003FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3003F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_EM4CTRL_EM4STATE </item>
//    <item> SFDITEM_FIELD__EMU_EM4CTRL_RETAINLFRCO </item>
//    <item> SFDITEM_FIELD__EMU_EM4CTRL_RETAINLFXO </item>
//    <item> SFDITEM_FIELD__EMU_EM4CTRL_RETAINULFRCO </item>
//    <item> SFDITEM_FIELD__EMU_EM4CTRL_EM4IORETMODE </item>
//    <item> SFDITEM_FIELD__EMU_EM4CTRL_EM4ENTRY </item>
//  </rtree>
//  


// --------------------------  Register Item Address: EMU_TEMPLIMITS  -----------------------------
// SVD Line: 1021

unsigned int EMU_TEMPLIMITS __AT (0x400E301C);



// ---------------------------  Field Item: EMU_TEMPLIMITS_TEMPLOW  -------------------------------
// SVD Line: 1030

//  <item> SFDITEM_FIELD__EMU_TEMPLIMITS_TEMPLOW
//    <name> TEMPLOW </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E301C) Temperature Low Limit </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_TEMPLIMITS >> 0) & 0xFF), ((EMU_TEMPLIMITS = (EMU_TEMPLIMITS & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EMU_TEMPLIMITS_TEMPHIGH  ------------------------------
// SVD Line: 1037

//  <item> SFDITEM_FIELD__EMU_TEMPLIMITS_TEMPHIGH
//    <name> TEMPHIGH </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x400E301C) Temperature High Limit </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_TEMPLIMITS >> 8) & 0xFF), ((EMU_TEMPLIMITS = (EMU_TEMPLIMITS & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EMU_TEMPLIMITS_EM4WUEN  -------------------------------
// SVD Line: 1044

//  <item> SFDITEM_FIELD__EMU_TEMPLIMITS_EM4WUEN
//    <name> EM4WUEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400E301C) Enable EM4 Wakeup Due to Low/high Temperature </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_TEMPLIMITS ) </loc>
//      <o.16..16> EM4WUEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: EMU_TEMPLIMITS  ---------------------------------
// SVD Line: 1021

//  <rtree> SFDITEM_REG__EMU_TEMPLIMITS
//    <name> TEMPLIMITS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E301C) Temperature Limits for Interrupt Generation </i>
//    <loc> ( (unsigned int)((EMU_TEMPLIMITS >> 0) & 0xFFFFFFFF), ((EMU_TEMPLIMITS = (EMU_TEMPLIMITS & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_TEMPLIMITS_TEMPLOW </item>
//    <item> SFDITEM_FIELD__EMU_TEMPLIMITS_TEMPHIGH </item>
//    <item> SFDITEM_FIELD__EMU_TEMPLIMITS_EM4WUEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EMU_TEMP  --------------------------------
// SVD Line: 1053

unsigned int EMU_TEMP __AT (0x400E3020);



// --------------------------------  Field Item: EMU_TEMP_TEMP  -----------------------------------
// SVD Line: 1062

//  <item> SFDITEM_FIELD__EMU_TEMP_TEMP
//    <name> TEMP </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400E3020) Temperature Measurement </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_TEMP >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: EMU_TEMP  ------------------------------------
// SVD Line: 1053

//  <rtree> SFDITEM_REG__EMU_TEMP
//    <name> TEMP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E3020) Value of Last Temperature Measurement </i>
//    <loc> ( (unsigned int)((EMU_TEMP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EMU_TEMP_TEMP </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: EMU_IF  ---------------------------------
// SVD Line: 1071

unsigned int EMU_IF __AT (0x400E3024);



// -----------------------------  Field Item: EMU_IF_VMONAVDDFALL  --------------------------------
// SVD Line: 1080

//  <item> SFDITEM_FIELD__EMU_IF_VMONAVDDFALL
//    <name> VMONAVDDFALL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E3024) VMON AVDD Channel Fall </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.0..0> VMONAVDDFALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_VMONAVDDRISE  --------------------------------
// SVD Line: 1087

//  <item> SFDITEM_FIELD__EMU_IF_VMONAVDDRISE
//    <name> VMONAVDDRISE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E3024) VMON AVDD Channel Rise </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.1..1> VMONAVDDRISE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IF_VMONALTAVDDFALL  -------------------------------
// SVD Line: 1094

//  <item> SFDITEM_FIELD__EMU_IF_VMONALTAVDDFALL
//    <name> VMONALTAVDDFALL </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E3024) Alternate VMON AVDD Channel Fall </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.2..2> VMONALTAVDDFALL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IF_VMONALTAVDDRISE  -------------------------------
// SVD Line: 1101

//  <item> SFDITEM_FIELD__EMU_IF_VMONALTAVDDRISE
//    <name> VMONALTAVDDRISE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E3024) Alternate VMON AVDD Channel Rise </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.3..3> VMONALTAVDDRISE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_VMONDVDDFALL  --------------------------------
// SVD Line: 1108

//  <item> SFDITEM_FIELD__EMU_IF_VMONDVDDFALL
//    <name> VMONDVDDFALL </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E3024) VMON DVDD Channel Fall </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.4..4> VMONDVDDFALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_VMONDVDDRISE  --------------------------------
// SVD Line: 1115

//  <item> SFDITEM_FIELD__EMU_IF_VMONDVDDRISE
//    <name> VMONDVDDRISE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400E3024) VMON DVDD Channel Rise </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.5..5> VMONDVDDRISE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_VMONIO0FALL  ---------------------------------
// SVD Line: 1122

//  <item> SFDITEM_FIELD__EMU_IF_VMONIO0FALL
//    <name> VMONIO0FALL </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x400E3024) VMON IOVDD0 Channel Fall </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.6..6> VMONIO0FALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_VMONIO0RISE  ---------------------------------
// SVD Line: 1129

//  <item> SFDITEM_FIELD__EMU_IF_VMONIO0RISE
//    <name> VMONIO0RISE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x400E3024) VMON IOVDD0 Channel Rise </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.7..7> VMONIO0RISE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_VMONFVDDFALL  --------------------------------
// SVD Line: 1136

//  <item> SFDITEM_FIELD__EMU_IF_VMONFVDDFALL
//    <name> VMONFVDDFALL </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x400E3024) VMON VDDFLASH Channel Fall </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.14..14> VMONFVDDFALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_VMONFVDDRISE  --------------------------------
// SVD Line: 1143

//  <item> SFDITEM_FIELD__EMU_IF_VMONFVDDRISE
//    <name> VMONFVDDRISE </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x400E3024) VMON VDDFLASH Channel Rise </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.15..15> VMONFVDDRISE
//    </check>
//  </item>
//  


// -------------------------  Field Item: EMU_IF_PFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1150

//  <item> SFDITEM_FIELD__EMU_IF_PFETOVERCURRENTLIMIT
//    <name> PFETOVERCURRENTLIMIT </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x400E3024) PFET Current Limit Hit </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.16..16> PFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// -------------------------  Field Item: EMU_IF_NFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1157

//  <item> SFDITEM_FIELD__EMU_IF_NFETOVERCURRENTLIMIT
//    <name> NFETOVERCURRENTLIMIT </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x400E3024) NFET Current Limit Hit </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.17..17> NFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IF_DCDCLPRUNNING  --------------------------------
// SVD Line: 1164

//  <item> SFDITEM_FIELD__EMU_IF_DCDCLPRUNNING
//    <name> DCDCLPRUNNING </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x400E3024) LP Mode is Running </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.18..18> DCDCLPRUNNING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IF_DCDCLNRUNNING  --------------------------------
// SVD Line: 1171

//  <item> SFDITEM_FIELD__EMU_IF_DCDCLNRUNNING
//    <name> DCDCLNRUNNING </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x400E3024) LN Mode is Running </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.19..19> DCDCLNRUNNING
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IF_DCDCINBYPASS  --------------------------------
// SVD Line: 1178

//  <item> SFDITEM_FIELD__EMU_IF_DCDCINBYPASS
//    <name> DCDCINBYPASS </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x400E3024) DCDC is in Bypass </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.20..20> DCDCINBYPASS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EMU_IF_EM23WAKEUP  ---------------------------------
// SVD Line: 1185

//  <item> SFDITEM_FIELD__EMU_IF_EM23WAKEUP
//    <name> EM23WAKEUP </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x400E3024) Wakeup IRQ From EM2 and EM3 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.24..24> EM23WAKEUP
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: EMU_IF_TEMP  ------------------------------------
// SVD Line: 1192

//  <item> SFDITEM_FIELD__EMU_IF_TEMP
//    <name> TEMP </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x400E3024) New Temperature Measurement Valid </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.29..29> TEMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EMU_IF_TEMPLOW  -----------------------------------
// SVD Line: 1199

//  <item> SFDITEM_FIELD__EMU_IF_TEMPLOW
//    <name> TEMPLOW </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E3024) Temperature Low Limit Reached </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.30..30> TEMPLOW
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EMU_IF_TEMPHIGH  ----------------------------------
// SVD Line: 1206

//  <item> SFDITEM_FIELD__EMU_IF_TEMPHIGH
//    <name> TEMPHIGH </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E3024) Temperature High Limit Reached </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IF ) </loc>
//      <o.31..31> TEMPHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: EMU_IF  -------------------------------------
// SVD Line: 1071

//  <rtree> SFDITEM_REG__EMU_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E3024) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((EMU_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EMU_IF_VMONAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONALTAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONALTAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONDVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONDVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONIO0FALL </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONIO0RISE </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONFVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IF_VMONFVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IF_PFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IF_NFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IF_DCDCLPRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IF_DCDCLNRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IF_DCDCINBYPASS </item>
//    <item> SFDITEM_FIELD__EMU_IF_EM23WAKEUP </item>
//    <item> SFDITEM_FIELD__EMU_IF_TEMP </item>
//    <item> SFDITEM_FIELD__EMU_IF_TEMPLOW </item>
//    <item> SFDITEM_FIELD__EMU_IF_TEMPHIGH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EMU_IFS  ---------------------------------
// SVD Line: 1215

unsigned int EMU_IFS __AT (0x400E3028);



// ----------------------------  Field Item: EMU_IFS_VMONAVDDFALL  --------------------------------
// SVD Line: 1224

//  <item> SFDITEM_FIELD__EMU_IFS_VMONAVDDFALL
//    <name> VMONAVDDFALL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E3028) Set VMONAVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.0..0> VMONAVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_VMONAVDDRISE  --------------------------------
// SVD Line: 1231

//  <item> SFDITEM_FIELD__EMU_IFS_VMONAVDDRISE
//    <name> VMONAVDDRISE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E3028) Set VMONAVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.1..1> VMONAVDDRISE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IFS_VMONALTAVDDFALL  ------------------------------
// SVD Line: 1238

//  <item> SFDITEM_FIELD__EMU_IFS_VMONALTAVDDFALL
//    <name> VMONALTAVDDFALL </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E3028) Set VMONALTAVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.2..2> VMONALTAVDDFALL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IFS_VMONALTAVDDRISE  ------------------------------
// SVD Line: 1245

//  <item> SFDITEM_FIELD__EMU_IFS_VMONALTAVDDRISE
//    <name> VMONALTAVDDRISE </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E3028) Set VMONALTAVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.3..3> VMONALTAVDDRISE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_VMONDVDDFALL  --------------------------------
// SVD Line: 1252

//  <item> SFDITEM_FIELD__EMU_IFS_VMONDVDDFALL
//    <name> VMONDVDDFALL </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E3028) Set VMONDVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.4..4> VMONDVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_VMONDVDDRISE  --------------------------------
// SVD Line: 1259

//  <item> SFDITEM_FIELD__EMU_IFS_VMONDVDDRISE
//    <name> VMONDVDDRISE </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E3028) Set VMONDVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.5..5> VMONDVDDRISE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IFS_VMONIO0FALL  --------------------------------
// SVD Line: 1266

//  <item> SFDITEM_FIELD__EMU_IFS_VMONIO0FALL
//    <name> VMONIO0FALL </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x400E3028) Set VMONIO0FALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.6..6> VMONIO0FALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IFS_VMONIO0RISE  --------------------------------
// SVD Line: 1273

//  <item> SFDITEM_FIELD__EMU_IFS_VMONIO0RISE
//    <name> VMONIO0RISE </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x400E3028) Set VMONIO0RISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.7..7> VMONIO0RISE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_VMONFVDDFALL  --------------------------------
// SVD Line: 1280

//  <item> SFDITEM_FIELD__EMU_IFS_VMONFVDDFALL
//    <name> VMONFVDDFALL </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x400E3028) Set VMONFVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.14..14> VMONFVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_VMONFVDDRISE  --------------------------------
// SVD Line: 1287

//  <item> SFDITEM_FIELD__EMU_IFS_VMONFVDDRISE
//    <name> VMONFVDDRISE </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x400E3028) Set VMONFVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.15..15> VMONFVDDRISE
//    </check>
//  </item>
//  


// ------------------------  Field Item: EMU_IFS_PFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1294

//  <item> SFDITEM_FIELD__EMU_IFS_PFETOVERCURRENTLIMIT
//    <name> PFETOVERCURRENTLIMIT </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x400E3028) Set PFETOVERCURRENTLIMIT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.16..16> PFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// ------------------------  Field Item: EMU_IFS_NFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1301

//  <item> SFDITEM_FIELD__EMU_IFS_NFETOVERCURRENTLIMIT
//    <name> NFETOVERCURRENTLIMIT </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x400E3028) Set NFETOVERCURRENTLIMIT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.17..17> NFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_DCDCLPRUNNING  -------------------------------
// SVD Line: 1308

//  <item> SFDITEM_FIELD__EMU_IFS_DCDCLPRUNNING
//    <name> DCDCLPRUNNING </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x400E3028) Set DCDCLPRUNNING Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.18..18> DCDCLPRUNNING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_DCDCLNRUNNING  -------------------------------
// SVD Line: 1315

//  <item> SFDITEM_FIELD__EMU_IFS_DCDCLNRUNNING
//    <name> DCDCLNRUNNING </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x400E3028) Set DCDCLNRUNNING Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.19..19> DCDCLNRUNNING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFS_DCDCINBYPASS  --------------------------------
// SVD Line: 1322

//  <item> SFDITEM_FIELD__EMU_IFS_DCDCINBYPASS
//    <name> DCDCINBYPASS </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x400E3028) Set DCDCINBYPASS Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.20..20> DCDCINBYPASS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IFS_EM23WAKEUP  ---------------------------------
// SVD Line: 1329

//  <item> SFDITEM_FIELD__EMU_IFS_EM23WAKEUP
//    <name> EM23WAKEUP </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x400E3028) Set EM23WAKEUP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.24..24> EM23WAKEUP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EMU_IFS_TEMP  ------------------------------------
// SVD Line: 1336

//  <item> SFDITEM_FIELD__EMU_IFS_TEMP
//    <name> TEMP </name>
//    <w> 
//    <i> [Bit 29] WO (@ 0x400E3028) Set TEMP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.29..29> TEMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EMU_IFS_TEMPLOW  ----------------------------------
// SVD Line: 1343

//  <item> SFDITEM_FIELD__EMU_IFS_TEMPLOW
//    <name> TEMPLOW </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x400E3028) Set TEMPLOW Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.30..30> TEMPLOW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EMU_IFS_TEMPHIGH  ----------------------------------
// SVD Line: 1350

//  <item> SFDITEM_FIELD__EMU_IFS_TEMPHIGH
//    <name> TEMPHIGH </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x400E3028) Set TEMPHIGH Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFS ) </loc>
//      <o.31..31> TEMPHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: EMU_IFS  ------------------------------------
// SVD Line: 1215

//  <rtree> SFDITEM_REG__EMU_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E3028) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((EMU_IFS >> 0) & 0xFFFFFFFF), ((EMU_IFS = (EMU_IFS & ~(0xE11FC0FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE11FC0FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONALTAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONALTAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONDVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONDVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONIO0FALL </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONIO0RISE </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONFVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFS_VMONFVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFS_PFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IFS_NFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IFS_DCDCLPRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IFS_DCDCLNRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IFS_DCDCINBYPASS </item>
//    <item> SFDITEM_FIELD__EMU_IFS_EM23WAKEUP </item>
//    <item> SFDITEM_FIELD__EMU_IFS_TEMP </item>
//    <item> SFDITEM_FIELD__EMU_IFS_TEMPLOW </item>
//    <item> SFDITEM_FIELD__EMU_IFS_TEMPHIGH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EMU_IFC  ---------------------------------
// SVD Line: 1359

unsigned int EMU_IFC __AT (0x400E302C);



// ----------------------------  Field Item: EMU_IFC_VMONAVDDFALL  --------------------------------
// SVD Line: 1368

//  <item> SFDITEM_FIELD__EMU_IFC_VMONAVDDFALL
//    <name> VMONAVDDFALL </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E302C) Clear VMONAVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.0..0> VMONAVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_VMONAVDDRISE  --------------------------------
// SVD Line: 1375

//  <item> SFDITEM_FIELD__EMU_IFC_VMONAVDDRISE
//    <name> VMONAVDDRISE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E302C) Clear VMONAVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.1..1> VMONAVDDRISE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IFC_VMONALTAVDDFALL  ------------------------------
// SVD Line: 1382

//  <item> SFDITEM_FIELD__EMU_IFC_VMONALTAVDDFALL
//    <name> VMONALTAVDDFALL </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E302C) Clear VMONALTAVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.2..2> VMONALTAVDDFALL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IFC_VMONALTAVDDRISE  ------------------------------
// SVD Line: 1389

//  <item> SFDITEM_FIELD__EMU_IFC_VMONALTAVDDRISE
//    <name> VMONALTAVDDRISE </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E302C) Clear VMONALTAVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.3..3> VMONALTAVDDRISE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_VMONDVDDFALL  --------------------------------
// SVD Line: 1396

//  <item> SFDITEM_FIELD__EMU_IFC_VMONDVDDFALL
//    <name> VMONDVDDFALL </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E302C) Clear VMONDVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.4..4> VMONDVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_VMONDVDDRISE  --------------------------------
// SVD Line: 1403

//  <item> SFDITEM_FIELD__EMU_IFC_VMONDVDDRISE
//    <name> VMONDVDDRISE </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E302C) Clear VMONDVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.5..5> VMONDVDDRISE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IFC_VMONIO0FALL  --------------------------------
// SVD Line: 1410

//  <item> SFDITEM_FIELD__EMU_IFC_VMONIO0FALL
//    <name> VMONIO0FALL </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x400E302C) Clear VMONIO0FALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.6..6> VMONIO0FALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IFC_VMONIO0RISE  --------------------------------
// SVD Line: 1417

//  <item> SFDITEM_FIELD__EMU_IFC_VMONIO0RISE
//    <name> VMONIO0RISE </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x400E302C) Clear VMONIO0RISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.7..7> VMONIO0RISE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_VMONFVDDFALL  --------------------------------
// SVD Line: 1424

//  <item> SFDITEM_FIELD__EMU_IFC_VMONFVDDFALL
//    <name> VMONFVDDFALL </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x400E302C) Clear VMONFVDDFALL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.14..14> VMONFVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_VMONFVDDRISE  --------------------------------
// SVD Line: 1431

//  <item> SFDITEM_FIELD__EMU_IFC_VMONFVDDRISE
//    <name> VMONFVDDRISE </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x400E302C) Clear VMONFVDDRISE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.15..15> VMONFVDDRISE
//    </check>
//  </item>
//  


// ------------------------  Field Item: EMU_IFC_PFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1438

//  <item> SFDITEM_FIELD__EMU_IFC_PFETOVERCURRENTLIMIT
//    <name> PFETOVERCURRENTLIMIT </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x400E302C) Clear PFETOVERCURRENTLIMIT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.16..16> PFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// ------------------------  Field Item: EMU_IFC_NFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1445

//  <item> SFDITEM_FIELD__EMU_IFC_NFETOVERCURRENTLIMIT
//    <name> NFETOVERCURRENTLIMIT </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x400E302C) Clear NFETOVERCURRENTLIMIT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.17..17> NFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_DCDCLPRUNNING  -------------------------------
// SVD Line: 1452

//  <item> SFDITEM_FIELD__EMU_IFC_DCDCLPRUNNING
//    <name> DCDCLPRUNNING </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x400E302C) Clear DCDCLPRUNNING Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.18..18> DCDCLPRUNNING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_DCDCLNRUNNING  -------------------------------
// SVD Line: 1459

//  <item> SFDITEM_FIELD__EMU_IFC_DCDCLNRUNNING
//    <name> DCDCLNRUNNING </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x400E302C) Clear DCDCLNRUNNING Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.19..19> DCDCLNRUNNING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IFC_DCDCINBYPASS  --------------------------------
// SVD Line: 1466

//  <item> SFDITEM_FIELD__EMU_IFC_DCDCINBYPASS
//    <name> DCDCINBYPASS </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x400E302C) Clear DCDCINBYPASS Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.20..20> DCDCINBYPASS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IFC_EM23WAKEUP  ---------------------------------
// SVD Line: 1473

//  <item> SFDITEM_FIELD__EMU_IFC_EM23WAKEUP
//    <name> EM23WAKEUP </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x400E302C) Clear EM23WAKEUP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.24..24> EM23WAKEUP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EMU_IFC_TEMP  ------------------------------------
// SVD Line: 1480

//  <item> SFDITEM_FIELD__EMU_IFC_TEMP
//    <name> TEMP </name>
//    <w> 
//    <i> [Bit 29] WO (@ 0x400E302C) Clear TEMP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.29..29> TEMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EMU_IFC_TEMPLOW  ----------------------------------
// SVD Line: 1487

//  <item> SFDITEM_FIELD__EMU_IFC_TEMPLOW
//    <name> TEMPLOW </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x400E302C) Clear TEMPLOW Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.30..30> TEMPLOW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EMU_IFC_TEMPHIGH  ----------------------------------
// SVD Line: 1494

//  <item> SFDITEM_FIELD__EMU_IFC_TEMPHIGH
//    <name> TEMPHIGH </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x400E302C) Clear TEMPHIGH Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IFC ) </loc>
//      <o.31..31> TEMPHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: EMU_IFC  ------------------------------------
// SVD Line: 1359

//  <rtree> SFDITEM_REG__EMU_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E302C) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((EMU_IFC >> 0) & 0xFFFFFFFF), ((EMU_IFC = (EMU_IFC & ~(0xE11FC0FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE11FC0FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONALTAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONALTAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONDVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONDVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONIO0FALL </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONIO0RISE </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONFVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IFC_VMONFVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IFC_PFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IFC_NFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IFC_DCDCLPRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IFC_DCDCLNRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IFC_DCDCINBYPASS </item>
//    <item> SFDITEM_FIELD__EMU_IFC_EM23WAKEUP </item>
//    <item> SFDITEM_FIELD__EMU_IFC_TEMP </item>
//    <item> SFDITEM_FIELD__EMU_IFC_TEMPLOW </item>
//    <item> SFDITEM_FIELD__EMU_IFC_TEMPHIGH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EMU_IEN  ---------------------------------
// SVD Line: 1503

unsigned int EMU_IEN __AT (0x400E3030);



// ----------------------------  Field Item: EMU_IEN_VMONAVDDFALL  --------------------------------
// SVD Line: 1512

//  <item> SFDITEM_FIELD__EMU_IEN_VMONAVDDFALL
//    <name> VMONAVDDFALL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E3030) VMONAVDDFALL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.0..0> VMONAVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_VMONAVDDRISE  --------------------------------
// SVD Line: 1519

//  <item> SFDITEM_FIELD__EMU_IEN_VMONAVDDRISE
//    <name> VMONAVDDRISE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E3030) VMONAVDDRISE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.1..1> VMONAVDDRISE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IEN_VMONALTAVDDFALL  ------------------------------
// SVD Line: 1526

//  <item> SFDITEM_FIELD__EMU_IEN_VMONALTAVDDFALL
//    <name> VMONALTAVDDFALL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E3030) VMONALTAVDDFALL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.2..2> VMONALTAVDDFALL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_IEN_VMONALTAVDDRISE  ------------------------------
// SVD Line: 1533

//  <item> SFDITEM_FIELD__EMU_IEN_VMONALTAVDDRISE
//    <name> VMONALTAVDDRISE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E3030) VMONALTAVDDRISE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.3..3> VMONALTAVDDRISE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_VMONDVDDFALL  --------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__EMU_IEN_VMONDVDDFALL
//    <name> VMONDVDDFALL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E3030) VMONDVDDFALL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.4..4> VMONDVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_VMONDVDDRISE  --------------------------------
// SVD Line: 1547

//  <item> SFDITEM_FIELD__EMU_IEN_VMONDVDDRISE
//    <name> VMONDVDDRISE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E3030) VMONDVDDRISE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.5..5> VMONDVDDRISE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IEN_VMONIO0FALL  --------------------------------
// SVD Line: 1554

//  <item> SFDITEM_FIELD__EMU_IEN_VMONIO0FALL
//    <name> VMONIO0FALL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400E3030) VMONIO0FALL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.6..6> VMONIO0FALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IEN_VMONIO0RISE  --------------------------------
// SVD Line: 1561

//  <item> SFDITEM_FIELD__EMU_IEN_VMONIO0RISE
//    <name> VMONIO0RISE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400E3030) VMONIO0RISE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.7..7> VMONIO0RISE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_VMONFVDDFALL  --------------------------------
// SVD Line: 1568

//  <item> SFDITEM_FIELD__EMU_IEN_VMONFVDDFALL
//    <name> VMONFVDDFALL </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400E3030) VMONFVDDFALL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.14..14> VMONFVDDFALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_VMONFVDDRISE  --------------------------------
// SVD Line: 1575

//  <item> SFDITEM_FIELD__EMU_IEN_VMONFVDDRISE
//    <name> VMONFVDDRISE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E3030) VMONFVDDRISE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.15..15> VMONFVDDRISE
//    </check>
//  </item>
//  


// ------------------------  Field Item: EMU_IEN_PFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__EMU_IEN_PFETOVERCURRENTLIMIT
//    <name> PFETOVERCURRENTLIMIT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400E3030) PFETOVERCURRENTLIMIT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.16..16> PFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// ------------------------  Field Item: EMU_IEN_NFETOVERCURRENTLIMIT  ----------------------------
// SVD Line: 1589

//  <item> SFDITEM_FIELD__EMU_IEN_NFETOVERCURRENTLIMIT
//    <name> NFETOVERCURRENTLIMIT </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400E3030) NFETOVERCURRENTLIMIT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.17..17> NFETOVERCURRENTLIMIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_DCDCLPRUNNING  -------------------------------
// SVD Line: 1596

//  <item> SFDITEM_FIELD__EMU_IEN_DCDCLPRUNNING
//    <name> DCDCLPRUNNING </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400E3030) DCDCLPRUNNING Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.18..18> DCDCLPRUNNING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_DCDCLNRUNNING  -------------------------------
// SVD Line: 1603

//  <item> SFDITEM_FIELD__EMU_IEN_DCDCLNRUNNING
//    <name> DCDCLNRUNNING </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400E3030) DCDCLNRUNNING Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.19..19> DCDCLNRUNNING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_IEN_DCDCINBYPASS  --------------------------------
// SVD Line: 1610

//  <item> SFDITEM_FIELD__EMU_IEN_DCDCINBYPASS
//    <name> DCDCINBYPASS </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E3030) DCDCINBYPASS Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.20..20> DCDCINBYPASS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_IEN_EM23WAKEUP  ---------------------------------
// SVD Line: 1617

//  <item> SFDITEM_FIELD__EMU_IEN_EM23WAKEUP
//    <name> EM23WAKEUP </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400E3030) EM23WAKEUP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.24..24> EM23WAKEUP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: EMU_IEN_TEMP  ------------------------------------
// SVD Line: 1624

//  <item> SFDITEM_FIELD__EMU_IEN_TEMP
//    <name> TEMP </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400E3030) TEMP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.29..29> TEMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EMU_IEN_TEMPLOW  ----------------------------------
// SVD Line: 1631

//  <item> SFDITEM_FIELD__EMU_IEN_TEMPLOW
//    <name> TEMPLOW </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E3030) TEMPLOW Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.30..30> TEMPLOW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EMU_IEN_TEMPHIGH  ----------------------------------
// SVD Line: 1638

//  <item> SFDITEM_FIELD__EMU_IEN_TEMPHIGH
//    <name> TEMPHIGH </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400E3030) TEMPHIGH Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_IEN ) </loc>
//      <o.31..31> TEMPHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: EMU_IEN  ------------------------------------
// SVD Line: 1503

//  <rtree> SFDITEM_REG__EMU_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3030) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((EMU_IEN >> 0) & 0xFFFFFFFF), ((EMU_IEN = (EMU_IEN & ~(0xE11FC0FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE11FC0FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONALTAVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONALTAVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONDVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONDVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONIO0FALL </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONIO0RISE </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONFVDDFALL </item>
//    <item> SFDITEM_FIELD__EMU_IEN_VMONFVDDRISE </item>
//    <item> SFDITEM_FIELD__EMU_IEN_PFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IEN_NFETOVERCURRENTLIMIT </item>
//    <item> SFDITEM_FIELD__EMU_IEN_DCDCLPRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IEN_DCDCLNRUNNING </item>
//    <item> SFDITEM_FIELD__EMU_IEN_DCDCINBYPASS </item>
//    <item> SFDITEM_FIELD__EMU_IEN_EM23WAKEUP </item>
//    <item> SFDITEM_FIELD__EMU_IEN_TEMP </item>
//    <item> SFDITEM_FIELD__EMU_IEN_TEMPLOW </item>
//    <item> SFDITEM_FIELD__EMU_IEN_TEMPHIGH </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_PWRLOCK  -------------------------------
// SVD Line: 1647

unsigned int EMU_PWRLOCK __AT (0x400E3034);



// -----------------------------  Field Item: EMU_PWRLOCK_LOCKKEY  --------------------------------
// SVD Line: 1656

//  <item> SFDITEM_FIELD__EMU_PWRLOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400E3034) Regulator and Supply Configuration Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((EMU_PWRLOCK >> 0) & 0xFFFF), ((EMU_PWRLOCK = (EMU_PWRLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: EMU_PWRLOCK  ----------------------------------
// SVD Line: 1647

//  <rtree> SFDITEM_REG__EMU_PWRLOCK
//    <name> PWRLOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3034) Regulator and Supply Lock Register </i>
//    <loc> ( (unsigned int)((EMU_PWRLOCK >> 0) & 0xFFFFFFFF), ((EMU_PWRLOCK = (EMU_PWRLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_PWRLOCK_LOCKKEY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EMU_PWRCFG  -------------------------------
// SVD Line: 1675

unsigned int EMU_PWRCFG __AT (0x400E3038);



// ------------------------------  Field Item: EMU_PWRCFG_PWRCFG  ---------------------------------
// SVD Line: 1684

//  <item> SFDITEM_FIELD__EMU_PWRCFG_PWRCFG
//    <name> PWRCFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E3038) \nPower Configuration\n0 : STARTUP = Power up configuration. Works with any external configuration.\n1 : Reserved - do not use\n2 : DCDCTODVDD = Configured: DCDC control logic is enabled.\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) EMU_PWRCFG ) </loc>
//      <o.3..0> PWRCFG
//        <0=> 0: STARTUP = Power up configuration. Works with any external configuration.
//        <1=> 1: 
//        <2=> 2: DCDCTODVDD = Configured: DCDC control logic is enabled.
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: EMU_PWRCFG  -----------------------------------
// SVD Line: 1675

//  <rtree> SFDITEM_REG__EMU_PWRCFG
//    <name> PWRCFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3038) Power Configuration Register </i>
//    <loc> ( (unsigned int)((EMU_PWRCFG >> 0) & 0xFFFFFFFF), ((EMU_PWRCFG = (EMU_PWRCFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_PWRCFG_PWRCFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_PWRCTRL  -------------------------------
// SVD Line: 1705

unsigned int EMU_PWRCTRL __AT (0x400E303C);



// ------------------------------  Field Item: EMU_PWRCTRL_ANASW  ---------------------------------
// SVD Line: 1714

//  <item> SFDITEM_FIELD__EMU_PWRCTRL_ANASW
//    <name> ANASW </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E303C) Analog Switch Selection </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_PWRCTRL ) </loc>
//      <o.5..5> ANASW
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: EMU_PWRCTRL  ----------------------------------
// SVD Line: 1705

//  <rtree> SFDITEM_REG__EMU_PWRCTRL
//    <name> PWRCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E303C) Power Control Register </i>
//    <loc> ( (unsigned int)((EMU_PWRCTRL >> 0) & 0xFFFFFFFF), ((EMU_PWRCTRL = (EMU_PWRCTRL & ~(0x20UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x20) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_PWRCTRL_ANASW </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_DCDCCTRL  ------------------------------
// SVD Line: 1723

unsigned int EMU_DCDCCTRL __AT (0x400E3040);



// ----------------------------  Field Item: EMU_DCDCCTRL_DCDCMODE  -------------------------------
// SVD Line: 1732

//  <item> SFDITEM_FIELD__EMU_DCDCCTRL_DCDCMODE
//    <name> DCDCMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x400E3040) \nRegulator Mode\n0 : BYPASS = DCDC regulator is operating in bypass mode. Prior to configuring DCDCMODE=BYPASS, software must set EMU_DCDCCLIMCTRL.BYPLIMEN=1 to prevent excessive current between VREGVDD and DVDD supplies.\n1 : LOWNOISE = DCDC regulator is operating in low noise mode.\n2 : LOWPOWER = DCDC regulator is operating in low power mode.\n3 : OFF = DCDC regulator is off and the bypass switch is off. Note: DVDD must be supplied externally </i>
//    <combo> 
//      <loc> ( (unsigned int) EMU_DCDCCTRL ) </loc>
//      <o.1..0> DCDCMODE
//        <0=> 0: BYPASS = DCDC regulator is operating in bypass mode. Prior to configuring DCDCMODE=BYPASS, software must set EMU_DCDCCLIMCTRL.BYPLIMEN=1 to prevent excessive current between VREGVDD and DVDD supplies.
//        <1=> 1: LOWNOISE = DCDC regulator is operating in low noise mode.
//        <2=> 2: LOWPOWER = DCDC regulator is operating in low power mode.
//        <3=> 3: OFF = DCDC regulator is off and the bypass switch is off. Note: DVDD must be supplied externally
//    </combo>
//  </item>
//  


// --------------------------  Field Item: EMU_DCDCCTRL_DCDCMODEEM23  -----------------------------
// SVD Line: 1761

//  <item> SFDITEM_FIELD__EMU_DCDCCTRL_DCDCMODEEM23
//    <name> DCDCMODEEM23 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E3040) DCDC Mode EM23 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCCTRL ) </loc>
//      <o.4..4> DCDCMODEEM23
//    </check>
//  </item>
//  


// --------------------------  Field Item: EMU_DCDCCTRL_DCDCMODEEM4  ------------------------------
// SVD Line: 1768

//  <item> SFDITEM_FIELD__EMU_DCDCCTRL_DCDCMODEEM4
//    <name> DCDCMODEEM4 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E3040) DCDC Mode EM4H </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCCTRL ) </loc>
//      <o.5..5> DCDCMODEEM4
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EMU_DCDCCTRL  ----------------------------------
// SVD Line: 1723

//  <rtree> SFDITEM_REG__EMU_DCDCCTRL
//    <name> DCDCCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3040) DCDC Control </i>
//    <loc> ( (unsigned int)((EMU_DCDCCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCCTRL = (EMU_DCDCCTRL & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCCTRL_DCDCMODE </item>
//    <item> SFDITEM_FIELD__EMU_DCDCCTRL_DCDCMODEEM23 </item>
//    <item> SFDITEM_FIELD__EMU_DCDCCTRL_DCDCMODEEM4 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_DCDCMISCCTRL  ----------------------------
// SVD Line: 1777

unsigned int EMU_DCDCMISCCTRL __AT (0x400E304C);



// -------------------------  Field Item: EMU_DCDCMISCCTRL_LNFORCECCM  ----------------------------
// SVD Line: 1786

//  <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LNFORCECCM
//    <name> LNFORCECCM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E304C) Force DCDC Into CCM Mode in Low Noise Operation </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCMISCCTRL ) </loc>
//      <o.0..0> LNFORCECCM
//    </check>
//  </item>
//  


// --------------------------  Field Item: EMU_DCDCMISCCTRL_PFETCNT  ------------------------------
// SVD Line: 1793

//  <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_PFETCNT
//    <name> PFETCNT </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400E304C) PFET Switch Number Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCMISCCTRL >> 8) & 0xF), ((EMU_DCDCMISCCTRL = (EMU_DCDCMISCCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: EMU_DCDCMISCCTRL_NFETCNT  ------------------------------
// SVD Line: 1800

//  <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_NFETCNT
//    <name> NFETCNT </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E304C) NFET Switch Number Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCMISCCTRL >> 12) & 0xF), ((EMU_DCDCMISCCTRL = (EMU_DCDCMISCCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCMISCCTRL_BYPLIMSEL  -----------------------------
// SVD Line: 1807

//  <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_BYPLIMSEL
//    <name> BYPLIMSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E304C) Current Limit in Bypass Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCMISCCTRL >> 16) & 0xF), ((EMU_DCDCMISCCTRL = (EMU_DCDCMISCCTRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: EMU_DCDCMISCCTRL_LPCLIMILIMSEL  ---------------------------
// SVD Line: 1814

//  <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LPCLIMILIMSEL
//    <name> LPCLIMILIMSEL </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x400E304C) Current Limit Level Selection for Current Limiter in LP Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCMISCCTRL >> 20) & 0x7), ((EMU_DCDCMISCCTRL = (EMU_DCDCMISCCTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: EMU_DCDCMISCCTRL_LNCLIMILIMSEL  ---------------------------
// SVD Line: 1821

//  <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LNCLIMILIMSEL
//    <name> LNCLIMILIMSEL </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x400E304C) Current Limit Level Selection for Current Limiter in LN Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCMISCCTRL >> 24) & 0x7), ((EMU_DCDCMISCCTRL = (EMU_DCDCMISCCTRL & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCMISCCTRL_LPCMPBIAS  -----------------------------
// SVD Line: 1828

//  <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LPCMPBIAS
//    <name> LPCMPBIAS </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E304C) \nLP Mode Comparator Bias Selection\n0 : BIAS0 = Maximum load current less than 75uA.\n1 : BIAS1 = Maximum load current less than 500uA.\n2 : BIAS2 = Maximum load current less than 2.5mA.\n3 : BIAS3 = Maximum load current less than 10mA. </i>
//    <combo> 
//      <loc> ( (unsigned int) EMU_DCDCMISCCTRL ) </loc>
//      <o.29..28> LPCMPBIAS
//        <0=> 0: BIAS0 = Maximum load current less than 75uA.
//        <1=> 1: BIAS1 = Maximum load current less than 500uA.
//        <2=> 2: BIAS2 = Maximum load current less than 2.5mA.
//        <3=> 3: BIAS3 = Maximum load current less than 10mA.
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: EMU_DCDCMISCCTRL  --------------------------------
// SVD Line: 1777

//  <rtree> SFDITEM_REG__EMU_DCDCMISCCTRL
//    <name> DCDCMISCCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E304C) DCDC Miscellaneous Control Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCMISCCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCMISCCTRL = (EMU_DCDCMISCCTRL & ~(0x377FFF01UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x377FFF01) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LNFORCECCM </item>
//    <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_PFETCNT </item>
//    <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_NFETCNT </item>
//    <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_BYPLIMSEL </item>
//    <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LPCLIMILIMSEL </item>
//    <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LNCLIMILIMSEL </item>
//    <item> SFDITEM_FIELD__EMU_DCDCMISCCTRL_LPCMPBIAS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_DCDCZDETCTRL  ----------------------------
// SVD Line: 1859

unsigned int EMU_DCDCZDETCTRL __AT (0x400E3050);



// ------------------------  Field Item: EMU_DCDCZDETCTRL_ZDETILIMSEL  ----------------------------
// SVD Line: 1868

//  <item> SFDITEM_FIELD__EMU_DCDCZDETCTRL_ZDETILIMSEL
//    <name> ZDETILIMSEL </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400E3050) Reverse Current Limit Level Selection for Zero Detector </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCZDETCTRL >> 4) & 0x7), ((EMU_DCDCZDETCTRL = (EMU_DCDCZDETCTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: EMU_DCDCZDETCTRL_ZDETBLANKDLY  ---------------------------
// SVD Line: 1875

//  <item> SFDITEM_FIELD__EMU_DCDCZDETCTRL_ZDETBLANKDLY
//    <name> ZDETBLANKDLY </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400E3050) Reserved for internal use. Do not change. </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCZDETCTRL >> 8) & 0x3), ((EMU_DCDCZDETCTRL = (EMU_DCDCZDETCTRL & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: EMU_DCDCZDETCTRL  --------------------------------
// SVD Line: 1859

//  <rtree> SFDITEM_REG__EMU_DCDCZDETCTRL
//    <name> DCDCZDETCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3050) DCDC Power Train NFET Zero Current Detector Control Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCZDETCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCZDETCTRL = (EMU_DCDCZDETCTRL & ~(0x370UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x370) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCZDETCTRL_ZDETILIMSEL </item>
//    <item> SFDITEM_FIELD__EMU_DCDCZDETCTRL_ZDETBLANKDLY </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_DCDCCLIMCTRL  ----------------------------
// SVD Line: 1884

unsigned int EMU_DCDCCLIMCTRL __AT (0x400E3054);



// ------------------------  Field Item: EMU_DCDCCLIMCTRL_CLIMBLANKDLY  ---------------------------
// SVD Line: 1893

//  <item> SFDITEM_FIELD__EMU_DCDCCLIMCTRL_CLIMBLANKDLY
//    <name> CLIMBLANKDLY </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400E3054) Reserved for internal use. Do not change. </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCCLIMCTRL >> 8) & 0x3), ((EMU_DCDCCLIMCTRL = (EMU_DCDCCLIMCTRL & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: EMU_DCDCCLIMCTRL_BYPLIMEN  -----------------------------
// SVD Line: 1900

//  <item> SFDITEM_FIELD__EMU_DCDCCLIMCTRL_BYPLIMEN
//    <name> BYPLIMEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400E3054) Bypass Current Limit Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCCLIMCTRL ) </loc>
//      <o.13..13> BYPLIMEN
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: EMU_DCDCCLIMCTRL  --------------------------------
// SVD Line: 1884

//  <rtree> SFDITEM_REG__EMU_DCDCCLIMCTRL
//    <name> DCDCCLIMCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3054) DCDC Power Train PFET Current Limiter Control Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCCLIMCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCCLIMCTRL = (EMU_DCDCCLIMCTRL & ~(0x2300UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2300) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCCLIMCTRL_CLIMBLANKDLY </item>
//    <item> SFDITEM_FIELD__EMU_DCDCCLIMCTRL_BYPLIMEN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: EMU_DCDCLNCOMPCTRL  ---------------------------
// SVD Line: 1909

unsigned int EMU_DCDCLNCOMPCTRL __AT (0x400E3058);



// -------------------------  Field Item: EMU_DCDCLNCOMPCTRL_COMPENR1  ----------------------------
// SVD Line: 1918

//  <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENR1
//    <name> COMPENR1 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E3058) Low Noise Mode Compensator R1 Trim Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNCOMPCTRL >> 0) & 0x7), ((EMU_DCDCLNCOMPCTRL = (EMU_DCDCLNCOMPCTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCLNCOMPCTRL_COMPENR2  ----------------------------
// SVD Line: 1925

//  <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENR2
//    <name> COMPENR2 </name>
//    <rw> 
//    <i> [Bits 8..4] RW (@ 0x400E3058) Low Noise Mode Compensator R2 Trim Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNCOMPCTRL >> 4) & 0x1F), ((EMU_DCDCLNCOMPCTRL = (EMU_DCDCLNCOMPCTRL & ~(0x1FUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCLNCOMPCTRL_COMPENR3  ----------------------------
// SVD Line: 1932

//  <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENR3
//    <name> COMPENR3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E3058) Low Noise Mode Compensator R3 Trim Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNCOMPCTRL >> 12) & 0xF), ((EMU_DCDCLNCOMPCTRL = (EMU_DCDCLNCOMPCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCLNCOMPCTRL_COMPENC1  ----------------------------
// SVD Line: 1939

//  <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENC1
//    <name> COMPENC1 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E3058) Low Noise Mode Compensator C1 Trim Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNCOMPCTRL >> 20) & 0x3), ((EMU_DCDCLNCOMPCTRL = (EMU_DCDCLNCOMPCTRL & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCLNCOMPCTRL_COMPENC2  ----------------------------
// SVD Line: 1946

//  <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENC2
//    <name> COMPENC2 </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x400E3058) Low Noise Mode Compensator C2 Trim Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNCOMPCTRL >> 24) & 0x7), ((EMU_DCDCLNCOMPCTRL = (EMU_DCDCLNCOMPCTRL & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCLNCOMPCTRL_COMPENC3  ----------------------------
// SVD Line: 1953

//  <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENC3
//    <name> COMPENC3 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400E3058) Low Noise Mode Compensator C3 Trim Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNCOMPCTRL >> 28) & 0xF), ((EMU_DCDCLNCOMPCTRL = (EMU_DCDCLNCOMPCTRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: EMU_DCDCLNCOMPCTRL  -------------------------------
// SVD Line: 1909

//  <rtree> SFDITEM_REG__EMU_DCDCLNCOMPCTRL
//    <name> DCDCLNCOMPCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3058) DCDC Low Noise Compensator Control Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCLNCOMPCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCLNCOMPCTRL = (EMU_DCDCLNCOMPCTRL & ~(0xF730F1F7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF730F1F7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENR1 </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENR2 </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENR3 </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENC1 </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENC2 </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLNCOMPCTRL_COMPENC3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_DCDCLNVCTRL  -----------------------------
// SVD Line: 1962

unsigned int EMU_DCDCLNVCTRL __AT (0x400E305C);



// ----------------------------  Field Item: EMU_DCDCLNVCTRL_LNATT  -------------------------------
// SVD Line: 1971

//  <item> SFDITEM_FIELD__EMU_DCDCLNVCTRL_LNATT
//    <name> LNATT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E305C) Low Noise Mode Feedback Attenuation </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCLNVCTRL ) </loc>
//      <o.1..1> LNATT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_DCDCLNVCTRL_LNVREF  -------------------------------
// SVD Line: 1978

//  <item> SFDITEM_FIELD__EMU_DCDCLNVCTRL_LNVREF
//    <name> LNVREF </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E305C) Low Noise Mode VREF Trim </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNVCTRL >> 8) & 0x7F), ((EMU_DCDCLNVCTRL = (EMU_DCDCLNVCTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EMU_DCDCLNVCTRL  --------------------------------
// SVD Line: 1962

//  <rtree> SFDITEM_REG__EMU_DCDCLNVCTRL
//    <name> DCDCLNVCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E305C) DCDC Low Noise Voltage Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCLNVCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCLNVCTRL = (EMU_DCDCLNVCTRL & ~(0x7F02UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F02) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCLNVCTRL_LNATT </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLNVCTRL_LNVREF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: EMU_DCDCTIMING  -----------------------------
// SVD Line: 1987

unsigned int EMU_DCDCTIMING __AT (0x400E3060);



// --------------------------  Field Item: EMU_DCDCTIMING_LPINITWAIT  -----------------------------
// SVD Line: 1996

//  <item> SFDITEM_FIELD__EMU_DCDCTIMING_LPINITWAIT
//    <name> LPINITWAIT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E3060) Low Power Initialization Wait Time </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCTIMING >> 0) & 0xFF), ((EMU_DCDCTIMING = (EMU_DCDCTIMING & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: EMU_DCDCTIMING_COMPENPRCHGEN  ----------------------------
// SVD Line: 2003

//  <item> SFDITEM_FIELD__EMU_DCDCTIMING_COMPENPRCHGEN
//    <name> COMPENPRCHGEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400E3060) LN Mode Precharge Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCTIMING ) </loc>
//      <o.11..11> COMPENPRCHGEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_DCDCTIMING_LNWAIT  -------------------------------
// SVD Line: 2010

//  <item> SFDITEM_FIELD__EMU_DCDCTIMING_LNWAIT
//    <name> LNWAIT </name>
//    <rw> 
//    <i> [Bits 16..12] RW (@ 0x400E3060) Low Noise Controller Initialization Wait Time </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCTIMING >> 12) & 0x1F), ((EMU_DCDCTIMING = (EMU_DCDCTIMING & ~(0x1FUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: EMU_DCDCTIMING_BYPWAIT  -------------------------------
// SVD Line: 2017

//  <item> SFDITEM_FIELD__EMU_DCDCTIMING_BYPWAIT
//    <name> BYPWAIT </name>
//    <rw> 
//    <i> [Bits 27..20] RW (@ 0x400E3060) Bypass Mode Transition From Low Power or Low Noise Modes Wait Wait </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCTIMING >> 20) & 0xFF), ((EMU_DCDCTIMING = (EMU_DCDCTIMING & ~(0xFFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: EMU_DCDCTIMING_DUTYSCALE  ------------------------------
// SVD Line: 2024

//  <item> SFDITEM_FIELD__EMU_DCDCTIMING_DUTYSCALE
//    <name> DUTYSCALE </name>
//    <rw> 
//    <i> [Bits 30..29] RW (@ 0x400E3060) Select Bias Duty Cycle Clock </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCTIMING >> 29) & 0x3), ((EMU_DCDCTIMING = (EMU_DCDCTIMING & ~(0x3UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EMU_DCDCTIMING  ---------------------------------
// SVD Line: 1987

//  <rtree> SFDITEM_REG__EMU_DCDCTIMING
//    <name> DCDCTIMING </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3060) DCDC Controller Timing Value Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCTIMING >> 0) & 0xFFFFFFFF), ((EMU_DCDCTIMING = (EMU_DCDCTIMING & ~(0x6FF1F8FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x6FF1F8FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCTIMING_LPINITWAIT </item>
//    <item> SFDITEM_FIELD__EMU_DCDCTIMING_COMPENPRCHGEN </item>
//    <item> SFDITEM_FIELD__EMU_DCDCTIMING_LNWAIT </item>
//    <item> SFDITEM_FIELD__EMU_DCDCTIMING_BYPWAIT </item>
//    <item> SFDITEM_FIELD__EMU_DCDCTIMING_DUTYSCALE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_DCDCLPVCTRL  -----------------------------
// SVD Line: 2033

unsigned int EMU_DCDCLPVCTRL __AT (0x400E3064);



// ----------------------------  Field Item: EMU_DCDCLPVCTRL_LPATT  -------------------------------
// SVD Line: 2042

//  <item> SFDITEM_FIELD__EMU_DCDCLPVCTRL_LPATT
//    <name> LPATT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E3064) Low Power Feedback Attenuation </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCLPVCTRL ) </loc>
//      <o.0..0> LPATT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_DCDCLPVCTRL_LPVREF  -------------------------------
// SVD Line: 2049

//  <item> SFDITEM_FIELD__EMU_DCDCLPVCTRL_LPVREF
//    <name> LPVREF </name>
//    <rw> 
//    <i> [Bits 8..1] RW (@ 0x400E3064) LP Mode Reference Selection for EM23 and EM4H </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLPVCTRL >> 1) & 0xFF), ((EMU_DCDCLPVCTRL = (EMU_DCDCLPVCTRL & ~(0xFFUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EMU_DCDCLPVCTRL  --------------------------------
// SVD Line: 2033

//  <rtree> SFDITEM_REG__EMU_DCDCLPVCTRL
//    <name> DCDCLPVCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3064) DCDC Low Power Voltage Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCLPVCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCLPVCTRL = (EMU_DCDCLPVCTRL & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCLPVCTRL_LPATT </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLPVCTRL_LPVREF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: EMU_DCDCLPCTRL  -----------------------------
// SVD Line: 2058

unsigned int EMU_DCDCLPCTRL __AT (0x400E306C);



// -------------------------  Field Item: EMU_DCDCLPCTRL_LPCMPHYSSEL  -----------------------------
// SVD Line: 2067

//  <item> SFDITEM_FIELD__EMU_DCDCLPCTRL_LPCMPHYSSEL
//    <name> LPCMPHYSSEL </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E306C) LP Mode Hysteresis Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLPCTRL >> 12) & 0xF), ((EMU_DCDCLPCTRL = (EMU_DCDCLPCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCLPCTRL_LPVREFDUTYEN  ----------------------------
// SVD Line: 2074

//  <item> SFDITEM_FIELD__EMU_DCDCLPCTRL_LPVREFDUTYEN
//    <name> LPVREFDUTYEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400E306C) LP Mode Duty Cycling Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCLPCTRL ) </loc>
//      <o.24..24> LPVREFDUTYEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_DCDCLPCTRL_LPBLANK  -------------------------------
// SVD Line: 2081

//  <item> SFDITEM_FIELD__EMU_DCDCLPCTRL_LPBLANK
//    <name> LPBLANK </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400E306C) Reserved for internal use. Do not change. </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLPCTRL >> 25) & 0x3), ((EMU_DCDCLPCTRL = (EMU_DCDCLPCTRL & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EMU_DCDCLPCTRL  ---------------------------------
// SVD Line: 2058

//  <rtree> SFDITEM_REG__EMU_DCDCLPCTRL
//    <name> DCDCLPCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E306C) DCDC Low Power Control Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCLPCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCLPCTRL = (EMU_DCDCLPCTRL & ~(0x700F000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x700F000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCLPCTRL_LPCMPHYSSEL </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLPCTRL_LPVREFDUTYEN </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLPCTRL_LPBLANK </item>
//  </rtree>
//  


// ------------------------  Register Item Address: EMU_DCDCLNFREQCTRL  ---------------------------
// SVD Line: 2090

unsigned int EMU_DCDCLNFREQCTRL __AT (0x400E3070);



// -------------------------  Field Item: EMU_DCDCLNFREQCTRL_RCOBAND  -----------------------------
// SVD Line: 2099

//  <item> SFDITEM_FIELD__EMU_DCDCLNFREQCTRL_RCOBAND
//    <name> RCOBAND </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E3070) LN Mode RCO Frequency Band Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNFREQCTRL >> 0) & 0x7), ((EMU_DCDCLNFREQCTRL = (EMU_DCDCLNFREQCTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_DCDCLNFREQCTRL_RCOTRIM  -----------------------------
// SVD Line: 2106

//  <item> SFDITEM_FIELD__EMU_DCDCLNFREQCTRL_RCOTRIM
//    <name> RCOTRIM </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x400E3070) Reserved for internal use. Do not change. </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_DCDCLNFREQCTRL >> 24) & 0x1F), ((EMU_DCDCLNFREQCTRL = (EMU_DCDCLNFREQCTRL & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: EMU_DCDCLNFREQCTRL  -------------------------------
// SVD Line: 2090

//  <rtree> SFDITEM_REG__EMU_DCDCLNFREQCTRL
//    <name> DCDCLNFREQCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3070) DCDC Low Noise Controller Frequency Control </i>
//    <loc> ( (unsigned int)((EMU_DCDCLNFREQCTRL >> 0) & 0xFFFFFFFF), ((EMU_DCDCLNFREQCTRL = (EMU_DCDCLNFREQCTRL & ~(0x1F000007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F000007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCLNFREQCTRL_RCOBAND </item>
//    <item> SFDITEM_FIELD__EMU_DCDCLNFREQCTRL_RCOTRIM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_DCDCSYNC  ------------------------------
// SVD Line: 2115

unsigned int EMU_DCDCSYNC __AT (0x400E3078);



// --------------------------  Field Item: EMU_DCDCSYNC_DCDCCTRLBUSY  -----------------------------
// SVD Line: 2124

//  <item> SFDITEM_FIELD__EMU_DCDCSYNC_DCDCCTRLBUSY
//    <name> DCDCCTRLBUSY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E3078) DCDC CTRL Register Transfer Busy </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_DCDCSYNC ) </loc>
//      <o.0..0> DCDCCTRLBUSY
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EMU_DCDCSYNC  ----------------------------------
// SVD Line: 2115

//  <rtree> SFDITEM_REG__EMU_DCDCSYNC
//    <name> DCDCSYNC </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E3078) DCDC Read Status Register </i>
//    <loc> ( (unsigned int)((EMU_DCDCSYNC >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EMU_DCDCSYNC_DCDCCTRLBUSY </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_VMONAVDDCTRL  ----------------------------
// SVD Line: 2133

unsigned int EMU_VMONAVDDCTRL __AT (0x400E3090);



// -----------------------------  Field Item: EMU_VMONAVDDCTRL_EN  --------------------------------
// SVD Line: 2142

//  <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E3090) Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONAVDDCTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_VMONAVDDCTRL_RISEWU  ------------------------------
// SVD Line: 2149

//  <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_RISEWU
//    <name> RISEWU </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E3090) Rise Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONAVDDCTRL ) </loc>
//      <o.2..2> RISEWU
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_VMONAVDDCTRL_FALLWU  ------------------------------
// SVD Line: 2156

//  <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_FALLWU
//    <name> FALLWU </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E3090) Fall Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONAVDDCTRL ) </loc>
//      <o.3..3> FALLWU
//    </check>
//  </item>
//  


// -----------------------  Field Item: EMU_VMONAVDDCTRL_FALLTHRESFINE  ---------------------------
// SVD Line: 2163

//  <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_FALLTHRESFINE
//    <name> FALLTHRESFINE </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400E3090) Falling Threshold Fine Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONAVDDCTRL >> 8) & 0xF), ((EMU_VMONAVDDCTRL = (EMU_VMONAVDDCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: EMU_VMONAVDDCTRL_FALLTHRESCOARSE  --------------------------
// SVD Line: 2170

//  <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_FALLTHRESCOARSE
//    <name> FALLTHRESCOARSE </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E3090) Falling Threshold Coarse Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONAVDDCTRL >> 12) & 0xF), ((EMU_VMONAVDDCTRL = (EMU_VMONAVDDCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: EMU_VMONAVDDCTRL_RISETHRESFINE  ---------------------------
// SVD Line: 2177

//  <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_RISETHRESFINE
//    <name> RISETHRESFINE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E3090) Rising Threshold Fine Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONAVDDCTRL >> 16) & 0xF), ((EMU_VMONAVDDCTRL = (EMU_VMONAVDDCTRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: EMU_VMONAVDDCTRL_RISETHRESCOARSE  --------------------------
// SVD Line: 2184

//  <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_RISETHRESCOARSE
//    <name> RISETHRESCOARSE </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x400E3090) Rising Threshold Coarse Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONAVDDCTRL >> 20) & 0xF), ((EMU_VMONAVDDCTRL = (EMU_VMONAVDDCTRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: EMU_VMONAVDDCTRL  --------------------------------
// SVD Line: 2133

//  <rtree> SFDITEM_REG__EMU_VMONAVDDCTRL
//    <name> VMONAVDDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3090) VMON AVDD Channel Control </i>
//    <loc> ( (unsigned int)((EMU_VMONAVDDCTRL >> 0) & 0xFFFFFFFF), ((EMU_VMONAVDDCTRL = (EMU_VMONAVDDCTRL & ~(0xFFFF0DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF0D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_EN </item>
//    <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_RISEWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_FALLWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_FALLTHRESFINE </item>
//    <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_FALLTHRESCOARSE </item>
//    <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_RISETHRESFINE </item>
//    <item> SFDITEM_FIELD__EMU_VMONAVDDCTRL_RISETHRESCOARSE </item>
//  </rtree>
//  


// -----------------------  Register Item Address: EMU_VMONALTAVDDCTRL  ---------------------------
// SVD Line: 2193

unsigned int EMU_VMONALTAVDDCTRL __AT (0x400E3094);



// ---------------------------  Field Item: EMU_VMONALTAVDDCTRL_EN  -------------------------------
// SVD Line: 2202

//  <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E3094) Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONALTAVDDCTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: EMU_VMONALTAVDDCTRL_RISEWU  -----------------------------
// SVD Line: 2209

//  <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_RISEWU
//    <name> RISEWU </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E3094) Rise Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONALTAVDDCTRL ) </loc>
//      <o.2..2> RISEWU
//    </check>
//  </item>
//  


// -------------------------  Field Item: EMU_VMONALTAVDDCTRL_FALLWU  -----------------------------
// SVD Line: 2216

//  <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_FALLWU
//    <name> FALLWU </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E3094) Fall Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONALTAVDDCTRL ) </loc>
//      <o.3..3> FALLWU
//    </check>
//  </item>
//  


// ------------------------  Field Item: EMU_VMONALTAVDDCTRL_THRESFINE  ---------------------------
// SVD Line: 2223

//  <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_THRESFINE
//    <name> THRESFINE </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400E3094) Threshold Fine Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONALTAVDDCTRL >> 8) & 0xF), ((EMU_VMONALTAVDDCTRL = (EMU_VMONALTAVDDCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: EMU_VMONALTAVDDCTRL_THRESCOARSE  --------------------------
// SVD Line: 2230

//  <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_THRESCOARSE
//    <name> THRESCOARSE </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E3094) Threshold Coarse Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONALTAVDDCTRL >> 12) & 0xF), ((EMU_VMONALTAVDDCTRL = (EMU_VMONALTAVDDCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: EMU_VMONALTAVDDCTRL  ------------------------------
// SVD Line: 2193

//  <rtree> SFDITEM_REG__EMU_VMONALTAVDDCTRL
//    <name> VMONALTAVDDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3094) Alternate VMON AVDD Channel Control </i>
//    <loc> ( (unsigned int)((EMU_VMONALTAVDDCTRL >> 0) & 0xFFFFFFFF), ((EMU_VMONALTAVDDCTRL = (EMU_VMONALTAVDDCTRL & ~(0xFF0DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF0D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_EN </item>
//    <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_RISEWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_FALLWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_THRESFINE </item>
//    <item> SFDITEM_FIELD__EMU_VMONALTAVDDCTRL_THRESCOARSE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_VMONDVDDCTRL  ----------------------------
// SVD Line: 2239

unsigned int EMU_VMONDVDDCTRL __AT (0x400E3098);



// -----------------------------  Field Item: EMU_VMONDVDDCTRL_EN  --------------------------------
// SVD Line: 2248

//  <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E3098) Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONDVDDCTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_VMONDVDDCTRL_RISEWU  ------------------------------
// SVD Line: 2255

//  <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_RISEWU
//    <name> RISEWU </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E3098) Rise Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONDVDDCTRL ) </loc>
//      <o.2..2> RISEWU
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_VMONDVDDCTRL_FALLWU  ------------------------------
// SVD Line: 2262

//  <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_FALLWU
//    <name> FALLWU </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E3098) Fall Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONDVDDCTRL ) </loc>
//      <o.3..3> FALLWU
//    </check>
//  </item>
//  


// -------------------------  Field Item: EMU_VMONDVDDCTRL_THRESFINE  -----------------------------
// SVD Line: 2269

//  <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_THRESFINE
//    <name> THRESFINE </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400E3098) Threshold Fine Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONDVDDCTRL >> 8) & 0xF), ((EMU_VMONDVDDCTRL = (EMU_VMONDVDDCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: EMU_VMONDVDDCTRL_THRESCOARSE  ----------------------------
// SVD Line: 2276

//  <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_THRESCOARSE
//    <name> THRESCOARSE </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E3098) Threshold Coarse Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONDVDDCTRL >> 12) & 0xF), ((EMU_VMONDVDDCTRL = (EMU_VMONDVDDCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: EMU_VMONDVDDCTRL  --------------------------------
// SVD Line: 2239

//  <rtree> SFDITEM_REG__EMU_VMONDVDDCTRL
//    <name> VMONDVDDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3098) VMON DVDD Channel Control </i>
//    <loc> ( (unsigned int)((EMU_VMONDVDDCTRL >> 0) & 0xFFFFFFFF), ((EMU_VMONDVDDCTRL = (EMU_VMONDVDDCTRL & ~(0xFF0DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF0D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_EN </item>
//    <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_RISEWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_FALLWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_THRESFINE </item>
//    <item> SFDITEM_FIELD__EMU_VMONDVDDCTRL_THRESCOARSE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_VMONIO0CTRL  -----------------------------
// SVD Line: 2285

unsigned int EMU_VMONIO0CTRL __AT (0x400E309C);



// -----------------------------  Field Item: EMU_VMONIO0CTRL_EN  ---------------------------------
// SVD Line: 2294

//  <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E309C) Enable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONIO0CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_VMONIO0CTRL_RISEWU  -------------------------------
// SVD Line: 2301

//  <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_RISEWU
//    <name> RISEWU </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E309C) Rise Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONIO0CTRL ) </loc>
//      <o.2..2> RISEWU
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_VMONIO0CTRL_FALLWU  -------------------------------
// SVD Line: 2308

//  <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_FALLWU
//    <name> FALLWU </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E309C) Fall Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONIO0CTRL ) </loc>
//      <o.3..3> FALLWU
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_VMONIO0CTRL_RETDIS  -------------------------------
// SVD Line: 2315

//  <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_RETDIS
//    <name> RETDIS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E309C) EM4 IO0 Retention Disable </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_VMONIO0CTRL ) </loc>
//      <o.4..4> RETDIS
//    </check>
//  </item>
//  


// --------------------------  Field Item: EMU_VMONIO0CTRL_THRESFINE  -----------------------------
// SVD Line: 2322

//  <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_THRESFINE
//    <name> THRESFINE </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400E309C) Threshold Fine Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONIO0CTRL >> 8) & 0xF), ((EMU_VMONIO0CTRL = (EMU_VMONIO0CTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: EMU_VMONIO0CTRL_THRESCOARSE  ----------------------------
// SVD Line: 2329

//  <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_THRESCOARSE
//    <name> THRESCOARSE </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E309C) Threshold Coarse Adjust </i>
//    <edit> 
//      <loc> ( (unsigned char)((EMU_VMONIO0CTRL >> 12) & 0xF), ((EMU_VMONIO0CTRL = (EMU_VMONIO0CTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EMU_VMONIO0CTRL  --------------------------------
// SVD Line: 2285

//  <rtree> SFDITEM_REG__EMU_VMONIO0CTRL
//    <name> VMONIO0CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E309C) VMON IOVDD0 Channel Control </i>
//    <loc> ( (unsigned int)((EMU_VMONIO0CTRL >> 0) & 0xFFFFFFFF), ((EMU_VMONIO0CTRL = (EMU_VMONIO0CTRL & ~(0xFF1DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF1D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_EN </item>
//    <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_RISEWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_FALLWU </item>
//    <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_RETDIS </item>
//    <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_THRESFINE </item>
//    <item> SFDITEM_FIELD__EMU_VMONIO0CTRL_THRESCOARSE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_BIASCONF  ------------------------------
// SVD Line: 2338

unsigned int EMU_BIASCONF __AT (0x400E3164);



// ---------------------------  Field Item: EMU_BIASCONF_NADUTYEM01  ------------------------------
// SVD Line: 2347

//  <item> SFDITEM_FIELD__EMU_BIASCONF_NADUTYEM01
//    <name> NADUTYEM01 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E3164) NA DUTY in EM01 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_BIASCONF ) </loc>
//      <o.2..2> NADUTYEM01
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_BIASCONF_LPEM01  --------------------------------
// SVD Line: 2354

//  <item> SFDITEM_FIELD__EMU_BIASCONF_LPEM01
//    <name> LPEM01 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E3164) LP in EM01 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_BIASCONF ) </loc>
//      <o.3..3> LPEM01
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EMU_BIASCONF_GMCEM23  --------------------------------
// SVD Line: 2361

//  <item> SFDITEM_FIELD__EMU_BIASCONF_GMCEM23
//    <name> GMCEM23 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E3164) GMC in EM234 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_BIASCONF ) </loc>
//      <o.4..4> GMCEM23
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_BIASCONF_UADUTYEM23  ------------------------------
// SVD Line: 2368

//  <item> SFDITEM_FIELD__EMU_BIASCONF_UADUTYEM23
//    <name> UADUTYEM23 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E3164) UADUTY in EM234 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_BIASCONF ) </loc>
//      <o.5..5> UADUTYEM23
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EMU_BIASCONF_NADUTYEM23  ------------------------------
// SVD Line: 2375

//  <item> SFDITEM_FIELD__EMU_BIASCONF_NADUTYEM23
//    <name> NADUTYEM23 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400E3164) NA DUTY in EM234 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_BIASCONF ) </loc>
//      <o.6..6> NADUTYEM23
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EMU_BIASCONF_LPEM23  --------------------------------
// SVD Line: 2382

//  <item> SFDITEM_FIELD__EMU_BIASCONF_LPEM23
//    <name> LPEM23 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400E3164) LP in EM234 </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_BIASCONF ) </loc>
//      <o.7..7> LPEM23
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EMU_BIASCONF  ----------------------------------
// SVD Line: 2338

//  <rtree> SFDITEM_REG__EMU_BIASCONF
//    <name> BIASCONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3164) Configurations Related to the Bias </i>
//    <loc> ( (unsigned int)((EMU_BIASCONF >> 0) & 0xFFFFFFFF), ((EMU_BIASCONF = (EMU_BIASCONF & ~(0xFCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_BIASCONF_NADUTYEM01 </item>
//    <item> SFDITEM_FIELD__EMU_BIASCONF_LPEM01 </item>
//    <item> SFDITEM_FIELD__EMU_BIASCONF_GMCEM23 </item>
//    <item> SFDITEM_FIELD__EMU_BIASCONF_UADUTYEM23 </item>
//    <item> SFDITEM_FIELD__EMU_BIASCONF_NADUTYEM23 </item>
//    <item> SFDITEM_FIELD__EMU_BIASCONF_LPEM23 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EMU_TESTLOCK  ------------------------------
// SVD Line: 2391

unsigned int EMU_TESTLOCK __AT (0x400E3190);



// ----------------------------  Field Item: EMU_TESTLOCK_LOCKKEY  --------------------------------
// SVD Line: 2400

//  <item> SFDITEM_FIELD__EMU_TESTLOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400E3190) Configuration Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((EMU_TESTLOCK >> 0) & 0xFFFF), ((EMU_TESTLOCK = (EMU_TESTLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EMU_TESTLOCK  ----------------------------------
// SVD Line: 2391

//  <rtree> SFDITEM_REG__EMU_TESTLOCK
//    <name> TESTLOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E3190) Test Lock Register </i>
//    <loc> ( (unsigned int)((EMU_TESTLOCK >> 0) & 0xFFFFFFFF), ((EMU_TESTLOCK = (EMU_TESTLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_TESTLOCK_LOCKKEY </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EMU_BIASTESTCTRL  ----------------------------
// SVD Line: 2419

unsigned int EMU_BIASTESTCTRL __AT (0x400E319C);



// -----------------------  Field Item: EMU_BIASTESTCTRL_BIAS_RIP_RESET  --------------------------
// SVD Line: 2428

//  <item> SFDITEM_FIELD__EMU_BIASTESTCTRL_BIAS_RIP_RESET
//    <name> BIAS_RIP_RESET </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E319C) Reset Bias Ripple Counter </i>
//    <check> 
//      <loc> ( (unsigned int) EMU_BIASTESTCTRL ) </loc>
//      <o.3..3> BIAS_RIP_RESET
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: EMU_BIASTESTCTRL  --------------------------------
// SVD Line: 2419

//  <rtree> SFDITEM_REG__EMU_BIASTESTCTRL
//    <name> BIASTESTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E319C) Test Control Register for Regulator and BIAS </i>
//    <loc> ( (unsigned int)((EMU_BIASTESTCTRL >> 0) & 0xFFFFFFFF), ((EMU_BIASTESTCTRL = (EMU_BIASTESTCTRL & ~(0x8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EMU_BIASTESTCTRL_BIAS_RIP_RESET </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: EMU  --------------------------------------
// SVD Line: 768

//  <view> EMU
//    <name> EMU </name>
//    <item> SFDITEM_REG__EMU_CTRL </item>
//    <item> SFDITEM_REG__EMU_STATUS </item>
//    <item> SFDITEM_REG__EMU_LOCK </item>
//    <item> SFDITEM_REG__EMU_RAM0CTRL </item>
//    <item> SFDITEM_REG__EMU_CMD </item>
//    <item> SFDITEM_REG__EMU_EM4CTRL </item>
//    <item> SFDITEM_REG__EMU_TEMPLIMITS </item>
//    <item> SFDITEM_REG__EMU_TEMP </item>
//    <item> SFDITEM_REG__EMU_IF </item>
//    <item> SFDITEM_REG__EMU_IFS </item>
//    <item> SFDITEM_REG__EMU_IFC </item>
//    <item> SFDITEM_REG__EMU_IEN </item>
//    <item> SFDITEM_REG__EMU_PWRLOCK </item>
//    <item> SFDITEM_REG__EMU_PWRCFG </item>
//    <item> SFDITEM_REG__EMU_PWRCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCMISCCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCZDETCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCCLIMCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCLNCOMPCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCLNVCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCTIMING </item>
//    <item> SFDITEM_REG__EMU_DCDCLPVCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCLPCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCLNFREQCTRL </item>
//    <item> SFDITEM_REG__EMU_DCDCSYNC </item>
//    <item> SFDITEM_REG__EMU_VMONAVDDCTRL </item>
//    <item> SFDITEM_REG__EMU_VMONALTAVDDCTRL </item>
//    <item> SFDITEM_REG__EMU_VMONDVDDCTRL </item>
//    <item> SFDITEM_REG__EMU_VMONIO0CTRL </item>
//    <item> SFDITEM_REG__EMU_BIASCONF </item>
//    <item> SFDITEM_REG__EMU_TESTLOCK </item>
//    <item> SFDITEM_REG__EMU_BIASTESTCTRL </item>
//  </view>
//  


// -----------------------------  Register Item Address: RMU_CTRL  --------------------------------
// SVD Line: 2449

unsigned int RMU_CTRL __AT (0x400E5000);



// -----------------------------  Field Item: RMU_CTRL_WDOGRMODE  ---------------------------------
// SVD Line: 2458

//  <item> SFDITEM_FIELD__RMU_CTRL_WDOGRMODE
//    <name> WDOGRMODE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E5000) \nWDOG Reset Mode\n0 : DISABLED = Reset request is blocked. This disable bit is redundant with enable/disable bit in WDOG\n1 : LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.\n2 : EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.\n3 : Reserved - do not use\n4 : FULL = The entire device is reset except some EMU and RMU registers.\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RMU_CTRL ) </loc>
//      <o.2..0> WDOGRMODE
//        <0=> 0: DISABLED = Reset request is blocked. This disable bit is redundant with enable/disable bit in WDOG
//        <1=> 1: LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.
//        <2=> 2: EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.
//        <3=> 3: 
//        <4=> 4: FULL = The entire device is reset except some EMU and RMU registers.
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: RMU_CTRL_LOCKUPRMODE  --------------------------------
// SVD Line: 2487

//  <item> SFDITEM_FIELD__RMU_CTRL_LOCKUPRMODE
//    <name> LOCKUPRMODE </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400E5000) \nCore LOCKUP Reset Mode\n0 : DISABLED = Reset request is blocked.\n1 : LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.\n2 : EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.\n3 : Reserved - do not use\n4 : FULL = The entire device is reset except some EMU and RMU registers.\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RMU_CTRL ) </loc>
//      <o.6..4> LOCKUPRMODE
//        <0=> 0: DISABLED = Reset request is blocked.
//        <1=> 1: LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.
//        <2=> 2: EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.
//        <3=> 3: 
//        <4=> 4: FULL = The entire device is reset except some EMU and RMU registers.
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: RMU_CTRL_SYSRMODE  ---------------------------------
// SVD Line: 2516

//  <item> SFDITEM_FIELD__RMU_CTRL_SYSRMODE
//    <name> SYSRMODE </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x400E5000) \nCore Sysreset Reset Mode\n0 : DISABLED = Reset request is blocked.\n1 : LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.\n2 : EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.\n3 : Reserved - do not use\n4 : FULL = The entire device is reset except some EMU and RMU registers.\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RMU_CTRL ) </loc>
//      <o.10..8> SYSRMODE
//        <0=> 0: DISABLED = Reset request is blocked.
//        <1=> 1: LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.
//        <2=> 2: EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.
//        <3=> 3: 
//        <4=> 4: FULL = The entire device is reset except some EMU and RMU registers.
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: RMU_CTRL_PINRMODE  ---------------------------------
// SVD Line: 2545

//  <item> SFDITEM_FIELD__RMU_CTRL_PINRMODE
//    <name> PINRMODE </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x400E5000) \nPIN Reset Mode\n0 : DISABLED = Reset request is blocked.\n1 : LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.\n2 : EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.\n3 : Reserved - do not use\n4 : FULL = The entire device is reset except some EMU and RMU registers.\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RMU_CTRL ) </loc>
//      <o.14..12> PINRMODE
//        <0=> 0: DISABLED = Reset request is blocked.
//        <1=> 1: LIMITED = The CRYOTIMER, DEBUGGER, RTCC, are not reset.
//        <2=> 2: EXTENDED = The CRYOTIMER, DEBUGGER are not reset. RTCC is reset.
//        <3=> 3: 
//        <4=> 4: FULL = The entire device is reset except some EMU and RMU registers.
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: RMU_CTRL_RESETSTATE  --------------------------------
// SVD Line: 2574

//  <item> SFDITEM_FIELD__RMU_CTRL_RESETSTATE
//    <name> RESETSTATE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E5000) System Software Reset State </i>
//    <edit> 
//      <loc> ( (unsigned char)((RMU_CTRL >> 24) & 0x3), ((RMU_CTRL = (RMU_CTRL & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RMU_CTRL  ------------------------------------
// SVD Line: 2449

//  <rtree> SFDITEM_REG__RMU_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E5000) Control Register </i>
//    <loc> ( (unsigned int)((RMU_CTRL >> 0) & 0xFFFFFFFF), ((RMU_CTRL = (RMU_CTRL & ~(0x3007777UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3007777) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RMU_CTRL_WDOGRMODE </item>
//    <item> SFDITEM_FIELD__RMU_CTRL_LOCKUPRMODE </item>
//    <item> SFDITEM_FIELD__RMU_CTRL_SYSRMODE </item>
//    <item> SFDITEM_FIELD__RMU_CTRL_PINRMODE </item>
//    <item> SFDITEM_FIELD__RMU_CTRL_RESETSTATE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RMU_RSTCAUSE  ------------------------------
// SVD Line: 2583

unsigned int RMU_RSTCAUSE __AT (0x400E5004);



// -----------------------------  Field Item: RMU_RSTCAUSE_PORST  ---------------------------------
// SVD Line: 2592

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_PORST
//    <name> PORST </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E5004) Power on Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.0..0> PORST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RMU_RSTCAUSE_AVDDBOD  --------------------------------
// SVD Line: 2599

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_AVDDBOD
//    <name> AVDDBOD </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E5004) Brown Out Detector AVDD Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.2..2> AVDDBOD
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RMU_RSTCAUSE_DVDDBOD  --------------------------------
// SVD Line: 2606

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_DVDDBOD
//    <name> DVDDBOD </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E5004) Brown Out Detector DVDD Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.3..3> DVDDBOD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RMU_RSTCAUSE_DECBOD  --------------------------------
// SVD Line: 2613

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_DECBOD
//    <name> DECBOD </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E5004) Brown Out Detector Decouple Domain Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.4..4> DECBOD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RMU_RSTCAUSE_EXTRST  --------------------------------
// SVD Line: 2620

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_EXTRST
//    <name> EXTRST </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x400E5004) External Pin Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.8..8> EXTRST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RMU_RSTCAUSE_LOCKUPRST  -------------------------------
// SVD Line: 2627

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_LOCKUPRST
//    <name> LOCKUPRST </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x400E5004) LOCKUP Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.9..9> LOCKUPRST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RMU_RSTCAUSE_SYSREQRST  -------------------------------
// SVD Line: 2634

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_SYSREQRST
//    <name> SYSREQRST </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x400E5004) System Request Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.10..10> SYSREQRST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RMU_RSTCAUSE_WDOGRST  --------------------------------
// SVD Line: 2641

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_WDOGRST
//    <name> WDOGRST </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x400E5004) Watchdog Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.11..11> WDOGRST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RMU_RSTCAUSE_EM4RST  --------------------------------
// SVD Line: 2648

//  <item> SFDITEM_FIELD__RMU_RSTCAUSE_EM4RST
//    <name> EM4RST </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x400E5004) EM4 Reset </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_RSTCAUSE ) </loc>
//      <o.16..16> EM4RST
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RMU_RSTCAUSE  ----------------------------------
// SVD Line: 2583

//  <rtree> SFDITEM_REG__RMU_RSTCAUSE
//    <name> RSTCAUSE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E5004) Reset Cause Register </i>
//    <loc> ( (unsigned int)((RMU_RSTCAUSE >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_PORST </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_AVDDBOD </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_DVDDBOD </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_DECBOD </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_EXTRST </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_LOCKUPRST </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_SYSREQRST </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_WDOGRST </item>
//    <item> SFDITEM_FIELD__RMU_RSTCAUSE_EM4RST </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RMU_CMD  ---------------------------------
// SVD Line: 2657

unsigned int RMU_CMD __AT (0x400E5008);



// --------------------------------  Field Item: RMU_CMD_RCCLR  -----------------------------------
// SVD Line: 2666

//  <item> SFDITEM_FIELD__RMU_CMD_RCCLR
//    <name> RCCLR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E5008) Reset Cause Clear </i>
//    <check> 
//      <loc> ( (unsigned int) RMU_CMD ) </loc>
//      <o.0..0> RCCLR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RMU_CMD  ------------------------------------
// SVD Line: 2657

//  <rtree> SFDITEM_REG__RMU_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E5008) Command Register </i>
//    <loc> ( (unsigned int)((RMU_CMD >> 0) & 0xFFFFFFFF), ((RMU_CMD = (RMU_CMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RMU_CMD_RCCLR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RMU_RST  ---------------------------------
// SVD Line: 2675

unsigned int RMU_RST __AT (0x400E500C);



// ---------------------------------  Register Item: RMU_RST  -------------------------------------
// SVD Line: 2675

//  <item> SFDITEM_REG__RMU_RST
//    <name> RST </name>
//    <i> [Bits 31..0] RW (@ 0x400E500C) Reset Control Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RMU_RST >> 0) & 0xFFFFFFFF), ((RMU_RST = (RMU_RST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RMU_LOCK  --------------------------------
// SVD Line: 2684

unsigned int RMU_LOCK __AT (0x400E5010);



// ------------------------------  Field Item: RMU_LOCK_LOCKKEY  ----------------------------------
// SVD Line: 2693

//  <item> SFDITEM_FIELD__RMU_LOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400E5010) Configuration Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((RMU_LOCK >> 0) & 0xFFFF), ((RMU_LOCK = (RMU_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RMU_LOCK  ------------------------------------
// SVD Line: 2684

//  <rtree> SFDITEM_REG__RMU_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E5010) Configuration Lock Register </i>
//    <loc> ( (unsigned int)((RMU_LOCK >> 0) & 0xFFFFFFFF), ((RMU_LOCK = (RMU_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RMU_LOCK_LOCKKEY </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RMU  --------------------------------------
// SVD Line: 2439

//  <view> RMU
//    <name> RMU </name>
//    <item> SFDITEM_REG__RMU_CTRL </item>
//    <item> SFDITEM_REG__RMU_RSTCAUSE </item>
//    <item> SFDITEM_REG__RMU_CMD </item>
//    <item> SFDITEM_REG__RMU_RST </item>
//    <item> SFDITEM_REG__RMU_LOCK </item>
//  </view>
//  


// -----------------------------  Register Item Address: CMU_CTRL  --------------------------------
// SVD Line: 2728

unsigned int CMU_CTRL __AT (0x400E4000);



// -----------------------------  Field Item: CMU_CTRL_CLKOUTSEL0  --------------------------------
// SVD Line: 2737

//  <item> SFDITEM_FIELD__CMU_CTRL_CLKOUTSEL0
//    <name> CLKOUTSEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E4000) \nClock Output Select 0\n0 : DISABLED = Disabled\n1 : ULFRCO = ULFRCO (directly from oscillator)\n2 : LFRCO = LFRCO (directly from oscillator)\n3 : LFXO = LFXO (directly from oscillator)\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : HFXO = HFXO (directly from oscillator)\n7 : HFEXPCLK = HFEXPCLK\n8 : Reserved - do not use\n9 : ULFRCOQ = ULFRCO (qualified)\n10 : LFRCOQ = LFRCO (qualified)\n11 : LFXOQ = LFXO (qualified)\n12 : HFRCOQ = HFRCO (qualified)\n13 : AUXHFRCOQ = AUXHFRCO (qualified)\n14 : HFXOQ = HFXO (qualified)\n15 : HFSRCCLK = HFSRCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_CTRL ) </loc>
//      <o.3..0> CLKOUTSEL0
//        <0=> 0: DISABLED = Disabled
//        <1=> 1: ULFRCO = ULFRCO (directly from oscillator)
//        <2=> 2: LFRCO = LFRCO (directly from oscillator)
//        <3=> 3: LFXO = LFXO (directly from oscillator)
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: HFXO = HFXO (directly from oscillator)
//        <7=> 7: HFEXPCLK = HFEXPCLK
//        <8=> 8: 
//        <9=> 9: ULFRCOQ = ULFRCO (qualified)
//        <10=> 10: LFRCOQ = LFRCO (qualified)
//        <11=> 11: LFXOQ = LFXO (qualified)
//        <12=> 12: HFRCOQ = HFRCO (qualified)
//        <13=> 13: AUXHFRCOQ = AUXHFRCO (qualified)
//        <14=> 14: HFXOQ = HFXO (qualified)
//        <15=> 15: HFSRCCLK = HFSRCCLK
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: CMU_CTRL_CLKOUTSEL1  --------------------------------
// SVD Line: 2811

//  <item> SFDITEM_FIELD__CMU_CTRL_CLKOUTSEL1
//    <name> CLKOUTSEL1 </name>
//    <rw> 
//    <i> [Bits 8..5] RW (@ 0x400E4000) \nClock Output Select 1\n0 : DISABLED = Disabled\n1 : ULFRCO = ULFRCO (directly from oscillator)\n2 : LFRCO = LFRCO (directly from oscillator)\n3 : LFXO = LFXO (directly from oscillator)\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : HFXO = HFXO (directly from oscillator)\n7 : HFEXPCLK = HFEXPCLK\n8 : Reserved - do not use\n9 : ULFRCOQ = ULFRCO (qualified)\n10 : LFRCOQ = LFRCO (qualified)\n11 : LFXOQ = LFXO (qualified)\n12 : HFRCOQ = HFRCO (qualified)\n13 : AUXHFRCOQ = AUXHFRCO (qualified)\n14 : HFXOQ = HFXO (qualified)\n15 : HFSRCCLK = HFSRCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_CTRL ) </loc>
//      <o.8..5> CLKOUTSEL1
//        <0=> 0: DISABLED = Disabled
//        <1=> 1: ULFRCO = ULFRCO (directly from oscillator)
//        <2=> 2: LFRCO = LFRCO (directly from oscillator)
//        <3=> 3: LFXO = LFXO (directly from oscillator)
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: HFXO = HFXO (directly from oscillator)
//        <7=> 7: HFEXPCLK = HFEXPCLK
//        <8=> 8: 
//        <9=> 9: ULFRCOQ = ULFRCO (qualified)
//        <10=> 10: LFRCOQ = LFRCO (qualified)
//        <11=> 11: LFXOQ = LFXO (qualified)
//        <12=> 12: HFRCOQ = HFRCO (qualified)
//        <13=> 13: AUXHFRCOQ = AUXHFRCO (qualified)
//        <14=> 14: HFXOQ = HFXO (qualified)
//        <15=> 15: HFSRCCLK = HFSRCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CMU_CTRL_WSHFLE  ----------------------------------
// SVD Line: 2885

//  <item> SFDITEM_FIELD__CMU_CTRL_WSHFLE
//    <name> WSHFLE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400E4000) Wait State for High-Frequency LE Interface </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_CTRL ) </loc>
//      <o.16..16> WSHFLE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_CTRL_HFPERCLKEN  --------------------------------
// SVD Line: 2892

//  <item> SFDITEM_FIELD__CMU_CTRL_HFPERCLKEN
//    <name> HFPERCLKEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E4000) HFPERCLK Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_CTRL ) </loc>
//      <o.20..20> HFPERCLKEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CMU_CTRL  ------------------------------------
// SVD Line: 2728

//  <rtree> SFDITEM_REG__CMU_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4000) CMU Control Register </i>
//    <loc> ( (unsigned int)((CMU_CTRL >> 0) & 0xFFFFFFFF), ((CMU_CTRL = (CMU_CTRL & ~(0x1101EFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1101EF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_CTRL_CLKOUTSEL0 </item>
//    <item> SFDITEM_FIELD__CMU_CTRL_CLKOUTSEL1 </item>
//    <item> SFDITEM_FIELD__CMU_CTRL_WSHFLE </item>
//    <item> SFDITEM_FIELD__CMU_CTRL_HFPERCLKEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_HFRCOCTRL  ------------------------------
// SVD Line: 2901

unsigned int CMU_HFRCOCTRL __AT (0x400E4010);



// ----------------------------  Field Item: CMU_HFRCOCTRL_TUNING  --------------------------------
// SVD Line: 2910

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_TUNING
//    <name> TUNING </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x400E4010) HFRCO Tuning Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFRCOCTRL >> 0) & 0x7F), ((CMU_HFRCOCTRL = (CMU_HFRCOCTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CMU_HFRCOCTRL_FINETUNING  ------------------------------
// SVD Line: 2917

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_FINETUNING
//    <name> FINETUNING </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400E4010) HFRCO Fine Tuning Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFRCOCTRL >> 8) & 0x3F), ((CMU_HFRCOCTRL = (CMU_HFRCOCTRL & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: CMU_HFRCOCTRL_FREQRANGE  ------------------------------
// SVD Line: 2924

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_FREQRANGE
//    <name> FREQRANGE </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x400E4010) HFRCO Frequency Range </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFRCOCTRL >> 16) & 0x1F), ((CMU_HFRCOCTRL = (CMU_HFRCOCTRL & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFRCOCTRL_CMPBIAS  -------------------------------
// SVD Line: 2931

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_CMPBIAS
//    <name> CMPBIAS </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x400E4010) HFRCO Comparator Bias Current </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFRCOCTRL >> 21) & 0x7), ((CMU_HFRCOCTRL = (CMU_HFRCOCTRL & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMU_HFRCOCTRL_LDOHP  --------------------------------
// SVD Line: 2938

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_LDOHP
//    <name> LDOHP </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400E4010) HFRCO LDO High Power Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFRCOCTRL ) </loc>
//      <o.24..24> LDOHP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFRCOCTRL_CLKDIV  --------------------------------
// SVD Line: 2945

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_CLKDIV
//    <name> CLKDIV </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400E4010) \nLocally Divide HFRCO Clock Output\n0 : DIV1 = Divide by 1.\n1 : DIV2 = Divide by 2.\n2 : DIV4 = Divide by 4.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFRCOCTRL ) </loc>
//      <o.26..25> CLKDIV
//        <0=> 0: DIV1 = Divide by 1.
//        <1=> 1: DIV2 = Divide by 2.
//        <2=> 2: DIV4 = Divide by 4.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -------------------------  Field Item: CMU_HFRCOCTRL_FINETUNINGEN  -----------------------------
// SVD Line: 2969

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_FINETUNINGEN
//    <name> FINETUNINGEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E4010) Enable Reference for Fine Tuning </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFRCOCTRL ) </loc>
//      <o.27..27> FINETUNINGEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFRCOCTRL_VREFTC  --------------------------------
// SVD Line: 2976

//  <item> SFDITEM_FIELD__CMU_HFRCOCTRL_VREFTC
//    <name> VREFTC </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400E4010) HFRCO Temperature Coefficient Trim on Comparator Reference </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFRCOCTRL >> 28) & 0xF), ((CMU_HFRCOCTRL = (CMU_HFRCOCTRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: CMU_HFRCOCTRL  ---------------------------------
// SVD Line: 2901

//  <rtree> SFDITEM_REG__CMU_HFRCOCTRL
//    <name> HFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4010) HFRCO Control Register </i>
//    <loc> ( (unsigned int)((CMU_HFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_HFRCOCTRL = (CMU_HFRCOCTRL & ~(0xFFFF3F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF3F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_TUNING </item>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_FINETUNING </item>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_FREQRANGE </item>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_CMPBIAS </item>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_LDOHP </item>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_CLKDIV </item>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_FINETUNINGEN </item>
//    <item> SFDITEM_FIELD__CMU_HFRCOCTRL_VREFTC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_AUXHFRCOCTRL  ----------------------------
// SVD Line: 2985

unsigned int CMU_AUXHFRCOCTRL __AT (0x400E4018);



// ---------------------------  Field Item: CMU_AUXHFRCOCTRL_TUNING  ------------------------------
// SVD Line: 2994

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_TUNING
//    <name> TUNING </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x400E4018) AUXHFRCO Tuning Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_AUXHFRCOCTRL >> 0) & 0x7F), ((CMU_AUXHFRCOCTRL = (CMU_AUXHFRCOCTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: CMU_AUXHFRCOCTRL_FINETUNING  ----------------------------
// SVD Line: 3001

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_FINETUNING
//    <name> FINETUNING </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400E4018) AUXHFRCO Fine Tuning Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_AUXHFRCOCTRL >> 8) & 0x3F), ((CMU_AUXHFRCOCTRL = (CMU_AUXHFRCOCTRL & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: CMU_AUXHFRCOCTRL_FREQRANGE  -----------------------------
// SVD Line: 3008

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_FREQRANGE
//    <name> FREQRANGE </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x400E4018) AUXHFRCO Frequency Range </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_AUXHFRCOCTRL >> 16) & 0x1F), ((CMU_AUXHFRCOCTRL = (CMU_AUXHFRCOCTRL & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CMU_AUXHFRCOCTRL_CMPBIAS  ------------------------------
// SVD Line: 3015

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_CMPBIAS
//    <name> CMPBIAS </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x400E4018) AUXHFRCO Comparator Bias Current </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_AUXHFRCOCTRL >> 21) & 0x7), ((CMU_AUXHFRCOCTRL = (CMU_AUXHFRCOCTRL & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: CMU_AUXHFRCOCTRL_LDOHP  -------------------------------
// SVD Line: 3022

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_LDOHP
//    <name> LDOHP </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400E4018) AUXHFRCO LDO High Power Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_AUXHFRCOCTRL ) </loc>
//      <o.24..24> LDOHP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_AUXHFRCOCTRL_CLKDIV  ------------------------------
// SVD Line: 3029

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_CLKDIV
//    <name> CLKDIV </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400E4018) \nLocally Divide AUXHFRCO Clock Output\n0 : DIV1 = Divide by 1.\n1 : DIV2 = Divide by 2.\n2 : DIV4 = Divide by 4.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_AUXHFRCOCTRL ) </loc>
//      <o.26..25> CLKDIV
//        <0=> 0: DIV1 = Divide by 1.
//        <1=> 1: DIV2 = Divide by 2.
//        <2=> 2: DIV4 = Divide by 4.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------  Field Item: CMU_AUXHFRCOCTRL_FINETUNINGEN  ---------------------------
// SVD Line: 3053

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_FINETUNINGEN
//    <name> FINETUNINGEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E4018) Enable Reference for Fine Tuning </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_AUXHFRCOCTRL ) </loc>
//      <o.27..27> FINETUNINGEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_AUXHFRCOCTRL_VREFTC  ------------------------------
// SVD Line: 3060

//  <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_VREFTC
//    <name> VREFTC </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400E4018) AUXHFRCO Temperature Coefficient Trim on Comparator Reference </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_AUXHFRCOCTRL >> 28) & 0xF), ((CMU_AUXHFRCOCTRL = (CMU_AUXHFRCOCTRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_AUXHFRCOCTRL  --------------------------------
// SVD Line: 2985

//  <rtree> SFDITEM_REG__CMU_AUXHFRCOCTRL
//    <name> AUXHFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4018) AUXHFRCO Control Register </i>
//    <loc> ( (unsigned int)((CMU_AUXHFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_AUXHFRCOCTRL = (CMU_AUXHFRCOCTRL & ~(0xFFFF3F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF3F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_TUNING </item>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_FINETUNING </item>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_FREQRANGE </item>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_CMPBIAS </item>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_LDOHP </item>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_CLKDIV </item>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_FINETUNINGEN </item>
//    <item> SFDITEM_FIELD__CMU_AUXHFRCOCTRL_VREFTC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFRCOCTRL  ------------------------------
// SVD Line: 3069

unsigned int CMU_LFRCOCTRL __AT (0x400E4020);



// ----------------------------  Field Item: CMU_LFRCOCTRL_TUNING  --------------------------------
// SVD Line: 3078

//  <item> SFDITEM_FIELD__CMU_LFRCOCTRL_TUNING
//    <name> TUNING </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x400E4020) LFRCO Tuning Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((CMU_LFRCOCTRL >> 0) & 0x1FF), ((CMU_LFRCOCTRL = (CMU_LFRCOCTRL & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CMU_LFRCOCTRL_ENVREF  --------------------------------
// SVD Line: 3085

//  <item> SFDITEM_FIELD__CMU_LFRCOCTRL_ENVREF
//    <name> ENVREF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400E4020) Enable Duty Cycling of Vref </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFRCOCTRL ) </loc>
//      <o.16..16> ENVREF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_LFRCOCTRL_ENCHOP  --------------------------------
// SVD Line: 3092

//  <item> SFDITEM_FIELD__CMU_LFRCOCTRL_ENCHOP
//    <name> ENCHOP </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400E4020) Enable Comparator Chopping </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFRCOCTRL ) </loc>
//      <o.17..17> ENCHOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_LFRCOCTRL_ENDEM  --------------------------------
// SVD Line: 3099

//  <item> SFDITEM_FIELD__CMU_LFRCOCTRL_ENDEM
//    <name> ENDEM </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400E4020) Enable Dynamic Element Matching </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFRCOCTRL ) </loc>
//      <o.18..18> ENDEM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_LFRCOCTRL_TIMEOUT  -------------------------------
// SVD Line: 3106

//  <item> SFDITEM_FIELD__CMU_LFRCOCTRL_TIMEOUT
//    <name> TIMEOUT </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E4020) \nLFRCO Timeout\n0 : 2CYCLES = Timeout period of 2 cycles\n1 : 16CYCLES = Timeout period of 16 cycles\n2 : 32CYCLES = Timeout period of 32 cycles\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFRCOCTRL ) </loc>
//      <o.25..24> TIMEOUT
//        <0=> 0: 2CYCLES = Timeout period of 2 cycles
//        <1=> 1: 16CYCLES = Timeout period of 16 cycles
//        <2=> 2: 32CYCLES = Timeout period of 32 cycles
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: CMU_LFRCOCTRL_GMCCURTUNE  ------------------------------
// SVD Line: 3130

//  <item> SFDITEM_FIELD__CMU_LFRCOCTRL_GMCCURTUNE
//    <name> GMCCURTUNE </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400E4020) Tuning of Gmc Current </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_LFRCOCTRL >> 28) & 0xF), ((CMU_LFRCOCTRL = (CMU_LFRCOCTRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFRCOCTRL  ---------------------------------
// SVD Line: 3069

//  <rtree> SFDITEM_REG__CMU_LFRCOCTRL
//    <name> LFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4020) LFRCO Control Register </i>
//    <loc> ( (unsigned int)((CMU_LFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_LFRCOCTRL = (CMU_LFRCOCTRL & ~(0xF30701FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF30701FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFRCOCTRL_TUNING </item>
//    <item> SFDITEM_FIELD__CMU_LFRCOCTRL_ENVREF </item>
//    <item> SFDITEM_FIELD__CMU_LFRCOCTRL_ENCHOP </item>
//    <item> SFDITEM_FIELD__CMU_LFRCOCTRL_ENDEM </item>
//    <item> SFDITEM_FIELD__CMU_LFRCOCTRL_TIMEOUT </item>
//    <item> SFDITEM_FIELD__CMU_LFRCOCTRL_GMCCURTUNE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_HFXOCTRL  ------------------------------
// SVD Line: 3139

unsigned int CMU_HFXOCTRL __AT (0x400E4024);



// ------------------------------  Field Item: CMU_HFXOCTRL_MODE  ---------------------------------
// SVD Line: 3148

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E4024) HFXO Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.0..0> MODE
//    </check>
//  </item>
//  


// ----------------------  Field Item: CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE  --------------------------
// SVD Line: 3155

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE
//    <name> PEAKDETSHUNTOPTMODE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x400E4024) \nHFXO Automatic Peak Detection and Shunt Current Optimization Mode\n0 : AUTOCMD = Automatic control of HFXO peak detection and shunt optimization sequences. CMU_CMD HFXOPEAKDETSTART and HFXOSHUNTOPTSTART can also be used.\n1 : CMD = CMU_CMD HFXOPEAKDETSTART and HFXOSHUNTOPTSTART can be used to trigger peak detection and shunt optimization sequences.\n2 : MANUAL = CMU_HFXOSTEADYSTATECTRL IBTRIMXOCORE, REGISH, REGSELILOW, and PEAKDETEN are under full software control and are allowed to be changed once HFXO is ready.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.5..4> PEAKDETSHUNTOPTMODE
//        <0=> 0: AUTOCMD = Automatic control of HFXO peak detection and shunt optimization sequences. CMU_CMD HFXOPEAKDETSTART and HFXOSHUNTOPTSTART can also be used.
//        <1=> 1: CMD = CMU_CMD HFXOPEAKDETSTART and HFXOSHUNTOPTSTART can be used to trigger peak detection and shunt optimization sequences.
//        <2=> 2: MANUAL = CMU_HFXOSTEADYSTATECTRL IBTRIMXOCORE, REGISH, REGSELILOW, and PEAKDETEN are under full software control and are allowed to be changed once HFXO is ready.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFXOCTRL_LOWPOWER  -------------------------------
// SVD Line: 3179

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_LOWPOWER
//    <name> LOWPOWER </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E4024) Low Power Mode Control </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.8..8> LOWPOWER
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFXOCTRL_XTI2GND  --------------------------------
// SVD Line: 3186

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_XTI2GND
//    <name> XTI2GND </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400E4024) Clamp HFXTAL_N Pin to Ground When HFXO Oscillator is Off </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.9..9> XTI2GND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFXOCTRL_XTO2GND  --------------------------------
// SVD Line: 3193

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_XTO2GND
//    <name> XTO2GND </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400E4024) Clamp HFXTAL_P Pin to Ground When HFXO Oscillator is Off </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.10..10> XTO2GND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_HFXOCTRL_LFTIMEOUT  -------------------------------
// SVD Line: 3200

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_LFTIMEOUT
//    <name> LFTIMEOUT </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x400E4024) \nHFXO Low Frequency Timeout\n0 : 0CYCLES = Timeout period of 0 cycles (disabled)\n1 : 2CYCLES = Timeout period of 2 cycles\n2 : 4CYCLES = Timeout period of 4 cycles\n3 : 16CYCLES = Timeout period of 16 cycles\n4 : 32CYCLES = Timeout period of 32 cycles\n5 : 64CYCLES = Timeout period of 64 cycles\n6 : 1KCYCLES = Timeout period of 1024 cycles\n7 : 4KCYCLES = Timeout period of 4096 cycles </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.26..24> LFTIMEOUT
//        <0=> 0: 0CYCLES = Timeout period of 0 cycles (disabled)
//        <1=> 1: 2CYCLES = Timeout period of 2 cycles
//        <2=> 2: 4CYCLES = Timeout period of 4 cycles
//        <3=> 3: 16CYCLES = Timeout period of 16 cycles
//        <4=> 4: 32CYCLES = Timeout period of 32 cycles
//        <5=> 5: 64CYCLES = Timeout period of 64 cycles
//        <6=> 6: 1KCYCLES = Timeout period of 1024 cycles
//        <7=> 7: 4KCYCLES = Timeout period of 4096 cycles
//    </combo>
//  </item>
//  


// ------------------------  Field Item: CMU_HFXOCTRL_AUTOSTARTEM0EM1  ----------------------------
// SVD Line: 3249

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_AUTOSTARTEM0EM1
//    <name> AUTOSTARTEM0EM1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E4024) Automatically Start of HFXO Upon EM0/EM1 Entry From EM2/EM3 </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.28..28> AUTOSTARTEM0EM1
//    </check>
//  </item>
//  


// -----------------------  Field Item: CMU_HFXOCTRL_AUTOSTARTSELEM0EM1  --------------------------
// SVD Line: 3256

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL_AUTOSTARTSELEM0EM1
//    <name> AUTOSTARTSELEM0EM1 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400E4024) Automatically Start and Select of HFXO Upon EM0/EM1 Entry From EM2/EM3 </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL ) </loc>
//      <o.29..29> AUTOSTARTSELEM0EM1
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_HFXOCTRL  ----------------------------------
// SVD Line: 3139

//  <rtree> SFDITEM_REG__CMU_HFXOCTRL
//    <name> HFXOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4024) HFXO Control Register </i>
//    <loc> ( (unsigned int)((CMU_HFXOCTRL >> 0) & 0xFFFFFFFF), ((CMU_HFXOCTRL = (CMU_HFXOCTRL & ~(0x37000731UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x37000731) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_MODE </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_PEAKDETSHUNTOPTMODE </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_LOWPOWER </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_XTI2GND </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_XTO2GND </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_LFTIMEOUT </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_AUTOSTARTEM0EM1 </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL_AUTOSTARTSELEM0EM1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_HFXOCTRL1  ------------------------------
// SVD Line: 3265

unsigned int CMU_HFXOCTRL1 __AT (0x400E4028);



// --------------------------  Field Item: CMU_HFXOCTRL1_PEAKDETTHR  ------------------------------
// SVD Line: 3274

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL1_PEAKDETTHR
//    <name> PEAKDETTHR </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E4028) Sets the Peak Detector amplitude detection threshold levels </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOCTRL1 >> 0) & 0x7), ((CMU_HFXOCTRL1 = (CMU_HFXOCTRL1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFXOCTRL1_REGLVL  --------------------------------
// SVD Line: 3281

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL1_REGLVL
//    <name> REGLVL </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400E4028) Reserved for internal use. Do not change. </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOCTRL1 >> 4) & 0x7), ((CMU_HFXOCTRL1 = (CMU_HFXOCTRL1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: CMU_HFXOCTRL1_XTIBIASEN  ------------------------------
// SVD Line: 3288

//  <item> SFDITEM_FIELD__CMU_HFXOCTRL1_XTIBIASEN
//    <name> XTIBIASEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400E4028) Reserved for internal use. Do not change. </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOCTRL1 ) </loc>
//      <o.9..9> XTIBIASEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_HFXOCTRL1  ---------------------------------
// SVD Line: 3265

//  <rtree> SFDITEM_REG__CMU_HFXOCTRL1
//    <name> HFXOCTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4028) HFXO Control 1 </i>
//    <loc> ( (unsigned int)((CMU_HFXOCTRL1 >> 0) & 0xFFFFFFFF), ((CMU_HFXOCTRL1 = (CMU_HFXOCTRL1 & ~(0x277UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x277) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL1_PEAKDETTHR </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL1_REGLVL </item>
//    <item> SFDITEM_FIELD__CMU_HFXOCTRL1_XTIBIASEN </item>
//  </rtree>
//  


// -----------------------  Register Item Address: CMU_HFXOSTARTUPCTRL  ---------------------------
// SVD Line: 3297

unsigned int CMU_HFXOSTARTUPCTRL __AT (0x400E402C);



// ----------------------  Field Item: CMU_HFXOSTARTUPCTRL_IBTRIMXOCORE  --------------------------
// SVD Line: 3306

//  <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_IBTRIMXOCORE
//    <name> IBTRIMXOCORE </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x400E402C) Sets the Startup Oscillator Core Bias Current </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOSTARTUPCTRL >> 0) & 0x7F), ((CMU_HFXOSTARTUPCTRL = (CMU_HFXOSTARTUPCTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CMU_HFXOSTARTUPCTRL_CTUNE  -----------------------------
// SVD Line: 3313

//  <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_CTUNE
//    <name> CTUNE </name>
//    <rw> 
//    <i> [Bits 19..11] RW (@ 0x400E402C) Sets Oscillator Tuning Capacitance </i>
//    <edit> 
//      <loc> ( (unsigned short)((CMU_HFXOSTARTUPCTRL >> 11) & 0x1FF), ((CMU_HFXOSTARTUPCTRL = (CMU_HFXOSTARTUPCTRL & ~(0x1FFUL << 11 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: CMU_HFXOSTARTUPCTRL_RESERVED0  ---------------------------
// SVD Line: 3320

//  <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_RESERVED0
//    <name> RESERVED0 </name>
//    <rw> 
//    <i> [Bits 27..21] RW (@ 0x400E402C) This Field is Reserved. It Should Be Set to 0x9 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOSTARTUPCTRL >> 21) & 0x7F), ((CMU_HFXOSTARTUPCTRL = (CMU_HFXOSTARTUPCTRL & ~(0x7FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: CMU_HFXOSTARTUPCTRL_RESERVED1  ---------------------------
// SVD Line: 3327

//  <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_RESERVED1
//    <name> RESERVED1 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400E402C) Sets the Regulator Output Current Level (shunt Regulator) </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOSTARTUPCTRL >> 28) & 0xF), ((CMU_HFXOSTARTUPCTRL = (CMU_HFXOSTARTUPCTRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CMU_HFXOSTARTUPCTRL  ------------------------------
// SVD Line: 3297

//  <rtree> SFDITEM_REG__CMU_HFXOSTARTUPCTRL
//    <name> HFXOSTARTUPCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E402C) HFXO Startup Control </i>
//    <loc> ( (unsigned int)((CMU_HFXOSTARTUPCTRL >> 0) & 0xFFFFFFFF), ((CMU_HFXOSTARTUPCTRL = (CMU_HFXOSTARTUPCTRL & ~(0xFFEFF87FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFEFF87F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_IBTRIMXOCORE </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_CTUNE </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_RESERVED0 </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTARTUPCTRL_RESERVED1 </item>
//  </rtree>
//  


// ---------------------  Register Item Address: CMU_HFXOSTEADYSTATECTRL  -------------------------
// SVD Line: 3336

unsigned int CMU_HFXOSTEADYSTATECTRL __AT (0x400E4030);



// --------------------  Field Item: CMU_HFXOSTEADYSTATECTRL_IBTRIMXOCORE  ------------------------
// SVD Line: 3345

//  <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_IBTRIMXOCORE
//    <name> IBTRIMXOCORE </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x400E4030) Sets the Steady State Oscillator Core Bias Current. </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOSTEADYSTATECTRL >> 0) & 0x7F), ((CMU_HFXOSTEADYSTATECTRL = (CMU_HFXOSTEADYSTATECTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: CMU_HFXOSTEADYSTATECTRL_REGISH  ---------------------------
// SVD Line: 3352

//  <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_REGISH
//    <name> REGISH </name>
//    <rw> 
//    <i> [Bits 10..7] RW (@ 0x400E4030) Sets the Steady State Regulator Output Current Level (shunt Regulator) </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOSTEADYSTATECTRL >> 7) & 0xF), ((CMU_HFXOSTEADYSTATECTRL = (CMU_HFXOSTEADYSTATECTRL & ~(0xFUL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: CMU_HFXOSTEADYSTATECTRL_CTUNE  ---------------------------
// SVD Line: 3359

//  <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_CTUNE
//    <name> CTUNE </name>
//    <rw> 
//    <i> [Bits 19..11] RW (@ 0x400E4030) Sets Oscillator Tuning Capacitance </i>
//    <edit> 
//      <loc> ( (unsigned short)((CMU_HFXOSTEADYSTATECTRL >> 11) & 0x1FF), ((CMU_HFXOSTEADYSTATECTRL = (CMU_HFXOSTEADYSTATECTRL & ~(0x1FFUL << 11 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: CMU_HFXOSTEADYSTATECTRL_REGSELILOW  -------------------------
// SVD Line: 3366

//  <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_REGSELILOW
//    <name> REGSELILOW </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E4030) Controls Regulator Minimum Shunt Current Detection Relative to Nominal </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOSTEADYSTATECTRL >> 24) & 0x3), ((CMU_HFXOSTEADYSTATECTRL = (CMU_HFXOSTEADYSTATECTRL & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: CMU_HFXOSTEADYSTATECTRL_PEAKDETEN  -------------------------
// SVD Line: 3373

//  <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_PEAKDETEN
//    <name> PEAKDETEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E4030) Enables Oscillator Peak Detectors </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFXOSTEADYSTATECTRL ) </loc>
//      <o.26..26> PEAKDETEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: CMU_HFXOSTEADYSTATECTRL_REGISHUPPER  ------------------------
// SVD Line: 3380

//  <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_REGISHUPPER
//    <name> REGISHUPPER </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400E4030) Set Regulator Output Current Level (shunt Regulator). Ish = 120uA + REGISHUPPER X 120uA </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOSTEADYSTATECTRL >> 28) & 0xF), ((CMU_HFXOSTEADYSTATECTRL = (CMU_HFXOSTEADYSTATECTRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: CMU_HFXOSTEADYSTATECTRL  ----------------------------
// SVD Line: 3336

//  <rtree> SFDITEM_REG__CMU_HFXOSTEADYSTATECTRL
//    <name> HFXOSTEADYSTATECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4030) HFXO Steady State Control </i>
//    <loc> ( (unsigned int)((CMU_HFXOSTEADYSTATECTRL >> 0) & 0xFFFFFFFF), ((CMU_HFXOSTEADYSTATECTRL = (CMU_HFXOSTEADYSTATECTRL & ~(0xF70FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF70FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_IBTRIMXOCORE </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_REGISH </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_CTUNE </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_REGSELILOW </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_PEAKDETEN </item>
//    <item> SFDITEM_FIELD__CMU_HFXOSTEADYSTATECTRL_REGISHUPPER </item>
//  </rtree>
//  


// -----------------------  Register Item Address: CMU_HFXOTIMEOUTCTRL  ---------------------------
// SVD Line: 3389

unsigned int CMU_HFXOTIMEOUTCTRL __AT (0x400E4034);



// ---------------------  Field Item: CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT  -------------------------
// SVD Line: 3398

//  <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT
//    <name> STARTUPTIMEOUT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E4034) \nWait Duration in HFXO Startup Enable Wait State\n0 : 2CYCLES = Timeout period of 2 cycles\n1 : 4CYCLES = Timeout period of 4 cycles\n2 : 16CYCLES = Timeout period of 16 cycles\n3 : 32CYCLES = Timeout period of 32 cycles\n4 : 256CYCLES = Timeout period of 256 cycles\n5 : 1KCYCLES = Timeout period of 1024 cycles\n6 : 2KCYCLES = Timeout period of 2048 cycles\n7 : 4KCYCLES = Timeout period of 4096 cycles\n8 : 8KCYCLES = Timeout period of 8192 cycles\n9 : 16KCYCLES = Timeout period of 16384 cycles\n10 : 32KCYCLES = Timeout period of 32768 cycles\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFXOTIMEOUTCTRL ) </loc>
//      <o.3..0> STARTUPTIMEOUT
//        <0=> 0: 2CYCLES = Timeout period of 2 cycles
//        <1=> 1: 4CYCLES = Timeout period of 4 cycles
//        <2=> 2: 16CYCLES = Timeout period of 16 cycles
//        <3=> 3: 32CYCLES = Timeout period of 32 cycles
//        <4=> 4: 256CYCLES = Timeout period of 256 cycles
//        <5=> 5: 1KCYCLES = Timeout period of 1024 cycles
//        <6=> 6: 2KCYCLES = Timeout period of 2048 cycles
//        <7=> 7: 4KCYCLES = Timeout period of 4096 cycles
//        <8=> 8: 8KCYCLES = Timeout period of 8192 cycles
//        <9=> 9: 16KCYCLES = Timeout period of 16384 cycles
//        <10=> 10: 32KCYCLES = Timeout period of 32768 cycles
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ----------------------  Field Item: CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT  -------------------------
// SVD Line: 3462

//  <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT
//    <name> STEADYTIMEOUT </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400E4034) \nWait Duration in HFXO Startup Steady Wait State\n0 : 2CYCLES = Timeout period of 2 cycles\n1 : 4CYCLES = Timeout period of 4 cycles\n2 : 16CYCLES = Timeout period of 16 cycles\n3 : 32CYCLES = Timeout period of 32 cycles\n4 : 256CYCLES = Timeout period of 256 cycles\n5 : 1KCYCLES = Timeout period of 1024 cycles\n6 : 2KCYCLES = Timeout period of 2048 cycles\n7 : 4KCYCLES = Timeout period of 4096 cycles\n8 : 8KCYCLES = Timeout period of 8192 cycles\n9 : 16KCYCLES = Timeout period of 16384 cycles\n10 : 32KCYCLES = Timeout period of 32768 cycles\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFXOTIMEOUTCTRL ) </loc>
//      <o.7..4> STEADYTIMEOUT
//        <0=> 0: 2CYCLES = Timeout period of 2 cycles
//        <1=> 1: 4CYCLES = Timeout period of 4 cycles
//        <2=> 2: 16CYCLES = Timeout period of 16 cycles
//        <3=> 3: 32CYCLES = Timeout period of 32 cycles
//        <4=> 4: 256CYCLES = Timeout period of 256 cycles
//        <5=> 5: 1KCYCLES = Timeout period of 1024 cycles
//        <6=> 6: 2KCYCLES = Timeout period of 2048 cycles
//        <7=> 7: 4KCYCLES = Timeout period of 4096 cycles
//        <8=> 8: 8KCYCLES = Timeout period of 8192 cycles
//        <9=> 9: 16KCYCLES = Timeout period of 16384 cycles
//        <10=> 10: 32KCYCLES = Timeout period of 32768 cycles
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------  Field Item: CMU_HFXOTIMEOUTCTRL_RESERVED2  ---------------------------
// SVD Line: 3526

//  <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_RESERVED2
//    <name> RESERVED2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400E4034) Wait Duration in HFXO Warm Startup Steady Wait State </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOTIMEOUTCTRL >> 8) & 0xF), ((CMU_HFXOTIMEOUTCTRL = (CMU_HFXOTIMEOUTCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT  -------------------------
// SVD Line: 3533

//  <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT
//    <name> PEAKDETTIMEOUT </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400E4034) \nWait Duration in HFXO Peak Detection Wait State\n0 : 2CYCLES = Timeout period of 2 cycles\n1 : 4CYCLES = Timeout period of 4 cycles\n2 : 16CYCLES = Timeout period of 16 cycles\n3 : 32CYCLES = Timeout period of 32 cycles\n4 : 256CYCLES = Timeout period of 256 cycles\n5 : 1KCYCLES = Timeout period of 1024 cycles\n6 : 2KCYCLES = Timeout period of 2048 cycles\n7 : 4KCYCLES = Timeout period of 4096 cycles\n8 : 8KCYCLES = Timeout period of 8192 cycles\n9 : 16KCYCLES = Timeout period of 16384 cycles\n10 : 32KCYCLES = Timeout period of 32768 cycles\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFXOTIMEOUTCTRL ) </loc>
//      <o.15..12> PEAKDETTIMEOUT
//        <0=> 0: 2CYCLES = Timeout period of 2 cycles
//        <1=> 1: 4CYCLES = Timeout period of 4 cycles
//        <2=> 2: 16CYCLES = Timeout period of 16 cycles
//        <3=> 3: 32CYCLES = Timeout period of 32 cycles
//        <4=> 4: 256CYCLES = Timeout period of 256 cycles
//        <5=> 5: 1KCYCLES = Timeout period of 1024 cycles
//        <6=> 6: 2KCYCLES = Timeout period of 2048 cycles
//        <7=> 7: 4KCYCLES = Timeout period of 4096 cycles
//        <8=> 8: 8KCYCLES = Timeout period of 8192 cycles
//        <9=> 9: 16KCYCLES = Timeout period of 16384 cycles
//        <10=> 10: 32KCYCLES = Timeout period of 32768 cycles
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT  ------------------------
// SVD Line: 3597

//  <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT
//    <name> SHUNTOPTTIMEOUT </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E4034) \nWait Duration in HFXO Shunt Current Optimization Wait State\n0 : 2CYCLES = Timeout period of 2 cycles\n1 : 4CYCLES = Timeout period of 4 cycles\n2 : 16CYCLES = Timeout period of 16 cycles\n3 : 32CYCLES = Timeout period of 32 cycles\n4 : 256CYCLES = Timeout period of 256 cycles\n5 : 1KCYCLES = Timeout period of 1024 cycles\n6 : 2KCYCLES = Timeout period of 2048 cycles\n7 : 4KCYCLES = Timeout period of 4096 cycles\n8 : 8KCYCLES = Timeout period of 8192 cycles\n9 : 16KCYCLES = Timeout period of 16384 cycles\n10 : 32KCYCLES = Timeout period of 32768 cycles\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFXOTIMEOUTCTRL ) </loc>
//      <o.19..16> SHUNTOPTTIMEOUT
//        <0=> 0: 2CYCLES = Timeout period of 2 cycles
//        <1=> 1: 4CYCLES = Timeout period of 4 cycles
//        <2=> 2: 16CYCLES = Timeout period of 16 cycles
//        <3=> 3: 32CYCLES = Timeout period of 32 cycles
//        <4=> 4: 256CYCLES = Timeout period of 256 cycles
//        <5=> 5: 1KCYCLES = Timeout period of 1024 cycles
//        <6=> 6: 2KCYCLES = Timeout period of 2048 cycles
//        <7=> 7: 4KCYCLES = Timeout period of 4096 cycles
//        <8=> 8: 8KCYCLES = Timeout period of 8192 cycles
//        <9=> 9: 16KCYCLES = Timeout period of 16384 cycles
//        <10=> 10: 32KCYCLES = Timeout period of 32768 cycles
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: CMU_HFXOTIMEOUTCTRL  ------------------------------
// SVD Line: 3389

//  <rtree> SFDITEM_REG__CMU_HFXOTIMEOUTCTRL
//    <name> HFXOTIMEOUTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4034) HFXO Timeout Control </i>
//    <loc> ( (unsigned int)((CMU_HFXOTIMEOUTCTRL >> 0) & 0xFFFFFFFF), ((CMU_HFXOTIMEOUTCTRL = (CMU_HFXOTIMEOUTCTRL & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_STARTUPTIMEOUT </item>
//    <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_STEADYTIMEOUT </item>
//    <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_RESERVED2 </item>
//    <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_PEAKDETTIMEOUT </item>
//    <item> SFDITEM_FIELD__CMU_HFXOTIMEOUTCTRL_SHUNTOPTTIMEOUT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_LFXOCTRL  ------------------------------
// SVD Line: 3663

unsigned int CMU_LFXOCTRL __AT (0x400E4038);



// -----------------------------  Field Item: CMU_LFXOCTRL_TUNING  --------------------------------
// SVD Line: 3672

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_TUNING
//    <name> TUNING </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x400E4038) LFXO Internal Capacitor Array Tuning Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_LFXOCTRL >> 0) & 0x7F), ((CMU_LFXOCTRL = (CMU_LFXOCTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CMU_LFXOCTRL_MODE  ---------------------------------
// SVD Line: 3679

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400E4038) \nLFXO Mode\n0 : XTAL = 32768 Hz crystal oscillator\n1 : BUFEXTCLK = An AC coupled buffer is coupled in series with LFXTAL_N pin, suitable for external sinus wave (32768 Hz).\n2 : DIGEXTCLK = Digital external clock on LFXTAL_N pin. Oscillator is effectively bypassed.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFXOCTRL ) </loc>
//      <o.9..8> MODE
//        <0=> 0: XTAL = 32768 Hz crystal oscillator
//        <1=> 1: BUFEXTCLK = An AC coupled buffer is coupled in series with LFXTAL_N pin, suitable for external sinus wave (32768 Hz).
//        <2=> 2: DIGEXTCLK = Digital external clock on LFXTAL_N pin. Oscillator is effectively bypassed.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CMU_LFXOCTRL_GAIN  ---------------------------------
// SVD Line: 3703

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_GAIN
//    <name> GAIN </name>
//    <rw> 
//    <i> [Bits 12..11] RW (@ 0x400E4038) LFXO Startup Gain </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_LFXOCTRL >> 11) & 0x3), ((CMU_LFXOCTRL = (CMU_LFXOCTRL & ~(0x3UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CMU_LFXOCTRL_HIGHAMPL  -------------------------------
// SVD Line: 3710

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_HIGHAMPL
//    <name> HIGHAMPL </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400E4038) LFXO High XTAL Oscillation Amplitude Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFXOCTRL ) </loc>
//      <o.14..14> HIGHAMPL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_LFXOCTRL_AGC  ----------------------------------
// SVD Line: 3717

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_AGC
//    <name> AGC </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E4038) LFXO AGC Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFXOCTRL ) </loc>
//      <o.15..15> AGC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_LFXOCTRL_CUR  ----------------------------------
// SVD Line: 3724

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_CUR
//    <name> CUR </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E4038) LFXO Current Trim </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_LFXOCTRL >> 16) & 0x3), ((CMU_LFXOCTRL = (CMU_LFXOCTRL & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMU_LFXOCTRL_BUFCUR  --------------------------------
// SVD Line: 3731

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_BUFCUR
//    <name> BUFCUR </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E4038) LFXO Buffer Bias Current </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFXOCTRL ) </loc>
//      <o.20..20> BUFCUR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_LFXOCTRL_TIMEOUT  --------------------------------
// SVD Line: 3738

//  <item> SFDITEM_FIELD__CMU_LFXOCTRL_TIMEOUT
//    <name> TIMEOUT </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x400E4038) \nLFXO Timeout\n0 : 2CYCLES = Timeout period of 2 cycles\n1 : 256CYCLES = Timeout period of 256 cycles\n2 : 1KCYCLES = Timeout period of 1024 cycles\n3 : 2KCYCLES = Timeout period of 2048 cycles\n4 : 4KCYCLES = Timeout period of 4096 cycles\n5 : 8KCYCLES = Timeout period of 8192 cycles\n6 : 16KCYCLES = Timeout period of 16384 cycles\n7 : 32KCYCLES = Timeout period of 32768 cycles </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFXOCTRL ) </loc>
//      <o.26..24> TIMEOUT
//        <0=> 0: 2CYCLES = Timeout period of 2 cycles
//        <1=> 1: 256CYCLES = Timeout period of 256 cycles
//        <2=> 2: 1KCYCLES = Timeout period of 1024 cycles
//        <3=> 3: 2KCYCLES = Timeout period of 2048 cycles
//        <4=> 4: 4KCYCLES = Timeout period of 4096 cycles
//        <5=> 5: 8KCYCLES = Timeout period of 8192 cycles
//        <6=> 6: 16KCYCLES = Timeout period of 16384 cycles
//        <7=> 7: 32KCYCLES = Timeout period of 32768 cycles
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFXOCTRL  ----------------------------------
// SVD Line: 3663

//  <rtree> SFDITEM_REG__CMU_LFXOCTRL
//    <name> LFXOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4038) LFXO Control Register </i>
//    <loc> ( (unsigned int)((CMU_LFXOCTRL >> 0) & 0xFFFFFFFF), ((CMU_LFXOCTRL = (CMU_LFXOCTRL & ~(0x713DB7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x713DB7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_TUNING </item>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_MODE </item>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_GAIN </item>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_HIGHAMPL </item>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_AGC </item>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_CUR </item>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_BUFCUR </item>
//    <item> SFDITEM_FIELD__CMU_LFXOCTRL_TIMEOUT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_ULFRCOCTRL  -----------------------------
// SVD Line: 3789

unsigned int CMU_ULFRCOCTRL __AT (0x400E403C);



// ----------------------------  Field Item: CMU_ULFRCOCTRL_TUNING  -------------------------------
// SVD Line: 3798

//  <item> SFDITEM_FIELD__CMU_ULFRCOCTRL_TUNING
//    <name> TUNING </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400E403C) ULFRCO TUNING Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_ULFRCOCTRL >> 0) & 0x3F), ((CMU_ULFRCOCTRL = (CMU_ULFRCOCTRL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CMU_ULFRCOCTRL_MODE  --------------------------------
// SVD Line: 3805

//  <item> SFDITEM_FIELD__CMU_ULFRCOCTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x400E403C) \nULFRCO Mode\n0 : 1KHZ = ULFRCO = 1 kHz\n1 : 2KHZ = ULFRCO = 2 kHz\n2 : 4KHZ = ULFRCO = 4 kHz\n3 : 32KHZ = ULFRCO = 32 kHz </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_ULFRCOCTRL ) </loc>
//      <o.11..10> MODE
//        <0=> 0: 1KHZ = ULFRCO = 1 kHz
//        <1=> 1: 2KHZ = ULFRCO = 2 kHz
//        <2=> 2: 4KHZ = ULFRCO = 4 kHz
//        <3=> 3: 32KHZ = ULFRCO = 32 kHz
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: CMU_ULFRCOCTRL_RESTRIM  -------------------------------
// SVD Line: 3834

//  <item> SFDITEM_FIELD__CMU_ULFRCOCTRL_RESTRIM
//    <name> RESTRIM </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E403C) ULFRCO Resistor Trim Value (for Resistor in Bias Circuit; NOT for USE as FREQUENCY CALIBRATION) </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_ULFRCOCTRL >> 16) & 0x3), ((CMU_ULFRCOCTRL = (CMU_ULFRCOCTRL & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: CMU_ULFRCOCTRL  ---------------------------------
// SVD Line: 3789

//  <rtree> SFDITEM_REG__CMU_ULFRCOCTRL
//    <name> ULFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E403C) ULFRCO Control Register </i>
//    <loc> ( (unsigned int)((CMU_ULFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_ULFRCOCTRL = (CMU_ULFRCOCTRL & ~(0x30C3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x30C3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_ULFRCOCTRL_TUNING </item>
//    <item> SFDITEM_FIELD__CMU_ULFRCOCTRL_MODE </item>
//    <item> SFDITEM_FIELD__CMU_ULFRCOCTRL_RESTRIM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_CALCTRL  -------------------------------
// SVD Line: 3843

unsigned int CMU_CALCTRL __AT (0x400E4050);



// ------------------------------  Field Item: CMU_CALCTRL_UPSEL  ---------------------------------
// SVD Line: 3852

//  <item> SFDITEM_FIELD__CMU_CALCTRL_UPSEL
//    <name> UPSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E4050) \nCalibration Up-counter Select\n0 : HFXO = Select HFXO as up-counter\n1 : LFXO = Select LFXO as up-counter\n2 : HFRCO = Select HFRCO as up-counter\n3 : LFRCO = Select LFRCO as up-counter\n4 : AUXHFRCO = Select AUXHFRCO as up-counter\n5 : PRS = Select PRS input selected by PRSUPSEL as up-counter\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_CALCTRL ) </loc>
//      <o.2..0> UPSEL
//        <0=> 0: HFXO = Select HFXO as up-counter
//        <1=> 1: LFXO = Select LFXO as up-counter
//        <2=> 2: HFRCO = Select HFRCO as up-counter
//        <3=> 3: LFRCO = Select LFRCO as up-counter
//        <4=> 4: AUXHFRCO = Select AUXHFRCO as up-counter
//        <5=> 5: PRS = Select PRS input selected by PRSUPSEL as up-counter
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: CMU_CALCTRL_DOWNSEL  --------------------------------
// SVD Line: 3891

//  <item> SFDITEM_FIELD__CMU_CALCTRL_DOWNSEL
//    <name> DOWNSEL </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400E4050) \nCalibration Down-counter Select\n0 : HFCLK = Select HFCLK for down-counter\n1 : HFXO = Select HFXO for down-counter\n2 : LFXO = Select LFXO for down-counter\n3 : HFRCO = Select HFRCO for down-counter\n4 : LFRCO = Select LFRCO for down-counter\n5 : AUXHFRCO = Select AUXHFRCO for down-counter\n6 : PRS = Select PRS input selected by PRSDOWNSEL as down-counter\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_CALCTRL ) </loc>
//      <o.6..4> DOWNSEL
//        <0=> 0: HFCLK = Select HFCLK for down-counter
//        <1=> 1: HFXO = Select HFXO for down-counter
//        <2=> 2: LFXO = Select LFXO for down-counter
//        <3=> 3: HFRCO = Select HFRCO for down-counter
//        <4=> 4: LFRCO = Select LFRCO for down-counter
//        <5=> 5: AUXHFRCO = Select AUXHFRCO for down-counter
//        <6=> 6: PRS = Select PRS input selected by PRSDOWNSEL as down-counter
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CMU_CALCTRL_CONT  ----------------------------------
// SVD Line: 3935

//  <item> SFDITEM_FIELD__CMU_CALCTRL_CONT
//    <name> CONT </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E4050) Continuous Calibration </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_CALCTRL ) </loc>
//      <o.8..8> CONT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_CALCTRL_PRSUPSEL  --------------------------------
// SVD Line: 3942

//  <item> SFDITEM_FIELD__CMU_CALCTRL_PRSUPSEL
//    <name> PRSUPSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E4050) \nPRS Select for PRS Input When Selected in UPSEL\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_CALCTRL ) </loc>
//      <o.19..16> PRSUPSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: CMU_CALCTRL_PRSDOWNSEL  -------------------------------
// SVD Line: 4011

//  <item> SFDITEM_FIELD__CMU_CALCTRL_PRSDOWNSEL
//    <name> PRSDOWNSEL </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x400E4050) \nPRS Select for PRS Input When Selected in DOWNSEL\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_CALCTRL ) </loc>
//      <o.27..24> PRSDOWNSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: CMU_CALCTRL  ----------------------------------
// SVD Line: 3843

//  <rtree> SFDITEM_REG__CMU_CALCTRL
//    <name> CALCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4050) Calibration Control Register </i>
//    <loc> ( (unsigned int)((CMU_CALCTRL >> 0) & 0xFFFFFFFF), ((CMU_CALCTRL = (CMU_CALCTRL & ~(0xF0F0177UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0F0177) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_CALCTRL_UPSEL </item>
//    <item> SFDITEM_FIELD__CMU_CALCTRL_DOWNSEL </item>
//    <item> SFDITEM_FIELD__CMU_CALCTRL_CONT </item>
//    <item> SFDITEM_FIELD__CMU_CALCTRL_PRSUPSEL </item>
//    <item> SFDITEM_FIELD__CMU_CALCTRL_PRSDOWNSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMU_CALCNT  -------------------------------
// SVD Line: 4082

unsigned int CMU_CALCNT __AT (0x400E4054);



// ------------------------------  Field Item: CMU_CALCNT_CALCNT  ---------------------------------
// SVD Line: 4091

//  <item> SFDITEM_FIELD__CMU_CALCNT_CALCNT
//    <name> CALCNT </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x400E4054) Calibration Counter </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_CALCNT >> 0) & 0xFFFFF), ((CMU_CALCNT = (CMU_CALCNT & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CMU_CALCNT  -----------------------------------
// SVD Line: 4082

//  <rtree> SFDITEM_REG__CMU_CALCNT
//    <name> CALCNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4054) Calibration Counter Register </i>
//    <loc> ( (unsigned int)((CMU_CALCNT >> 0) & 0xFFFFFFFF), ((CMU_CALCNT = (CMU_CALCNT & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_CALCNT_CALCNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_OSCENCMD  ------------------------------
// SVD Line: 4100

unsigned int CMU_OSCENCMD __AT (0x400E4060);



// ----------------------------  Field Item: CMU_OSCENCMD_HFRCOEN  --------------------------------
// SVD Line: 4109

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_HFRCOEN
//    <name> HFRCOEN </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E4060) HFRCO Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.0..0> HFRCOEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_OSCENCMD_HFRCODIS  -------------------------------
// SVD Line: 4116

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_HFRCODIS
//    <name> HFRCODIS </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E4060) HFRCO Disable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.1..1> HFRCODIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_OSCENCMD_HFXOEN  --------------------------------
// SVD Line: 4123

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_HFXOEN
//    <name> HFXOEN </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E4060) HFXO Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.2..2> HFXOEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_OSCENCMD_HFXODIS  --------------------------------
// SVD Line: 4130

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_HFXODIS
//    <name> HFXODIS </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E4060) HFXO Disable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.3..3> HFXODIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_OSCENCMD_AUXHFRCOEN  ------------------------------
// SVD Line: 4137

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_AUXHFRCOEN
//    <name> AUXHFRCOEN </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E4060) AUXHFRCO Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.4..4> AUXHFRCOEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_OSCENCMD_AUXHFRCODIS  ------------------------------
// SVD Line: 4144

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_AUXHFRCODIS
//    <name> AUXHFRCODIS </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E4060) AUXHFRCO Disable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.5..5> AUXHFRCODIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_OSCENCMD_LFRCOEN  --------------------------------
// SVD Line: 4151

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_LFRCOEN
//    <name> LFRCOEN </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x400E4060) LFRCO Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.6..6> LFRCOEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_OSCENCMD_LFRCODIS  -------------------------------
// SVD Line: 4158

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_LFRCODIS
//    <name> LFRCODIS </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x400E4060) LFRCO Disable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.7..7> LFRCODIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_OSCENCMD_LFXOEN  --------------------------------
// SVD Line: 4165

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_LFXOEN
//    <name> LFXOEN </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x400E4060) LFXO Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.8..8> LFXOEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_OSCENCMD_LFXODIS  --------------------------------
// SVD Line: 4172

//  <item> SFDITEM_FIELD__CMU_OSCENCMD_LFXODIS
//    <name> LFXODIS </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x400E4060) LFXO Disable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_OSCENCMD ) </loc>
//      <o.9..9> LFXODIS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_OSCENCMD  ----------------------------------
// SVD Line: 4100

//  <rtree> SFDITEM_REG__CMU_OSCENCMD
//    <name> OSCENCMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E4060) Oscillator Enable/Disable Command Register </i>
//    <loc> ( (unsigned int)((CMU_OSCENCMD >> 0) & 0xFFFFFFFF), ((CMU_OSCENCMD = (CMU_OSCENCMD & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_HFRCOEN </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_HFRCODIS </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_HFXOEN </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_HFXODIS </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_AUXHFRCOEN </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_AUXHFRCODIS </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_LFRCOEN </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_LFRCODIS </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_LFXOEN </item>
//    <item> SFDITEM_FIELD__CMU_OSCENCMD_LFXODIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CMU_CMD  ---------------------------------
// SVD Line: 4181

unsigned int CMU_CMD __AT (0x400E4064);



// ------------------------------  Field Item: CMU_CMD_CALSTART  ----------------------------------
// SVD Line: 4190

//  <item> SFDITEM_FIELD__CMU_CMD_CALSTART
//    <name> CALSTART </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E4064) Calibration Start </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_CMD ) </loc>
//      <o.0..0> CALSTART
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_CMD_CALSTOP  ----------------------------------
// SVD Line: 4197

//  <item> SFDITEM_FIELD__CMU_CMD_CALSTOP
//    <name> CALSTOP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E4064) Calibration Stop </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_CMD ) </loc>
//      <o.1..1> CALSTOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_CMD_HFXOPEAKDETSTART  ------------------------------
// SVD Line: 4204

//  <item> SFDITEM_FIELD__CMU_CMD_HFXOPEAKDETSTART
//    <name> HFXOPEAKDETSTART </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E4064) HFXO Peak Detection Start </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_CMD ) </loc>
//      <o.4..4> HFXOPEAKDETSTART
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_CMD_HFXOSHUNTOPTSTART  -----------------------------
// SVD Line: 4211

//  <item> SFDITEM_FIELD__CMU_CMD_HFXOSHUNTOPTSTART
//    <name> HFXOSHUNTOPTSTART </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E4064) HFXO Shunt Current Optimization Start </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_CMD ) </loc>
//      <o.5..5> HFXOSHUNTOPTSTART
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CMU_CMD  ------------------------------------
// SVD Line: 4181

//  <rtree> SFDITEM_REG__CMU_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E4064) Command Register </i>
//    <loc> ( (unsigned int)((CMU_CMD >> 0) & 0xFFFFFFFF), ((CMU_CMD = (CMU_CMD & ~(0x33UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_CMD_CALSTART </item>
//    <item> SFDITEM_FIELD__CMU_CMD_CALSTOP </item>
//    <item> SFDITEM_FIELD__CMU_CMD_HFXOPEAKDETSTART </item>
//    <item> SFDITEM_FIELD__CMU_CMD_HFXOSHUNTOPTSTART </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_DBGCLKSEL  ------------------------------
// SVD Line: 4220

unsigned int CMU_DBGCLKSEL __AT (0x400E4070);



// ------------------------------  Field Item: CMU_DBGCLKSEL_DBG  ---------------------------------
// SVD Line: 4229

//  <item> SFDITEM_FIELD__CMU_DBGCLKSEL_DBG
//    <name> DBG </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E4070) \nDebug Trace Clock\n0 : AUXHFRCO = AUXHFRCO is the debug trace clock\n1 : HFCLK = HFCLK is the debug trace clock </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_DBGCLKSEL ) </loc>
//      <o.0..0> DBG
//        <0=> 0: AUXHFRCO = AUXHFRCO is the debug trace clock
//        <1=> 1: HFCLK = HFCLK is the debug trace clock
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_DBGCLKSEL  ---------------------------------
// SVD Line: 4220

//  <rtree> SFDITEM_REG__CMU_DBGCLKSEL
//    <name> DBGCLKSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4070) Debug Trace Clock Select </i>
//    <loc> ( (unsigned int)((CMU_DBGCLKSEL >> 0) & 0xFFFFFFFF), ((CMU_DBGCLKSEL = (CMU_DBGCLKSEL & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_DBGCLKSEL_DBG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_HFCLKSEL  ------------------------------
// SVD Line: 4250

unsigned int CMU_HFCLKSEL __AT (0x400E4074);



// -------------------------------  Field Item: CMU_HFCLKSEL_HF  ----------------------------------
// SVD Line: 4259

//  <item> SFDITEM_FIELD__CMU_HFCLKSEL_HF
//    <name> HF </name>
//    <w> 
//    <i> [Bits 2..0] WO (@ 0x400E4074) \nHFCLK Select\n0 : Reserved - do not use\n1 : HFRCO = Select HFRCO as HFCLK\n2 : HFXO = Select HFXO as HFCLK\n3 : LFRCO = Select LFRCO as HFCLK\n4 : LFXO = Select LFXO as HFCLK\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFCLKSEL ) </loc>
//      <o.2..0> HF
//        <0=> 0: 
//        <1=> 1: HFRCO = Select HFRCO as HFCLK
//        <2=> 2: HFXO = Select HFXO as HFCLK
//        <3=> 3: LFRCO = Select LFRCO as HFCLK
//        <4=> 4: LFXO = Select LFXO as HFCLK
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_HFCLKSEL  ----------------------------------
// SVD Line: 4250

//  <rtree> SFDITEM_REG__CMU_HFCLKSEL
//    <name> HFCLKSEL </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E4074) High Frequency Clock Select Command Register </i>
//    <loc> ( (unsigned int)((CMU_HFCLKSEL >> 0) & 0xFFFFFFFF), ((CMU_HFCLKSEL = (CMU_HFCLKSEL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFCLKSEL_HF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFACLKSEL  ------------------------------
// SVD Line: 4290

unsigned int CMU_LFACLKSEL __AT (0x400E4080);



// ------------------------------  Field Item: CMU_LFACLKSEL_LFA  ---------------------------------
// SVD Line: 4299

//  <item> SFDITEM_FIELD__CMU_LFACLKSEL_LFA
//    <name> LFA </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E4080) \nClock Select for LFA\n0 : DISABLED = LFACLK is disabled\n1 : LFRCO = LFRCO selected as LFACLK\n2 : LFXO = LFXO selected as LFACLK\n3 : Reserved - do not use\n4 : ULFRCO = ULFRCO selected as LFACLK\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFACLKSEL ) </loc>
//      <o.2..0> LFA
//        <0=> 0: DISABLED = LFACLK is disabled
//        <1=> 1: LFRCO = LFRCO selected as LFACLK
//        <2=> 2: LFXO = LFXO selected as LFACLK
//        <3=> 3: 
//        <4=> 4: ULFRCO = ULFRCO selected as LFACLK
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFACLKSEL  ---------------------------------
// SVD Line: 4290

//  <rtree> SFDITEM_REG__CMU_LFACLKSEL
//    <name> LFACLKSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4080) Low Frequency A Clock Select Register </i>
//    <loc> ( (unsigned int)((CMU_LFACLKSEL >> 0) & 0xFFFFFFFF), ((CMU_LFACLKSEL = (CMU_LFACLKSEL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFACLKSEL_LFA </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFBCLKSEL  ------------------------------
// SVD Line: 4330

unsigned int CMU_LFBCLKSEL __AT (0x400E4084);



// ------------------------------  Field Item: CMU_LFBCLKSEL_LFB  ---------------------------------
// SVD Line: 4339

//  <item> SFDITEM_FIELD__CMU_LFBCLKSEL_LFB
//    <name> LFB </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E4084) \nClock Select for LFB\n0 : DISABLED = LFBCLK is disabled\n1 : LFRCO = LFRCO selected as LFBCLK\n2 : LFXO = LFXO selected as LFBCLK\n3 : HFCLKLE = HFCLK divided by two/four is selected as LFBCLK\n4 : ULFRCO = ULFRCO selected as LFBCLK\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFBCLKSEL ) </loc>
//      <o.2..0> LFB
//        <0=> 0: DISABLED = LFBCLK is disabled
//        <1=> 1: LFRCO = LFRCO selected as LFBCLK
//        <2=> 2: LFXO = LFXO selected as LFBCLK
//        <3=> 3: HFCLKLE = HFCLK divided by two/four is selected as LFBCLK
//        <4=> 4: ULFRCO = ULFRCO selected as LFBCLK
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFBCLKSEL  ---------------------------------
// SVD Line: 4330

//  <rtree> SFDITEM_REG__CMU_LFBCLKSEL
//    <name> LFBCLKSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4084) Low Frequency B Clock Select Register </i>
//    <loc> ( (unsigned int)((CMU_LFBCLKSEL >> 0) & 0xFFFFFFFF), ((CMU_LFBCLKSEL = (CMU_LFBCLKSEL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFBCLKSEL_LFB </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFECLKSEL  ------------------------------
// SVD Line: 4375

unsigned int CMU_LFECLKSEL __AT (0x400E4088);



// ------------------------------  Field Item: CMU_LFECLKSEL_LFE  ---------------------------------
// SVD Line: 4384

//  <item> SFDITEM_FIELD__CMU_LFECLKSEL_LFE
//    <name> LFE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E4088) \nClock Select for LFE\n0 : DISABLED = LFECLK is disabled\n1 : LFRCO = LFRCO selected as LFECLK\n2 : LFXO = LFXO selected as LFECLK\n3 : Reserved - do not use\n4 : ULFRCO = ULFRCO selected as LFECLK\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFECLKSEL ) </loc>
//      <o.2..0> LFE
//        <0=> 0: DISABLED = LFECLK is disabled
//        <1=> 1: LFRCO = LFRCO selected as LFECLK
//        <2=> 2: LFXO = LFXO selected as LFECLK
//        <3=> 3: 
//        <4=> 4: ULFRCO = ULFRCO selected as LFECLK
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFECLKSEL  ---------------------------------
// SVD Line: 4375

//  <rtree> SFDITEM_REG__CMU_LFECLKSEL
//    <name> LFECLKSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4088) Low Frequency E Clock Select Register </i>
//    <loc> ( (unsigned int)((CMU_LFECLKSEL >> 0) & 0xFFFFFFFF), ((CMU_LFECLKSEL = (CMU_LFECLKSEL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFECLKSEL_LFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMU_STATUS  -------------------------------
// SVD Line: 4415

unsigned int CMU_STATUS __AT (0x400E4090);



// -----------------------------  Field Item: CMU_STATUS_HFRCOENS  --------------------------------
// SVD Line: 4424

//  <item> SFDITEM_FIELD__CMU_STATUS_HFRCOENS
//    <name> HFRCOENS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E4090) HFRCO Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.0..0> HFRCOENS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_HFRCORDY  --------------------------------
// SVD Line: 4431

//  <item> SFDITEM_FIELD__CMU_STATUS_HFRCORDY
//    <name> HFRCORDY </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E4090) HFRCO Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.1..1> HFRCORDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_HFXOENS  ---------------------------------
// SVD Line: 4438

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXOENS
//    <name> HFXOENS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E4090) HFXO Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.2..2> HFXOENS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_HFXORDY  ---------------------------------
// SVD Line: 4445

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXORDY
//    <name> HFXORDY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E4090) HFXO Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.3..3> HFXORDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_STATUS_AUXHFRCOENS  -------------------------------
// SVD Line: 4452

//  <item> SFDITEM_FIELD__CMU_STATUS_AUXHFRCOENS
//    <name> AUXHFRCOENS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E4090) AUXHFRCO Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.4..4> AUXHFRCOENS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_STATUS_AUXHFRCORDY  -------------------------------
// SVD Line: 4459

//  <item> SFDITEM_FIELD__CMU_STATUS_AUXHFRCORDY
//    <name> AUXHFRCORDY </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400E4090) AUXHFRCO Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.5..5> AUXHFRCORDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_LFRCOENS  --------------------------------
// SVD Line: 4466

//  <item> SFDITEM_FIELD__CMU_STATUS_LFRCOENS
//    <name> LFRCOENS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x400E4090) LFRCO Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.6..6> LFRCOENS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_LFRCORDY  --------------------------------
// SVD Line: 4473

//  <item> SFDITEM_FIELD__CMU_STATUS_LFRCORDY
//    <name> LFRCORDY </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x400E4090) LFRCO Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.7..7> LFRCORDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_LFXOENS  ---------------------------------
// SVD Line: 4480

//  <item> SFDITEM_FIELD__CMU_STATUS_LFXOENS
//    <name> LFXOENS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x400E4090) LFXO Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.8..8> LFXOENS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_LFXORDY  ---------------------------------
// SVD Line: 4487

//  <item> SFDITEM_FIELD__CMU_STATUS_LFXORDY
//    <name> LFXORDY </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x400E4090) LFXO Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.9..9> LFXORDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_STATUS_CALRDY  ---------------------------------
// SVD Line: 4494

//  <item> SFDITEM_FIELD__CMU_STATUS_CALRDY
//    <name> CALRDY </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x400E4090) Calibration Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.16..16> CALRDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_STATUS_HFXOREQ  ---------------------------------
// SVD Line: 4501

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXOREQ
//    <name> HFXOREQ </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x400E4090) HFXO is Required By Hardware </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.21..21> HFXOREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_STATUS_HFXOPEAKDETRDY  -----------------------------
// SVD Line: 4508

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXOPEAKDETRDY
//    <name> HFXOPEAKDETRDY </name>
//    <r> 
//    <i> [Bit 22] RO (@ 0x400E4090) HFXO Peak Detection Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.22..22> HFXOPEAKDETRDY
//    </check>
//  </item>
//  


// -------------------------  Field Item: CMU_STATUS_HFXOSHUNTOPTRDY  -----------------------------
// SVD Line: 4515

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXOSHUNTOPTRDY
//    <name> HFXOSHUNTOPTRDY </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x400E4090) HFXO Shunt Current Optimization Ready </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.23..23> HFXOSHUNTOPTRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_STATUS_HFXOAMPHIGH  -------------------------------
// SVD Line: 4522

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXOAMPHIGH
//    <name> HFXOAMPHIGH </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x400E4090) HFXO Oscillation Amplitude is Too High </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.24..24> HFXOAMPHIGH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_STATUS_HFXOAMPLOW  -------------------------------
// SVD Line: 4529

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXOAMPLOW
//    <name> HFXOAMPLOW </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x400E4090) HFXO Amplitude Tuning Value Too Low </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.25..25> HFXOAMPLOW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_STATUS_HFXOREGILOW  -------------------------------
// SVD Line: 4536

//  <item> SFDITEM_FIELD__CMU_STATUS_HFXOREGILOW
//    <name> HFXOREGILOW </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x400E4090) HFXO Regulator Shunt Current Too Low </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_STATUS ) </loc>
//      <o.26..26> HFXOREGILOW
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMU_STATUS  -----------------------------------
// SVD Line: 4415

//  <rtree> SFDITEM_REG__CMU_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E4090) Status Register </i>
//    <loc> ( (unsigned int)((CMU_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFRCOENS </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXOENS </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_AUXHFRCOENS </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_AUXHFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_LFRCOENS </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_LFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_LFXOENS </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_LFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_CALRDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXOREQ </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXOPEAKDETRDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXOSHUNTOPTRDY </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXOAMPHIGH </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXOAMPLOW </item>
//    <item> SFDITEM_FIELD__CMU_STATUS_HFXOREGILOW </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_HFCLKSTATUS  -----------------------------
// SVD Line: 4545

unsigned int CMU_HFCLKSTATUS __AT (0x400E4094);



// --------------------------  Field Item: CMU_HFCLKSTATUS_SELECTED  ------------------------------
// SVD Line: 4554

//  <item> SFDITEM_FIELD__CMU_HFCLKSTATUS_SELECTED
//    <name> SELECTED </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x400E4094) \nHFCLK Selected\n0 : Reserved - do not use\n1 : HFRCO = HFRCO is selected as HFCLK clock source\n2 : HFXO = HFXO is selected as HFCLK clock source\n3 : LFRCO = LFRCO is selected as HFCLK clock source\n4 : LFXO = LFXO is selected as HFCLK clock source\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFCLKSTATUS ) </loc>
//      <o.2..0> SELECTED
//        <0=> 0: 
//        <1=> 1: HFRCO = HFRCO is selected as HFCLK clock source
//        <2=> 2: HFXO = HFXO is selected as HFCLK clock source
//        <3=> 3: LFRCO = LFRCO is selected as HFCLK clock source
//        <4=> 4: LFXO = LFXO is selected as HFCLK clock source
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: CMU_HFCLKSTATUS  --------------------------------
// SVD Line: 4545

//  <rtree> SFDITEM_REG__CMU_HFCLKSTATUS
//    <name> HFCLKSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E4094) HFCLK Status Register </i>
//    <loc> ( (unsigned int)((CMU_HFCLKSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CMU_HFCLKSTATUS_SELECTED </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_HFXOTRIMSTATUS  ---------------------------
// SVD Line: 4585

unsigned int CMU_HFXOTRIMSTATUS __AT (0x400E409C);



// -----------------------  Field Item: CMU_HFXOTRIMSTATUS_IBTRIMXOCORE  --------------------------
// SVD Line: 4594

//  <item> SFDITEM_FIELD__CMU_HFXOTRIMSTATUS_IBTRIMXOCORE
//    <name> IBTRIMXOCORE </name>
//    <r> 
//    <i> [Bits 6..0] RO (@ 0x400E409C) Value of IBTRIMXOCORE Found By Automatic HFXO Peak Detection Algorithm </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOTRIMSTATUS >> 0) & 0x7F) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CMU_HFXOTRIMSTATUS_REGISH  -----------------------------
// SVD Line: 4601

//  <item> SFDITEM_FIELD__CMU_HFXOTRIMSTATUS_REGISH
//    <name> REGISH </name>
//    <r> 
//    <i> [Bits 10..7] RO (@ 0x400E409C) Value of REGISH Found By Automatic HFXO Shunt Current Optimization Algorithm </i>
//    <edit> 
//      <loc> ( (unsigned char)((CMU_HFXOTRIMSTATUS >> 7) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CMU_HFXOTRIMSTATUS  -------------------------------
// SVD Line: 4585

//  <rtree> SFDITEM_REG__CMU_HFXOTRIMSTATUS
//    <name> HFXOTRIMSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E409C) HFXO Trim Status </i>
//    <loc> ( (unsigned int)((CMU_HFXOTRIMSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CMU_HFXOTRIMSTATUS_IBTRIMXOCORE </item>
//    <item> SFDITEM_FIELD__CMU_HFXOTRIMSTATUS_REGISH </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: CMU_IF  ---------------------------------
// SVD Line: 4610

unsigned int CMU_IF __AT (0x400E40A0);



// -------------------------------  Field Item: CMU_IF_HFRCORDY  ----------------------------------
// SVD Line: 4619

//  <item> SFDITEM_FIELD__CMU_IF_HFRCORDY
//    <name> HFRCORDY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E40A0) HFRCO Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.0..0> HFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IF_HFXORDY  -----------------------------------
// SVD Line: 4626

//  <item> SFDITEM_FIELD__CMU_IF_HFXORDY
//    <name> HFXORDY </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E40A0) HFXO Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.1..1> HFXORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IF_LFRCORDY  ----------------------------------
// SVD Line: 4633

//  <item> SFDITEM_FIELD__CMU_IF_LFRCORDY
//    <name> LFRCORDY </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E40A0) LFRCO Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.2..2> LFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IF_LFXORDY  -----------------------------------
// SVD Line: 4640

//  <item> SFDITEM_FIELD__CMU_IF_LFXORDY
//    <name> LFXORDY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E40A0) LFXO Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.3..3> LFXORDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IF_AUXHFRCORDY  ---------------------------------
// SVD Line: 4647

//  <item> SFDITEM_FIELD__CMU_IF_AUXHFRCORDY
//    <name> AUXHFRCORDY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E40A0) AUXHFRCO Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.4..4> AUXHFRCORDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CMU_IF_CALRDY  -----------------------------------
// SVD Line: 4654

//  <item> SFDITEM_FIELD__CMU_IF_CALRDY
//    <name> CALRDY </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400E40A0) Calibration Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.5..5> CALRDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CMU_IF_CALOF  ------------------------------------
// SVD Line: 4661

//  <item> SFDITEM_FIELD__CMU_IF_CALOF
//    <name> CALOF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x400E40A0) Calibration Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.6..6> CALOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IF_HFXODISERR  ---------------------------------
// SVD Line: 4668

//  <item> SFDITEM_FIELD__CMU_IF_HFXODISERR
//    <name> HFXODISERR </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x400E40A0) HFXO Disable Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.8..8> HFXODISERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IF_HFXOAUTOSW  ---------------------------------
// SVD Line: 4675

//  <item> SFDITEM_FIELD__CMU_IF_HFXOAUTOSW
//    <name> HFXOAUTOSW </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x400E40A0) HFXO Automatic Switch Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.9..9> HFXOAUTOSW
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_IF_HFXOPEAKDETERR  -------------------------------
// SVD Line: 4682

//  <item> SFDITEM_FIELD__CMU_IF_HFXOPEAKDETERR
//    <name> HFXOPEAKDETERR </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x400E40A0) HFXO Automatic Peak Detection Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.10..10> HFXOPEAKDETERR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_IF_HFXOPEAKDETRDY  -------------------------------
// SVD Line: 4689

//  <item> SFDITEM_FIELD__CMU_IF_HFXOPEAKDETRDY
//    <name> HFXOPEAKDETRDY </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x400E40A0) HFXO Automatic Peak Detection Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.11..11> HFXOPEAKDETRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IF_HFXOSHUNTOPTRDY  -------------------------------
// SVD Line: 4696

//  <item> SFDITEM_FIELD__CMU_IF_HFXOSHUNTOPTRDY
//    <name> HFXOSHUNTOPTRDY </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x400E40A0) HFXO Automatic Shunt Current Optimization Ready Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.12..12> HFXOSHUNTOPTRDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IF_HFRCODIS  ----------------------------------
// SVD Line: 4703

//  <item> SFDITEM_FIELD__CMU_IF_HFRCODIS
//    <name> HFRCODIS </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x400E40A0) HFRCO Disable Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.13..13> HFRCODIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IF_LFTIMEOUTERR  --------------------------------
// SVD Line: 4710

//  <item> SFDITEM_FIELD__CMU_IF_LFTIMEOUTERR
//    <name> LFTIMEOUTERR </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x400E40A0) Low Frequency Timeout Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.14..14> LFTIMEOUTERR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CMU_IF_CMUERR  -----------------------------------
// SVD Line: 4717

//  <item> SFDITEM_FIELD__CMU_IF_CMUERR
//    <name> CMUERR </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E40A0) CMU Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IF ) </loc>
//      <o.31..31> CMUERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CMU_IF  -------------------------------------
// SVD Line: 4610

//  <rtree> SFDITEM_REG__CMU_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E40A0) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((CMU_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CMU_IF_HFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_HFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_LFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_LFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_AUXHFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_CALRDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_CALOF </item>
//    <item> SFDITEM_FIELD__CMU_IF_HFXODISERR </item>
//    <item> SFDITEM_FIELD__CMU_IF_HFXOAUTOSW </item>
//    <item> SFDITEM_FIELD__CMU_IF_HFXOPEAKDETERR </item>
//    <item> SFDITEM_FIELD__CMU_IF_HFXOPEAKDETRDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_HFXOSHUNTOPTRDY </item>
//    <item> SFDITEM_FIELD__CMU_IF_HFRCODIS </item>
//    <item> SFDITEM_FIELD__CMU_IF_LFTIMEOUTERR </item>
//    <item> SFDITEM_FIELD__CMU_IF_CMUERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CMU_IFS  ---------------------------------
// SVD Line: 4726

unsigned int CMU_IFS __AT (0x400E40A4);



// ------------------------------  Field Item: CMU_IFS_HFRCORDY  ----------------------------------
// SVD Line: 4735

//  <item> SFDITEM_FIELD__CMU_IFS_HFRCORDY
//    <name> HFRCORDY </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E40A4) Set HFRCORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.0..0> HFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFS_HFXORDY  ----------------------------------
// SVD Line: 4742

//  <item> SFDITEM_FIELD__CMU_IFS_HFXORDY
//    <name> HFXORDY </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E40A4) Set HFXORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.1..1> HFXORDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IFS_LFRCORDY  ----------------------------------
// SVD Line: 4749

//  <item> SFDITEM_FIELD__CMU_IFS_LFRCORDY
//    <name> LFRCORDY </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E40A4) Set LFRCORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.2..2> LFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFS_LFXORDY  ----------------------------------
// SVD Line: 4756

//  <item> SFDITEM_FIELD__CMU_IFS_LFXORDY
//    <name> LFXORDY </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E40A4) Set LFXORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.3..3> LFXORDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IFS_AUXHFRCORDY  --------------------------------
// SVD Line: 4763

//  <item> SFDITEM_FIELD__CMU_IFS_AUXHFRCORDY
//    <name> AUXHFRCORDY </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E40A4) Set AUXHFRCORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.4..4> AUXHFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFS_CALRDY  -----------------------------------
// SVD Line: 4770

//  <item> SFDITEM_FIELD__CMU_IFS_CALRDY
//    <name> CALRDY </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E40A4) Set CALRDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.5..5> CALRDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CMU_IFS_CALOF  -----------------------------------
// SVD Line: 4777

//  <item> SFDITEM_FIELD__CMU_IFS_CALOF
//    <name> CALOF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x400E40A4) Set CALOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.6..6> CALOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IFS_HFXODISERR  ---------------------------------
// SVD Line: 4784

//  <item> SFDITEM_FIELD__CMU_IFS_HFXODISERR
//    <name> HFXODISERR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x400E40A4) Set HFXODISERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.8..8> HFXODISERR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IFS_HFXOAUTOSW  ---------------------------------
// SVD Line: 4791

//  <item> SFDITEM_FIELD__CMU_IFS_HFXOAUTOSW
//    <name> HFXOAUTOSW </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x400E40A4) Set HFXOAUTOSW Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.9..9> HFXOAUTOSW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IFS_HFXOPEAKDETERR  -------------------------------
// SVD Line: 4798

//  <item> SFDITEM_FIELD__CMU_IFS_HFXOPEAKDETERR
//    <name> HFXOPEAKDETERR </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x400E40A4) Set HFXOPEAKDETERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.10..10> HFXOPEAKDETERR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IFS_HFXOPEAKDETRDY  -------------------------------
// SVD Line: 4805

//  <item> SFDITEM_FIELD__CMU_IFS_HFXOPEAKDETRDY
//    <name> HFXOPEAKDETRDY </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x400E40A4) Set HFXOPEAKDETRDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.11..11> HFXOPEAKDETRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IFS_HFXOSHUNTOPTRDY  ------------------------------
// SVD Line: 4812

//  <item> SFDITEM_FIELD__CMU_IFS_HFXOSHUNTOPTRDY
//    <name> HFXOSHUNTOPTRDY </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x400E40A4) Set HFXOSHUNTOPTRDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.12..12> HFXOSHUNTOPTRDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IFS_HFRCODIS  ----------------------------------
// SVD Line: 4819

//  <item> SFDITEM_FIELD__CMU_IFS_HFRCODIS
//    <name> HFRCODIS </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x400E40A4) Set HFRCODIS Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.13..13> HFRCODIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_IFS_LFTIMEOUTERR  --------------------------------
// SVD Line: 4826

//  <item> SFDITEM_FIELD__CMU_IFS_LFTIMEOUTERR
//    <name> LFTIMEOUTERR </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x400E40A4) Set LFTIMEOUTERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.14..14> LFTIMEOUTERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFS_CMUERR  -----------------------------------
// SVD Line: 4833

//  <item> SFDITEM_FIELD__CMU_IFS_CMUERR
//    <name> CMUERR </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x400E40A4) Set CMUERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFS ) </loc>
//      <o.31..31> CMUERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CMU_IFS  ------------------------------------
// SVD Line: 4726

//  <rtree> SFDITEM_REG__CMU_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E40A4) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((CMU_IFS >> 0) & 0xFFFFFFFF), ((CMU_IFS = (CMU_IFS & ~(0x80007F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x80007F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_IFS_HFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_HFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_LFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_LFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_AUXHFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_CALRDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_CALOF </item>
//    <item> SFDITEM_FIELD__CMU_IFS_HFXODISERR </item>
//    <item> SFDITEM_FIELD__CMU_IFS_HFXOAUTOSW </item>
//    <item> SFDITEM_FIELD__CMU_IFS_HFXOPEAKDETERR </item>
//    <item> SFDITEM_FIELD__CMU_IFS_HFXOPEAKDETRDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_HFXOSHUNTOPTRDY </item>
//    <item> SFDITEM_FIELD__CMU_IFS_HFRCODIS </item>
//    <item> SFDITEM_FIELD__CMU_IFS_LFTIMEOUTERR </item>
//    <item> SFDITEM_FIELD__CMU_IFS_CMUERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CMU_IFC  ---------------------------------
// SVD Line: 4842

unsigned int CMU_IFC __AT (0x400E40A8);



// ------------------------------  Field Item: CMU_IFC_HFRCORDY  ----------------------------------
// SVD Line: 4851

//  <item> SFDITEM_FIELD__CMU_IFC_HFRCORDY
//    <name> HFRCORDY </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E40A8) Clear HFRCORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.0..0> HFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFC_HFXORDY  ----------------------------------
// SVD Line: 4858

//  <item> SFDITEM_FIELD__CMU_IFC_HFXORDY
//    <name> HFXORDY </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E40A8) Clear HFXORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.1..1> HFXORDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IFC_LFRCORDY  ----------------------------------
// SVD Line: 4865

//  <item> SFDITEM_FIELD__CMU_IFC_LFRCORDY
//    <name> LFRCORDY </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E40A8) Clear LFRCORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.2..2> LFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFC_LFXORDY  ----------------------------------
// SVD Line: 4872

//  <item> SFDITEM_FIELD__CMU_IFC_LFXORDY
//    <name> LFXORDY </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E40A8) Clear LFXORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.3..3> LFXORDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IFC_AUXHFRCORDY  --------------------------------
// SVD Line: 4879

//  <item> SFDITEM_FIELD__CMU_IFC_AUXHFRCORDY
//    <name> AUXHFRCORDY </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E40A8) Clear AUXHFRCORDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.4..4> AUXHFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFC_CALRDY  -----------------------------------
// SVD Line: 4886

//  <item> SFDITEM_FIELD__CMU_IFC_CALRDY
//    <name> CALRDY </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E40A8) Clear CALRDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.5..5> CALRDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CMU_IFC_CALOF  -----------------------------------
// SVD Line: 4893

//  <item> SFDITEM_FIELD__CMU_IFC_CALOF
//    <name> CALOF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x400E40A8) Clear CALOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.6..6> CALOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IFC_HFXODISERR  ---------------------------------
// SVD Line: 4900

//  <item> SFDITEM_FIELD__CMU_IFC_HFXODISERR
//    <name> HFXODISERR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x400E40A8) Clear HFXODISERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.8..8> HFXODISERR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IFC_HFXOAUTOSW  ---------------------------------
// SVD Line: 4907

//  <item> SFDITEM_FIELD__CMU_IFC_HFXOAUTOSW
//    <name> HFXOAUTOSW </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x400E40A8) Clear HFXOAUTOSW Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.9..9> HFXOAUTOSW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IFC_HFXOPEAKDETERR  -------------------------------
// SVD Line: 4914

//  <item> SFDITEM_FIELD__CMU_IFC_HFXOPEAKDETERR
//    <name> HFXOPEAKDETERR </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x400E40A8) Clear HFXOPEAKDETERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.10..10> HFXOPEAKDETERR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IFC_HFXOPEAKDETRDY  -------------------------------
// SVD Line: 4921

//  <item> SFDITEM_FIELD__CMU_IFC_HFXOPEAKDETRDY
//    <name> HFXOPEAKDETRDY </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x400E40A8) Clear HFXOPEAKDETRDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.11..11> HFXOPEAKDETRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IFC_HFXOSHUNTOPTRDY  ------------------------------
// SVD Line: 4928

//  <item> SFDITEM_FIELD__CMU_IFC_HFXOSHUNTOPTRDY
//    <name> HFXOSHUNTOPTRDY </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x400E40A8) Clear HFXOSHUNTOPTRDY Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.12..12> HFXOSHUNTOPTRDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IFC_HFRCODIS  ----------------------------------
// SVD Line: 4935

//  <item> SFDITEM_FIELD__CMU_IFC_HFRCODIS
//    <name> HFRCODIS </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x400E40A8) Clear HFRCODIS Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.13..13> HFRCODIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_IFC_LFTIMEOUTERR  --------------------------------
// SVD Line: 4942

//  <item> SFDITEM_FIELD__CMU_IFC_LFTIMEOUTERR
//    <name> LFTIMEOUTERR </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x400E40A8) Clear LFTIMEOUTERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.14..14> LFTIMEOUTERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IFC_CMUERR  -----------------------------------
// SVD Line: 4949

//  <item> SFDITEM_FIELD__CMU_IFC_CMUERR
//    <name> CMUERR </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x400E40A8) Clear CMUERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IFC ) </loc>
//      <o.31..31> CMUERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CMU_IFC  ------------------------------------
// SVD Line: 4842

//  <rtree> SFDITEM_REG__CMU_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E40A8) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((CMU_IFC >> 0) & 0xFFFFFFFF), ((CMU_IFC = (CMU_IFC & ~(0x80007F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x80007F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_IFC_HFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_HFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_LFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_LFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_AUXHFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_CALRDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_CALOF </item>
//    <item> SFDITEM_FIELD__CMU_IFC_HFXODISERR </item>
//    <item> SFDITEM_FIELD__CMU_IFC_HFXOAUTOSW </item>
//    <item> SFDITEM_FIELD__CMU_IFC_HFXOPEAKDETERR </item>
//    <item> SFDITEM_FIELD__CMU_IFC_HFXOPEAKDETRDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_HFXOSHUNTOPTRDY </item>
//    <item> SFDITEM_FIELD__CMU_IFC_HFRCODIS </item>
//    <item> SFDITEM_FIELD__CMU_IFC_LFTIMEOUTERR </item>
//    <item> SFDITEM_FIELD__CMU_IFC_CMUERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CMU_IEN  ---------------------------------
// SVD Line: 4958

unsigned int CMU_IEN __AT (0x400E40AC);



// ------------------------------  Field Item: CMU_IEN_HFRCORDY  ----------------------------------
// SVD Line: 4967

//  <item> SFDITEM_FIELD__CMU_IEN_HFRCORDY
//    <name> HFRCORDY </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E40AC) HFRCORDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.0..0> HFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IEN_HFXORDY  ----------------------------------
// SVD Line: 4974

//  <item> SFDITEM_FIELD__CMU_IEN_HFXORDY
//    <name> HFXORDY </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E40AC) HFXORDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.1..1> HFXORDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IEN_LFRCORDY  ----------------------------------
// SVD Line: 4981

//  <item> SFDITEM_FIELD__CMU_IEN_LFRCORDY
//    <name> LFRCORDY </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E40AC) LFRCORDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.2..2> LFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IEN_LFXORDY  ----------------------------------
// SVD Line: 4988

//  <item> SFDITEM_FIELD__CMU_IEN_LFXORDY
//    <name> LFXORDY </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E40AC) LFXORDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.3..3> LFXORDY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IEN_AUXHFRCORDY  --------------------------------
// SVD Line: 4995

//  <item> SFDITEM_FIELD__CMU_IEN_AUXHFRCORDY
//    <name> AUXHFRCORDY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E40AC) AUXHFRCORDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.4..4> AUXHFRCORDY
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IEN_CALRDY  -----------------------------------
// SVD Line: 5002

//  <item> SFDITEM_FIELD__CMU_IEN_CALRDY
//    <name> CALRDY </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E40AC) CALRDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.5..5> CALRDY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CMU_IEN_CALOF  -----------------------------------
// SVD Line: 5009

//  <item> SFDITEM_FIELD__CMU_IEN_CALOF
//    <name> CALOF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400E40AC) CALOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.6..6> CALOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IEN_HFXODISERR  ---------------------------------
// SVD Line: 5016

//  <item> SFDITEM_FIELD__CMU_IEN_HFXODISERR
//    <name> HFXODISERR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E40AC) HFXODISERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.8..8> HFXODISERR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_IEN_HFXOAUTOSW  ---------------------------------
// SVD Line: 5023

//  <item> SFDITEM_FIELD__CMU_IEN_HFXOAUTOSW
//    <name> HFXOAUTOSW </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400E40AC) HFXOAUTOSW Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.9..9> HFXOAUTOSW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IEN_HFXOPEAKDETERR  -------------------------------
// SVD Line: 5030

//  <item> SFDITEM_FIELD__CMU_IEN_HFXOPEAKDETERR
//    <name> HFXOPEAKDETERR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400E40AC) HFXOPEAKDETERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.10..10> HFXOPEAKDETERR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IEN_HFXOPEAKDETRDY  -------------------------------
// SVD Line: 5037

//  <item> SFDITEM_FIELD__CMU_IEN_HFXOPEAKDETRDY
//    <name> HFXOPEAKDETRDY </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400E40AC) HFXOPEAKDETRDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.11..11> HFXOPEAKDETRDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_IEN_HFXOSHUNTOPTRDY  ------------------------------
// SVD Line: 5044

//  <item> SFDITEM_FIELD__CMU_IEN_HFXOSHUNTOPTRDY
//    <name> HFXOSHUNTOPTRDY </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x400E40AC) HFXOSHUNTOPTRDY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.12..12> HFXOSHUNTOPTRDY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CMU_IEN_HFRCODIS  ----------------------------------
// SVD Line: 5051

//  <item> SFDITEM_FIELD__CMU_IEN_HFRCODIS
//    <name> HFRCODIS </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400E40AC) HFRCODIS Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.13..13> HFRCODIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_IEN_LFTIMEOUTERR  --------------------------------
// SVD Line: 5058

//  <item> SFDITEM_FIELD__CMU_IEN_LFTIMEOUTERR
//    <name> LFTIMEOUTERR </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400E40AC) LFTIMEOUTERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.14..14> LFTIMEOUTERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CMU_IEN_CMUERR  -----------------------------------
// SVD Line: 5065

//  <item> SFDITEM_FIELD__CMU_IEN_CMUERR
//    <name> CMUERR </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400E40AC) CMUERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_IEN ) </loc>
//      <o.31..31> CMUERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CMU_IEN  ------------------------------------
// SVD Line: 4958

//  <rtree> SFDITEM_REG__CMU_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40AC) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((CMU_IEN >> 0) & 0xFFFFFFFF), ((CMU_IEN = (CMU_IEN & ~(0x80007F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x80007F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_IEN_HFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_HFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_LFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_LFXORDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_AUXHFRCORDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_CALRDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_CALOF </item>
//    <item> SFDITEM_FIELD__CMU_IEN_HFXODISERR </item>
//    <item> SFDITEM_FIELD__CMU_IEN_HFXOAUTOSW </item>
//    <item> SFDITEM_FIELD__CMU_IEN_HFXOPEAKDETERR </item>
//    <item> SFDITEM_FIELD__CMU_IEN_HFXOPEAKDETRDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_HFXOSHUNTOPTRDY </item>
//    <item> SFDITEM_FIELD__CMU_IEN_HFRCODIS </item>
//    <item> SFDITEM_FIELD__CMU_IEN_LFTIMEOUTERR </item>
//    <item> SFDITEM_FIELD__CMU_IEN_CMUERR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_HFBUSCLKEN0  -----------------------------
// SVD Line: 5074

unsigned int CMU_HFBUSCLKEN0 __AT (0x400E40B0);



// -----------------------------  Field Item: CMU_HFBUSCLKEN0_LE  ---------------------------------
// SVD Line: 5083

//  <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_LE
//    <name> LE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E40B0) Low Energy Peripheral Interface Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFBUSCLKEN0 ) </loc>
//      <o.0..0> LE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_HFBUSCLKEN0_CRYPTO  -------------------------------
// SVD Line: 5090

//  <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_CRYPTO
//    <name> CRYPTO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E40B0) Advanced Encryption Standard Accelerator Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFBUSCLKEN0 ) </loc>
//      <o.1..1> CRYPTO
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFBUSCLKEN0_GPIO  --------------------------------
// SVD Line: 5097

//  <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_GPIO
//    <name> GPIO </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E40B0) General purpose Input/Output Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFBUSCLKEN0 ) </loc>
//      <o.2..2> GPIO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CMU_HFBUSCLKEN0_PRS  --------------------------------
// SVD Line: 5104

//  <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_PRS
//    <name> PRS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E40B0) Peripheral Reflex System Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFBUSCLKEN0 ) </loc>
//      <o.3..3> PRS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFBUSCLKEN0_LDMA  --------------------------------
// SVD Line: 5111

//  <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_LDMA
//    <name> LDMA </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E40B0) Linked Direct Memory Access Controller Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFBUSCLKEN0 ) </loc>
//      <o.4..4> LDMA
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFBUSCLKEN0_GPCRC  -------------------------------
// SVD Line: 5118

//  <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_GPCRC
//    <name> GPCRC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E40B0) General Purpose CRC Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFBUSCLKEN0 ) </loc>
//      <o.5..5> GPCRC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: CMU_HFBUSCLKEN0  --------------------------------
// SVD Line: 5074

//  <rtree> SFDITEM_REG__CMU_HFBUSCLKEN0
//    <name> HFBUSCLKEN0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40B0) High Frequency Bus Clock Enable Register 0 </i>
//    <loc> ( (unsigned int)((CMU_HFBUSCLKEN0 >> 0) & 0xFFFFFFFF), ((CMU_HFBUSCLKEN0 = (CMU_HFBUSCLKEN0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_LE </item>
//    <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_CRYPTO </item>
//    <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_GPIO </item>
//    <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_PRS </item>
//    <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_LDMA </item>
//    <item> SFDITEM_FIELD__CMU_HFBUSCLKEN0_GPCRC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_HFPERCLKEN0  -----------------------------
// SVD Line: 5127

unsigned int CMU_HFPERCLKEN0 __AT (0x400E40C0);



// ---------------------------  Field Item: CMU_HFPERCLKEN0_TIMER0  -------------------------------
// SVD Line: 5136

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_TIMER0
//    <name> TIMER0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E40C0) Timer 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.0..0> TIMER0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_HFPERCLKEN0_TIMER1  -------------------------------
// SVD Line: 5143

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_TIMER1
//    <name> TIMER1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E40C0) Timer 1 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.1..1> TIMER1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_HFPERCLKEN0_USART0  -------------------------------
// SVD Line: 5150

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_USART0
//    <name> USART0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E40C0) Universal Synchronous/Asynchronous Receiver/Transmitter 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.2..2> USART0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_HFPERCLKEN0_USART1  -------------------------------
// SVD Line: 5157

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_USART1
//    <name> USART1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E40C0) Universal Synchronous/Asynchronous Receiver/Transmitter 1 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.3..3> USART1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFPERCLKEN0_ACMP0  -------------------------------
// SVD Line: 5164

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_ACMP0
//    <name> ACMP0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E40C0) Analog Comparator 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.4..4> ACMP0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFPERCLKEN0_ACMP1  -------------------------------
// SVD Line: 5171

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_ACMP1
//    <name> ACMP1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E40C0) Analog Comparator 1 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.5..5> ACMP1
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_HFPERCLKEN0_CRYOTIMER  -----------------------------
// SVD Line: 5178

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_CRYOTIMER
//    <name> CRYOTIMER </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400E40C0) CRYOTIMER Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.6..6> CRYOTIMER
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFPERCLKEN0_I2C0  --------------------------------
// SVD Line: 5185

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_I2C0
//    <name> I2C0 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400E40C0) I2C 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.7..7> I2C0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFPERCLKEN0_ADC0  --------------------------------
// SVD Line: 5192

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_ADC0
//    <name> ADC0 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E40C0) Analog to Digital Converter 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.8..8> ADC0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_HFPERCLKEN0_IDAC0  -------------------------------
// SVD Line: 5199

//  <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_IDAC0
//    <name> IDAC0 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400E40C0) Current Digital to Analog Converter 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_HFPERCLKEN0 ) </loc>
//      <o.9..9> IDAC0
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: CMU_HFPERCLKEN0  --------------------------------
// SVD Line: 5127

//  <rtree> SFDITEM_REG__CMU_HFPERCLKEN0
//    <name> HFPERCLKEN0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40C0) High Frequency Peripheral Clock Enable Register 0 </i>
//    <loc> ( (unsigned int)((CMU_HFPERCLKEN0 >> 0) & 0xFFFFFFFF), ((CMU_HFPERCLKEN0 = (CMU_HFPERCLKEN0 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_TIMER0 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_TIMER1 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_USART0 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_USART1 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_ACMP0 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_ACMP1 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_CRYOTIMER </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_I2C0 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_ADC0 </item>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKEN0_IDAC0 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_HFRADIOCLKEN0  ----------------------------
// SVD Line: 5208

unsigned int CMU_HFRADIOCLKEN0 __AT (0x400E40C8);



// ------------------------  Field Item: CMU_HFRADIOCLKEN0_RADIOCLOCKS  ---------------------------
// SVD Line: 5217

//  <item> SFDITEM_FIELD__CMU_HFRADIOCLKEN0_RADIOCLOCKS
//    <name> RADIOCLOCKS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40C8) Radio clocks Clock Enable </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_HFRADIOCLKEN0 >> 0) & 0xFFFFFFFF), ((CMU_HFRADIOCLKEN0 = (CMU_HFRADIOCLKEN0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_HFRADIOCLKEN0  -------------------------------
// SVD Line: 5208

//  <rtree> SFDITEM_REG__CMU_HFRADIOCLKEN0
//    <name> HFRADIOCLKEN0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40C8) High Frequency Peripheral Clock Enable Register 0 </i>
//    <loc> ( (unsigned int)((CMU_HFRADIOCLKEN0 >> 0) & 0xFFFFFFFF), ((CMU_HFRADIOCLKEN0 = (CMU_HFRADIOCLKEN0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFRADIOCLKEN0_RADIOCLOCKS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFACLKEN0  ------------------------------
// SVD Line: 5226

unsigned int CMU_LFACLKEN0 __AT (0x400E40E0);



// ---------------------------  Field Item: CMU_LFACLKEN0_LETIMER0  -------------------------------
// SVD Line: 5235

//  <item> SFDITEM_FIELD__CMU_LFACLKEN0_LETIMER0
//    <name> LETIMER0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E40E0) Low Energy Timer 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFACLKEN0 ) </loc>
//      <o.0..0> LETIMER0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFACLKEN0  ---------------------------------
// SVD Line: 5226

//  <rtree> SFDITEM_REG__CMU_LFACLKEN0
//    <name> LFACLKEN0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40E0) Low Frequency a Clock Enable Register 0 (Async Reg) </i>
//    <loc> ( (unsigned int)((CMU_LFACLKEN0 >> 0) & 0xFFFFFFFF), ((CMU_LFACLKEN0 = (CMU_LFACLKEN0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFACLKEN0_LETIMER0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFBCLKEN0  ------------------------------
// SVD Line: 5244

unsigned int CMU_LFBCLKEN0 __AT (0x400E40E8);



// ----------------------------  Field Item: CMU_LFBCLKEN0_LEUART0  -------------------------------
// SVD Line: 5253

//  <item> SFDITEM_FIELD__CMU_LFBCLKEN0_LEUART0
//    <name> LEUART0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E40E8) Low Energy UART 0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFBCLKEN0 ) </loc>
//      <o.0..0> LEUART0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFBCLKEN0  ---------------------------------
// SVD Line: 5244

//  <rtree> SFDITEM_REG__CMU_LFBCLKEN0
//    <name> LFBCLKEN0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40E8) Low Frequency B Clock Enable Register 0 (Async Reg) </i>
//    <loc> ( (unsigned int)((CMU_LFBCLKEN0 >> 0) & 0xFFFFFFFF), ((CMU_LFBCLKEN0 = (CMU_LFBCLKEN0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFBCLKEN0_LEUART0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFECLKEN0  ------------------------------
// SVD Line: 5262

unsigned int CMU_LFECLKEN0 __AT (0x400E40F0);



// -----------------------------  Field Item: CMU_LFECLKEN0_RTCC  ---------------------------------
// SVD Line: 5271

//  <item> SFDITEM_FIELD__CMU_LFECLKEN0_RTCC
//    <name> RTCC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E40F0) Real-Time Counter and Calendar Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_LFECLKEN0 ) </loc>
//      <o.0..0> RTCC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFECLKEN0  ---------------------------------
// SVD Line: 5262

//  <rtree> SFDITEM_REG__CMU_LFECLKEN0
//    <name> LFECLKEN0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E40F0) Low Frequency E Clock Enable Register 0 (Async Reg) </i>
//    <loc> ( (unsigned int)((CMU_LFECLKEN0 >> 0) & 0xFFFFFFFF), ((CMU_LFECLKEN0 = (CMU_LFECLKEN0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFECLKEN0_RTCC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_HFPRESC  -------------------------------
// SVD Line: 5280

unsigned int CMU_HFPRESC __AT (0x400E4100);



// ------------------------------  Field Item: CMU_HFPRESC_PRESC  ---------------------------------
// SVD Line: 5289

//  <item> SFDITEM_FIELD__CMU_HFPRESC_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x400E4100) \nHFCLK Prescaler\n0 : NODIVISION = NODIVISION\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFPRESC ) </loc>
//      <o.12..8> PRESC
//        <0=> 0: NODIVISION = NODIVISION
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: CMU_HFPRESC_HFCLKLEPRESC  ------------------------------
// SVD Line: 5302

//  <item> SFDITEM_FIELD__CMU_HFPRESC_HFCLKLEPRESC
//    <name> HFCLKLEPRESC </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400E4100) \nHFCLKLE Prescaler\n0 : DIV2 = HFCLKLE is HFBUSCLKLE divided by 2.\n1 : DIV4 = HFCLKLE is HFBUSCLKLE divided by 4. </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFPRESC ) </loc>
//      <o.24..24> HFCLKLEPRESC
//        <0=> 0: DIV2 = HFCLKLE is HFBUSCLKLE divided by 2.
//        <1=> 1: DIV4 = HFCLKLE is HFBUSCLKLE divided by 4.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: CMU_HFPRESC  ----------------------------------
// SVD Line: 5280

//  <rtree> SFDITEM_REG__CMU_HFPRESC
//    <name> HFPRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4100) High Frequency Clock Prescaler Register </i>
//    <loc> ( (unsigned int)((CMU_HFPRESC >> 0) & 0xFFFFFFFF), ((CMU_HFPRESC = (CMU_HFPRESC & ~(0x1001F00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1001F00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFPRESC_PRESC </item>
//    <item> SFDITEM_FIELD__CMU_HFPRESC_HFCLKLEPRESC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_HFCOREPRESC  -----------------------------
// SVD Line: 5323

unsigned int CMU_HFCOREPRESC __AT (0x400E4108);



// ----------------------------  Field Item: CMU_HFCOREPRESC_PRESC  -------------------------------
// SVD Line: 5332

//  <item> SFDITEM_FIELD__CMU_HFCOREPRESC_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 16..8] RW (@ 0x400E4108) HFCORECLK Prescaler </i>
//    <edit> 
//      <loc> ( (unsigned short)((CMU_HFCOREPRESC >> 8) & 0x1FF), ((CMU_HFCOREPRESC = (CMU_HFCOREPRESC & ~(0x1FFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: CMU_HFCOREPRESC  --------------------------------
// SVD Line: 5323

//  <rtree> SFDITEM_REG__CMU_HFCOREPRESC
//    <name> HFCOREPRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4108) High Frequency Core Clock Prescaler Register </i>
//    <loc> ( (unsigned int)((CMU_HFCOREPRESC >> 0) & 0xFFFFFFFF), ((CMU_HFCOREPRESC = (CMU_HFCOREPRESC & ~(0x1FF00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFCOREPRESC_PRESC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_HFPERPRESC  -----------------------------
// SVD Line: 5347

unsigned int CMU_HFPERPRESC __AT (0x400E410C);



// ----------------------------  Field Item: CMU_HFPERPRESC_PRESC  --------------------------------
// SVD Line: 5356

//  <item> SFDITEM_FIELD__CMU_HFPERPRESC_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 16..8] RW (@ 0x400E410C) HFPERCLK Prescaler </i>
//    <edit> 
//      <loc> ( (unsigned short)((CMU_HFPERPRESC >> 8) & 0x1FF), ((CMU_HFPERPRESC = (CMU_HFPERPRESC & ~(0x1FFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: CMU_HFPERPRESC  ---------------------------------
// SVD Line: 5347

//  <rtree> SFDITEM_REG__CMU_HFPERPRESC
//    <name> HFPERPRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E410C) High Frequency Peripheral Clock Prescaler Register </i>
//    <loc> ( (unsigned int)((CMU_HFPERPRESC >> 0) & 0xFFFFFFFF), ((CMU_HFPERPRESC = (CMU_HFPERPRESC & ~(0x1FF00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFPERPRESC_PRESC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_HFRADIOPRESC  ----------------------------
// SVD Line: 5371

unsigned int CMU_HFRADIOPRESC __AT (0x400E4110);



// ---------------------------  Field Item: CMU_HFRADIOPRESC_PRESC  -------------------------------
// SVD Line: 5380

//  <item> SFDITEM_FIELD__CMU_HFRADIOPRESC_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 16..8] RW (@ 0x400E4110) HFPERCLK Prescaler </i>
//    <edit> 
//      <loc> ( (unsigned short)((CMU_HFRADIOPRESC >> 8) & 0x1FF), ((CMU_HFRADIOPRESC = (CMU_HFRADIOPRESC & ~(0x1FFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_HFRADIOPRESC  --------------------------------
// SVD Line: 5371

//  <rtree> SFDITEM_REG__CMU_HFRADIOPRESC
//    <name> HFRADIOPRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4110) Radio Clock Prescaler Register </i>
//    <loc> ( (unsigned int)((CMU_HFRADIOPRESC >> 0) & 0xFFFFFFFF), ((CMU_HFRADIOPRESC = (CMU_HFRADIOPRESC & ~(0x1FF00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFRADIOPRESC_PRESC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_HFEXPPRESC  -----------------------------
// SVD Line: 5395

unsigned int CMU_HFEXPPRESC __AT (0x400E4114);



// ----------------------------  Field Item: CMU_HFEXPPRESC_PRESC  --------------------------------
// SVD Line: 5404

//  <item> SFDITEM_FIELD__CMU_HFEXPPRESC_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x400E4114) \nHFEXPCLK Prescaler\n0 : NODIVISION = NODIVISION\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_HFEXPPRESC ) </loc>
//      <o.12..8> PRESC
//        <0=> 0: NODIVISION = NODIVISION
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: CMU_HFEXPPRESC  ---------------------------------
// SVD Line: 5395

//  <rtree> SFDITEM_REG__CMU_HFEXPPRESC
//    <name> HFEXPPRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4114) High Frequency Export Clock Prescaler Register </i>
//    <loc> ( (unsigned int)((CMU_HFEXPPRESC >> 0) & 0xFFFFFFFF), ((CMU_HFEXPPRESC = (CMU_HFEXPPRESC & ~(0x1F00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFEXPPRESC_PRESC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFAPRESC0  ------------------------------
// SVD Line: 5419

unsigned int CMU_LFAPRESC0 __AT (0x400E4120);



// ---------------------------  Field Item: CMU_LFAPRESC0_LETIMER0  -------------------------------
// SVD Line: 5428

//  <item> SFDITEM_FIELD__CMU_LFAPRESC0_LETIMER0
//    <name> LETIMER0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E4120) \nLow Energy Timer 0 Prescaler\n0 : DIV1 = LFACLKLETIMER0 = LFACLK\n1 : DIV2 = LFACLKLETIMER0 = LFACLK/2\n2 : DIV4 = LFACLKLETIMER0 = LFACLK/4\n3 : DIV8 = LFACLKLETIMER0 = LFACLK/8\n4 : DIV16 = LFACLKLETIMER0 = LFACLK/16\n5 : DIV32 = LFACLKLETIMER0 = LFACLK/32\n6 : DIV64 = LFACLKLETIMER0 = LFACLK/64\n7 : DIV128 = LFACLKLETIMER0 = LFACLK/128\n8 : DIV256 = LFACLKLETIMER0 = LFACLK/256\n9 : DIV512 = LFACLKLETIMER0 = LFACLK/512\n10 : DIV1024 = LFACLKLETIMER0 = LFACLK/1024\n11 : DIV2048 = LFACLKLETIMER0 = LFACLK/2048\n12 : DIV4096 = LFACLKLETIMER0 = LFACLK/4096\n13 : DIV8192 = LFACLKLETIMER0 = LFACLK/8192\n14 : DIV16384 = LFACLKLETIMER0 = LFACLK/16384\n15 : DIV32768 = LFACLKLETIMER0 = LFACLK/32768 </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFAPRESC0 ) </loc>
//      <o.3..0> LETIMER0
//        <0=> 0: DIV1 = LFACLKLETIMER0 = LFACLK
//        <1=> 1: DIV2 = LFACLKLETIMER0 = LFACLK/2
//        <2=> 2: DIV4 = LFACLKLETIMER0 = LFACLK/4
//        <3=> 3: DIV8 = LFACLKLETIMER0 = LFACLK/8
//        <4=> 4: DIV16 = LFACLKLETIMER0 = LFACLK/16
//        <5=> 5: DIV32 = LFACLKLETIMER0 = LFACLK/32
//        <6=> 6: DIV64 = LFACLKLETIMER0 = LFACLK/64
//        <7=> 7: DIV128 = LFACLKLETIMER0 = LFACLK/128
//        <8=> 8: DIV256 = LFACLKLETIMER0 = LFACLK/256
//        <9=> 9: DIV512 = LFACLKLETIMER0 = LFACLK/512
//        <10=> 10: DIV1024 = LFACLKLETIMER0 = LFACLK/1024
//        <11=> 11: DIV2048 = LFACLKLETIMER0 = LFACLK/2048
//        <12=> 12: DIV4096 = LFACLKLETIMER0 = LFACLK/4096
//        <13=> 13: DIV8192 = LFACLKLETIMER0 = LFACLK/8192
//        <14=> 14: DIV16384 = LFACLKLETIMER0 = LFACLK/16384
//        <15=> 15: DIV32768 = LFACLKLETIMER0 = LFACLK/32768
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFAPRESC0  ---------------------------------
// SVD Line: 5419

//  <rtree> SFDITEM_REG__CMU_LFAPRESC0
//    <name> LFAPRESC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4120) Low Frequency a Prescaler Register 0 (Async Reg) </i>
//    <loc> ( (unsigned int)((CMU_LFAPRESC0 >> 0) & 0xFFFFFFFF), ((CMU_LFAPRESC0 = (CMU_LFAPRESC0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFAPRESC0_LETIMER0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFBPRESC0  ------------------------------
// SVD Line: 5519

unsigned int CMU_LFBPRESC0 __AT (0x400E4128);



// ----------------------------  Field Item: CMU_LFBPRESC0_LEUART0  -------------------------------
// SVD Line: 5528

//  <item> SFDITEM_FIELD__CMU_LFBPRESC0_LEUART0
//    <name> LEUART0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x400E4128) \nLow Energy UART 0 Prescaler\n0 : DIV1 = LFBCLKLEUART0 = LFBCLK\n1 : DIV2 = LFBCLKLEUART0 = LFBCLK/2\n2 : DIV4 = LFBCLKLEUART0 = LFBCLK/4\n3 : DIV8 = LFBCLKLEUART0 = LFBCLK/8 </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFBPRESC0 ) </loc>
//      <o.1..0> LEUART0
//        <0=> 0: DIV1 = LFBCLKLEUART0 = LFBCLK
//        <1=> 1: DIV2 = LFBCLKLEUART0 = LFBCLK/2
//        <2=> 2: DIV4 = LFBCLKLEUART0 = LFBCLK/4
//        <3=> 3: DIV8 = LFBCLKLEUART0 = LFBCLK/8
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFBPRESC0  ---------------------------------
// SVD Line: 5519

//  <rtree> SFDITEM_REG__CMU_LFBPRESC0
//    <name> LFBPRESC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4128) Low Frequency B Prescaler Register 0 (Async Reg) </i>
//    <loc> ( (unsigned int)((CMU_LFBPRESC0 >> 0) & 0xFFFFFFFF), ((CMU_LFBPRESC0 = (CMU_LFBPRESC0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFBPRESC0_LEUART0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_LFEPRESC0  ------------------------------
// SVD Line: 5559

unsigned int CMU_LFEPRESC0 __AT (0x400E4130);



// -----------------------------  Field Item: CMU_LFEPRESC0_RTCC  ---------------------------------
// SVD Line: 5568

//  <item> SFDITEM_FIELD__CMU_LFEPRESC0_RTCC
//    <name> RTCC </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400E4130) \nReal-Time Counter and Calendar Prescaler\n0 : DIV1 = LFECLKRTCC = LFECLK\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_LFEPRESC0 ) </loc>
//      <o.3..0> RTCC
//        <0=> 0: DIV1 = LFECLKRTCC = LFECLK
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LFEPRESC0  ---------------------------------
// SVD Line: 5559

//  <rtree> SFDITEM_REG__CMU_LFEPRESC0
//    <name> LFEPRESC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4130) Low Frequency E Prescaler Register 0 (Async Reg) </i>
//    <loc> ( (unsigned int)((CMU_LFEPRESC0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CMU_LFEPRESC0_RTCC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_SYNCBUSY  ------------------------------
// SVD Line: 5584

unsigned int CMU_SYNCBUSY __AT (0x400E4140);



// ---------------------------  Field Item: CMU_SYNCBUSY_LFACLKEN0  -------------------------------
// SVD Line: 5593

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFACLKEN0
//    <name> LFACLKEN0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E4140) Low Frequency a Clock Enable 0 Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.0..0> LFACLKEN0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_SYNCBUSY_LFAPRESC0  -------------------------------
// SVD Line: 5600

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFAPRESC0
//    <name> LFAPRESC0 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E4140) Low Frequency a Prescaler 0 Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.2..2> LFAPRESC0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_SYNCBUSY_LFBCLKEN0  -------------------------------
// SVD Line: 5607

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFBCLKEN0
//    <name> LFBCLKEN0 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E4140) Low Frequency B Clock Enable 0 Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.4..4> LFBCLKEN0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_SYNCBUSY_LFBPRESC0  -------------------------------
// SVD Line: 5614

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFBPRESC0
//    <name> LFBPRESC0 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x400E4140) Low Frequency B Prescaler 0 Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.6..6> LFBPRESC0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_SYNCBUSY_LFECLKEN0  -------------------------------
// SVD Line: 5621

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFECLKEN0
//    <name> LFECLKEN0 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x400E4140) Low Frequency E Clock Enable 0 Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.16..16> LFECLKEN0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_SYNCBUSY_LFEPRESC0  -------------------------------
// SVD Line: 5628

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFEPRESC0
//    <name> LFEPRESC0 </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x400E4140) Low Frequency E Prescaler 0 Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.18..18> LFEPRESC0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_SYNCBUSY_HFRCOBSY  -------------------------------
// SVD Line: 5635

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_HFRCOBSY
//    <name> HFRCOBSY </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x400E4140) HFRCO Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.24..24> HFRCOBSY
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_SYNCBUSY_AUXHFRCOBSY  ------------------------------
// SVD Line: 5642

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_AUXHFRCOBSY
//    <name> AUXHFRCOBSY </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x400E4140) AUXHFRCO Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.25..25> AUXHFRCOBSY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_SYNCBUSY_LFRCOBSY  -------------------------------
// SVD Line: 5649

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFRCOBSY
//    <name> LFRCOBSY </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x400E4140) LFRCO Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.26..26> LFRCOBSY
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_SYNCBUSY_LFRCOVREFBSY  -----------------------------
// SVD Line: 5656

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFRCOVREFBSY
//    <name> LFRCOVREFBSY </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x400E4140) LFRCO VREF Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.27..27> LFRCOVREFBSY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_SYNCBUSY_HFXOBSY  --------------------------------
// SVD Line: 5663

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_HFXOBSY
//    <name> HFXOBSY </name>
//    <r> 
//    <i> [Bit 28] RO (@ 0x400E4140) HFXO Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.28..28> HFXOBSY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CMU_SYNCBUSY_LFXOBSY  --------------------------------
// SVD Line: 5670

//  <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFXOBSY
//    <name> LFXOBSY </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x400E4140) LFXO Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_SYNCBUSY ) </loc>
//      <o.29..29> LFXOBSY
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_SYNCBUSY  ----------------------------------
// SVD Line: 5584

//  <rtree> SFDITEM_REG__CMU_SYNCBUSY
//    <name> SYNCBUSY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E4140) Synchronization Busy Register </i>
//    <loc> ( (unsigned int)((CMU_SYNCBUSY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFACLKEN0 </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFAPRESC0 </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFBCLKEN0 </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFBPRESC0 </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFECLKEN0 </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFEPRESC0 </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_HFRCOBSY </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_AUXHFRCOBSY </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFRCOBSY </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFRCOVREFBSY </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_HFXOBSY </item>
//    <item> SFDITEM_FIELD__CMU_SYNCBUSY_LFXOBSY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CMU_FREEZE  -------------------------------
// SVD Line: 5679

unsigned int CMU_FREEZE __AT (0x400E4144);



// ----------------------------  Field Item: CMU_FREEZE_REGFREEZE  --------------------------------
// SVD Line: 5688

//  <item> SFDITEM_FIELD__CMU_FREEZE_REGFREEZE
//    <name> REGFREEZE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E4144) Register Update Freeze </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_FREEZE ) </loc>
//      <o.0..0> REGFREEZE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMU_FREEZE  -----------------------------------
// SVD Line: 5679

//  <rtree> SFDITEM_REG__CMU_FREEZE
//    <name> FREEZE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4144) Freeze Register </i>
//    <loc> ( (unsigned int)((CMU_FREEZE >> 0) & 0xFFFFFFFF), ((CMU_FREEZE = (CMU_FREEZE & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_FREEZE_REGFREEZE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_PCNTCTRL  ------------------------------
// SVD Line: 5697

unsigned int CMU_PCNTCTRL __AT (0x400E4150);



// ---------------------------  Field Item: CMU_PCNTCTRL_PCNT0CLKEN  ------------------------------
// SVD Line: 5706

//  <item> SFDITEM_FIELD__CMU_PCNTCTRL_PCNT0CLKEN
//    <name> PCNT0CLKEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E4150) PCNT0 Clock Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_PCNTCTRL ) </loc>
//      <o.0..0> PCNT0CLKEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: CMU_PCNTCTRL_PCNT0CLKSEL  ------------------------------
// SVD Line: 5713

//  <item> SFDITEM_FIELD__CMU_PCNTCTRL_PCNT0CLKSEL
//    <name> PCNT0CLKSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E4150) PCNT0 Clock Select </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_PCNTCTRL ) </loc>
//      <o.1..1> PCNT0CLKSEL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_PCNTCTRL  ----------------------------------
// SVD Line: 5697

//  <rtree> SFDITEM_REG__CMU_PCNTCTRL
//    <name> PCNTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4150) PCNT Control Register </i>
//    <loc> ( (unsigned int)((CMU_PCNTCTRL >> 0) & 0xFFFFFFFF), ((CMU_PCNTCTRL = (CMU_PCNTCTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_PCNTCTRL_PCNT0CLKEN </item>
//    <item> SFDITEM_FIELD__CMU_PCNTCTRL_PCNT0CLKSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_LCDCTRL  -------------------------------
// SVD Line: 5722

unsigned int CMU_LCDCTRL __AT (0x400E4154);



// -----------------------------  Field Item: CMU_LCDCTRL_LCDCLK  ---------------------------------
// SVD Line: 5731

//  <item> SFDITEM_FIELD__CMU_LCDCTRL_LCDCLK
//    <name> LCDCLK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4154) LCD clocks </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_LCDCTRL >> 0) & 0xFFFFFFFF), ((CMU_LCDCTRL = (CMU_LCDCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CMU_LCDCTRL  ----------------------------------
// SVD Line: 5722

//  <rtree> SFDITEM_REG__CMU_LCDCTRL
//    <name> LCDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4154) LCD Control Register </i>
//    <loc> ( (unsigned int)((CMU_LCDCTRL >> 0) & 0xFFFFFFFF), ((CMU_LCDCTRL = (CMU_LCDCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LCDCTRL_LCDCLK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_LVDSCTRL  ------------------------------
// SVD Line: 5740

unsigned int CMU_LVDSCTRL __AT (0x400E4158);



// ----------------------------  Field Item: CMU_LVDSCTRL_LVDSCLK  --------------------------------
// SVD Line: 5749

//  <item> SFDITEM_FIELD__CMU_LVDSCTRL_LVDSCLK
//    <name> LVDSCLK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4158) LVDS clocks </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_LVDSCTRL >> 0) & 0xFFFFFFFF), ((CMU_LVDSCTRL = (CMU_LVDSCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: CMU_LVDSCTRL  ----------------------------------
// SVD Line: 5740

//  <rtree> SFDITEM_REG__CMU_LVDSCTRL
//    <name> LVDSCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4158) LVDSCTRL Control Register </i>
//    <loc> ( (unsigned int)((CMU_LVDSCTRL >> 0) & 0xFFFFFFFF), ((CMU_LVDSCTRL = (CMU_LVDSCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LVDSCTRL_LVDSCLK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_ADCCTRL  -------------------------------
// SVD Line: 5758

unsigned int CMU_ADCCTRL __AT (0x400E415C);



// ---------------------------  Field Item: CMU_ADCCTRL_ADC0CLKSEL  -------------------------------
// SVD Line: 5767

//  <item> SFDITEM_FIELD__CMU_ADCCTRL_ADC0CLKSEL
//    <name> ADC0CLKSEL </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x400E415C) \nADC0 Clock Select\n0 : DISABLED = ADC0 is not clocked\n1 : AUXHFRCO = AUXHFRCO is clocking ADC0\n2 : HFXO = HFXO is clocking ADC0\n3 : HFSRCCLK = HFSRCCLK is clocking ADC0 </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_ADCCTRL ) </loc>
//      <o.5..4> ADC0CLKSEL
//        <0=> 0: DISABLED = ADC0 is not clocked
//        <1=> 1: AUXHFRCO = AUXHFRCO is clocking ADC0
//        <2=> 2: HFXO = HFXO is clocking ADC0
//        <3=> 3: HFSRCCLK = HFSRCCLK is clocking ADC0
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: CMU_ADCCTRL_ADC0CLKINV  -------------------------------
// SVD Line: 5796

//  <item> SFDITEM_FIELD__CMU_ADCCTRL_ADC0CLKINV
//    <name> ADC0CLKINV </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E415C) Invert Clock Selected By ADC0CLKSEL </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_ADCCTRL ) </loc>
//      <o.8..8> ADC0CLKINV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CMU_ADCCTRL  ----------------------------------
// SVD Line: 5758

//  <rtree> SFDITEM_REG__CMU_ADCCTRL
//    <name> ADCCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E415C) ADC Control Register </i>
//    <loc> ( (unsigned int)((CMU_ADCCTRL >> 0) & 0xFFFFFFFF), ((CMU_ADCCTRL = (CMU_ADCCTRL & ~(0x130UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x130) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_ADCCTRL_ADC0CLKSEL </item>
//    <item> SFDITEM_FIELD__CMU_ADCCTRL_ADC0CLKINV </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_ROUTEPEN  ------------------------------
// SVD Line: 5805

unsigned int CMU_ROUTEPEN __AT (0x400E4170);



// ---------------------------  Field Item: CMU_ROUTEPEN_CLKOUT0PEN  ------------------------------
// SVD Line: 5814

//  <item> SFDITEM_FIELD__CMU_ROUTEPEN_CLKOUT0PEN
//    <name> CLKOUT0PEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E4170) CLKOUT0 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_ROUTEPEN ) </loc>
//      <o.0..0> CLKOUT0PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CMU_ROUTEPEN_CLKOUT1PEN  ------------------------------
// SVD Line: 5821

//  <item> SFDITEM_FIELD__CMU_ROUTEPEN_CLKOUT1PEN
//    <name> CLKOUT1PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E4170) CLKOUT1 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CMU_ROUTEPEN ) </loc>
//      <o.1..1> CLKOUT1PEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CMU_ROUTEPEN  ----------------------------------
// SVD Line: 5805

//  <rtree> SFDITEM_REG__CMU_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4170) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((CMU_ROUTEPEN >> 0) & 0xFFFFFFFF), ((CMU_ROUTEPEN = (CMU_ROUTEPEN & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_ROUTEPEN_CLKOUT0PEN </item>
//    <item> SFDITEM_FIELD__CMU_ROUTEPEN_CLKOUT1PEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CMU_ROUTELOC0  ------------------------------
// SVD Line: 5830

unsigned int CMU_ROUTELOC0 __AT (0x400E4174);



// --------------------------  Field Item: CMU_ROUTELOC0_CLKOUT0LOC  ------------------------------
// SVD Line: 5839

//  <item> SFDITEM_FIELD__CMU_ROUTELOC0_CLKOUT0LOC
//    <name> CLKOUT0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400E4174) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_ROUTELOC0 ) </loc>
//      <o.5..0> CLKOUT0LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: CMU_ROUTELOC0_CLKOUT1LOC  ------------------------------
// SVD Line: 5888

//  <item> SFDITEM_FIELD__CMU_ROUTELOC0_CLKOUT1LOC
//    <name> CLKOUT1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400E4174) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CMU_ROUTELOC0 ) </loc>
//      <o.13..8> CLKOUT1LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CMU_ROUTELOC0  ---------------------------------
// SVD Line: 5830

//  <rtree> SFDITEM_REG__CMU_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4174) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((CMU_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((CMU_ROUTELOC0 = (CMU_ROUTELOC0 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_ROUTELOC0_CLKOUT0LOC </item>
//    <item> SFDITEM_FIELD__CMU_ROUTELOC0_CLKOUT1LOC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CMU_LOCK  --------------------------------
// SVD Line: 5939

unsigned int CMU_LOCK __AT (0x400E4180);



// ------------------------------  Field Item: CMU_LOCK_LOCKKEY  ----------------------------------
// SVD Line: 5948

//  <item> SFDITEM_FIELD__CMU_LOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400E4180) Configuration Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((CMU_LOCK >> 0) & 0xFFFF), ((CMU_LOCK = (CMU_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CMU_LOCK  ------------------------------------
// SVD Line: 5939

//  <rtree> SFDITEM_REG__CMU_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4180) Configuration Lock Register </i>
//    <loc> ( (unsigned int)((CMU_LOCK >> 0) & 0xFFFFFFFF), ((CMU_LOCK = (CMU_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LOCK_LOCKKEY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CMU_RFLOCK0  -------------------------------
// SVD Line: 5967

unsigned int CMU_RFLOCK0 __AT (0x400E4188);



// -----------------------------  Field Item: CMU_RFLOCK0_RFLOCK0  --------------------------------
// SVD Line: 5976

//  <item> SFDITEM_FIELD__CMU_RFLOCK0_RFLOCK0
//    <name> RFLOCK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4188) RFLOCK0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_RFLOCK0 >> 0) & 0xFFFFFFFF), ((CMU_RFLOCK0 = (CMU_RFLOCK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CMU_RFLOCK0  ----------------------------------
// SVD Line: 5967

//  <rtree> SFDITEM_REG__CMU_RFLOCK0
//    <name> RFLOCK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4188) RF LOCK Register </i>
//    <loc> ( (unsigned int)((CMU_RFLOCK0 >> 0) & 0xFFFFFFFF), ((CMU_RFLOCK0 = (CMU_RFLOCK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_RFLOCK0_RFLOCK0 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: CMU_HFBUSCLKENMASK0  ---------------------------
// SVD Line: 5985

unsigned int CMU_HFBUSCLKENMASK0 __AT (0x400E4190);



// ---------------------  Field Item: CMU_HFBUSCLKENMASK0_HFBUSCLKENMASK0  ------------------------
// SVD Line: 5994

//  <item> SFDITEM_FIELD__CMU_HFBUSCLKENMASK0_HFBUSCLKENMASK0
//    <name> HFBUSCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4190) HFBUSCLKENMASK0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_HFBUSCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_HFBUSCLKENMASK0 = (CMU_HFBUSCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CMU_HFBUSCLKENMASK0  ------------------------------
// SVD Line: 5985

//  <rtree> SFDITEM_REG__CMU_HFBUSCLKENMASK0
//    <name> HFBUSCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4190) HFBUSCLKENMASK0 </i>
//    <loc> ( (unsigned int)((CMU_HFBUSCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_HFBUSCLKENMASK0 = (CMU_HFBUSCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFBUSCLKENMASK0_HFBUSCLKENMASK0 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: CMU_HFPERCLKENMASK0  ---------------------------
// SVD Line: 6003

unsigned int CMU_HFPERCLKENMASK0 __AT (0x400E4198);



// ---------------------  Field Item: CMU_HFPERCLKENMASK0_HFPERCLKENMASK0  ------------------------
// SVD Line: 6012

//  <item> SFDITEM_FIELD__CMU_HFPERCLKENMASK0_HFPERCLKENMASK0
//    <name> HFPERCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4198) HFPERCLKENMASK0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_HFPERCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_HFPERCLKENMASK0 = (CMU_HFPERCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CMU_HFPERCLKENMASK0  ------------------------------
// SVD Line: 6003

//  <rtree> SFDITEM_REG__CMU_HFPERCLKENMASK0
//    <name> HFPERCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E4198) HFPERCLKENMASK0 </i>
//    <loc> ( (unsigned int)((CMU_HFPERCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_HFPERCLKENMASK0 = (CMU_HFPERCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFPERCLKENMASK0_HFPERCLKENMASK0 </item>
//  </rtree>
//  


// ----------------------  Register Item Address: CMU_HFRADIOCLKENMASK0  --------------------------
// SVD Line: 6021

unsigned int CMU_HFRADIOCLKENMASK0 __AT (0x400E41A4);



// -------------------  Field Item: CMU_HFRADIOCLKENMASK0_HFRADIOCLKENMASK0  ----------------------
// SVD Line: 6030

//  <item> SFDITEM_FIELD__CMU_HFRADIOCLKENMASK0_HFRADIOCLKENMASK0
//    <name> HFRADIOCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41A4) HFRADIOCLKENMASK0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_HFRADIOCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_HFRADIOCLKENMASK0 = (CMU_HFRADIOCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: CMU_HFRADIOCLKENMASK0  -----------------------------
// SVD Line: 6021

//  <rtree> SFDITEM_REG__CMU_HFRADIOCLKENMASK0
//    <name> HFRADIOCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41A4) HFRADIOCLKENMASK0 </i>
//    <loc> ( (unsigned int)((CMU_HFRADIOCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_HFRADIOCLKENMASK0 = (CMU_HFRADIOCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_HFRADIOCLKENMASK0_HFRADIOCLKENMASK0 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_LFACLKENMASK0  ----------------------------
// SVD Line: 6039

unsigned int CMU_LFACLKENMASK0 __AT (0x400E41B4);



// -----------------------  Field Item: CMU_LFACLKENMASK0_LFACLKENMASK0  --------------------------
// SVD Line: 6048

//  <item> SFDITEM_FIELD__CMU_LFACLKENMASK0_LFACLKENMASK0
//    <name> LFACLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41B4) LFACLKENMASK0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_LFACLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_LFACLKENMASK0 = (CMU_LFACLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_LFACLKENMASK0  -------------------------------
// SVD Line: 6039

//  <rtree> SFDITEM_REG__CMU_LFACLKENMASK0
//    <name> LFACLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41B4) LFACLKENMASK0 </i>
//    <loc> ( (unsigned int)((CMU_LFACLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_LFACLKENMASK0 = (CMU_LFACLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFACLKENMASK0_LFACLKENMASK0 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_LFBCLKENMASK0  ----------------------------
// SVD Line: 6057

unsigned int CMU_LFBCLKENMASK0 __AT (0x400E41BC);



// -----------------------  Field Item: CMU_LFBCLKENMASK0_LFBCLKENMASK0  --------------------------
// SVD Line: 6066

//  <item> SFDITEM_FIELD__CMU_LFBCLKENMASK0_LFBCLKENMASK0
//    <name> LFBCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41BC) LFBCLKENMASK0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_LFBCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_LFBCLKENMASK0 = (CMU_LFBCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_LFBCLKENMASK0  -------------------------------
// SVD Line: 6057

//  <rtree> SFDITEM_REG__CMU_LFBCLKENMASK0
//    <name> LFBCLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41BC) LFBCLKENMASK0 </i>
//    <loc> ( (unsigned int)((CMU_LFBCLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_LFBCLKENMASK0 = (CMU_LFBCLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFBCLKENMASK0_LFBCLKENMASK0 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_LFECLKENMASK0  ----------------------------
// SVD Line: 6075

unsigned int CMU_LFECLKENMASK0 __AT (0x400E41C4);



// -----------------------  Field Item: CMU_LFECLKENMASK0_LFECLKENMASK0  --------------------------
// SVD Line: 6084

//  <item> SFDITEM_FIELD__CMU_LFECLKENMASK0_LFECLKENMASK0
//    <name> LFECLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41C4) LFECLKENMASK0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_LFECLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_LFECLKENMASK0 = (CMU_LFECLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_LFECLKENMASK0  -------------------------------
// SVD Line: 6075

//  <rtree> SFDITEM_REG__CMU_LFECLKENMASK0
//    <name> LFECLKENMASK0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41C4) LFECLKENMASK0 </i>
//    <loc> ( (unsigned int)((CMU_LFECLKENMASK0 >> 0) & 0xFFFFFFFF), ((CMU_LFECLKENMASK0 = (CMU_LFECLKENMASK0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_LFECLKENMASK0_LFECLKENMASK0 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_PCNTCLKENMASK  ----------------------------
// SVD Line: 6093

unsigned int CMU_PCNTCLKENMASK __AT (0x400E41CC);



// -----------------------  Field Item: CMU_PCNTCLKENMASK_PCNTCLKENMASK  --------------------------
// SVD Line: 6102

//  <item> SFDITEM_FIELD__CMU_PCNTCLKENMASK_PCNTCLKENMASK
//    <name> PCNTCLKENMASK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41CC) PCNTCLKENMASK </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_PCNTCLKENMASK >> 0) & 0xFFFFFFFF), ((CMU_PCNTCLKENMASK = (CMU_PCNTCLKENMASK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_PCNTCLKENMASK  -------------------------------
// SVD Line: 6093

//  <rtree> SFDITEM_REG__CMU_PCNTCLKENMASK
//    <name> PCNTCLKENMASK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41CC) PCNTCLKENMASK </i>
//    <loc> ( (unsigned int)((CMU_PCNTCLKENMASK >> 0) & 0xFFFFFFFF), ((CMU_PCNTCLKENMASK = (CMU_PCNTCLKENMASK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_PCNTCLKENMASK_PCNTCLKENMASK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CMU_TEST  --------------------------------
// SVD Line: 6111

unsigned int CMU_TEST __AT (0x400E41D0);



// --------------------------------  Field Item: CMU_TEST_TEST  -----------------------------------
// SVD Line: 6120

//  <item> SFDITEM_FIELD__CMU_TEST_TEST
//    <name> TEST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41D0) TEST </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_TEST >> 0) & 0xFFFFFFFF), ((CMU_TEST = (CMU_TEST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CMU_TEST  ------------------------------------
// SVD Line: 6111

//  <rtree> SFDITEM_REG__CMU_TEST
//    <name> TEST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41D0) TEST </i>
//    <loc> ( (unsigned int)((CMU_TEST >> 0) & 0xFFFFFFFF), ((CMU_TEST = (CMU_TEST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_TEST_TEST </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_TESTHFRCOCTRL  ----------------------------
// SVD Line: 6129

unsigned int CMU_TESTHFRCOCTRL __AT (0x400E41D4);



// -----------------------  Field Item: CMU_TESTHFRCOCTRL_TESTHFRCOCTRL  --------------------------
// SVD Line: 6138

//  <item> SFDITEM_FIELD__CMU_TESTHFRCOCTRL_TESTHFRCOCTRL
//    <name> TESTHFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41D4) TESTHFRCOCTRL </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_TESTHFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTHFRCOCTRL = (CMU_TESTHFRCOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_TESTHFRCOCTRL  -------------------------------
// SVD Line: 6129

//  <rtree> SFDITEM_REG__CMU_TESTHFRCOCTRL
//    <name> TESTHFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41D4) TESTHFRCOCTRL </i>
//    <loc> ( (unsigned int)((CMU_TESTHFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTHFRCOCTRL = (CMU_TESTHFRCOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_TESTHFRCOCTRL_TESTHFRCOCTRL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: CMU_TESTAUXHFRCOCTRL  --------------------------
// SVD Line: 6147

unsigned int CMU_TESTAUXHFRCOCTRL __AT (0x400E41D8);



// --------------------  Field Item: CMU_TESTAUXHFRCOCTRL_TESTAUXHFRCOCTRL  -----------------------
// SVD Line: 6156

//  <item> SFDITEM_FIELD__CMU_TESTAUXHFRCOCTRL_TESTAUXHFRCOCTRL
//    <name> TESTAUXHFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41D8) TESTAUXHFRCOCTRL </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_TESTAUXHFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTAUXHFRCOCTRL = (CMU_TESTAUXHFRCOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: CMU_TESTAUXHFRCOCTRL  ------------------------------
// SVD Line: 6147

//  <rtree> SFDITEM_REG__CMU_TESTAUXHFRCOCTRL
//    <name> TESTAUXHFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41D8) TESTAUXHFRCOCTRL </i>
//    <loc> ( (unsigned int)((CMU_TESTAUXHFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTAUXHFRCOCTRL = (CMU_TESTAUXHFRCOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_TESTAUXHFRCOCTRL_TESTAUXHFRCOCTRL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CMU_TESTLFRCOCTRL  ----------------------------
// SVD Line: 6165

unsigned int CMU_TESTLFRCOCTRL __AT (0x400E41DC);



// -----------------------  Field Item: CMU_TESTLFRCOCTRL_TESTLFRCOCTRL  --------------------------
// SVD Line: 6174

//  <item> SFDITEM_FIELD__CMU_TESTLFRCOCTRL_TESTLFRCOCTRL
//    <name> TESTLFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41DC) TESTLFRCOCTRL </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_TESTLFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTLFRCOCTRL = (CMU_TESTLFRCOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_TESTLFRCOCTRL  -------------------------------
// SVD Line: 6165

//  <rtree> SFDITEM_REG__CMU_TESTLFRCOCTRL
//    <name> TESTLFRCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41DC) TESTLFRCOCTRL </i>
//    <loc> ( (unsigned int)((CMU_TESTLFRCOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTLFRCOCTRL = (CMU_TESTLFRCOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_TESTLFRCOCTRL_TESTLFRCOCTRL </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_TESTHFXOCTRL  ----------------------------
// SVD Line: 6183

unsigned int CMU_TESTHFXOCTRL __AT (0x400E41E0);



// ------------------------  Field Item: CMU_TESTHFXOCTRL_TESTHFXOCTRL  ---------------------------
// SVD Line: 6192

//  <item> SFDITEM_FIELD__CMU_TESTHFXOCTRL_TESTHFXOCTRL
//    <name> TESTHFXOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41E0) TESTHFXOCTRL </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_TESTHFXOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTHFXOCTRL = (CMU_TESTHFXOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_TESTHFXOCTRL  --------------------------------
// SVD Line: 6183

//  <rtree> SFDITEM_REG__CMU_TESTHFXOCTRL
//    <name> TESTHFXOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41E0) TESTHFXOCTRL </i>
//    <loc> ( (unsigned int)((CMU_TESTHFXOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTHFXOCTRL = (CMU_TESTHFXOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_TESTHFXOCTRL_TESTHFXOCTRL </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CMU_TESTLFXOCTRL  ----------------------------
// SVD Line: 6201

unsigned int CMU_TESTLFXOCTRL __AT (0x400E41E4);



// ------------------------  Field Item: CMU_TESTLFXOCTRL_TESTLFXOCTRL  ---------------------------
// SVD Line: 6210

//  <item> SFDITEM_FIELD__CMU_TESTLFXOCTRL_TESTLFXOCTRL
//    <name> TESTLFXOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41E4) TESTLFXOCTRL </i>
//    <edit> 
//      <loc> ( (unsigned int)((CMU_TESTLFXOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTLFXOCTRL = (CMU_TESTLFXOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: CMU_TESTLFXOCTRL  --------------------------------
// SVD Line: 6201

//  <rtree> SFDITEM_REG__CMU_TESTLFXOCTRL
//    <name> TESTLFXOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E41E4) TESTLFXOCTRL </i>
//    <loc> ( (unsigned int)((CMU_TESTLFXOCTRL >> 0) & 0xFFFFFFFF), ((CMU_TESTLFXOCTRL = (CMU_TESTLFXOCTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CMU_TESTLFXOCTRL_TESTLFXOCTRL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CMU  --------------------------------------
// SVD Line: 2714

//  <view> CMU
//    <name> CMU </name>
//    <item> SFDITEM_REG__CMU_CTRL </item>
//    <item> SFDITEM_REG__CMU_HFRCOCTRL </item>
//    <item> SFDITEM_REG__CMU_AUXHFRCOCTRL </item>
//    <item> SFDITEM_REG__CMU_LFRCOCTRL </item>
//    <item> SFDITEM_REG__CMU_HFXOCTRL </item>
//    <item> SFDITEM_REG__CMU_HFXOCTRL1 </item>
//    <item> SFDITEM_REG__CMU_HFXOSTARTUPCTRL </item>
//    <item> SFDITEM_REG__CMU_HFXOSTEADYSTATECTRL </item>
//    <item> SFDITEM_REG__CMU_HFXOTIMEOUTCTRL </item>
//    <item> SFDITEM_REG__CMU_LFXOCTRL </item>
//    <item> SFDITEM_REG__CMU_ULFRCOCTRL </item>
//    <item> SFDITEM_REG__CMU_CALCTRL </item>
//    <item> SFDITEM_REG__CMU_CALCNT </item>
//    <item> SFDITEM_REG__CMU_OSCENCMD </item>
//    <item> SFDITEM_REG__CMU_CMD </item>
//    <item> SFDITEM_REG__CMU_DBGCLKSEL </item>
//    <item> SFDITEM_REG__CMU_HFCLKSEL </item>
//    <item> SFDITEM_REG__CMU_LFACLKSEL </item>
//    <item> SFDITEM_REG__CMU_LFBCLKSEL </item>
//    <item> SFDITEM_REG__CMU_LFECLKSEL </item>
//    <item> SFDITEM_REG__CMU_STATUS </item>
//    <item> SFDITEM_REG__CMU_HFCLKSTATUS </item>
//    <item> SFDITEM_REG__CMU_HFXOTRIMSTATUS </item>
//    <item> SFDITEM_REG__CMU_IF </item>
//    <item> SFDITEM_REG__CMU_IFS </item>
//    <item> SFDITEM_REG__CMU_IFC </item>
//    <item> SFDITEM_REG__CMU_IEN </item>
//    <item> SFDITEM_REG__CMU_HFBUSCLKEN0 </item>
//    <item> SFDITEM_REG__CMU_HFPERCLKEN0 </item>
//    <item> SFDITEM_REG__CMU_HFRADIOCLKEN0 </item>
//    <item> SFDITEM_REG__CMU_LFACLKEN0 </item>
//    <item> SFDITEM_REG__CMU_LFBCLKEN0 </item>
//    <item> SFDITEM_REG__CMU_LFECLKEN0 </item>
//    <item> SFDITEM_REG__CMU_HFPRESC </item>
//    <item> SFDITEM_REG__CMU_HFCOREPRESC </item>
//    <item> SFDITEM_REG__CMU_HFPERPRESC </item>
//    <item> SFDITEM_REG__CMU_HFRADIOPRESC </item>
//    <item> SFDITEM_REG__CMU_HFEXPPRESC </item>
//    <item> SFDITEM_REG__CMU_LFAPRESC0 </item>
//    <item> SFDITEM_REG__CMU_LFBPRESC0 </item>
//    <item> SFDITEM_REG__CMU_LFEPRESC0 </item>
//    <item> SFDITEM_REG__CMU_SYNCBUSY </item>
//    <item> SFDITEM_REG__CMU_FREEZE </item>
//    <item> SFDITEM_REG__CMU_PCNTCTRL </item>
//    <item> SFDITEM_REG__CMU_LCDCTRL </item>
//    <item> SFDITEM_REG__CMU_LVDSCTRL </item>
//    <item> SFDITEM_REG__CMU_ADCCTRL </item>
//    <item> SFDITEM_REG__CMU_ROUTEPEN </item>
//    <item> SFDITEM_REG__CMU_ROUTELOC0 </item>
//    <item> SFDITEM_REG__CMU_LOCK </item>
//    <item> SFDITEM_REG__CMU_RFLOCK0 </item>
//    <item> SFDITEM_REG__CMU_HFBUSCLKENMASK0 </item>
//    <item> SFDITEM_REG__CMU_HFPERCLKENMASK0 </item>
//    <item> SFDITEM_REG__CMU_HFRADIOCLKENMASK0 </item>
//    <item> SFDITEM_REG__CMU_LFACLKENMASK0 </item>
//    <item> SFDITEM_REG__CMU_LFBCLKENMASK0 </item>
//    <item> SFDITEM_REG__CMU_LFECLKENMASK0 </item>
//    <item> SFDITEM_REG__CMU_PCNTCLKENMASK </item>
//    <item> SFDITEM_REG__CMU_TEST </item>
//    <item> SFDITEM_REG__CMU_TESTHFRCOCTRL </item>
//    <item> SFDITEM_REG__CMU_TESTAUXHFRCOCTRL </item>
//    <item> SFDITEM_REG__CMU_TESTLFRCOCTRL </item>
//    <item> SFDITEM_REG__CMU_TESTHFXOCTRL </item>
//    <item> SFDITEM_REG__CMU_TESTLFXOCTRL </item>
//  </view>
//  


// ---------------------------  Register Item Address: CRYPTO_CTRL  -------------------------------
// SVD Line: 6235

unsigned int CRYPTO_CTRL __AT (0x400F0000);



// -------------------------------  Field Item: CRYPTO_CTRL_AES  ----------------------------------
// SVD Line: 6244

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_AES
//    <name> AES </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400F0000) AES Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.0..0> AES
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_CTRL_KEYBUFDIS  -------------------------------
// SVD Line: 6251

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_KEYBUFDIS
//    <name> KEYBUFDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400F0000) Key Buffer Disable </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.1..1> KEYBUFDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CRYPTO_CTRL_SHA  ----------------------------------
// SVD Line: 6258

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_SHA
//    <name> SHA </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400F0000) SHA Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.2..2> SHA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CRYPTO_CTRL_NOBUSYSTALL  ------------------------------
// SVD Line: 6265

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_NOBUSYSTALL
//    <name> NOBUSYSTALL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400F0000) No Stalling of Bus When Busy </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.10..10> NOBUSYSTALL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_CTRL_INCWIDTH  --------------------------------
// SVD Line: 6272

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_INCWIDTH
//    <name> INCWIDTH </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x400F0000) \nIncrement Width\n0 : INCWIDTH1 = Byte 15 in DATA1 is used for the increment function.\n1 : INCWIDTH2 = Bytes 14 and 15 in DATA1 are used for the increment function.\n2 : INCWIDTH3 = Bytes 13 to 15 in DATA1 are used for the increment function.\n3 : INCWIDTH4 = Bytes 12 to 15 in DATA1 are used for the increment function. </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.15..14> INCWIDTH
//        <0=> 0: INCWIDTH1 = Byte 15 in DATA1 is used for the increment function.
//        <1=> 1: INCWIDTH2 = Bytes 14 and 15 in DATA1 are used for the increment function.
//        <2=> 2: INCWIDTH3 = Bytes 13 to 15 in DATA1 are used for the increment function.
//        <3=> 3: INCWIDTH4 = Bytes 12 to 15 in DATA1 are used for the increment function.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_CTRL_DMA0MODE  --------------------------------
// SVD Line: 6301

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA0MODE
//    <name> DMA0MODE </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400F0000) \nDMA0 Read Mode\n0 : FULL = Target register is fully read/written during every DMA transaction\n1 : LENLIMIT = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + necessary zero padding is read. Zero padding is automatically added when writing.\n2 : FULLBYTE = Target register is fully read/written during every DMA transaction. Bytewise DMA.\n3 : LENLIMITBYTE = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + necessary zero padding is read. Bytewise DMA. Zero padding is automatically added when writing. </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.17..16> DMA0MODE
//        <0=> 0: FULL = Target register is fully read/written during every DMA transaction
//        <1=> 1: LENLIMIT = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + necessary zero padding is read. Zero padding is automatically added when writing.
//        <2=> 2: FULLBYTE = Target register is fully read/written during every DMA transaction. Bytewise DMA.
//        <3=> 3: LENLIMITBYTE = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + necessary zero padding is read. Bytewise DMA. Zero padding is automatically added when writing.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_CTRL_DMA0RSEL  --------------------------------
// SVD Line: 6330

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA0RSEL
//    <name> DMA0RSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400F0000) \nDMA0 Read Register Select\n0 : DATA0 = DATA0\n1 : DDATA0 = DDATA0\n2 : DDATA0BIG = DDATA0BIG\n3 : QDATA0 = QDATA0 </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.21..20> DMA0RSEL
//        <0=> 0: DATA0 = DATA0
//        <1=> 1: DDATA0 = DDATA0
//        <2=> 2: DDATA0BIG = DDATA0BIG
//        <3=> 3: QDATA0 = QDATA0
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_CTRL_DMA1MODE  --------------------------------
// SVD Line: 6355

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA1MODE
//    <name> DMA1MODE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400F0000) \nDMA1 Read Mode\n0 : FULL = Target register is fully read/written during every DMA transaction\n1 : LENLIMIT = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + 1 bytes + necessary zero padding is read. Zero padding is automatically added when writing.\n2 : FULLBYTE = Target register is fully read/written during every DMA transaction. Bytewise DMA.\n3 : LENLIMITBYTE = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + 1 bytes + necessary zero padding is read. Bytewise DMA. Zero padding is automatically added when writing. </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.25..24> DMA1MODE
//        <0=> 0: FULL = Target register is fully read/written during every DMA transaction
//        <1=> 1: LENLIMIT = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + 1 bytes + necessary zero padding is read. Zero padding is automatically added when writing.
//        <2=> 2: FULLBYTE = Target register is fully read/written during every DMA transaction. Bytewise DMA.
//        <3=> 3: LENLIMITBYTE = Length Limited. When the current length, i.e. LENGTHA or LENGTHB indicates that there are less bytes available than the register size, only length + 1 bytes + necessary zero padding is read. Bytewise DMA. Zero padding is automatically added when writing.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_CTRL_DMA1RSEL  --------------------------------
// SVD Line: 6384

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA1RSEL
//    <name> DMA1RSEL </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400F0000) \nDATA0 DMA Unaligned Read Register Select\n0 : DATA1 = DATA1\n1 : DDATA1 = DDATA1\n2 : QDATA1 = QDATA1\n3 : QDATA1BIG = QDATA1BIG </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.29..28> DMA1RSEL
//        <0=> 0: DATA1 = DATA1
//        <1=> 1: DDATA1 = DDATA1
//        <2=> 2: QDATA1 = QDATA1
//        <3=> 3: QDATA1BIG = QDATA1BIG
//    </combo>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_CTRL_COMBDMA0WEREQ  -----------------------------
// SVD Line: 6409

//  <item> SFDITEM_FIELD__CRYPTO_CTRL_COMBDMA0WEREQ
//    <name> COMBDMA0WEREQ </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400F0000) Combined Data0 Write DMA Request </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CTRL ) </loc>
//      <o.31..31> COMBDMA0WEREQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_CTRL  ----------------------------------
// SVD Line: 6235

//  <rtree> SFDITEM_REG__CRYPTO_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0000) Control Register </i>
//    <loc> ( (unsigned int)((CRYPTO_CTRL >> 0) & 0xFFFFFFFF), ((CRYPTO_CTRL = (CRYPTO_CTRL & ~(0xB333C407UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB333C407) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_AES </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_KEYBUFDIS </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_SHA </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_NOBUSYSTALL </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_INCWIDTH </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA0MODE </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA0RSEL </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA1MODE </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_DMA1RSEL </item>
//    <item> SFDITEM_FIELD__CRYPTO_CTRL_COMBDMA0WEREQ </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CRYPTO_WAC  -------------------------------
// SVD Line: 6418

unsigned int CRYPTO_WAC __AT (0x400F0004);



// -----------------------------  Field Item: CRYPTO_WAC_MODULUS  ---------------------------------
// SVD Line: 6427

//  <item> SFDITEM_FIELD__CRYPTO_WAC_MODULUS
//    <name> MODULUS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400F0004) \nModular Operation Modulus\n0 : BIN256 = Generic modulus. p = 2^256\n1 : BIN128 = Generic modulus. p = 2^128\n2 : ECCBIN233P = Modulus for B-233 and K-233 ECC curves. p(t) = t^233 + t^74 + 1\n3 : ECCBIN163P = Modulus for B-163 and K-163 ECC curves. p(t) = t^163 + t^7 + t^6 + t^3 + 1\n4 : GCMBIN128 = Modulus for GCM. P(t) = t^128 + t^7 + t^2 + t + 1\n5 : ECCPRIME256P = Modulus for P-256 ECC curve. p = 2^256 - 2^224 + 2^192 + 2^96 - 1\n6 : ECCPRIME224P = Modulus for P-224 ECC curve. p = 2^224 - 2^96 - 1\n7 : ECCPRIME192P = Modulus for P-192 ECC curve. p = 2^192 - 2^64 - 1\n8 : ECCBIN233N = P modulus for B-233 ECC curve\n9 : ECCBIN233KN = P modulus for K-233 ECC curve\n10 : ECCBIN163N = P modulus for B-163 ECC curve\n11 : ECCBIN163KN = P modulus for K-163 ECC curve\n12 : ECCPRIME256N = P modulus for P-256 ECC curve\n13 : ECCPRIME224N = P modulus for P-224 ECC curve\n14 : ECCPRIME192N = P modulus for P-192 ECC curve\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_WAC ) </loc>
//      <o.3..0> MODULUS
//        <0=> 0: BIN256 = Generic modulus. p = 2^256
//        <1=> 1: BIN128 = Generic modulus. p = 2^128
//        <2=> 2: ECCBIN233P = Modulus for B-233 and K-233 ECC curves. p(t) = t^233 + t^74 + 1
//        <3=> 3: ECCBIN163P = Modulus for B-163 and K-163 ECC curves. p(t) = t^163 + t^7 + t^6 + t^3 + 1
//        <4=> 4: GCMBIN128 = Modulus for GCM. P(t) = t^128 + t^7 + t^2 + t + 1
//        <5=> 5: ECCPRIME256P = Modulus for P-256 ECC curve. p = 2^256 - 2^224 + 2^192 + 2^96 - 1
//        <6=> 6: ECCPRIME224P = Modulus for P-224 ECC curve. p = 2^224 - 2^96 - 1
//        <7=> 7: ECCPRIME192P = Modulus for P-192 ECC curve. p = 2^192 - 2^64 - 1
//        <8=> 8: ECCBIN233N = P modulus for B-233 ECC curve
//        <9=> 9: ECCBIN233KN = P modulus for K-233 ECC curve
//        <10=> 10: ECCBIN163N = P modulus for B-163 ECC curve
//        <11=> 11: ECCBIN163KN = P modulus for K-163 ECC curve
//        <12=> 12: ECCPRIME256N = P modulus for P-256 ECC curve
//        <13=> 13: ECCPRIME224N = P modulus for P-224 ECC curve
//        <14=> 14: ECCPRIME192N = P modulus for P-192 ECC curve
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CRYPTO_WAC_MODOP  ----------------------------------
// SVD Line: 6511

//  <item> SFDITEM_FIELD__CRYPTO_WAC_MODOP
//    <name> MODOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400F0004) Modular Operation Field Type </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_WAC ) </loc>
//      <o.4..4> MODOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_WAC_MULWIDTH  --------------------------------
// SVD Line: 6518

//  <item> SFDITEM_FIELD__CRYPTO_WAC_MULWIDTH
//    <name> MULWIDTH </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400F0004) \nMultiply Width\n0 : MUL256 = Multiply 256 bits\n1 : MUL128 = Multiply 128 bits\n2 : MULMOD = Same number of bits as specified by MODULUS\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_WAC ) </loc>
//      <o.9..8> MULWIDTH
//        <0=> 0: MUL256 = Multiply 256 bits
//        <1=> 1: MUL128 = Multiply 128 bits
//        <2=> 2: MULMOD = Same number of bits as specified by MODULUS
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: CRYPTO_WAC_RESULTWIDTH  -------------------------------
// SVD Line: 6542

//  <item> SFDITEM_FIELD__CRYPTO_WAC_RESULTWIDTH
//    <name> RESULTWIDTH </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x400F0004) \nResult Width\n0 : 256BIT = Results have 256 bits\n1 : 128BIT = Results have 128 bits\n2 : 260BIT = Results have 260 bits. Upper bits of result can be read through DDATA0MSBS in CRYPTO_STATUS\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_WAC ) </loc>
//      <o.11..10> RESULTWIDTH
//        <0=> 0: 256BIT = Results have 256 bits
//        <1=> 1: 128BIT = Results have 128 bits
//        <2=> 2: 260BIT = Results have 260 bits. Upper bits of result can be read through DDATA0MSBS in CRYPTO_STATUS
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_WAC  -----------------------------------
// SVD Line: 6418

//  <rtree> SFDITEM_REG__CRYPTO_WAC
//    <name> WAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0004) Wide Arithmetic Configuration </i>
//    <loc> ( (unsigned int)((CRYPTO_WAC >> 0) & 0xFFFFFFFF), ((CRYPTO_WAC = (CRYPTO_WAC & ~(0xF1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_WAC_MODULUS </item>
//    <item> SFDITEM_FIELD__CRYPTO_WAC_MODOP </item>
//    <item> SFDITEM_FIELD__CRYPTO_WAC_MULWIDTH </item>
//    <item> SFDITEM_FIELD__CRYPTO_WAC_RESULTWIDTH </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CRYPTO_CMD  -------------------------------
// SVD Line: 6568

unsigned int CRYPTO_CMD __AT (0x400F0008);



// ------------------------------  Field Item: CRYPTO_CMD_INSTR  ----------------------------------
// SVD Line: 6577

//  <item> SFDITEM_FIELD__CRYPTO_CMD_INSTR
//    <name> INSTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F0008) Execute Instruction </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_CMD >> 0) & 0xFF), ((CRYPTO_CMD = (CRYPTO_CMD & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_CMD_SEQSTART  --------------------------------
// SVD Line: 6584

//  <item> SFDITEM_FIELD__CRYPTO_CMD_SEQSTART
//    <name> SEQSTART </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x400F0008) Encryption/Decryption SEQUENCE Start </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CMD ) </loc>
//      <o.9..9> SEQSTART
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_CMD_SEQSTOP  ---------------------------------
// SVD Line: 6591

//  <item> SFDITEM_FIELD__CRYPTO_CMD_SEQSTOP
//    <name> SEQSTOP </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x400F0008) Sequence Stop </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CMD ) </loc>
//      <o.10..10> SEQSTOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_CMD_SEQSTEP  ---------------------------------
// SVD Line: 6598

//  <item> SFDITEM_FIELD__CRYPTO_CMD_SEQSTEP
//    <name> SEQSTEP </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x400F0008) Sequence Step </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CMD ) </loc>
//      <o.11..11> SEQSTEP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_CMD  -----------------------------------
// SVD Line: 6568

//  <rtree> SFDITEM_REG__CRYPTO_CMD
//    <name> CMD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0008) Command Register </i>
//    <loc> ( (unsigned int)((CRYPTO_CMD >> 0) & 0xFFFFFFFF), ((CRYPTO_CMD = (CRYPTO_CMD & ~(0xEFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_CMD_INSTR </item>
//    <item> SFDITEM_FIELD__CRYPTO_CMD_SEQSTART </item>
//    <item> SFDITEM_FIELD__CRYPTO_CMD_SEQSTOP </item>
//    <item> SFDITEM_FIELD__CRYPTO_CMD_SEQSTEP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYPTO_STATUS  ------------------------------
// SVD Line: 6607

unsigned int CRYPTO_STATUS __AT (0x400F0010);



// --------------------------  Field Item: CRYPTO_STATUS_SEQRUNNING  ------------------------------
// SVD Line: 6616

//  <item> SFDITEM_FIELD__CRYPTO_STATUS_SEQRUNNING
//    <name> SEQRUNNING </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400F0010) AES SEQUENCE Running </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_STATUS ) </loc>
//      <o.0..0> SEQRUNNING
//    </check>
//  </item>
//  


// -------------------------  Field Item: CRYPTO_STATUS_INSTRRUNNING  -----------------------------
// SVD Line: 6623

//  <item> SFDITEM_FIELD__CRYPTO_STATUS_INSTRRUNNING
//    <name> INSTRRUNNING </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400F0010) Action is Active </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_STATUS ) </loc>
//      <o.1..1> INSTRRUNNING
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CRYPTO_STATUS_DMAACTIVE  ------------------------------
// SVD Line: 6630

//  <item> SFDITEM_FIELD__CRYPTO_STATUS_DMAACTIVE
//    <name> DMAACTIVE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400F0010) DMA Action is Active </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_STATUS ) </loc>
//      <o.2..2> DMAACTIVE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CRYPTO_STATUS  ---------------------------------
// SVD Line: 6607

//  <rtree> SFDITEM_REG__CRYPTO_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400F0010) Status Register </i>
//    <loc> ( (unsigned int)((CRYPTO_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_STATUS_SEQRUNNING </item>
//    <item> SFDITEM_FIELD__CRYPTO_STATUS_INSTRRUNNING </item>
//    <item> SFDITEM_FIELD__CRYPTO_STATUS_DMAACTIVE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYPTO_DSTATUS  -----------------------------
// SVD Line: 6639

unsigned int CRYPTO_DSTATUS __AT (0x400F0014);



// --------------------------  Field Item: CRYPTO_DSTATUS_DATA0ZERO  ------------------------------
// SVD Line: 6648

//  <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DATA0ZERO
//    <name> DATA0ZERO </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x400F0014) \nData 0 Zero\n0 : Reserved - do not use\n1 : ZERO0TO31 = In DATA0 bits 0 to 31 are all zero.\n2 : ZERO32TO63 = In DATA0 bits 32 to 63 are all zero.\n3 : Reserved - do not use\n4 : ZERO64TO95 = In DATA0 bits 64 to 95 are all zero.\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ZERO96TO127 = In DATA0 bits 96 to 127 are all zero.\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_DSTATUS ) </loc>
//      <o.3..0> DATA0ZERO
//        <0=> 0: 
//        <1=> 1: ZERO0TO31 = In DATA0 bits 0 to 31 are all zero.
//        <2=> 2: ZERO32TO63 = In DATA0 bits 32 to 63 are all zero.
//        <3=> 3: 
//        <4=> 4: ZERO64TO95 = In DATA0 bits 64 to 95 are all zero.
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ZERO96TO127 = In DATA0 bits 96 to 127 are all zero.
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_DSTATUS_DDATA0LSBS  -----------------------------
// SVD Line: 6677

//  <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DDATA0LSBS
//    <name> DDATA0LSBS </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x400F0014) LSBs in DDATA0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_DSTATUS >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_DSTATUS_DDATA0MSBS  -----------------------------
// SVD Line: 6684

//  <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DDATA0MSBS
//    <name> DDATA0MSBS </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x400F0014) MSB in DDATA0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_DSTATUS >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_DSTATUS_DDATA1MSB  ------------------------------
// SVD Line: 6691

//  <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DDATA1MSB
//    <name> DDATA1MSB </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x400F0014) MSB in DDATA1 </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_DSTATUS ) </loc>
//      <o.20..20> DDATA1MSB
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_DSTATUS_CARRY  --------------------------------
// SVD Line: 6698

//  <item> SFDITEM_FIELD__CRYPTO_DSTATUS_CARRY
//    <name> CARRY </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x400F0014) Carry From Arithmetic Operation </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_DSTATUS ) </loc>
//      <o.24..24> CARRY
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: CRYPTO_DSTATUS  ---------------------------------
// SVD Line: 6639

//  <rtree> SFDITEM_REG__CRYPTO_DSTATUS
//    <name> DSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400F0014) Data Status Register </i>
//    <loc> ( (unsigned int)((CRYPTO_DSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DATA0ZERO </item>
//    <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DDATA0LSBS </item>
//    <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DDATA0MSBS </item>
//    <item> SFDITEM_FIELD__CRYPTO_DSTATUS_DDATA1MSB </item>
//    <item> SFDITEM_FIELD__CRYPTO_DSTATUS_CARRY </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYPTO_CSTATUS  -----------------------------
// SVD Line: 6707

unsigned int CRYPTO_CSTATUS __AT (0x400F0018);



// ------------------------------  Field Item: CRYPTO_CSTATUS_V0  ---------------------------------
// SVD Line: 6716

//  <item> SFDITEM_FIELD__CRYPTO_CSTATUS_V0
//    <name> V0 </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x400F0018) \nSelected ALU Operand 0\n0 : DDATA0 = DDATA0\n1 : DDATA1 = DDATA1\n2 : DDATA2 = DDATA2\n3 : DDATA3 = DDATA3\n4 : DDATA4 = DDATA4\n5 : DATA0 = DATA0\n6 : DATA1 = DATA1\n7 : DATA2 = DATA2 </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_CSTATUS ) </loc>
//      <o.2..0> V0
//        <0=> 0: DDATA0 = DDATA0
//        <1=> 1: DDATA1 = DDATA1
//        <2=> 2: DDATA2 = DDATA2
//        <3=> 3: DDATA3 = DDATA3
//        <4=> 4: DDATA4 = DDATA4
//        <5=> 5: DATA0 = DATA0
//        <6=> 6: DATA1 = DATA1
//        <7=> 7: DATA2 = DATA2
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CRYPTO_CSTATUS_V1  ---------------------------------
// SVD Line: 6757

//  <item> SFDITEM_FIELD__CRYPTO_CSTATUS_V1
//    <name> V1 </name>
//    <r> 
//    <i> [Bits 10..8] RO (@ 0x400F0018) \nSelected ALU Operand 1\n0 : DDATA0 = DDATA0\n1 : DDATA1 = DDATA1\n2 : DDATA2 = DDATA2\n3 : DDATA3 = DDATA3\n4 : DDATA4 = DDATA4\n5 : DATA0 = DATA0\n6 : DATA1 = DATA1\n7 : DATA2 = DATA2 </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_CSTATUS ) </loc>
//      <o.10..8> V1
//        <0=> 0: DDATA0 = DDATA0
//        <1=> 1: DDATA1 = DDATA1
//        <2=> 2: DDATA2 = DDATA2
//        <3=> 3: DDATA3 = DDATA3
//        <4=> 4: DDATA4 = DDATA4
//        <5=> 5: DATA0 = DATA0
//        <6=> 6: DATA1 = DATA1
//        <7=> 7: DATA2 = DATA2
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: CRYPTO_CSTATUS_SEQPART  -------------------------------
// SVD Line: 6798

//  <item> SFDITEM_FIELD__CRYPTO_CSTATUS_SEQPART
//    <name> SEQPART </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x400F0018) Sequence Part </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CSTATUS ) </loc>
//      <o.16..16> SEQPART
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CRYPTO_CSTATUS_SEQSKIP  -------------------------------
// SVD Line: 6805

//  <item> SFDITEM_FIELD__CRYPTO_CSTATUS_SEQSKIP
//    <name> SEQSKIP </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x400F0018) Sequence Skip Next Instruction </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_CSTATUS ) </loc>
//      <o.17..17> SEQSKIP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CRYPTO_CSTATUS_SEQIP  --------------------------------
// SVD Line: 6812

//  <item> SFDITEM_FIELD__CRYPTO_CSTATUS_SEQIP
//    <name> SEQIP </name>
//    <r> 
//    <i> [Bits 24..20] RO (@ 0x400F0018) Sequence Next Instruction Pointer </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_CSTATUS >> 20) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: CRYPTO_CSTATUS  ---------------------------------
// SVD Line: 6707

//  <rtree> SFDITEM_REG__CRYPTO_CSTATUS
//    <name> CSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400F0018) Control Status Register </i>
//    <loc> ( (unsigned int)((CRYPTO_CSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_CSTATUS_V0 </item>
//    <item> SFDITEM_FIELD__CRYPTO_CSTATUS_V1 </item>
//    <item> SFDITEM_FIELD__CRYPTO_CSTATUS_SEQPART </item>
//    <item> SFDITEM_FIELD__CRYPTO_CSTATUS_SEQSKIP </item>
//    <item> SFDITEM_FIELD__CRYPTO_CSTATUS_SEQIP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYPTO_SEQCTRL  -----------------------------
// SVD Line: 6859

unsigned int CRYPTO_SEQCTRL __AT (0x400F0030);



// ---------------------------  Field Item: CRYPTO_SEQCTRL_LENGTHA  -------------------------------
// SVD Line: 6868

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_LENGTHA
//    <name> LENGTHA </name>
//    <rw> 
//    <i> [Bits 13..0] RW (@ 0x400F0030) Buffer Length a in Bytes </i>
//    <edit> 
//      <loc> ( (unsigned short)((CRYPTO_SEQCTRL >> 0) & 0x3FFF), ((CRYPTO_SEQCTRL = (CRYPTO_SEQCTRL & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_SEQCTRL_BLOCKSIZE  ------------------------------
// SVD Line: 6875

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400F0030) \nSize of Data Blocks\n0 : 16BYTES = A block is 16 bytes long\n1 : 32BYTES = A block is 32 bytes long\n2 : 64BYTES = A block is 64 bytes long\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYPTO_SEQCTRL ) </loc>
//      <o.21..20> BLOCKSIZE
//        <0=> 0: 16BYTES = A block is 16 bytes long
//        <1=> 1: 32BYTES = A block is 32 bytes long
//        <2=> 2: 64BYTES = A block is 64 bytes long
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: CRYPTO_SEQCTRL_DMA0SKIP  ------------------------------
// SVD Line: 6899

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA0SKIP
//    <name> DMA0SKIP </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400F0030) DMA0 Skip </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQCTRL >> 24) & 0x3), ((CRYPTO_SEQCTRL = (CRYPTO_SEQCTRL & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: CRYPTO_SEQCTRL_DMA1SKIP  ------------------------------
// SVD Line: 6906

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA1SKIP
//    <name> DMA1SKIP </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400F0030) DMA1 Skip </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQCTRL >> 26) & 0x3), ((CRYPTO_SEQCTRL = (CRYPTO_SEQCTRL & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_SEQCTRL_DMA0PRESA  ------------------------------
// SVD Line: 6913

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA0PRESA
//    <name> DMA0PRESA </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400F0030) DMA0 Preserve a </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_SEQCTRL ) </loc>
//      <o.28..28> DMA0PRESA
//    </check>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_SEQCTRL_DMA1PRESA  ------------------------------
// SVD Line: 6920

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA1PRESA
//    <name> DMA1PRESA </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400F0030) DMA1 Preserve a </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_SEQCTRL ) </loc>
//      <o.29..29> DMA1PRESA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQCTRL_HALT  --------------------------------
// SVD Line: 6927

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_HALT
//    <name> HALT </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400F0030) Halt Sequence </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_SEQCTRL ) </loc>
//      <o.31..31> HALT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: CRYPTO_SEQCTRL  ---------------------------------
// SVD Line: 6859

//  <rtree> SFDITEM_REG__CRYPTO_SEQCTRL
//    <name> SEQCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0030) Sequence Control </i>
//    <loc> ( (unsigned int)((CRYPTO_SEQCTRL >> 0) & 0xFFFFFFFF), ((CRYPTO_SEQCTRL = (CRYPTO_SEQCTRL & ~(0xBF303FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBF303FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_LENGTHA </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA0SKIP </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA1SKIP </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA0PRESA </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_DMA1PRESA </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRL_HALT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: CRYPTO_SEQCTRLB  -----------------------------
// SVD Line: 6936

unsigned int CRYPTO_SEQCTRLB __AT (0x400F0034);



// ---------------------------  Field Item: CRYPTO_SEQCTRLB_LENGTHB  ------------------------------
// SVD Line: 6945

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRLB_LENGTHB
//    <name> LENGTHB </name>
//    <rw> 
//    <i> [Bits 13..0] RW (@ 0x400F0034) Buffer Length B in Bytes </i>
//    <edit> 
//      <loc> ( (unsigned short)((CRYPTO_SEQCTRLB >> 0) & 0x3FFF), ((CRYPTO_SEQCTRLB = (CRYPTO_SEQCTRLB & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_SEQCTRLB_DMA0PRESB  -----------------------------
// SVD Line: 6952

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRLB_DMA0PRESB
//    <name> DMA0PRESB </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400F0034) DMA0 Preserve B </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_SEQCTRLB ) </loc>
//      <o.28..28> DMA0PRESB
//    </check>
//  </item>
//  


// --------------------------  Field Item: CRYPTO_SEQCTRLB_DMA1PRESB  -----------------------------
// SVD Line: 6959

//  <item> SFDITEM_FIELD__CRYPTO_SEQCTRLB_DMA1PRESB
//    <name> DMA1PRESB </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400F0034) DMA1 Preserve B </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_SEQCTRLB ) </loc>
//      <o.29..29> DMA1PRESB
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: CRYPTO_SEQCTRLB  --------------------------------
// SVD Line: 6936

//  <rtree> SFDITEM_REG__CRYPTO_SEQCTRLB
//    <name> SEQCTRLB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0034) Sequence Control B </i>
//    <loc> ( (unsigned int)((CRYPTO_SEQCTRLB >> 0) & 0xFFFFFFFF), ((CRYPTO_SEQCTRLB = (CRYPTO_SEQCTRLB & ~(0x30003FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x30003FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRLB_LENGTHB </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRLB_DMA0PRESB </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQCTRLB_DMA1PRESB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CRYPTO_IF  --------------------------------
// SVD Line: 6968

unsigned int CRYPTO_IF __AT (0x400F0040);



// -----------------------------  Field Item: CRYPTO_IF_INSTRDONE  --------------------------------
// SVD Line: 6977

//  <item> SFDITEM_FIELD__CRYPTO_IF_INSTRDONE
//    <name> INSTRDONE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400F0040) Instruction Done </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IF ) </loc>
//      <o.0..0> INSTRDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CRYPTO_IF_SEQDONE  ---------------------------------
// SVD Line: 6984

//  <item> SFDITEM_FIELD__CRYPTO_IF_SEQDONE
//    <name> SEQDONE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400F0040) Sequence Done </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IF ) </loc>
//      <o.1..1> SEQDONE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CRYPTO_IF  -----------------------------------
// SVD Line: 6968

//  <rtree> SFDITEM_REG__CRYPTO_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400F0040) AES Interrupt Flags </i>
//    <loc> ( (unsigned int)((CRYPTO_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_IF_INSTRDONE </item>
//    <item> SFDITEM_FIELD__CRYPTO_IF_SEQDONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CRYPTO_IFS  -------------------------------
// SVD Line: 6993

unsigned int CRYPTO_IFS __AT (0x400F0044);



// ----------------------------  Field Item: CRYPTO_IFS_INSTRDONE  --------------------------------
// SVD Line: 7002

//  <item> SFDITEM_FIELD__CRYPTO_IFS_INSTRDONE
//    <name> INSTRDONE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400F0044) Set INSTRDONE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IFS ) </loc>
//      <o.0..0> INSTRDONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_IFS_SEQDONE  ---------------------------------
// SVD Line: 7009

//  <item> SFDITEM_FIELD__CRYPTO_IFS_SEQDONE
//    <name> SEQDONE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400F0044) Set SEQDONE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IFS ) </loc>
//      <o.1..1> SEQDONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_IFS  -----------------------------------
// SVD Line: 6993

//  <rtree> SFDITEM_REG__CRYPTO_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400F0044) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((CRYPTO_IFS >> 0) & 0xFFFFFFFF), ((CRYPTO_IFS = (CRYPTO_IFS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_IFS_INSTRDONE </item>
//    <item> SFDITEM_FIELD__CRYPTO_IFS_SEQDONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CRYPTO_IFC  -------------------------------
// SVD Line: 7018

unsigned int CRYPTO_IFC __AT (0x400F0048);



// ----------------------------  Field Item: CRYPTO_IFC_INSTRDONE  --------------------------------
// SVD Line: 7027

//  <item> SFDITEM_FIELD__CRYPTO_IFC_INSTRDONE
//    <name> INSTRDONE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400F0048) Clear INSTRDONE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IFC ) </loc>
//      <o.0..0> INSTRDONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_IFC_SEQDONE  ---------------------------------
// SVD Line: 7034

//  <item> SFDITEM_FIELD__CRYPTO_IFC_SEQDONE
//    <name> SEQDONE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400F0048) Clear SEQDONE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IFC ) </loc>
//      <o.1..1> SEQDONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_IFC  -----------------------------------
// SVD Line: 7018

//  <rtree> SFDITEM_REG__CRYPTO_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400F0048) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((CRYPTO_IFC >> 0) & 0xFFFFFFFF), ((CRYPTO_IFC = (CRYPTO_IFC & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_IFC_INSTRDONE </item>
//    <item> SFDITEM_FIELD__CRYPTO_IFC_SEQDONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CRYPTO_IEN  -------------------------------
// SVD Line: 7043

unsigned int CRYPTO_IEN __AT (0x400F004C);



// ----------------------------  Field Item: CRYPTO_IEN_INSTRDONE  --------------------------------
// SVD Line: 7052

//  <item> SFDITEM_FIELD__CRYPTO_IEN_INSTRDONE
//    <name> INSTRDONE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400F004C) INSTRDONE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IEN ) </loc>
//      <o.0..0> INSTRDONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_IEN_SEQDONE  ---------------------------------
// SVD Line: 7059

//  <item> SFDITEM_FIELD__CRYPTO_IEN_SEQDONE
//    <name> SEQDONE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400F004C) SEQDONE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CRYPTO_IEN ) </loc>
//      <o.1..1> SEQDONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_IEN  -----------------------------------
// SVD Line: 7043

//  <rtree> SFDITEM_REG__CRYPTO_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F004C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((CRYPTO_IEN >> 0) & 0xFFFFFFFF), ((CRYPTO_IEN = (CRYPTO_IEN & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_IEN_INSTRDONE </item>
//    <item> SFDITEM_FIELD__CRYPTO_IEN_SEQDONE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CRYPTO_SEQ0  -------------------------------
// SVD Line: 7068

unsigned int CRYPTO_SEQ0 __AT (0x400F0050);



// -----------------------------  Field Item: CRYPTO_SEQ0_INSTR0  ---------------------------------
// SVD Line: 7077

//  <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR0
//    <name> INSTR0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F0050) Sequence Instruction 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ0 >> 0) & 0xFF), ((CRYPTO_SEQ0 = (CRYPTO_SEQ0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ0_INSTR1  ---------------------------------
// SVD Line: 7084

//  <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR1
//    <name> INSTR1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x400F0050) Sequence Instruction 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ0 >> 8) & 0xFF), ((CRYPTO_SEQ0 = (CRYPTO_SEQ0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ0_INSTR2  ---------------------------------
// SVD Line: 7091

//  <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR2
//    <name> INSTR2 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x400F0050) Sequence Instruction 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ0 >> 16) & 0xFF), ((CRYPTO_SEQ0 = (CRYPTO_SEQ0 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ0_INSTR3  ---------------------------------
// SVD Line: 7098

//  <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR3
//    <name> INSTR3 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x400F0050) Sequence Instruction 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ0 >> 24) & 0xFF), ((CRYPTO_SEQ0 = (CRYPTO_SEQ0 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_SEQ0  ----------------------------------
// SVD Line: 7068

//  <rtree> SFDITEM_REG__CRYPTO_SEQ0
//    <name> SEQ0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0050) Sequence Register 0 </i>
//    <loc> ( (unsigned int)((CRYPTO_SEQ0 >> 0) & 0xFFFFFFFF), ((CRYPTO_SEQ0 = (CRYPTO_SEQ0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR0 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR1 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR2 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ0_INSTR3 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CRYPTO_SEQ1  -------------------------------
// SVD Line: 7107

unsigned int CRYPTO_SEQ1 __AT (0x400F0054);



// -----------------------------  Field Item: CRYPTO_SEQ1_INSTR4  ---------------------------------
// SVD Line: 7116

//  <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR4
//    <name> INSTR4 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F0054) Sequence Instruction 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ1 >> 0) & 0xFF), ((CRYPTO_SEQ1 = (CRYPTO_SEQ1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ1_INSTR5  ---------------------------------
// SVD Line: 7123

//  <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR5
//    <name> INSTR5 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x400F0054) Sequence Instruction 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ1 >> 8) & 0xFF), ((CRYPTO_SEQ1 = (CRYPTO_SEQ1 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ1_INSTR6  ---------------------------------
// SVD Line: 7130

//  <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR6
//    <name> INSTR6 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x400F0054) Sequence Instruction 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ1 >> 16) & 0xFF), ((CRYPTO_SEQ1 = (CRYPTO_SEQ1 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ1_INSTR7  ---------------------------------
// SVD Line: 7137

//  <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR7
//    <name> INSTR7 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x400F0054) Sequence Instruction 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ1 >> 24) & 0xFF), ((CRYPTO_SEQ1 = (CRYPTO_SEQ1 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_SEQ1  ----------------------------------
// SVD Line: 7107

//  <rtree> SFDITEM_REG__CRYPTO_SEQ1
//    <name> SEQ1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0054) Sequence Register 1 </i>
//    <loc> ( (unsigned int)((CRYPTO_SEQ1 >> 0) & 0xFFFFFFFF), ((CRYPTO_SEQ1 = (CRYPTO_SEQ1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR4 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR5 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR6 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ1_INSTR7 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CRYPTO_SEQ2  -------------------------------
// SVD Line: 7146

unsigned int CRYPTO_SEQ2 __AT (0x400F0058);



// -----------------------------  Field Item: CRYPTO_SEQ2_INSTR8  ---------------------------------
// SVD Line: 7155

//  <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR8
//    <name> INSTR8 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F0058) Sequence Instruction 8 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ2 >> 0) & 0xFF), ((CRYPTO_SEQ2 = (CRYPTO_SEQ2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ2_INSTR9  ---------------------------------
// SVD Line: 7162

//  <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR9
//    <name> INSTR9 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x400F0058) Sequence Instruction 9 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ2 >> 8) & 0xFF), ((CRYPTO_SEQ2 = (CRYPTO_SEQ2 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ2_INSTR10  --------------------------------
// SVD Line: 7169

//  <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR10
//    <name> INSTR10 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x400F0058) Sequence Instruction 10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ2 >> 16) & 0xFF), ((CRYPTO_SEQ2 = (CRYPTO_SEQ2 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ2_INSTR11  --------------------------------
// SVD Line: 7176

//  <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR11
//    <name> INSTR11 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x400F0058) Sequence Instruction 11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ2 >> 24) & 0xFF), ((CRYPTO_SEQ2 = (CRYPTO_SEQ2 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_SEQ2  ----------------------------------
// SVD Line: 7146

//  <rtree> SFDITEM_REG__CRYPTO_SEQ2
//    <name> SEQ2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0058) Sequence Register 2 </i>
//    <loc> ( (unsigned int)((CRYPTO_SEQ2 >> 0) & 0xFFFFFFFF), ((CRYPTO_SEQ2 = (CRYPTO_SEQ2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR8 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR9 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR10 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ2_INSTR11 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CRYPTO_SEQ3  -------------------------------
// SVD Line: 7185

unsigned int CRYPTO_SEQ3 __AT (0x400F005C);



// -----------------------------  Field Item: CRYPTO_SEQ3_INSTR12  --------------------------------
// SVD Line: 7194

//  <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR12
//    <name> INSTR12 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F005C) Sequence Instruction 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ3 >> 0) & 0xFF), ((CRYPTO_SEQ3 = (CRYPTO_SEQ3 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ3_INSTR13  --------------------------------
// SVD Line: 7201

//  <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR13
//    <name> INSTR13 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x400F005C) Sequence Instruction 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ3 >> 8) & 0xFF), ((CRYPTO_SEQ3 = (CRYPTO_SEQ3 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ3_INSTR14  --------------------------------
// SVD Line: 7208

//  <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR14
//    <name> INSTR14 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x400F005C) Sequence Instruction 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ3 >> 16) & 0xFF), ((CRYPTO_SEQ3 = (CRYPTO_SEQ3 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ3_INSTR15  --------------------------------
// SVD Line: 7215

//  <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR15
//    <name> INSTR15 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x400F005C) Sequence Instruction 15 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ3 >> 24) & 0xFF), ((CRYPTO_SEQ3 = (CRYPTO_SEQ3 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_SEQ3  ----------------------------------
// SVD Line: 7185

//  <rtree> SFDITEM_REG__CRYPTO_SEQ3
//    <name> SEQ3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F005C) Sequence Register 3 </i>
//    <loc> ( (unsigned int)((CRYPTO_SEQ3 >> 0) & 0xFFFFFFFF), ((CRYPTO_SEQ3 = (CRYPTO_SEQ3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR12 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR13 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR14 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ3_INSTR15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CRYPTO_SEQ4  -------------------------------
// SVD Line: 7224

unsigned int CRYPTO_SEQ4 __AT (0x400F0060);



// -----------------------------  Field Item: CRYPTO_SEQ4_INSTR16  --------------------------------
// SVD Line: 7233

//  <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR16
//    <name> INSTR16 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F0060) Sequence Instruction 16 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ4 >> 0) & 0xFF), ((CRYPTO_SEQ4 = (CRYPTO_SEQ4 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ4_INSTR17  --------------------------------
// SVD Line: 7240

//  <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR17
//    <name> INSTR17 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x400F0060) Sequence Instruction 17 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ4 >> 8) & 0xFF), ((CRYPTO_SEQ4 = (CRYPTO_SEQ4 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ4_INSTR18  --------------------------------
// SVD Line: 7247

//  <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR18
//    <name> INSTR18 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x400F0060) Sequence Instruction 18 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ4 >> 16) & 0xFF), ((CRYPTO_SEQ4 = (CRYPTO_SEQ4 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CRYPTO_SEQ4_INSTR19  --------------------------------
// SVD Line: 7254

//  <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR19
//    <name> INSTR19 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x400F0060) Sequence Instruction 19 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_SEQ4 >> 24) & 0xFF), ((CRYPTO_SEQ4 = (CRYPTO_SEQ4 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CRYPTO_SEQ4  ----------------------------------
// SVD Line: 7224

//  <rtree> SFDITEM_REG__CRYPTO_SEQ4
//    <name> SEQ4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0060) Sequence Register 4 </i>
//    <loc> ( (unsigned int)((CRYPTO_SEQ4 >> 0) & 0xFFFFFFFF), ((CRYPTO_SEQ4 = (CRYPTO_SEQ4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR16 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR17 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR18 </item>
//    <item> SFDITEM_FIELD__CRYPTO_SEQ4_INSTR19 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CRYPTO_DATA0BYTE12  ---------------------------
// SVD Line: 7415

unsigned int CRYPTO_DATA0BYTE12 __AT (0x400F00C0);



// -----------------------  Field Item: CRYPTO_DATA0BYTE12_DATA0BYTE12  ---------------------------
// SVD Line: 7424

//  <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE12_DATA0BYTE12
//    <name> DATA0BYTE12 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F00C0) Data 0 Byte 12 Access </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_DATA0BYTE12 >> 0) & 0xFF), ((CRYPTO_DATA0BYTE12 = (CRYPTO_DATA0BYTE12 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CRYPTO_DATA0BYTE12  -------------------------------
// SVD Line: 7415

//  <rtree> SFDITEM_REG__CRYPTO_DATA0BYTE12
//    <name> DATA0BYTE12 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F00C0) DATA0 Register Byte 12 Access </i>
//    <loc> ( (unsigned int)((CRYPTO_DATA0BYTE12 >> 0) & 0xFFFFFFFF), ((CRYPTO_DATA0BYTE12 = (CRYPTO_DATA0BYTE12 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE12_DATA0BYTE12 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CRYPTO_DATA0BYTE13  ---------------------------
// SVD Line: 7433

unsigned int CRYPTO_DATA0BYTE13 __AT (0x400F00C4);



// -----------------------  Field Item: CRYPTO_DATA0BYTE13_DATA0BYTE13  ---------------------------
// SVD Line: 7442

//  <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE13_DATA0BYTE13
//    <name> DATA0BYTE13 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F00C4) Data 0 Byte 13 Access </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_DATA0BYTE13 >> 0) & 0xFF), ((CRYPTO_DATA0BYTE13 = (CRYPTO_DATA0BYTE13 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CRYPTO_DATA0BYTE13  -------------------------------
// SVD Line: 7433

//  <rtree> SFDITEM_REG__CRYPTO_DATA0BYTE13
//    <name> DATA0BYTE13 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F00C4) DATA0 Register Byte 13 Access </i>
//    <loc> ( (unsigned int)((CRYPTO_DATA0BYTE13 >> 0) & 0xFFFFFFFF), ((CRYPTO_DATA0BYTE13 = (CRYPTO_DATA0BYTE13 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE13_DATA0BYTE13 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CRYPTO_DATA0BYTE14  ---------------------------
// SVD Line: 7451

unsigned int CRYPTO_DATA0BYTE14 __AT (0x400F00C8);



// -----------------------  Field Item: CRYPTO_DATA0BYTE14_DATA0BYTE14  ---------------------------
// SVD Line: 7460

//  <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE14_DATA0BYTE14
//    <name> DATA0BYTE14 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F00C8) Data 0 Byte 14 Access </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_DATA0BYTE14 >> 0) & 0xFF), ((CRYPTO_DATA0BYTE14 = (CRYPTO_DATA0BYTE14 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CRYPTO_DATA0BYTE14  -------------------------------
// SVD Line: 7451

//  <rtree> SFDITEM_REG__CRYPTO_DATA0BYTE14
//    <name> DATA0BYTE14 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F00C8) DATA0 Register Byte 14 Access </i>
//    <loc> ( (unsigned int)((CRYPTO_DATA0BYTE14 >> 0) & 0xFFFFFFFF), ((CRYPTO_DATA0BYTE14 = (CRYPTO_DATA0BYTE14 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE14_DATA0BYTE14 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CRYPTO_DATA0BYTE15  ---------------------------
// SVD Line: 7469

unsigned int CRYPTO_DATA0BYTE15 __AT (0x400F00CC);



// -----------------------  Field Item: CRYPTO_DATA0BYTE15_DATA0BYTE15  ---------------------------
// SVD Line: 7478

//  <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE15_DATA0BYTE15
//    <name> DATA0BYTE15 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400F00CC) Data 0 Byte 15 Access </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_DATA0BYTE15 >> 0) & 0xFF), ((CRYPTO_DATA0BYTE15 = (CRYPTO_DATA0BYTE15 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CRYPTO_DATA0BYTE15  -------------------------------
// SVD Line: 7469

//  <rtree> SFDITEM_REG__CRYPTO_DATA0BYTE15
//    <name> DATA0BYTE15 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F00CC) DATA0 Register Byte 15 Access </i>
//    <loc> ( (unsigned int)((CRYPTO_DATA0BYTE15 >> 0) & 0xFFFFFFFF), ((CRYPTO_DATA0BYTE15 = (CRYPTO_DATA0BYTE15 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_DATA0BYTE15_DATA0BYTE15 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: CRYPTO_DDATA0BYTE32  ---------------------------
// SVD Line: 7639

unsigned int CRYPTO_DDATA0BYTE32 __AT (0x400F0148);



// ----------------------  Field Item: CRYPTO_DDATA0BYTE32_DDATA0BYTE32  --------------------------
// SVD Line: 7648

//  <item> SFDITEM_FIELD__CRYPTO_DDATA0BYTE32_DDATA0BYTE32
//    <name> DDATA0BYTE32 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400F0148) Ddata 0 Byte 32 Access </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYPTO_DDATA0BYTE32 >> 0) & 0xF), ((CRYPTO_DDATA0BYTE32 = (CRYPTO_DDATA0BYTE32 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CRYPTO_DDATA0BYTE32  ------------------------------
// SVD Line: 7639

//  <rtree> SFDITEM_REG__CRYPTO_DDATA0BYTE32
//    <name> DDATA0BYTE32 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400F0148) DDATA0 Register Byte 32 Access </i>
//    <loc> ( (unsigned int)((CRYPTO_DDATA0BYTE32 >> 0) & 0xFFFFFFFF), ((CRYPTO_DDATA0BYTE32 = (CRYPTO_DDATA0BYTE32 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYPTO_DDATA0BYTE32_DDATA0BYTE32 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: CRYPTO  ------------------------------------
// SVD Line: 6221

//  <view> CRYPTO
//    <name> CRYPTO </name>
//    <item> SFDITEM_REG__CRYPTO_CTRL </item>
//    <item> SFDITEM_REG__CRYPTO_WAC </item>
//    <item> SFDITEM_REG__CRYPTO_CMD </item>
//    <item> SFDITEM_REG__CRYPTO_STATUS </item>
//    <item> SFDITEM_REG__CRYPTO_DSTATUS </item>
//    <item> SFDITEM_REG__CRYPTO_CSTATUS </item>
//    <item> SFDITEM_REG__CRYPTO_SEQCTRL </item>
//    <item> SFDITEM_REG__CRYPTO_SEQCTRLB </item>
//    <item> SFDITEM_REG__CRYPTO_IF </item>
//    <item> SFDITEM_REG__CRYPTO_IFS </item>
//    <item> SFDITEM_REG__CRYPTO_IFC </item>
//    <item> SFDITEM_REG__CRYPTO_IEN </item>
//    <item> SFDITEM_REG__CRYPTO_SEQ0 </item>
//    <item> SFDITEM_REG__CRYPTO_SEQ1 </item>
//    <item> SFDITEM_REG__CRYPTO_SEQ2 </item>
//    <item> SFDITEM_REG__CRYPTO_SEQ3 </item>
//    <item> SFDITEM_REG__CRYPTO_SEQ4 </item>
//    <item> SFDITEM_REG__CRYPTO_DATA0BYTE12 </item>
//    <item> SFDITEM_REG__CRYPTO_DATA0BYTE13 </item>
//    <item> SFDITEM_REG__CRYPTO_DATA0BYTE14 </item>
//    <item> SFDITEM_REG__CRYPTO_DATA0BYTE15 </item>
//    <item> SFDITEM_REG__CRYPTO_DDATA0BYTE32 </item>
//  </view>
//  


// ---------------------------  Register Item Address: GPIO_PA_CTRL  ------------------------------
// SVD Line: 7772

unsigned int GPIO_PA_CTRL __AT (0x4000A000);



// -------------------------  Field Item: GPIO_PA_CTRL_DRIVESTRENGTH  -----------------------------
// SVD Line: 7781

//  <item> SFDITEM_FIELD__GPIO_PA_CTRL_DRIVESTRENGTH
//    <name> DRIVESTRENGTH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A000) Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PA_CTRL ) </loc>
//      <o.0..0> DRIVESTRENGTH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PA_CTRL_SLEWRATE  -------------------------------
// SVD Line: 7788

//  <item> SFDITEM_FIELD__GPIO_PA_CTRL_SLEWRATE
//    <name> SLEWRATE </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A000) Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PA_CTRL >> 4) & 0x7), ((GPIO_PA_CTRL = (GPIO_PA_CTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_CTRL_DINDIS  --------------------------------
// SVD Line: 7795

//  <item> SFDITEM_FIELD__GPIO_PA_CTRL_DINDIS
//    <name> DINDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A000) Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PA_CTRL ) </loc>
//      <o.12..12> DINDIS
//    </check>
//  </item>
//  


// ------------------------  Field Item: GPIO_PA_CTRL_DRIVESTRENGTHALT  ---------------------------
// SVD Line: 7802

//  <item> SFDITEM_FIELD__GPIO_PA_CTRL_DRIVESTRENGTHALT
//    <name> DRIVESTRENGTHALT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A000) Alternate Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PA_CTRL ) </loc>
//      <o.16..16> DRIVESTRENGTHALT
//    </check>
//  </item>
//  


// --------------------------  Field Item: GPIO_PA_CTRL_SLEWRATEALT  ------------------------------
// SVD Line: 7809

//  <item> SFDITEM_FIELD__GPIO_PA_CTRL_SLEWRATEALT
//    <name> SLEWRATEALT </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4000A000) Alternate Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PA_CTRL >> 20) & 0x7), ((GPIO_PA_CTRL = (GPIO_PA_CTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIO_PA_CTRL_DINDISALT  -------------------------------
// SVD Line: 7816

//  <item> SFDITEM_FIELD__GPIO_PA_CTRL_DINDISALT
//    <name> DINDISALT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000A000) Alternate Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PA_CTRL ) </loc>
//      <o.28..28> DINDISALT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PA_CTRL  ----------------------------------
// SVD Line: 7772

//  <rtree> SFDITEM_REG__GPIO_PA_CTRL
//    <name> PA_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A000) Port Control Register </i>
//    <loc> ( (unsigned int)((GPIO_PA_CTRL >> 0) & 0xFFFFFFFF), ((GPIO_PA_CTRL = (GPIO_PA_CTRL & ~(0x10711071UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10711071) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_CTRL_DRIVESTRENGTH </item>
//    <item> SFDITEM_FIELD__GPIO_PA_CTRL_SLEWRATE </item>
//    <item> SFDITEM_FIELD__GPIO_PA_CTRL_DINDIS </item>
//    <item> SFDITEM_FIELD__GPIO_PA_CTRL_DRIVESTRENGTHALT </item>
//    <item> SFDITEM_FIELD__GPIO_PA_CTRL_SLEWRATEALT </item>
//    <item> SFDITEM_FIELD__GPIO_PA_CTRL_DINDISALT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PA_MODEL  ------------------------------
// SVD Line: 7825

unsigned int GPIO_PA_MODEL __AT (0x4000A004);



// -----------------------------  Field Item: GPIO_PA_MODEL_MODE0  --------------------------------
// SVD Line: 7834

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE0
//    <name> MODE0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A004) \nPin 0 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.3..0> MODE0
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEL_MODE1  --------------------------------
// SVD Line: 7923

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE1
//    <name> MODE1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A004) \nPin 1 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.7..4> MODE1
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEL_MODE2  --------------------------------
// SVD Line: 8012

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE2
//    <name> MODE2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A004) \nPin 2 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.11..8> MODE2
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEL_MODE3  --------------------------------
// SVD Line: 8101

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE3
//    <name> MODE3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A004) \nPin 3 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.15..12> MODE3
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEL_MODE4  --------------------------------
// SVD Line: 8190

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE4
//    <name> MODE4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A004) \nPin 4 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.19..16> MODE4
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEL_MODE5  --------------------------------
// SVD Line: 8279

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE5
//    <name> MODE5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A004) \nPin 5 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.23..20> MODE5
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEL_MODE6  --------------------------------
// SVD Line: 8368

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE6
//    <name> MODE6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A004) \nPin 6 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.27..24> MODE6
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEL_MODE7  --------------------------------
// SVD Line: 8457

//  <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE7
//    <name> MODE7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A004) \nPin 7 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEL ) </loc>
//      <o.31..28> MODE7
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PA_MODEL  ---------------------------------
// SVD Line: 7825

//  <rtree> SFDITEM_REG__GPIO_PA_MODEL
//    <name> PA_MODEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A004) Port Pin Mode Low Register </i>
//    <loc> ( (unsigned int)((GPIO_PA_MODEL >> 0) & 0xFFFFFFFF), ((GPIO_PA_MODEL = (GPIO_PA_MODEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE0 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE1 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE2 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE3 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE4 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE5 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE6 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEL_MODE7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PA_MODEH  ------------------------------
// SVD Line: 8548

unsigned int GPIO_PA_MODEH __AT (0x4000A008);



// -----------------------------  Field Item: GPIO_PA_MODEH_MODE8  --------------------------------
// SVD Line: 8557

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE8
//    <name> MODE8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A008) \nPin 8 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.3..0> MODE8
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PA_MODEH_MODE9  --------------------------------
// SVD Line: 8646

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE9
//    <name> MODE9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A008) \nPin 9 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.7..4> MODE9
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PA_MODEH_MODE10  --------------------------------
// SVD Line: 8735

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE10
//    <name> MODE10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A008) \nPin 10 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.11..8> MODE10
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PA_MODEH_MODE11  --------------------------------
// SVD Line: 8824

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE11
//    <name> MODE11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A008) \nPin 11 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.15..12> MODE11
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PA_MODEH_MODE12  --------------------------------
// SVD Line: 8913

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE12
//    <name> MODE12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A008) \nPin 12 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.19..16> MODE12
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PA_MODEH_MODE13  --------------------------------
// SVD Line: 9002

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE13
//    <name> MODE13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A008) \nPin 13 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.23..20> MODE13
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PA_MODEH_MODE14  --------------------------------
// SVD Line: 9091

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE14
//    <name> MODE14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A008) \nPin 14 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.27..24> MODE14
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PA_MODEH_MODE15  --------------------------------
// SVD Line: 9180

//  <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE15
//    <name> MODE15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A008) \nPin 15 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PA_MODEH ) </loc>
//      <o.31..28> MODE15
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PA_MODEH  ---------------------------------
// SVD Line: 8548

//  <rtree> SFDITEM_REG__GPIO_PA_MODEH
//    <name> PA_MODEH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A008) Port Pin Mode High Register </i>
//    <loc> ( (unsigned int)((GPIO_PA_MODEH >> 0) & 0xFFFFFFFF), ((GPIO_PA_MODEH = (GPIO_PA_MODEH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE8 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE9 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE10 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE11 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE12 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE13 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE14 </item>
//    <item> SFDITEM_FIELD__GPIO_PA_MODEH_MODE15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PA_DOUT  ------------------------------
// SVD Line: 9271

unsigned int GPIO_PA_DOUT __AT (0x4000A00C);



// ------------------------------  Field Item: GPIO_PA_DOUT_DOUT  ---------------------------------
// SVD Line: 9280

//  <item> SFDITEM_FIELD__GPIO_PA_DOUT_DOUT
//    <name> DOUT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A00C) Data Out </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PA_DOUT >> 0) & 0xFFFF), ((GPIO_PA_DOUT = (GPIO_PA_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PA_DOUT  ----------------------------------
// SVD Line: 9271

//  <rtree> SFDITEM_REG__GPIO_PA_DOUT
//    <name> PA_DOUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A00C) Port Data Out Register </i>
//    <loc> ( (unsigned int)((GPIO_PA_DOUT >> 0) & 0xFFFFFFFF), ((GPIO_PA_DOUT = (GPIO_PA_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_DOUT_DOUT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PA_DOUTTGL  -----------------------------
// SVD Line: 9289

unsigned int GPIO_PA_DOUTTGL __AT (0x4000A018);



// ---------------------------  Field Item: GPIO_PA_DOUTTGL_DOUTTGL  ------------------------------
// SVD Line: 9298

//  <item> SFDITEM_FIELD__GPIO_PA_DOUTTGL_DOUTTGL
//    <name> DOUTTGL </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A018) Data Out Toggle </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PA_DOUTTGL >> 0) & 0x0), ((GPIO_PA_DOUTTGL = (GPIO_PA_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PA_DOUTTGL  --------------------------------
// SVD Line: 9289

//  <rtree> SFDITEM_REG__GPIO_PA_DOUTTGL
//    <name> PA_DOUTTGL </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A018) Port Data Out Toggle Register </i>
//    <loc> ( (unsigned int)((GPIO_PA_DOUTTGL >> 0) & 0xFFFFFFFF), ((GPIO_PA_DOUTTGL = (GPIO_PA_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_DOUTTGL_DOUTTGL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PA_DIN  -------------------------------
// SVD Line: 9307

unsigned int GPIO_PA_DIN __AT (0x4000A01C);



// -------------------------------  Field Item: GPIO_PA_DIN_DIN  ----------------------------------
// SVD Line: 9316

//  <item> SFDITEM_FIELD__GPIO_PA_DIN_DIN
//    <name> DIN </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000A01C) Data in </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PA_DIN >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIO_PA_DIN  ----------------------------------
// SVD Line: 9307

//  <rtree> SFDITEM_REG__GPIO_PA_DIN
//    <name> PA_DIN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A01C) Port Data in Register </i>
//    <loc> ( (unsigned int)((GPIO_PA_DIN >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_DIN_DIN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PA_PINLOCKN  ----------------------------
// SVD Line: 9325

unsigned int GPIO_PA_PINLOCKN __AT (0x4000A020);



// --------------------------  Field Item: GPIO_PA_PINLOCKN_PINLOCKN  -----------------------------
// SVD Line: 9334

//  <item> SFDITEM_FIELD__GPIO_PA_PINLOCKN_PINLOCKN
//    <name> PINLOCKN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A020) Unlocked Pins </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PA_PINLOCKN >> 0) & 0xFFFF), ((GPIO_PA_PINLOCKN = (GPIO_PA_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_PA_PINLOCKN  --------------------------------
// SVD Line: 9325

//  <rtree> SFDITEM_REG__GPIO_PA_PINLOCKN
//    <name> PA_PINLOCKN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A020) Port Unlocked Pins Register </i>
//    <loc> ( (unsigned int)((GPIO_PA_PINLOCKN >> 0) & 0xFFFFFFFF), ((GPIO_PA_PINLOCKN = (GPIO_PA_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_PINLOCKN_PINLOCKN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PA_OVTDIS  -----------------------------
// SVD Line: 9343

unsigned int GPIO_PA_OVTDIS __AT (0x4000A028);



// ----------------------------  Field Item: GPIO_PA_OVTDIS_OVTDIS  -------------------------------
// SVD Line: 9352

//  <item> SFDITEM_FIELD__GPIO_PA_OVTDIS_OVTDIS
//    <name> OVTDIS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A028) Disable Over Voltage Capability </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PA_OVTDIS >> 0) & 0xFFFF), ((GPIO_PA_OVTDIS = (GPIO_PA_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PA_OVTDIS  ---------------------------------
// SVD Line: 9343

//  <rtree> SFDITEM_REG__GPIO_PA_OVTDIS
//    <name> PA_OVTDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A028) Over Voltage Disable for All Modes </i>
//    <loc> ( (unsigned int)((GPIO_PA_OVTDIS >> 0) & 0xFFFFFFFF), ((GPIO_PA_OVTDIS = (GPIO_PA_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PA_OVTDIS_OVTDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PB_CTRL  ------------------------------
// SVD Line: 9361

unsigned int GPIO_PB_CTRL __AT (0x4000A030);



// -------------------------  Field Item: GPIO_PB_CTRL_DRIVESTRENGTH  -----------------------------
// SVD Line: 9370

//  <item> SFDITEM_FIELD__GPIO_PB_CTRL_DRIVESTRENGTH
//    <name> DRIVESTRENGTH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A030) Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PB_CTRL ) </loc>
//      <o.0..0> DRIVESTRENGTH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PB_CTRL_SLEWRATE  -------------------------------
// SVD Line: 9377

//  <item> SFDITEM_FIELD__GPIO_PB_CTRL_SLEWRATE
//    <name> SLEWRATE </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A030) Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PB_CTRL >> 4) & 0x7), ((GPIO_PB_CTRL = (GPIO_PB_CTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_CTRL_DINDIS  --------------------------------
// SVD Line: 9384

//  <item> SFDITEM_FIELD__GPIO_PB_CTRL_DINDIS
//    <name> DINDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A030) Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PB_CTRL ) </loc>
//      <o.12..12> DINDIS
//    </check>
//  </item>
//  


// ------------------------  Field Item: GPIO_PB_CTRL_DRIVESTRENGTHALT  ---------------------------
// SVD Line: 9391

//  <item> SFDITEM_FIELD__GPIO_PB_CTRL_DRIVESTRENGTHALT
//    <name> DRIVESTRENGTHALT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A030) Alternate Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PB_CTRL ) </loc>
//      <o.16..16> DRIVESTRENGTHALT
//    </check>
//  </item>
//  


// --------------------------  Field Item: GPIO_PB_CTRL_SLEWRATEALT  ------------------------------
// SVD Line: 9398

//  <item> SFDITEM_FIELD__GPIO_PB_CTRL_SLEWRATEALT
//    <name> SLEWRATEALT </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4000A030) Alternate Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PB_CTRL >> 20) & 0x7), ((GPIO_PB_CTRL = (GPIO_PB_CTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIO_PB_CTRL_DINDISALT  -------------------------------
// SVD Line: 9405

//  <item> SFDITEM_FIELD__GPIO_PB_CTRL_DINDISALT
//    <name> DINDISALT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000A030) Alternate Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PB_CTRL ) </loc>
//      <o.28..28> DINDISALT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PB_CTRL  ----------------------------------
// SVD Line: 9361

//  <rtree> SFDITEM_REG__GPIO_PB_CTRL
//    <name> PB_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A030) Port Control Register </i>
//    <loc> ( (unsigned int)((GPIO_PB_CTRL >> 0) & 0xFFFFFFFF), ((GPIO_PB_CTRL = (GPIO_PB_CTRL & ~(0x10711071UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10711071) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_CTRL_DRIVESTRENGTH </item>
//    <item> SFDITEM_FIELD__GPIO_PB_CTRL_SLEWRATE </item>
//    <item> SFDITEM_FIELD__GPIO_PB_CTRL_DINDIS </item>
//    <item> SFDITEM_FIELD__GPIO_PB_CTRL_DRIVESTRENGTHALT </item>
//    <item> SFDITEM_FIELD__GPIO_PB_CTRL_SLEWRATEALT </item>
//    <item> SFDITEM_FIELD__GPIO_PB_CTRL_DINDISALT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PB_MODEL  ------------------------------
// SVD Line: 9414

unsigned int GPIO_PB_MODEL __AT (0x4000A034);



// -----------------------------  Field Item: GPIO_PB_MODEL_MODE0  --------------------------------
// SVD Line: 9423

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE0
//    <name> MODE0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A034) \nPin 0 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.3..0> MODE0
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEL_MODE1  --------------------------------
// SVD Line: 9512

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE1
//    <name> MODE1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A034) \nPin 1 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.7..4> MODE1
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEL_MODE2  --------------------------------
// SVD Line: 9601

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE2
//    <name> MODE2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A034) \nPin 2 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.11..8> MODE2
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEL_MODE3  --------------------------------
// SVD Line: 9690

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE3
//    <name> MODE3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A034) \nPin 3 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.15..12> MODE3
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEL_MODE4  --------------------------------
// SVD Line: 9779

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE4
//    <name> MODE4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A034) \nPin 4 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.19..16> MODE4
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEL_MODE5  --------------------------------
// SVD Line: 9868

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE5
//    <name> MODE5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A034) \nPin 5 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.23..20> MODE5
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEL_MODE6  --------------------------------
// SVD Line: 9957

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE6
//    <name> MODE6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A034) \nPin 6 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.27..24> MODE6
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEL_MODE7  --------------------------------
// SVD Line: 10046

//  <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE7
//    <name> MODE7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A034) \nPin 7 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEL ) </loc>
//      <o.31..28> MODE7
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PB_MODEL  ---------------------------------
// SVD Line: 9414

//  <rtree> SFDITEM_REG__GPIO_PB_MODEL
//    <name> PB_MODEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A034) Port Pin Mode Low Register </i>
//    <loc> ( (unsigned int)((GPIO_PB_MODEL >> 0) & 0xFFFFFFFF), ((GPIO_PB_MODEL = (GPIO_PB_MODEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE0 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE1 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE2 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE3 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE4 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE5 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE6 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEL_MODE7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PB_MODEH  ------------------------------
// SVD Line: 10137

unsigned int GPIO_PB_MODEH __AT (0x4000A038);



// -----------------------------  Field Item: GPIO_PB_MODEH_MODE8  --------------------------------
// SVD Line: 10146

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE8
//    <name> MODE8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A038) \nPin 8 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.3..0> MODE8
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PB_MODEH_MODE9  --------------------------------
// SVD Line: 10235

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE9
//    <name> MODE9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A038) \nPin 9 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.7..4> MODE9
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PB_MODEH_MODE10  --------------------------------
// SVD Line: 10324

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE10
//    <name> MODE10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A038) \nPin 10 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.11..8> MODE10
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PB_MODEH_MODE11  --------------------------------
// SVD Line: 10413

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE11
//    <name> MODE11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A038) \nPin 11 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.15..12> MODE11
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PB_MODEH_MODE12  --------------------------------
// SVD Line: 10502

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE12
//    <name> MODE12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A038) \nPin 12 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.19..16> MODE12
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PB_MODEH_MODE13  --------------------------------
// SVD Line: 10591

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE13
//    <name> MODE13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A038) \nPin 13 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.23..20> MODE13
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PB_MODEH_MODE14  --------------------------------
// SVD Line: 10680

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE14
//    <name> MODE14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A038) \nPin 14 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.27..24> MODE14
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PB_MODEH_MODE15  --------------------------------
// SVD Line: 10769

//  <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE15
//    <name> MODE15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A038) \nPin 15 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PB_MODEH ) </loc>
//      <o.31..28> MODE15
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PB_MODEH  ---------------------------------
// SVD Line: 10137

//  <rtree> SFDITEM_REG__GPIO_PB_MODEH
//    <name> PB_MODEH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A038) Port Pin Mode High Register </i>
//    <loc> ( (unsigned int)((GPIO_PB_MODEH >> 0) & 0xFFFFFFFF), ((GPIO_PB_MODEH = (GPIO_PB_MODEH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE8 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE9 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE10 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE11 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE12 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE13 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE14 </item>
//    <item> SFDITEM_FIELD__GPIO_PB_MODEH_MODE15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PB_DOUT  ------------------------------
// SVD Line: 10860

unsigned int GPIO_PB_DOUT __AT (0x4000A03C);



// ------------------------------  Field Item: GPIO_PB_DOUT_DOUT  ---------------------------------
// SVD Line: 10869

//  <item> SFDITEM_FIELD__GPIO_PB_DOUT_DOUT
//    <name> DOUT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A03C) Data Out </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PB_DOUT >> 0) & 0xFFFF), ((GPIO_PB_DOUT = (GPIO_PB_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PB_DOUT  ----------------------------------
// SVD Line: 10860

//  <rtree> SFDITEM_REG__GPIO_PB_DOUT
//    <name> PB_DOUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A03C) Port Data Out Register </i>
//    <loc> ( (unsigned int)((GPIO_PB_DOUT >> 0) & 0xFFFFFFFF), ((GPIO_PB_DOUT = (GPIO_PB_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_DOUT_DOUT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PB_DOUTTGL  -----------------------------
// SVD Line: 10878

unsigned int GPIO_PB_DOUTTGL __AT (0x4000A048);



// ---------------------------  Field Item: GPIO_PB_DOUTTGL_DOUTTGL  ------------------------------
// SVD Line: 10887

//  <item> SFDITEM_FIELD__GPIO_PB_DOUTTGL_DOUTTGL
//    <name> DOUTTGL </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A048) Data Out Toggle </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PB_DOUTTGL >> 0) & 0x0), ((GPIO_PB_DOUTTGL = (GPIO_PB_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PB_DOUTTGL  --------------------------------
// SVD Line: 10878

//  <rtree> SFDITEM_REG__GPIO_PB_DOUTTGL
//    <name> PB_DOUTTGL </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A048) Port Data Out Toggle Register </i>
//    <loc> ( (unsigned int)((GPIO_PB_DOUTTGL >> 0) & 0xFFFFFFFF), ((GPIO_PB_DOUTTGL = (GPIO_PB_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_DOUTTGL_DOUTTGL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PB_DIN  -------------------------------
// SVD Line: 10896

unsigned int GPIO_PB_DIN __AT (0x4000A04C);



// -------------------------------  Field Item: GPIO_PB_DIN_DIN  ----------------------------------
// SVD Line: 10905

//  <item> SFDITEM_FIELD__GPIO_PB_DIN_DIN
//    <name> DIN </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000A04C) Data in </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PB_DIN >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIO_PB_DIN  ----------------------------------
// SVD Line: 10896

//  <rtree> SFDITEM_REG__GPIO_PB_DIN
//    <name> PB_DIN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A04C) Port Data in Register </i>
//    <loc> ( (unsigned int)((GPIO_PB_DIN >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_DIN_DIN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PB_PINLOCKN  ----------------------------
// SVD Line: 10914

unsigned int GPIO_PB_PINLOCKN __AT (0x4000A050);



// --------------------------  Field Item: GPIO_PB_PINLOCKN_PINLOCKN  -----------------------------
// SVD Line: 10923

//  <item> SFDITEM_FIELD__GPIO_PB_PINLOCKN_PINLOCKN
//    <name> PINLOCKN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A050) Unlocked Pins </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PB_PINLOCKN >> 0) & 0xFFFF), ((GPIO_PB_PINLOCKN = (GPIO_PB_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_PB_PINLOCKN  --------------------------------
// SVD Line: 10914

//  <rtree> SFDITEM_REG__GPIO_PB_PINLOCKN
//    <name> PB_PINLOCKN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A050) Port Unlocked Pins Register </i>
//    <loc> ( (unsigned int)((GPIO_PB_PINLOCKN >> 0) & 0xFFFFFFFF), ((GPIO_PB_PINLOCKN = (GPIO_PB_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_PINLOCKN_PINLOCKN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PB_OVTDIS  -----------------------------
// SVD Line: 10932

unsigned int GPIO_PB_OVTDIS __AT (0x4000A058);



// ----------------------------  Field Item: GPIO_PB_OVTDIS_OVTDIS  -------------------------------
// SVD Line: 10941

//  <item> SFDITEM_FIELD__GPIO_PB_OVTDIS_OVTDIS
//    <name> OVTDIS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A058) Disable Over Voltage Capability </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PB_OVTDIS >> 0) & 0xFFFF), ((GPIO_PB_OVTDIS = (GPIO_PB_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PB_OVTDIS  ---------------------------------
// SVD Line: 10932

//  <rtree> SFDITEM_REG__GPIO_PB_OVTDIS
//    <name> PB_OVTDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A058) Over Voltage Disable for All Modes </i>
//    <loc> ( (unsigned int)((GPIO_PB_OVTDIS >> 0) & 0xFFFFFFFF), ((GPIO_PB_OVTDIS = (GPIO_PB_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PB_OVTDIS_OVTDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PC_CTRL  ------------------------------
// SVD Line: 10950

unsigned int GPIO_PC_CTRL __AT (0x4000A060);



// -------------------------  Field Item: GPIO_PC_CTRL_DRIVESTRENGTH  -----------------------------
// SVD Line: 10959

//  <item> SFDITEM_FIELD__GPIO_PC_CTRL_DRIVESTRENGTH
//    <name> DRIVESTRENGTH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A060) Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PC_CTRL ) </loc>
//      <o.0..0> DRIVESTRENGTH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PC_CTRL_SLEWRATE  -------------------------------
// SVD Line: 10966

//  <item> SFDITEM_FIELD__GPIO_PC_CTRL_SLEWRATE
//    <name> SLEWRATE </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A060) Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PC_CTRL >> 4) & 0x7), ((GPIO_PC_CTRL = (GPIO_PC_CTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_CTRL_DINDIS  --------------------------------
// SVD Line: 10973

//  <item> SFDITEM_FIELD__GPIO_PC_CTRL_DINDIS
//    <name> DINDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A060) Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PC_CTRL ) </loc>
//      <o.12..12> DINDIS
//    </check>
//  </item>
//  


// ------------------------  Field Item: GPIO_PC_CTRL_DRIVESTRENGTHALT  ---------------------------
// SVD Line: 10980

//  <item> SFDITEM_FIELD__GPIO_PC_CTRL_DRIVESTRENGTHALT
//    <name> DRIVESTRENGTHALT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A060) Alternate Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PC_CTRL ) </loc>
//      <o.16..16> DRIVESTRENGTHALT
//    </check>
//  </item>
//  


// --------------------------  Field Item: GPIO_PC_CTRL_SLEWRATEALT  ------------------------------
// SVD Line: 10987

//  <item> SFDITEM_FIELD__GPIO_PC_CTRL_SLEWRATEALT
//    <name> SLEWRATEALT </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4000A060) Alternate Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PC_CTRL >> 20) & 0x7), ((GPIO_PC_CTRL = (GPIO_PC_CTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIO_PC_CTRL_DINDISALT  -------------------------------
// SVD Line: 10994

//  <item> SFDITEM_FIELD__GPIO_PC_CTRL_DINDISALT
//    <name> DINDISALT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000A060) Alternate Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PC_CTRL ) </loc>
//      <o.28..28> DINDISALT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PC_CTRL  ----------------------------------
// SVD Line: 10950

//  <rtree> SFDITEM_REG__GPIO_PC_CTRL
//    <name> PC_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A060) Port Control Register </i>
//    <loc> ( (unsigned int)((GPIO_PC_CTRL >> 0) & 0xFFFFFFFF), ((GPIO_PC_CTRL = (GPIO_PC_CTRL & ~(0x10711071UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10711071) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_CTRL_DRIVESTRENGTH </item>
//    <item> SFDITEM_FIELD__GPIO_PC_CTRL_SLEWRATE </item>
//    <item> SFDITEM_FIELD__GPIO_PC_CTRL_DINDIS </item>
//    <item> SFDITEM_FIELD__GPIO_PC_CTRL_DRIVESTRENGTHALT </item>
//    <item> SFDITEM_FIELD__GPIO_PC_CTRL_SLEWRATEALT </item>
//    <item> SFDITEM_FIELD__GPIO_PC_CTRL_DINDISALT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PC_MODEL  ------------------------------
// SVD Line: 11003

unsigned int GPIO_PC_MODEL __AT (0x4000A064);



// -----------------------------  Field Item: GPIO_PC_MODEL_MODE0  --------------------------------
// SVD Line: 11012

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE0
//    <name> MODE0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A064) \nPin 0 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.3..0> MODE0
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEL_MODE1  --------------------------------
// SVD Line: 11101

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE1
//    <name> MODE1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A064) \nPin 1 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.7..4> MODE1
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEL_MODE2  --------------------------------
// SVD Line: 11190

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE2
//    <name> MODE2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A064) \nPin 2 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.11..8> MODE2
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEL_MODE3  --------------------------------
// SVD Line: 11279

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE3
//    <name> MODE3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A064) \nPin 3 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.15..12> MODE3
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEL_MODE4  --------------------------------
// SVD Line: 11368

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE4
//    <name> MODE4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A064) \nPin 4 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.19..16> MODE4
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEL_MODE5  --------------------------------
// SVD Line: 11457

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE5
//    <name> MODE5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A064) \nPin 5 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.23..20> MODE5
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEL_MODE6  --------------------------------
// SVD Line: 11546

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE6
//    <name> MODE6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A064) \nPin 6 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.27..24> MODE6
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEL_MODE7  --------------------------------
// SVD Line: 11635

//  <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE7
//    <name> MODE7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A064) \nPin 7 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEL ) </loc>
//      <o.31..28> MODE7
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PC_MODEL  ---------------------------------
// SVD Line: 11003

//  <rtree> SFDITEM_REG__GPIO_PC_MODEL
//    <name> PC_MODEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A064) Port Pin Mode Low Register </i>
//    <loc> ( (unsigned int)((GPIO_PC_MODEL >> 0) & 0xFFFFFFFF), ((GPIO_PC_MODEL = (GPIO_PC_MODEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE0 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE1 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE2 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE3 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE4 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE5 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE6 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEL_MODE7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PC_MODEH  ------------------------------
// SVD Line: 11726

unsigned int GPIO_PC_MODEH __AT (0x4000A068);



// -----------------------------  Field Item: GPIO_PC_MODEH_MODE8  --------------------------------
// SVD Line: 11735

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE8
//    <name> MODE8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A068) \nPin 8 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.3..0> MODE8
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PC_MODEH_MODE9  --------------------------------
// SVD Line: 11824

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE9
//    <name> MODE9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A068) \nPin 9 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.7..4> MODE9
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PC_MODEH_MODE10  --------------------------------
// SVD Line: 11913

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE10
//    <name> MODE10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A068) \nPin 10 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.11..8> MODE10
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PC_MODEH_MODE11  --------------------------------
// SVD Line: 12002

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE11
//    <name> MODE11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A068) \nPin 11 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.15..12> MODE11
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PC_MODEH_MODE12  --------------------------------
// SVD Line: 12091

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE12
//    <name> MODE12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A068) \nPin 12 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.19..16> MODE12
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PC_MODEH_MODE13  --------------------------------
// SVD Line: 12180

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE13
//    <name> MODE13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A068) \nPin 13 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.23..20> MODE13
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PC_MODEH_MODE14  --------------------------------
// SVD Line: 12269

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE14
//    <name> MODE14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A068) \nPin 14 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.27..24> MODE14
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PC_MODEH_MODE15  --------------------------------
// SVD Line: 12358

//  <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE15
//    <name> MODE15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A068) \nPin 15 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PC_MODEH ) </loc>
//      <o.31..28> MODE15
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PC_MODEH  ---------------------------------
// SVD Line: 11726

//  <rtree> SFDITEM_REG__GPIO_PC_MODEH
//    <name> PC_MODEH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A068) Port Pin Mode High Register </i>
//    <loc> ( (unsigned int)((GPIO_PC_MODEH >> 0) & 0xFFFFFFFF), ((GPIO_PC_MODEH = (GPIO_PC_MODEH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE8 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE9 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE10 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE11 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE12 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE13 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE14 </item>
//    <item> SFDITEM_FIELD__GPIO_PC_MODEH_MODE15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PC_DOUT  ------------------------------
// SVD Line: 12449

unsigned int GPIO_PC_DOUT __AT (0x4000A06C);



// ------------------------------  Field Item: GPIO_PC_DOUT_DOUT  ---------------------------------
// SVD Line: 12458

//  <item> SFDITEM_FIELD__GPIO_PC_DOUT_DOUT
//    <name> DOUT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A06C) Data Out </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PC_DOUT >> 0) & 0xFFFF), ((GPIO_PC_DOUT = (GPIO_PC_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PC_DOUT  ----------------------------------
// SVD Line: 12449

//  <rtree> SFDITEM_REG__GPIO_PC_DOUT
//    <name> PC_DOUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A06C) Port Data Out Register </i>
//    <loc> ( (unsigned int)((GPIO_PC_DOUT >> 0) & 0xFFFFFFFF), ((GPIO_PC_DOUT = (GPIO_PC_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_DOUT_DOUT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PC_DOUTTGL  -----------------------------
// SVD Line: 12467

unsigned int GPIO_PC_DOUTTGL __AT (0x4000A078);



// ---------------------------  Field Item: GPIO_PC_DOUTTGL_DOUTTGL  ------------------------------
// SVD Line: 12476

//  <item> SFDITEM_FIELD__GPIO_PC_DOUTTGL_DOUTTGL
//    <name> DOUTTGL </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A078) Data Out Toggle </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PC_DOUTTGL >> 0) & 0x0), ((GPIO_PC_DOUTTGL = (GPIO_PC_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PC_DOUTTGL  --------------------------------
// SVD Line: 12467

//  <rtree> SFDITEM_REG__GPIO_PC_DOUTTGL
//    <name> PC_DOUTTGL </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A078) Port Data Out Toggle Register </i>
//    <loc> ( (unsigned int)((GPIO_PC_DOUTTGL >> 0) & 0xFFFFFFFF), ((GPIO_PC_DOUTTGL = (GPIO_PC_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_DOUTTGL_DOUTTGL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PC_DIN  -------------------------------
// SVD Line: 12485

unsigned int GPIO_PC_DIN __AT (0x4000A07C);



// -------------------------------  Field Item: GPIO_PC_DIN_DIN  ----------------------------------
// SVD Line: 12494

//  <item> SFDITEM_FIELD__GPIO_PC_DIN_DIN
//    <name> DIN </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000A07C) Data in </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PC_DIN >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIO_PC_DIN  ----------------------------------
// SVD Line: 12485

//  <rtree> SFDITEM_REG__GPIO_PC_DIN
//    <name> PC_DIN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A07C) Port Data in Register </i>
//    <loc> ( (unsigned int)((GPIO_PC_DIN >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_DIN_DIN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PC_PINLOCKN  ----------------------------
// SVD Line: 12503

unsigned int GPIO_PC_PINLOCKN __AT (0x4000A080);



// --------------------------  Field Item: GPIO_PC_PINLOCKN_PINLOCKN  -----------------------------
// SVD Line: 12512

//  <item> SFDITEM_FIELD__GPIO_PC_PINLOCKN_PINLOCKN
//    <name> PINLOCKN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A080) Unlocked Pins </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PC_PINLOCKN >> 0) & 0xFFFF), ((GPIO_PC_PINLOCKN = (GPIO_PC_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_PC_PINLOCKN  --------------------------------
// SVD Line: 12503

//  <rtree> SFDITEM_REG__GPIO_PC_PINLOCKN
//    <name> PC_PINLOCKN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A080) Port Unlocked Pins Register </i>
//    <loc> ( (unsigned int)((GPIO_PC_PINLOCKN >> 0) & 0xFFFFFFFF), ((GPIO_PC_PINLOCKN = (GPIO_PC_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_PINLOCKN_PINLOCKN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PC_OVTDIS  -----------------------------
// SVD Line: 12521

unsigned int GPIO_PC_OVTDIS __AT (0x4000A088);



// ----------------------------  Field Item: GPIO_PC_OVTDIS_OVTDIS  -------------------------------
// SVD Line: 12530

//  <item> SFDITEM_FIELD__GPIO_PC_OVTDIS_OVTDIS
//    <name> OVTDIS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A088) Disable Over Voltage Capability </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PC_OVTDIS >> 0) & 0xFFFF), ((GPIO_PC_OVTDIS = (GPIO_PC_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PC_OVTDIS  ---------------------------------
// SVD Line: 12521

//  <rtree> SFDITEM_REG__GPIO_PC_OVTDIS
//    <name> PC_OVTDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A088) Over Voltage Disable for All Modes </i>
//    <loc> ( (unsigned int)((GPIO_PC_OVTDIS >> 0) & 0xFFFFFFFF), ((GPIO_PC_OVTDIS = (GPIO_PC_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PC_OVTDIS_OVTDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PD_CTRL  ------------------------------
// SVD Line: 12539

unsigned int GPIO_PD_CTRL __AT (0x4000A090);



// -------------------------  Field Item: GPIO_PD_CTRL_DRIVESTRENGTH  -----------------------------
// SVD Line: 12548

//  <item> SFDITEM_FIELD__GPIO_PD_CTRL_DRIVESTRENGTH
//    <name> DRIVESTRENGTH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A090) Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PD_CTRL ) </loc>
//      <o.0..0> DRIVESTRENGTH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PD_CTRL_SLEWRATE  -------------------------------
// SVD Line: 12555

//  <item> SFDITEM_FIELD__GPIO_PD_CTRL_SLEWRATE
//    <name> SLEWRATE </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A090) Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PD_CTRL >> 4) & 0x7), ((GPIO_PD_CTRL = (GPIO_PD_CTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_CTRL_DINDIS  --------------------------------
// SVD Line: 12562

//  <item> SFDITEM_FIELD__GPIO_PD_CTRL_DINDIS
//    <name> DINDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A090) Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PD_CTRL ) </loc>
//      <o.12..12> DINDIS
//    </check>
//  </item>
//  


// ------------------------  Field Item: GPIO_PD_CTRL_DRIVESTRENGTHALT  ---------------------------
// SVD Line: 12569

//  <item> SFDITEM_FIELD__GPIO_PD_CTRL_DRIVESTRENGTHALT
//    <name> DRIVESTRENGTHALT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A090) Alternate Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PD_CTRL ) </loc>
//      <o.16..16> DRIVESTRENGTHALT
//    </check>
//  </item>
//  


// --------------------------  Field Item: GPIO_PD_CTRL_SLEWRATEALT  ------------------------------
// SVD Line: 12576

//  <item> SFDITEM_FIELD__GPIO_PD_CTRL_SLEWRATEALT
//    <name> SLEWRATEALT </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4000A090) Alternate Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PD_CTRL >> 20) & 0x7), ((GPIO_PD_CTRL = (GPIO_PD_CTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIO_PD_CTRL_DINDISALT  -------------------------------
// SVD Line: 12583

//  <item> SFDITEM_FIELD__GPIO_PD_CTRL_DINDISALT
//    <name> DINDISALT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000A090) Alternate Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PD_CTRL ) </loc>
//      <o.28..28> DINDISALT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PD_CTRL  ----------------------------------
// SVD Line: 12539

//  <rtree> SFDITEM_REG__GPIO_PD_CTRL
//    <name> PD_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A090) Port Control Register </i>
//    <loc> ( (unsigned int)((GPIO_PD_CTRL >> 0) & 0xFFFFFFFF), ((GPIO_PD_CTRL = (GPIO_PD_CTRL & ~(0x10711071UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10711071) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_CTRL_DRIVESTRENGTH </item>
//    <item> SFDITEM_FIELD__GPIO_PD_CTRL_SLEWRATE </item>
//    <item> SFDITEM_FIELD__GPIO_PD_CTRL_DINDIS </item>
//    <item> SFDITEM_FIELD__GPIO_PD_CTRL_DRIVESTRENGTHALT </item>
//    <item> SFDITEM_FIELD__GPIO_PD_CTRL_SLEWRATEALT </item>
//    <item> SFDITEM_FIELD__GPIO_PD_CTRL_DINDISALT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PD_MODEL  ------------------------------
// SVD Line: 12592

unsigned int GPIO_PD_MODEL __AT (0x4000A094);



// -----------------------------  Field Item: GPIO_PD_MODEL_MODE0  --------------------------------
// SVD Line: 12601

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE0
//    <name> MODE0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A094) \nPin 0 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.3..0> MODE0
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEL_MODE1  --------------------------------
// SVD Line: 12690

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE1
//    <name> MODE1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A094) \nPin 1 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.7..4> MODE1
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEL_MODE2  --------------------------------
// SVD Line: 12779

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE2
//    <name> MODE2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A094) \nPin 2 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.11..8> MODE2
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEL_MODE3  --------------------------------
// SVD Line: 12868

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE3
//    <name> MODE3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A094) \nPin 3 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.15..12> MODE3
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEL_MODE4  --------------------------------
// SVD Line: 12957

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE4
//    <name> MODE4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A094) \nPin 4 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.19..16> MODE4
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEL_MODE5  --------------------------------
// SVD Line: 13046

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE5
//    <name> MODE5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A094) \nPin 5 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.23..20> MODE5
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEL_MODE6  --------------------------------
// SVD Line: 13135

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE6
//    <name> MODE6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A094) \nPin 6 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.27..24> MODE6
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEL_MODE7  --------------------------------
// SVD Line: 13224

//  <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE7
//    <name> MODE7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A094) \nPin 7 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEL ) </loc>
//      <o.31..28> MODE7
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PD_MODEL  ---------------------------------
// SVD Line: 12592

//  <rtree> SFDITEM_REG__GPIO_PD_MODEL
//    <name> PD_MODEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A094) Port Pin Mode Low Register </i>
//    <loc> ( (unsigned int)((GPIO_PD_MODEL >> 0) & 0xFFFFFFFF), ((GPIO_PD_MODEL = (GPIO_PD_MODEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE0 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE1 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE2 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE3 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE4 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE5 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE6 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEL_MODE7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PD_MODEH  ------------------------------
// SVD Line: 13315

unsigned int GPIO_PD_MODEH __AT (0x4000A098);



// -----------------------------  Field Item: GPIO_PD_MODEH_MODE8  --------------------------------
// SVD Line: 13324

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE8
//    <name> MODE8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A098) \nPin 8 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.3..0> MODE8
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PD_MODEH_MODE9  --------------------------------
// SVD Line: 13413

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE9
//    <name> MODE9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A098) \nPin 9 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.7..4> MODE9
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PD_MODEH_MODE10  --------------------------------
// SVD Line: 13502

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE10
//    <name> MODE10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A098) \nPin 10 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.11..8> MODE10
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PD_MODEH_MODE11  --------------------------------
// SVD Line: 13591

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE11
//    <name> MODE11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A098) \nPin 11 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.15..12> MODE11
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PD_MODEH_MODE12  --------------------------------
// SVD Line: 13680

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE12
//    <name> MODE12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A098) \nPin 12 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.19..16> MODE12
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PD_MODEH_MODE13  --------------------------------
// SVD Line: 13769

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE13
//    <name> MODE13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A098) \nPin 13 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.23..20> MODE13
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PD_MODEH_MODE14  --------------------------------
// SVD Line: 13858

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE14
//    <name> MODE14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A098) \nPin 14 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.27..24> MODE14
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PD_MODEH_MODE15  --------------------------------
// SVD Line: 13947

//  <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE15
//    <name> MODE15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A098) \nPin 15 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PD_MODEH ) </loc>
//      <o.31..28> MODE15
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PD_MODEH  ---------------------------------
// SVD Line: 13315

//  <rtree> SFDITEM_REG__GPIO_PD_MODEH
//    <name> PD_MODEH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A098) Port Pin Mode High Register </i>
//    <loc> ( (unsigned int)((GPIO_PD_MODEH >> 0) & 0xFFFFFFFF), ((GPIO_PD_MODEH = (GPIO_PD_MODEH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE8 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE9 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE10 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE11 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE12 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE13 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE14 </item>
//    <item> SFDITEM_FIELD__GPIO_PD_MODEH_MODE15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PD_DOUT  ------------------------------
// SVD Line: 14038

unsigned int GPIO_PD_DOUT __AT (0x4000A09C);



// ------------------------------  Field Item: GPIO_PD_DOUT_DOUT  ---------------------------------
// SVD Line: 14047

//  <item> SFDITEM_FIELD__GPIO_PD_DOUT_DOUT
//    <name> DOUT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A09C) Data Out </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PD_DOUT >> 0) & 0xFFFF), ((GPIO_PD_DOUT = (GPIO_PD_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PD_DOUT  ----------------------------------
// SVD Line: 14038

//  <rtree> SFDITEM_REG__GPIO_PD_DOUT
//    <name> PD_DOUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A09C) Port Data Out Register </i>
//    <loc> ( (unsigned int)((GPIO_PD_DOUT >> 0) & 0xFFFFFFFF), ((GPIO_PD_DOUT = (GPIO_PD_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_DOUT_DOUT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PD_DOUTTGL  -----------------------------
// SVD Line: 14056

unsigned int GPIO_PD_DOUTTGL __AT (0x4000A0A8);



// ---------------------------  Field Item: GPIO_PD_DOUTTGL_DOUTTGL  ------------------------------
// SVD Line: 14065

//  <item> SFDITEM_FIELD__GPIO_PD_DOUTTGL_DOUTTGL
//    <name> DOUTTGL </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A0A8) Data Out Toggle </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PD_DOUTTGL >> 0) & 0x0), ((GPIO_PD_DOUTTGL = (GPIO_PD_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PD_DOUTTGL  --------------------------------
// SVD Line: 14056

//  <rtree> SFDITEM_REG__GPIO_PD_DOUTTGL
//    <name> PD_DOUTTGL </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A0A8) Port Data Out Toggle Register </i>
//    <loc> ( (unsigned int)((GPIO_PD_DOUTTGL >> 0) & 0xFFFFFFFF), ((GPIO_PD_DOUTTGL = (GPIO_PD_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_DOUTTGL_DOUTTGL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PD_DIN  -------------------------------
// SVD Line: 14074

unsigned int GPIO_PD_DIN __AT (0x4000A0AC);



// -------------------------------  Field Item: GPIO_PD_DIN_DIN  ----------------------------------
// SVD Line: 14083

//  <item> SFDITEM_FIELD__GPIO_PD_DIN_DIN
//    <name> DIN </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000A0AC) Data in </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PD_DIN >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIO_PD_DIN  ----------------------------------
// SVD Line: 14074

//  <rtree> SFDITEM_REG__GPIO_PD_DIN
//    <name> PD_DIN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A0AC) Port Data in Register </i>
//    <loc> ( (unsigned int)((GPIO_PD_DIN >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_DIN_DIN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PD_PINLOCKN  ----------------------------
// SVD Line: 14092

unsigned int GPIO_PD_PINLOCKN __AT (0x4000A0B0);



// --------------------------  Field Item: GPIO_PD_PINLOCKN_PINLOCKN  -----------------------------
// SVD Line: 14101

//  <item> SFDITEM_FIELD__GPIO_PD_PINLOCKN_PINLOCKN
//    <name> PINLOCKN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A0B0) Unlocked Pins </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PD_PINLOCKN >> 0) & 0xFFFF), ((GPIO_PD_PINLOCKN = (GPIO_PD_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_PD_PINLOCKN  --------------------------------
// SVD Line: 14092

//  <rtree> SFDITEM_REG__GPIO_PD_PINLOCKN
//    <name> PD_PINLOCKN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0B0) Port Unlocked Pins Register </i>
//    <loc> ( (unsigned int)((GPIO_PD_PINLOCKN >> 0) & 0xFFFFFFFF), ((GPIO_PD_PINLOCKN = (GPIO_PD_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_PINLOCKN_PINLOCKN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PD_OVTDIS  -----------------------------
// SVD Line: 14110

unsigned int GPIO_PD_OVTDIS __AT (0x4000A0B8);



// ----------------------------  Field Item: GPIO_PD_OVTDIS_OVTDIS  -------------------------------
// SVD Line: 14119

//  <item> SFDITEM_FIELD__GPIO_PD_OVTDIS_OVTDIS
//    <name> OVTDIS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A0B8) Disable Over Voltage Capability </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PD_OVTDIS >> 0) & 0xFFFF), ((GPIO_PD_OVTDIS = (GPIO_PD_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PD_OVTDIS  ---------------------------------
// SVD Line: 14110

//  <rtree> SFDITEM_REG__GPIO_PD_OVTDIS
//    <name> PD_OVTDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0B8) Over Voltage Disable for All Modes </i>
//    <loc> ( (unsigned int)((GPIO_PD_OVTDIS >> 0) & 0xFFFFFFFF), ((GPIO_PD_OVTDIS = (GPIO_PD_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PD_OVTDIS_OVTDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PE_CTRL  ------------------------------
// SVD Line: 14128

unsigned int GPIO_PE_CTRL __AT (0x4000A0C0);



// -------------------------  Field Item: GPIO_PE_CTRL_DRIVESTRENGTH  -----------------------------
// SVD Line: 14137

//  <item> SFDITEM_FIELD__GPIO_PE_CTRL_DRIVESTRENGTH
//    <name> DRIVESTRENGTH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A0C0) Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PE_CTRL ) </loc>
//      <o.0..0> DRIVESTRENGTH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PE_CTRL_SLEWRATE  -------------------------------
// SVD Line: 14144

//  <item> SFDITEM_FIELD__GPIO_PE_CTRL_SLEWRATE
//    <name> SLEWRATE </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A0C0) Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PE_CTRL >> 4) & 0x7), ((GPIO_PE_CTRL = (GPIO_PE_CTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_CTRL_DINDIS  --------------------------------
// SVD Line: 14151

//  <item> SFDITEM_FIELD__GPIO_PE_CTRL_DINDIS
//    <name> DINDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A0C0) Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PE_CTRL ) </loc>
//      <o.12..12> DINDIS
//    </check>
//  </item>
//  


// ------------------------  Field Item: GPIO_PE_CTRL_DRIVESTRENGTHALT  ---------------------------
// SVD Line: 14158

//  <item> SFDITEM_FIELD__GPIO_PE_CTRL_DRIVESTRENGTHALT
//    <name> DRIVESTRENGTHALT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A0C0) Alternate Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PE_CTRL ) </loc>
//      <o.16..16> DRIVESTRENGTHALT
//    </check>
//  </item>
//  


// --------------------------  Field Item: GPIO_PE_CTRL_SLEWRATEALT  ------------------------------
// SVD Line: 14165

//  <item> SFDITEM_FIELD__GPIO_PE_CTRL_SLEWRATEALT
//    <name> SLEWRATEALT </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4000A0C0) Alternate Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PE_CTRL >> 20) & 0x7), ((GPIO_PE_CTRL = (GPIO_PE_CTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIO_PE_CTRL_DINDISALT  -------------------------------
// SVD Line: 14172

//  <item> SFDITEM_FIELD__GPIO_PE_CTRL_DINDISALT
//    <name> DINDISALT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000A0C0) Alternate Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PE_CTRL ) </loc>
//      <o.28..28> DINDISALT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PE_CTRL  ----------------------------------
// SVD Line: 14128

//  <rtree> SFDITEM_REG__GPIO_PE_CTRL
//    <name> PE_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0C0) Port Control Register </i>
//    <loc> ( (unsigned int)((GPIO_PE_CTRL >> 0) & 0xFFFFFFFF), ((GPIO_PE_CTRL = (GPIO_PE_CTRL & ~(0x10711071UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10711071) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_CTRL_DRIVESTRENGTH </item>
//    <item> SFDITEM_FIELD__GPIO_PE_CTRL_SLEWRATE </item>
//    <item> SFDITEM_FIELD__GPIO_PE_CTRL_DINDIS </item>
//    <item> SFDITEM_FIELD__GPIO_PE_CTRL_DRIVESTRENGTHALT </item>
//    <item> SFDITEM_FIELD__GPIO_PE_CTRL_SLEWRATEALT </item>
//    <item> SFDITEM_FIELD__GPIO_PE_CTRL_DINDISALT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PE_MODEL  ------------------------------
// SVD Line: 14181

unsigned int GPIO_PE_MODEL __AT (0x4000A0C4);



// -----------------------------  Field Item: GPIO_PE_MODEL_MODE0  --------------------------------
// SVD Line: 14190

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE0
//    <name> MODE0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A0C4) \nPin 0 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.3..0> MODE0
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEL_MODE1  --------------------------------
// SVD Line: 14279

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE1
//    <name> MODE1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A0C4) \nPin 1 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.7..4> MODE1
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEL_MODE2  --------------------------------
// SVD Line: 14368

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE2
//    <name> MODE2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A0C4) \nPin 2 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.11..8> MODE2
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEL_MODE3  --------------------------------
// SVD Line: 14457

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE3
//    <name> MODE3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A0C4) \nPin 3 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.15..12> MODE3
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEL_MODE4  --------------------------------
// SVD Line: 14546

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE4
//    <name> MODE4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A0C4) \nPin 4 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.19..16> MODE4
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEL_MODE5  --------------------------------
// SVD Line: 14635

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE5
//    <name> MODE5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A0C4) \nPin 5 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.23..20> MODE5
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEL_MODE6  --------------------------------
// SVD Line: 14724

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE6
//    <name> MODE6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A0C4) \nPin 6 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.27..24> MODE6
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEL_MODE7  --------------------------------
// SVD Line: 14813

//  <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE7
//    <name> MODE7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A0C4) \nPin 7 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEL ) </loc>
//      <o.31..28> MODE7
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PE_MODEL  ---------------------------------
// SVD Line: 14181

//  <rtree> SFDITEM_REG__GPIO_PE_MODEL
//    <name> PE_MODEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0C4) Port Pin Mode Low Register </i>
//    <loc> ( (unsigned int)((GPIO_PE_MODEL >> 0) & 0xFFFFFFFF), ((GPIO_PE_MODEL = (GPIO_PE_MODEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE0 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE1 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE2 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE3 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE4 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE5 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE6 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEL_MODE7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PE_MODEH  ------------------------------
// SVD Line: 14904

unsigned int GPIO_PE_MODEH __AT (0x4000A0C8);



// -----------------------------  Field Item: GPIO_PE_MODEH_MODE8  --------------------------------
// SVD Line: 14913

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE8
//    <name> MODE8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A0C8) \nPin 8 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.3..0> MODE8
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PE_MODEH_MODE9  --------------------------------
// SVD Line: 15002

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE9
//    <name> MODE9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A0C8) \nPin 9 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.7..4> MODE9
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PE_MODEH_MODE10  --------------------------------
// SVD Line: 15091

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE10
//    <name> MODE10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A0C8) \nPin 10 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.11..8> MODE10
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PE_MODEH_MODE11  --------------------------------
// SVD Line: 15180

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE11
//    <name> MODE11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A0C8) \nPin 11 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.15..12> MODE11
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PE_MODEH_MODE12  --------------------------------
// SVD Line: 15269

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE12
//    <name> MODE12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A0C8) \nPin 12 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.19..16> MODE12
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PE_MODEH_MODE13  --------------------------------
// SVD Line: 15358

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE13
//    <name> MODE13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A0C8) \nPin 13 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.23..20> MODE13
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PE_MODEH_MODE14  --------------------------------
// SVD Line: 15447

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE14
//    <name> MODE14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A0C8) \nPin 14 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.27..24> MODE14
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PE_MODEH_MODE15  --------------------------------
// SVD Line: 15536

//  <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE15
//    <name> MODE15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A0C8) \nPin 15 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PE_MODEH ) </loc>
//      <o.31..28> MODE15
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PE_MODEH  ---------------------------------
// SVD Line: 14904

//  <rtree> SFDITEM_REG__GPIO_PE_MODEH
//    <name> PE_MODEH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0C8) Port Pin Mode High Register </i>
//    <loc> ( (unsigned int)((GPIO_PE_MODEH >> 0) & 0xFFFFFFFF), ((GPIO_PE_MODEH = (GPIO_PE_MODEH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE8 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE9 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE10 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE11 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE12 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE13 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE14 </item>
//    <item> SFDITEM_FIELD__GPIO_PE_MODEH_MODE15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PE_DOUT  ------------------------------
// SVD Line: 15627

unsigned int GPIO_PE_DOUT __AT (0x4000A0CC);



// ------------------------------  Field Item: GPIO_PE_DOUT_DOUT  ---------------------------------
// SVD Line: 15636

//  <item> SFDITEM_FIELD__GPIO_PE_DOUT_DOUT
//    <name> DOUT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A0CC) Data Out </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PE_DOUT >> 0) & 0xFFFF), ((GPIO_PE_DOUT = (GPIO_PE_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PE_DOUT  ----------------------------------
// SVD Line: 15627

//  <rtree> SFDITEM_REG__GPIO_PE_DOUT
//    <name> PE_DOUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0CC) Port Data Out Register </i>
//    <loc> ( (unsigned int)((GPIO_PE_DOUT >> 0) & 0xFFFFFFFF), ((GPIO_PE_DOUT = (GPIO_PE_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_DOUT_DOUT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PE_DOUTTGL  -----------------------------
// SVD Line: 15645

unsigned int GPIO_PE_DOUTTGL __AT (0x4000A0D8);



// ---------------------------  Field Item: GPIO_PE_DOUTTGL_DOUTTGL  ------------------------------
// SVD Line: 15654

//  <item> SFDITEM_FIELD__GPIO_PE_DOUTTGL_DOUTTGL
//    <name> DOUTTGL </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A0D8) Data Out Toggle </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PE_DOUTTGL >> 0) & 0x0), ((GPIO_PE_DOUTTGL = (GPIO_PE_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PE_DOUTTGL  --------------------------------
// SVD Line: 15645

//  <rtree> SFDITEM_REG__GPIO_PE_DOUTTGL
//    <name> PE_DOUTTGL </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A0D8) Port Data Out Toggle Register </i>
//    <loc> ( (unsigned int)((GPIO_PE_DOUTTGL >> 0) & 0xFFFFFFFF), ((GPIO_PE_DOUTTGL = (GPIO_PE_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_DOUTTGL_DOUTTGL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PE_DIN  -------------------------------
// SVD Line: 15663

unsigned int GPIO_PE_DIN __AT (0x4000A0DC);



// -------------------------------  Field Item: GPIO_PE_DIN_DIN  ----------------------------------
// SVD Line: 15672

//  <item> SFDITEM_FIELD__GPIO_PE_DIN_DIN
//    <name> DIN </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000A0DC) Data in </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PE_DIN >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIO_PE_DIN  ----------------------------------
// SVD Line: 15663

//  <rtree> SFDITEM_REG__GPIO_PE_DIN
//    <name> PE_DIN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A0DC) Port Data in Register </i>
//    <loc> ( (unsigned int)((GPIO_PE_DIN >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_DIN_DIN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PE_PINLOCKN  ----------------------------
// SVD Line: 15681

unsigned int GPIO_PE_PINLOCKN __AT (0x4000A0E0);



// --------------------------  Field Item: GPIO_PE_PINLOCKN_PINLOCKN  -----------------------------
// SVD Line: 15690

//  <item> SFDITEM_FIELD__GPIO_PE_PINLOCKN_PINLOCKN
//    <name> PINLOCKN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A0E0) Unlocked Pins </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PE_PINLOCKN >> 0) & 0xFFFF), ((GPIO_PE_PINLOCKN = (GPIO_PE_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_PE_PINLOCKN  --------------------------------
// SVD Line: 15681

//  <rtree> SFDITEM_REG__GPIO_PE_PINLOCKN
//    <name> PE_PINLOCKN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0E0) Port Unlocked Pins Register </i>
//    <loc> ( (unsigned int)((GPIO_PE_PINLOCKN >> 0) & 0xFFFFFFFF), ((GPIO_PE_PINLOCKN = (GPIO_PE_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_PINLOCKN_PINLOCKN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PE_OVTDIS  -----------------------------
// SVD Line: 15699

unsigned int GPIO_PE_OVTDIS __AT (0x4000A0E8);



// ----------------------------  Field Item: GPIO_PE_OVTDIS_OVTDIS  -------------------------------
// SVD Line: 15708

//  <item> SFDITEM_FIELD__GPIO_PE_OVTDIS_OVTDIS
//    <name> OVTDIS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A0E8) Disable Over Voltage Capability </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PE_OVTDIS >> 0) & 0xFFFF), ((GPIO_PE_OVTDIS = (GPIO_PE_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PE_OVTDIS  ---------------------------------
// SVD Line: 15699

//  <rtree> SFDITEM_REG__GPIO_PE_OVTDIS
//    <name> PE_OVTDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0E8) Over Voltage Disable for All Modes </i>
//    <loc> ( (unsigned int)((GPIO_PE_OVTDIS >> 0) & 0xFFFFFFFF), ((GPIO_PE_OVTDIS = (GPIO_PE_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PE_OVTDIS_OVTDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PF_CTRL  ------------------------------
// SVD Line: 15717

unsigned int GPIO_PF_CTRL __AT (0x4000A0F0);



// -------------------------  Field Item: GPIO_PF_CTRL_DRIVESTRENGTH  -----------------------------
// SVD Line: 15726

//  <item> SFDITEM_FIELD__GPIO_PF_CTRL_DRIVESTRENGTH
//    <name> DRIVESTRENGTH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A0F0) Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PF_CTRL ) </loc>
//      <o.0..0> DRIVESTRENGTH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PF_CTRL_SLEWRATE  -------------------------------
// SVD Line: 15733

//  <item> SFDITEM_FIELD__GPIO_PF_CTRL_SLEWRATE
//    <name> SLEWRATE </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A0F0) Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PF_CTRL >> 4) & 0x7), ((GPIO_PF_CTRL = (GPIO_PF_CTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_CTRL_DINDIS  --------------------------------
// SVD Line: 15740

//  <item> SFDITEM_FIELD__GPIO_PF_CTRL_DINDIS
//    <name> DINDIS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A0F0) Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PF_CTRL ) </loc>
//      <o.12..12> DINDIS
//    </check>
//  </item>
//  


// ------------------------  Field Item: GPIO_PF_CTRL_DRIVESTRENGTHALT  ---------------------------
// SVD Line: 15747

//  <item> SFDITEM_FIELD__GPIO_PF_CTRL_DRIVESTRENGTHALT
//    <name> DRIVESTRENGTHALT </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A0F0) Alternate Drive Strength for Port </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PF_CTRL ) </loc>
//      <o.16..16> DRIVESTRENGTHALT
//    </check>
//  </item>
//  


// --------------------------  Field Item: GPIO_PF_CTRL_SLEWRATEALT  ------------------------------
// SVD Line: 15754

//  <item> SFDITEM_FIELD__GPIO_PF_CTRL_SLEWRATEALT
//    <name> SLEWRATEALT </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4000A0F0) Alternate Slewrate Limit for Port </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIO_PF_CTRL >> 20) & 0x7), ((GPIO_PF_CTRL = (GPIO_PF_CTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIO_PF_CTRL_DINDISALT  -------------------------------
// SVD Line: 15761

//  <item> SFDITEM_FIELD__GPIO_PF_CTRL_DINDISALT
//    <name> DINDISALT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000A0F0) Alternate Data in Disable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_PF_CTRL ) </loc>
//      <o.28..28> DINDISALT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PF_CTRL  ----------------------------------
// SVD Line: 15717

//  <rtree> SFDITEM_REG__GPIO_PF_CTRL
//    <name> PF_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0F0) Port Control Register </i>
//    <loc> ( (unsigned int)((GPIO_PF_CTRL >> 0) & 0xFFFFFFFF), ((GPIO_PF_CTRL = (GPIO_PF_CTRL & ~(0x10711071UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10711071) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_CTRL_DRIVESTRENGTH </item>
//    <item> SFDITEM_FIELD__GPIO_PF_CTRL_SLEWRATE </item>
//    <item> SFDITEM_FIELD__GPIO_PF_CTRL_DINDIS </item>
//    <item> SFDITEM_FIELD__GPIO_PF_CTRL_DRIVESTRENGTHALT </item>
//    <item> SFDITEM_FIELD__GPIO_PF_CTRL_SLEWRATEALT </item>
//    <item> SFDITEM_FIELD__GPIO_PF_CTRL_DINDISALT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PF_MODEL  ------------------------------
// SVD Line: 15770

unsigned int GPIO_PF_MODEL __AT (0x4000A0F4);



// -----------------------------  Field Item: GPIO_PF_MODEL_MODE0  --------------------------------
// SVD Line: 15779

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE0
//    <name> MODE0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A0F4) \nPin 0 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.3..0> MODE0
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEL_MODE1  --------------------------------
// SVD Line: 15868

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE1
//    <name> MODE1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A0F4) \nPin 1 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.7..4> MODE1
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEL_MODE2  --------------------------------
// SVD Line: 15957

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE2
//    <name> MODE2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A0F4) \nPin 2 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.11..8> MODE2
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEL_MODE3  --------------------------------
// SVD Line: 16046

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE3
//    <name> MODE3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A0F4) \nPin 3 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.15..12> MODE3
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEL_MODE4  --------------------------------
// SVD Line: 16135

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE4
//    <name> MODE4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A0F4) \nPin 4 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.19..16> MODE4
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEL_MODE5  --------------------------------
// SVD Line: 16224

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE5
//    <name> MODE5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A0F4) \nPin 5 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.23..20> MODE5
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEL_MODE6  --------------------------------
// SVD Line: 16313

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE6
//    <name> MODE6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A0F4) \nPin 6 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.27..24> MODE6
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEL_MODE7  --------------------------------
// SVD Line: 16402

//  <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE7
//    <name> MODE7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A0F4) \nPin 7 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEL ) </loc>
//      <o.31..28> MODE7
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PF_MODEL  ---------------------------------
// SVD Line: 15770

//  <rtree> SFDITEM_REG__GPIO_PF_MODEL
//    <name> PF_MODEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0F4) Port Pin Mode Low Register </i>
//    <loc> ( (unsigned int)((GPIO_PF_MODEL >> 0) & 0xFFFFFFFF), ((GPIO_PF_MODEL = (GPIO_PF_MODEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE0 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE1 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE2 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE3 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE4 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE5 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE6 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEL_MODE7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PF_MODEH  ------------------------------
// SVD Line: 16493

unsigned int GPIO_PF_MODEH __AT (0x4000A0F8);



// -----------------------------  Field Item: GPIO_PF_MODEH_MODE8  --------------------------------
// SVD Line: 16502

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE8
//    <name> MODE8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A0F8) \nPin 8 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.3..0> MODE8
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: GPIO_PF_MODEH_MODE9  --------------------------------
// SVD Line: 16591

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE9
//    <name> MODE9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A0F8) \nPin 9 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.7..4> MODE9
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PF_MODEH_MODE10  --------------------------------
// SVD Line: 16680

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE10
//    <name> MODE10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A0F8) \nPin 10 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.11..8> MODE10
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PF_MODEH_MODE11  --------------------------------
// SVD Line: 16769

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE11
//    <name> MODE11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A0F8) \nPin 11 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.15..12> MODE11
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PF_MODEH_MODE12  --------------------------------
// SVD Line: 16858

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE12
//    <name> MODE12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A0F8) \nPin 12 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.19..16> MODE12
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PF_MODEH_MODE13  --------------------------------
// SVD Line: 16947

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE13
//    <name> MODE13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A0F8) \nPin 13 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.23..20> MODE13
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PF_MODEH_MODE14  --------------------------------
// SVD Line: 17036

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE14
//    <name> MODE14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A0F8) \nPin 14 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.27..24> MODE14
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: GPIO_PF_MODEH_MODE15  --------------------------------
// SVD Line: 17125

//  <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE15
//    <name> MODE15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A0F8) \nPin 15 Mode\n0 : DISABLED = Input disabled. Pullup if DOUT is set.\n1 : INPUT = Input enabled. Filter if DOUT is set\n2 : INPUTPULL = Input enabled. DOUT determines pull direction\n3 : INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction\n4 : PUSHPULL = Push-pull output\n5 : PUSHPULLALT = Push-pull using alternate control\n6 : WIREDOR = Wired-or output\n7 : WIREDORPULLDOWN = Wired-or output with pull-down\n8 : WIREDAND = Open-drain output\n9 : WIREDANDFILTER = Open-drain output with filter\n10 : WIREDANDPULLUP = Open-drain output with pullup\n11 : WIREDANDPULLUPFILTER = Open-drain output with filter and pullup\n12 : WIREDANDALT = Open-drain output using alternate control\n13 : WIREDANDALTFILTER = Open-drain output using alternate control with filter\n14 : WIREDANDALTPULLUP = Open-drain output using alternate control with pullup\n15 : WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_PF_MODEH ) </loc>
//      <o.31..28> MODE15
//        <0=> 0: DISABLED = Input disabled. Pullup if DOUT is set.
//        <1=> 1: INPUT = Input enabled. Filter if DOUT is set
//        <2=> 2: INPUTPULL = Input enabled. DOUT determines pull direction
//        <3=> 3: INPUTPULLFILTER = Input enabled with filter. DOUT determines pull direction
//        <4=> 4: PUSHPULL = Push-pull output
//        <5=> 5: PUSHPULLALT = Push-pull using alternate control
//        <6=> 6: WIREDOR = Wired-or output
//        <7=> 7: WIREDORPULLDOWN = Wired-or output with pull-down
//        <8=> 8: WIREDAND = Open-drain output
//        <9=> 9: WIREDANDFILTER = Open-drain output with filter
//        <10=> 10: WIREDANDPULLUP = Open-drain output with pullup
//        <11=> 11: WIREDANDPULLUPFILTER = Open-drain output with filter and pullup
//        <12=> 12: WIREDANDALT = Open-drain output using alternate control
//        <13=> 13: WIREDANDALTFILTER = Open-drain output using alternate control with filter
//        <14=> 14: WIREDANDALTPULLUP = Open-drain output using alternate control with pullup
//        <15=> 15: WIREDANDALTPULLUPFILTER = Open-drain output using alternate control with filter and pullup
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PF_MODEH  ---------------------------------
// SVD Line: 16493

//  <rtree> SFDITEM_REG__GPIO_PF_MODEH
//    <name> PF_MODEH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0F8) Port Pin Mode High Register </i>
//    <loc> ( (unsigned int)((GPIO_PF_MODEH >> 0) & 0xFFFFFFFF), ((GPIO_PF_MODEH = (GPIO_PF_MODEH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE8 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE9 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE10 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE11 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE12 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE13 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE14 </item>
//    <item> SFDITEM_FIELD__GPIO_PF_MODEH_MODE15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PF_DOUT  ------------------------------
// SVD Line: 17216

unsigned int GPIO_PF_DOUT __AT (0x4000A0FC);



// ------------------------------  Field Item: GPIO_PF_DOUT_DOUT  ---------------------------------
// SVD Line: 17225

//  <item> SFDITEM_FIELD__GPIO_PF_DOUT_DOUT
//    <name> DOUT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A0FC) Data Out </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PF_DOUT >> 0) & 0xFFFF), ((GPIO_PF_DOUT = (GPIO_PF_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_PF_DOUT  ----------------------------------
// SVD Line: 17216

//  <rtree> SFDITEM_REG__GPIO_PF_DOUT
//    <name> PF_DOUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A0FC) Port Data Out Register </i>
//    <loc> ( (unsigned int)((GPIO_PF_DOUT >> 0) & 0xFFFFFFFF), ((GPIO_PF_DOUT = (GPIO_PF_DOUT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_DOUT_DOUT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PF_DOUTTGL  -----------------------------
// SVD Line: 17234

unsigned int GPIO_PF_DOUTTGL __AT (0x4000A108);



// ---------------------------  Field Item: GPIO_PF_DOUTTGL_DOUTTGL  ------------------------------
// SVD Line: 17243

//  <item> SFDITEM_FIELD__GPIO_PF_DOUTTGL_DOUTTGL
//    <name> DOUTTGL </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A108) Data Out Toggle </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PF_DOUTTGL >> 0) & 0x0), ((GPIO_PF_DOUTTGL = (GPIO_PF_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PF_DOUTTGL  --------------------------------
// SVD Line: 17234

//  <rtree> SFDITEM_REG__GPIO_PF_DOUTTGL
//    <name> PF_DOUTTGL </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A108) Port Data Out Toggle Register </i>
//    <loc> ( (unsigned int)((GPIO_PF_DOUTTGL >> 0) & 0xFFFFFFFF), ((GPIO_PF_DOUTTGL = (GPIO_PF_DOUTTGL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_DOUTTGL_DOUTTGL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_PF_DIN  -------------------------------
// SVD Line: 17252

unsigned int GPIO_PF_DIN __AT (0x4000A10C);



// -------------------------------  Field Item: GPIO_PF_DIN_DIN  ----------------------------------
// SVD Line: 17261

//  <item> SFDITEM_FIELD__GPIO_PF_DIN_DIN
//    <name> DIN </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000A10C) Data in </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PF_DIN >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIO_PF_DIN  ----------------------------------
// SVD Line: 17252

//  <rtree> SFDITEM_REG__GPIO_PF_DIN
//    <name> PF_DIN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A10C) Port Data in Register </i>
//    <loc> ( (unsigned int)((GPIO_PF_DIN >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_DIN_DIN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_PF_PINLOCKN  ----------------------------
// SVD Line: 17270

unsigned int GPIO_PF_PINLOCKN __AT (0x4000A110);



// --------------------------  Field Item: GPIO_PF_PINLOCKN_PINLOCKN  -----------------------------
// SVD Line: 17279

//  <item> SFDITEM_FIELD__GPIO_PF_PINLOCKN_PINLOCKN
//    <name> PINLOCKN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A110) Unlocked Pins </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PF_PINLOCKN >> 0) & 0xFFFF), ((GPIO_PF_PINLOCKN = (GPIO_PF_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_PF_PINLOCKN  --------------------------------
// SVD Line: 17270

//  <rtree> SFDITEM_REG__GPIO_PF_PINLOCKN
//    <name> PF_PINLOCKN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A110) Port Unlocked Pins Register </i>
//    <loc> ( (unsigned int)((GPIO_PF_PINLOCKN >> 0) & 0xFFFFFFFF), ((GPIO_PF_PINLOCKN = (GPIO_PF_PINLOCKN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_PINLOCKN_PINLOCKN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_PF_OVTDIS  -----------------------------
// SVD Line: 17288

unsigned int GPIO_PF_OVTDIS __AT (0x4000A118);



// ----------------------------  Field Item: GPIO_PF_OVTDIS_OVTDIS  -------------------------------
// SVD Line: 17297

//  <item> SFDITEM_FIELD__GPIO_PF_OVTDIS_OVTDIS
//    <name> OVTDIS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A118) Disable Over Voltage Capability </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_PF_OVTDIS >> 0) & 0xFFFF), ((GPIO_PF_OVTDIS = (GPIO_PF_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_PF_OVTDIS  ---------------------------------
// SVD Line: 17288

//  <rtree> SFDITEM_REG__GPIO_PF_OVTDIS
//    <name> PF_OVTDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A118) Over Voltage Disable for All Modes </i>
//    <loc> ( (unsigned int)((GPIO_PF_OVTDIS >> 0) & 0xFFFFFFFF), ((GPIO_PF_OVTDIS = (GPIO_PF_OVTDIS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_PF_OVTDIS_OVTDIS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_EXTIPSELL  -----------------------------
// SVD Line: 17306

unsigned int GPIO_EXTIPSELL __AT (0x4000A400);



// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL0  ------------------------------
// SVD Line: 17315

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL0
//    <name> EXTIPSEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A400) \nExternal Interrupt 0 Port Select\n0 : PORTA = Port A group selected for external interrupt 0\n1 : PORTB = Port B group selected for external interrupt 0\n2 : PORTC = Port C group selected for external interrupt 0\n3 : PORTD = Port D group selected for external interrupt 0\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 0\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.3..0> EXTIPSEL0
//        <0=> 0: PORTA = Port A group selected for external interrupt 0
//        <1=> 1: PORTB = Port B group selected for external interrupt 0
//        <2=> 2: PORTC = Port C group selected for external interrupt 0
//        <3=> 3: PORTD = Port D group selected for external interrupt 0
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 0
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL1  ------------------------------
// SVD Line: 17349

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL1
//    <name> EXTIPSEL1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A400) \nExternal Interrupt 1 Port Select\n0 : PORTA = Port A group selected for external interrupt 1\n1 : PORTB = Port B group selected for external interrupt 1\n2 : PORTC = Port C group selected for external interrupt 1\n3 : PORTD = Port D group selected for external interrupt 1\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 1\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.7..4> EXTIPSEL1
//        <0=> 0: PORTA = Port A group selected for external interrupt 1
//        <1=> 1: PORTB = Port B group selected for external interrupt 1
//        <2=> 2: PORTC = Port C group selected for external interrupt 1
//        <3=> 3: PORTD = Port D group selected for external interrupt 1
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 1
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL2  ------------------------------
// SVD Line: 17383

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL2
//    <name> EXTIPSEL2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A400) \nExternal Interrupt 2 Port Select\n0 : PORTA = Port A group selected for external interrupt 2\n1 : PORTB = Port B group selected for external interrupt 2\n2 : PORTC = Port C group selected for external interrupt 2\n3 : PORTD = Port D group selected for external interrupt 2\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 2\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.11..8> EXTIPSEL2
//        <0=> 0: PORTA = Port A group selected for external interrupt 2
//        <1=> 1: PORTB = Port B group selected for external interrupt 2
//        <2=> 2: PORTC = Port C group selected for external interrupt 2
//        <3=> 3: PORTD = Port D group selected for external interrupt 2
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 2
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL3  ------------------------------
// SVD Line: 17417

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL3
//    <name> EXTIPSEL3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A400) \nExternal Interrupt 3 Port Select\n0 : PORTA = Port A group selected for external interrupt 3\n1 : PORTB = Port B group selected for external interrupt 3\n2 : PORTC = Port C group selected for external interrupt 3\n3 : PORTD = Port D group selected for external interrupt 3\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 3\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.15..12> EXTIPSEL3
//        <0=> 0: PORTA = Port A group selected for external interrupt 3
//        <1=> 1: PORTB = Port B group selected for external interrupt 3
//        <2=> 2: PORTC = Port C group selected for external interrupt 3
//        <3=> 3: PORTD = Port D group selected for external interrupt 3
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 3
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL4  ------------------------------
// SVD Line: 17451

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL4
//    <name> EXTIPSEL4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A400) \nExternal Interrupt 4 Port Select\n0 : PORTA = Port A group selected for external interrupt 4\n1 : PORTB = Port B group selected for external interrupt 4\n2 : PORTC = Port C group selected for external interrupt 4\n3 : PORTD = Port D group selected for external interrupt 4\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 4\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.19..16> EXTIPSEL4
//        <0=> 0: PORTA = Port A group selected for external interrupt 4
//        <1=> 1: PORTB = Port B group selected for external interrupt 4
//        <2=> 2: PORTC = Port C group selected for external interrupt 4
//        <3=> 3: PORTD = Port D group selected for external interrupt 4
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 4
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL5  ------------------------------
// SVD Line: 17485

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL5
//    <name> EXTIPSEL5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A400) \nExternal Interrupt 5 Port Select\n0 : PORTA = Port A group selected for external interrupt 5\n1 : PORTB = Port B group selected for external interrupt 5\n2 : PORTC = Port C group selected for external interrupt 5\n3 : PORTD = Port D group selected for external interrupt 5\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 5\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.23..20> EXTIPSEL5
//        <0=> 0: PORTA = Port A group selected for external interrupt 5
//        <1=> 1: PORTB = Port B group selected for external interrupt 5
//        <2=> 2: PORTC = Port C group selected for external interrupt 5
//        <3=> 3: PORTD = Port D group selected for external interrupt 5
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 5
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL6  ------------------------------
// SVD Line: 17519

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL6
//    <name> EXTIPSEL6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A400) \nExternal Interrupt 6 Port Select\n0 : PORTA = Port A group selected for external interrupt 6\n1 : PORTB = Port B group selected for external interrupt 6\n2 : PORTC = Port C group selected for external interrupt 6\n3 : PORTD = Port D group selected for external interrupt 6\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 6\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.27..24> EXTIPSEL6
//        <0=> 0: PORTA = Port A group selected for external interrupt 6
//        <1=> 1: PORTB = Port B group selected for external interrupt 6
//        <2=> 2: PORTC = Port C group selected for external interrupt 6
//        <3=> 3: PORTD = Port D group selected for external interrupt 6
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 6
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELL_EXTIPSEL7  ------------------------------
// SVD Line: 17553

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL7
//    <name> EXTIPSEL7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A400) \nExternal Interrupt 7 Port Select\n0 : PORTA = Port A group selected for external interrupt 7\n1 : PORTB = Port B group selected for external interrupt 7\n2 : PORTC = Port C group selected for external interrupt 7\n3 : PORTD = Port D group selected for external interrupt 7\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 7\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELL ) </loc>
//      <o.31..28> EXTIPSEL7
//        <0=> 0: PORTA = Port A group selected for external interrupt 7
//        <1=> 1: PORTB = Port B group selected for external interrupt 7
//        <2=> 2: PORTC = Port C group selected for external interrupt 7
//        <3=> 3: PORTD = Port D group selected for external interrupt 7
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 7
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_EXTIPSELL  ---------------------------------
// SVD Line: 17306

//  <rtree> SFDITEM_REG__GPIO_EXTIPSELL
//    <name> EXTIPSELL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A400) External Interrupt Port Select Low Register </i>
//    <loc> ( (unsigned int)((GPIO_EXTIPSELL >> 0) & 0xFFFFFFFF), ((GPIO_EXTIPSELL = (GPIO_EXTIPSELL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL0 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL1 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL2 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL3 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL4 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL5 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL6 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELL_EXTIPSEL7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_EXTIPSELH  -----------------------------
// SVD Line: 17589

unsigned int GPIO_EXTIPSELH __AT (0x4000A404);



// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL8  ------------------------------
// SVD Line: 17598

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL8
//    <name> EXTIPSEL8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A404) \nExternal Interrupt 8 Port Select\n0 : PORTA = Port A group selected for external interrupt 8\n1 : PORTB = Port B group selected for external interrupt 8\n2 : PORTC = Port C group selected for external interrupt 8\n3 : PORTD = Port D group selected for external interrupt 8\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 8\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.3..0> EXTIPSEL8
//        <0=> 0: PORTA = Port A group selected for external interrupt 8
//        <1=> 1: PORTB = Port B group selected for external interrupt 8
//        <2=> 2: PORTC = Port C group selected for external interrupt 8
//        <3=> 3: PORTD = Port D group selected for external interrupt 8
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 8
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL9  ------------------------------
// SVD Line: 17632

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL9
//    <name> EXTIPSEL9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000A404) \nExternal Interrupt 9 Port Select\n0 : PORTA = Port A group selected for external interrupt 9\n1 : PORTB = Port B group selected for external interrupt 9\n2 : PORTC = Port C group selected for external interrupt 9\n3 : PORTD = Port D group selected for external interrupt 9\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 9\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.7..4> EXTIPSEL9
//        <0=> 0: PORTA = Port A group selected for external interrupt 9
//        <1=> 1: PORTB = Port B group selected for external interrupt 9
//        <2=> 2: PORTC = Port C group selected for external interrupt 9
//        <3=> 3: PORTD = Port D group selected for external interrupt 9
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 9
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL10  -----------------------------
// SVD Line: 17666

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL10
//    <name> EXTIPSEL10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A404) \nExternal Interrupt 10 Port Select\n0 : PORTA = Port A group selected for external interrupt 10\n1 : PORTB = Port B group selected for external interrupt 10\n2 : PORTC = Port C group selected for external interrupt 10\n3 : PORTD = Port D group selected for external interrupt 10\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 10\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.11..8> EXTIPSEL10
//        <0=> 0: PORTA = Port A group selected for external interrupt 10
//        <1=> 1: PORTB = Port B group selected for external interrupt 10
//        <2=> 2: PORTC = Port C group selected for external interrupt 10
//        <3=> 3: PORTD = Port D group selected for external interrupt 10
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 10
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL11  -----------------------------
// SVD Line: 17700

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL11
//    <name> EXTIPSEL11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4000A404) \nExternal Interrupt 11 Port Select\n0 : PORTA = Port A group selected for external interrupt 11\n1 : PORTB = Port B group selected for external interrupt 11\n2 : PORTC = Port C group selected for external interrupt 11\n3 : PORTD = Port D group selected for external interrupt 11\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 11\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.15..12> EXTIPSEL11
//        <0=> 0: PORTA = Port A group selected for external interrupt 11
//        <1=> 1: PORTB = Port B group selected for external interrupt 11
//        <2=> 2: PORTC = Port C group selected for external interrupt 11
//        <3=> 3: PORTD = Port D group selected for external interrupt 11
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 11
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL12  -----------------------------
// SVD Line: 17734

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL12
//    <name> EXTIPSEL12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000A404) \nExternal Interrupt 12 Port Select\n0 : PORTA = Port A group selected for external interrupt 12\n1 : PORTB = Port B group selected for external interrupt 12\n2 : PORTC = Port C group selected for external interrupt 12\n3 : PORTD = Port D group selected for external interrupt 12\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 12\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.19..16> EXTIPSEL12
//        <0=> 0: PORTA = Port A group selected for external interrupt 12
//        <1=> 1: PORTB = Port B group selected for external interrupt 12
//        <2=> 2: PORTC = Port C group selected for external interrupt 12
//        <3=> 3: PORTD = Port D group selected for external interrupt 12
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 12
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL13  -----------------------------
// SVD Line: 17768

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL13
//    <name> EXTIPSEL13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000A404) \nExternal Interrupt 13 Port Select\n0 : PORTA = Port A group selected for external interrupt 13\n1 : PORTB = Port B group selected for external interrupt 13\n2 : PORTC = Port C group selected for external interrupt 13\n3 : PORTD = Port D group selected for external interrupt 13\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 13\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.23..20> EXTIPSEL13
//        <0=> 0: PORTA = Port A group selected for external interrupt 13
//        <1=> 1: PORTB = Port B group selected for external interrupt 13
//        <2=> 2: PORTC = Port C group selected for external interrupt 13
//        <3=> 3: PORTD = Port D group selected for external interrupt 13
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 13
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL14  -----------------------------
// SVD Line: 17802

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL14
//    <name> EXTIPSEL14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4000A404) \nExternal Interrupt 14 Port Select\n0 : PORTA = Port A group selected for external interrupt 14\n1 : PORTB = Port B group selected for external interrupt 14\n2 : PORTC = Port C group selected for external interrupt 14\n3 : PORTD = Port D group selected for external interrupt 14\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 14\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.27..24> EXTIPSEL14
//        <0=> 0: PORTA = Port A group selected for external interrupt 14
//        <1=> 1: PORTB = Port B group selected for external interrupt 14
//        <2=> 2: PORTC = Port C group selected for external interrupt 14
//        <3=> 3: PORTD = Port D group selected for external interrupt 14
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 14
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: GPIO_EXTIPSELH_EXTIPSEL15  -----------------------------
// SVD Line: 17836

//  <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL15
//    <name> EXTIPSEL15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4000A404) \nExternal Interrupt 15 Port Select\n0 : PORTA = Port A group selected for external interrupt 15\n1 : PORTB = Port B group selected for external interrupt 15\n2 : PORTC = Port C group selected for external interrupt 15\n3 : PORTD = Port D group selected for external interrupt 15\n4 : Reserved - do not use\n5 : PORTF = Port F group selected for external interrupt 15\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPSELH ) </loc>
//      <o.31..28> EXTIPSEL15
//        <0=> 0: PORTA = Port A group selected for external interrupt 15
//        <1=> 1: PORTB = Port B group selected for external interrupt 15
//        <2=> 2: PORTC = Port C group selected for external interrupt 15
//        <3=> 3: PORTD = Port D group selected for external interrupt 15
//        <4=> 4: 
//        <5=> 5: PORTF = Port F group selected for external interrupt 15
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_EXTIPSELH  ---------------------------------
// SVD Line: 17589

//  <rtree> SFDITEM_REG__GPIO_EXTIPSELH
//    <name> EXTIPSELH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A404) External Interrupt Port Select High Register </i>
//    <loc> ( (unsigned int)((GPIO_EXTIPSELH >> 0) & 0xFFFFFFFF), ((GPIO_EXTIPSELH = (GPIO_EXTIPSELH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL8 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL9 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL10 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL11 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL12 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL13 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL14 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPSELH_EXTIPSEL15 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_EXTIPINSELL  ----------------------------
// SVD Line: 17872

unsigned int GPIO_EXTIPINSELL __AT (0x4000A408);



// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL0  ----------------------------
// SVD Line: 17881

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL0
//    <name> EXTIPINSEL0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000A408) \nExternal Interrupt 0 Pin Select\n0 : PIN0 = Pin 0\n1 : PIN1 = Pin 1\n2 : PIN2 = Pin 2\n3 : PIN3 = Pin 3 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.1..0> EXTIPINSEL0
//        <0=> 0: PIN0 = Pin 0
//        <1=> 1: PIN1 = Pin 1
//        <2=> 2: PIN2 = Pin 2
//        <3=> 3: PIN3 = Pin 3
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL1  ----------------------------
// SVD Line: 17910

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL1
//    <name> EXTIPINSEL1 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4000A408) \nExternal Interrupt 1 Pin Select\n0 : PIN0 = Pin 0\n1 : PIN1 = Pin 1\n2 : PIN2 = Pin 2\n3 : PIN3 = Pin 3 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.5..4> EXTIPINSEL1
//        <0=> 0: PIN0 = Pin 0
//        <1=> 1: PIN1 = Pin 1
//        <2=> 2: PIN2 = Pin 2
//        <3=> 3: PIN3 = Pin 3
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL2  ----------------------------
// SVD Line: 17939

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL2
//    <name> EXTIPINSEL2 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000A408) \nExternal Interrupt 2 Pin Select\n0 : PIN0 = Pin 0\n1 : PIN1 = Pin 1\n2 : PIN2 = Pin 2\n3 : PIN3 = Pin 3 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.9..8> EXTIPINSEL2
//        <0=> 0: PIN0 = Pin 0
//        <1=> 1: PIN1 = Pin 1
//        <2=> 2: PIN2 = Pin 2
//        <3=> 3: PIN3 = Pin 3
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL3  ----------------------------
// SVD Line: 17968

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL3
//    <name> EXTIPINSEL3 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4000A408) \nExternal Interrupt 3 Pin Select\n0 : PIN0 = Pin 0\n1 : PIN1 = Pin 1\n2 : PIN2 = Pin 2\n3 : PIN3 = Pin 3 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.13..12> EXTIPINSEL3
//        <0=> 0: PIN0 = Pin 0
//        <1=> 1: PIN1 = Pin 1
//        <2=> 2: PIN2 = Pin 2
//        <3=> 3: PIN3 = Pin 3
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL4  ----------------------------
// SVD Line: 17997

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL4
//    <name> EXTIPINSEL4 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x4000A408) \nExternal Interrupt 4 Pin Select\n0 : PIN4 = Pin 4\n1 : PIN5 = Pin 5\n2 : PIN6 = Pin 6\n3 : PIN7 = Pin 7 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.17..16> EXTIPINSEL4
//        <0=> 0: PIN4 = Pin 4
//        <1=> 1: PIN5 = Pin 5
//        <2=> 2: PIN6 = Pin 6
//        <3=> 3: PIN7 = Pin 7
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL5  ----------------------------
// SVD Line: 18026

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL5
//    <name> EXTIPINSEL5 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x4000A408) \nExternal Interrupt 5 Pin Select\n0 : PIN4 = Pin 4\n1 : PIN5 = Pin 5\n2 : PIN6 = Pin 6\n3 : PIN7 = Pin 7 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.21..20> EXTIPINSEL5
//        <0=> 0: PIN4 = Pin 4
//        <1=> 1: PIN5 = Pin 5
//        <2=> 2: PIN6 = Pin 6
//        <3=> 3: PIN7 = Pin 7
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL6  ----------------------------
// SVD Line: 18055

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL6
//    <name> EXTIPINSEL6 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x4000A408) \nExternal Interrupt 6 Pin Select\n0 : PIN4 = Pin 4\n1 : PIN5 = Pin 5\n2 : PIN6 = Pin 6\n3 : PIN7 = Pin 7 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.25..24> EXTIPINSEL6
//        <0=> 0: PIN4 = Pin 4
//        <1=> 1: PIN5 = Pin 5
//        <2=> 2: PIN6 = Pin 6
//        <3=> 3: PIN7 = Pin 7
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELL_EXTIPINSEL7  ----------------------------
// SVD Line: 18084

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL7
//    <name> EXTIPINSEL7 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x4000A408) \nExternal Interrupt 7 Pin Select\n0 : PIN4 = Pin 4\n1 : PIN5 = Pin 5\n2 : PIN6 = Pin 6\n3 : PIN7 = Pin 7 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELL ) </loc>
//      <o.29..28> EXTIPINSEL7
//        <0=> 0: PIN4 = Pin 4
//        <1=> 1: PIN5 = Pin 5
//        <2=> 2: PIN6 = Pin 6
//        <3=> 3: PIN7 = Pin 7
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_EXTIPINSELL  --------------------------------
// SVD Line: 17872

//  <rtree> SFDITEM_REG__GPIO_EXTIPINSELL
//    <name> EXTIPINSELL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A408) External Interrupt Pin Select Low Register </i>
//    <loc> ( (unsigned int)((GPIO_EXTIPINSELL >> 0) & 0xFFFFFFFF), ((GPIO_EXTIPINSELL = (GPIO_EXTIPINSELL & ~(0x33333333UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33333333) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL0 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL1 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL2 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL3 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL4 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL5 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL6 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELL_EXTIPINSEL7 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIO_EXTIPINSELH  ----------------------------
// SVD Line: 18115

unsigned int GPIO_EXTIPINSELH __AT (0x4000A40C);



// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL8  ----------------------------
// SVD Line: 18124

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL8
//    <name> EXTIPINSEL8 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000A40C) \nExternal Interrupt 8 Pin Select\n0 : PIN8 = Pin 8\n1 : PIN9 = Pin 9\n2 : PIN10 = Pin 10\n3 : PIN11 = Pin 11 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.1..0> EXTIPINSEL8
//        <0=> 0: PIN8 = Pin 8
//        <1=> 1: PIN9 = Pin 9
//        <2=> 2: PIN10 = Pin 10
//        <3=> 3: PIN11 = Pin 11
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL9  ----------------------------
// SVD Line: 18153

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL9
//    <name> EXTIPINSEL9 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4000A40C) \nExternal Interrupt 9 Pin Select\n0 : PIN8 = Pin 8\n1 : PIN9 = Pin 9\n2 : PIN10 = Pin 10\n3 : PIN11 = Pin 11 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.5..4> EXTIPINSEL9
//        <0=> 0: PIN8 = Pin 8
//        <1=> 1: PIN9 = Pin 9
//        <2=> 2: PIN10 = Pin 10
//        <3=> 3: PIN11 = Pin 11
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL10  ---------------------------
// SVD Line: 18182

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL10
//    <name> EXTIPINSEL10 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000A40C) \nExternal Interrupt 10 Pin Select\n0 : PIN8 = Pin 8\n1 : PIN9 = Pin 9\n2 : PIN10 = Pin 10\n3 : PIN11 = Pin 11 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.9..8> EXTIPINSEL10
//        <0=> 0: PIN8 = Pin 8
//        <1=> 1: PIN9 = Pin 9
//        <2=> 2: PIN10 = Pin 10
//        <3=> 3: PIN11 = Pin 11
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL11  ---------------------------
// SVD Line: 18211

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL11
//    <name> EXTIPINSEL11 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4000A40C) \nExternal Interrupt 11 Pin Select\n0 : PIN8 = Pin 8\n1 : PIN9 = Pin 9\n2 : PIN10 = Pin 10\n3 : PIN11 = Pin 11 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.13..12> EXTIPINSEL11
//        <0=> 0: PIN8 = Pin 8
//        <1=> 1: PIN9 = Pin 9
//        <2=> 2: PIN10 = Pin 10
//        <3=> 3: PIN11 = Pin 11
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL12  ---------------------------
// SVD Line: 18240

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL12
//    <name> EXTIPINSEL12 </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x4000A40C) \nExternal Interrupt 12 Pin Select\n0 : PIN12 = Pin 12\n1 : PIN13 = Pin 13\n2 : PIN14 = Pin 14\n3 : PIN15 = Pin 15 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.17..16> EXTIPINSEL12
//        <0=> 0: PIN12 = Pin 12
//        <1=> 1: PIN13 = Pin 13
//        <2=> 2: PIN14 = Pin 14
//        <3=> 3: PIN15 = Pin 15
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL13  ---------------------------
// SVD Line: 18269

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL13
//    <name> EXTIPINSEL13 </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x4000A40C) \nExternal Interrupt 13 Pin Select\n0 : PIN12 = Pin 12\n1 : PIN13 = Pin 13\n2 : PIN14 = Pin 14\n3 : PIN15 = Pin 15 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.21..20> EXTIPINSEL13
//        <0=> 0: PIN12 = Pin 12
//        <1=> 1: PIN13 = Pin 13
//        <2=> 2: PIN14 = Pin 14
//        <3=> 3: PIN15 = Pin 15
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL14  ---------------------------
// SVD Line: 18298

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL14
//    <name> EXTIPINSEL14 </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x4000A40C) \nExternal Interrupt 14 Pin Select\n0 : PIN12 = Pin 12\n1 : PIN13 = Pin 13\n2 : PIN14 = Pin 14\n3 : PIN15 = Pin 15 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.25..24> EXTIPINSEL14
//        <0=> 0: PIN12 = Pin 12
//        <1=> 1: PIN13 = Pin 13
//        <2=> 2: PIN14 = Pin 14
//        <3=> 3: PIN15 = Pin 15
//    </combo>
//  </item>
//  


// ------------------------  Field Item: GPIO_EXTIPINSELH_EXTIPINSEL15  ---------------------------
// SVD Line: 18327

//  <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL15
//    <name> EXTIPINSEL15 </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x4000A40C) \nExternal Interrupt 15 Pin Select\n0 : PIN12 = Pin 12\n1 : PIN13 = Pin 13\n2 : PIN14 = Pin 14\n3 : PIN15 = Pin 15 </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_EXTIPINSELH ) </loc>
//      <o.29..28> EXTIPINSEL15
//        <0=> 0: PIN12 = Pin 12
//        <1=> 1: PIN13 = Pin 13
//        <2=> 2: PIN14 = Pin 14
//        <3=> 3: PIN15 = Pin 15
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: GPIO_EXTIPINSELH  --------------------------------
// SVD Line: 18115

//  <rtree> SFDITEM_REG__GPIO_EXTIPINSELH
//    <name> EXTIPINSELH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A40C) External Interrupt Pin Select High Register </i>
//    <loc> ( (unsigned int)((GPIO_EXTIPINSELH >> 0) & 0xFFFFFFFF), ((GPIO_EXTIPINSELH = (GPIO_EXTIPINSELH & ~(0x33333333UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33333333) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL8 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL9 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL10 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL11 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL12 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL13 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL14 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTIPINSELH_EXTIPINSEL15 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_EXTIRISE  ------------------------------
// SVD Line: 18358

unsigned int GPIO_EXTIRISE __AT (0x4000A410);



// ---------------------------  Field Item: GPIO_EXTIRISE_EXTIRISE  -------------------------------
// SVD Line: 18367

//  <item> SFDITEM_FIELD__GPIO_EXTIRISE_EXTIRISE
//    <name> EXTIRISE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A410) External Interrupt N Rising Edge Trigger Enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_EXTIRISE >> 0) & 0xFFFF), ((GPIO_EXTIRISE = (GPIO_EXTIRISE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_EXTIRISE  ---------------------------------
// SVD Line: 18358

//  <rtree> SFDITEM_REG__GPIO_EXTIRISE
//    <name> EXTIRISE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A410) External Interrupt Rising Edge Trigger Register </i>
//    <loc> ( (unsigned int)((GPIO_EXTIRISE >> 0) & 0xFFFFFFFF), ((GPIO_EXTIRISE = (GPIO_EXTIRISE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EXTIRISE_EXTIRISE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_EXTIFALL  ------------------------------
// SVD Line: 18376

unsigned int GPIO_EXTIFALL __AT (0x4000A414);



// ---------------------------  Field Item: GPIO_EXTIFALL_EXTIFALL  -------------------------------
// SVD Line: 18385

//  <item> SFDITEM_FIELD__GPIO_EXTIFALL_EXTIFALL
//    <name> EXTIFALL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A414) External Interrupt N Falling Edge Trigger Enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_EXTIFALL >> 0) & 0xFFFF), ((GPIO_EXTIFALL = (GPIO_EXTIFALL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_EXTIFALL  ---------------------------------
// SVD Line: 18376

//  <rtree> SFDITEM_REG__GPIO_EXTIFALL
//    <name> EXTIFALL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A414) External Interrupt Falling Edge Trigger Register </i>
//    <loc> ( (unsigned int)((GPIO_EXTIFALL >> 0) & 0xFFFFFFFF), ((GPIO_EXTIFALL = (GPIO_EXTIFALL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EXTIFALL_EXTIFALL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_EXTILEVEL  -----------------------------
// SVD Line: 18394

unsigned int GPIO_EXTILEVEL __AT (0x4000A418);



// ----------------------------  Field Item: GPIO_EXTILEVEL_EM4WU0  -------------------------------
// SVD Line: 18403

//  <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU0
//    <name> EM4WU0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000A418) EM4 Wake Up Level for EM4WU0 Pin </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_EXTILEVEL ) </loc>
//      <o.16..16> EM4WU0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_EXTILEVEL_EM4WU1  -------------------------------
// SVD Line: 18410

//  <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU1
//    <name> EM4WU1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000A418) EM4 Wake Up Level for EM4WU1 Pin </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_EXTILEVEL ) </loc>
//      <o.17..17> EM4WU1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_EXTILEVEL_EM4WU4  -------------------------------
// SVD Line: 18417

//  <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU4
//    <name> EM4WU4 </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000A418) EM4 Wake Up Level for EM4WU4 Pin </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_EXTILEVEL ) </loc>
//      <o.20..20> EM4WU4
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_EXTILEVEL_EM4WU8  -------------------------------
// SVD Line: 18424

//  <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU8
//    <name> EM4WU8 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4000A418) EM4 Wake Up Level for EM4WU8 Pin </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_EXTILEVEL ) </loc>
//      <o.24..24> EM4WU8
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_EXTILEVEL_EM4WU9  -------------------------------
// SVD Line: 18431

//  <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU9
//    <name> EM4WU9 </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4000A418) EM4 Wake Up Level for EM4WU9 Pin </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_EXTILEVEL ) </loc>
//      <o.25..25> EM4WU9
//    </check>
//  </item>
//  


// ---------------------------  Field Item: GPIO_EXTILEVEL_EM4WU12  -------------------------------
// SVD Line: 18438

//  <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU12
//    <name> EM4WU12 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000A418) EM4 Wake Up Level for EM4WU12 Pin </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_EXTILEVEL ) </loc>
//      <o.28..28> EM4WU12
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_EXTILEVEL  ---------------------------------
// SVD Line: 18394

//  <rtree> SFDITEM_REG__GPIO_EXTILEVEL
//    <name> EXTILEVEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A418) External Interrupt Level Register </i>
//    <loc> ( (unsigned int)((GPIO_EXTILEVEL >> 0) & 0xFFFFFFFF), ((GPIO_EXTILEVEL = (GPIO_EXTILEVEL & ~(0x13130000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x13130000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU0 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU1 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU4 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU8 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU9 </item>
//    <item> SFDITEM_FIELD__GPIO_EXTILEVEL_EM4WU12 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIO_IF  ---------------------------------
// SVD Line: 18447

unsigned int GPIO_IF __AT (0x4000A41C);



// ---------------------------------  Field Item: GPIO_IF_EXT  ------------------------------------
// SVD Line: 18456

//  <item> SFDITEM_FIELD__GPIO_IF_EXT
//    <name> EXT </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000A41C) External Pin Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IF >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: GPIO_IF_EM4WU  -----------------------------------
// SVD Line: 18463

//  <item> SFDITEM_FIELD__GPIO_IF_EM4WU
//    <name> EM4WU </name>
//    <r> 
//    <i> [Bits 31..16] RO (@ 0x4000A41C) EM4 Wake Up Pin Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IF >> 16) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: GPIO_IF  ------------------------------------
// SVD Line: 18447

//  <rtree> SFDITEM_REG__GPIO_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000A41C) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((GPIO_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIO_IF_EXT </item>
//    <item> SFDITEM_FIELD__GPIO_IF_EM4WU </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIO_IFS  --------------------------------
// SVD Line: 18472

unsigned int GPIO_IFS __AT (0x4000A420);



// --------------------------------  Field Item: GPIO_IFS_EXT  ------------------------------------
// SVD Line: 18481

//  <item> SFDITEM_FIELD__GPIO_IFS_EXT
//    <name> EXT </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A420) Set EXT Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IFS >> 0) & 0x0), ((GPIO_IFS = (GPIO_IFS & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIO_IFS_EM4WU  -----------------------------------
// SVD Line: 18488

//  <item> SFDITEM_FIELD__GPIO_IFS_EM4WU
//    <name> EM4WU </name>
//    <w> 
//    <i> [Bits 31..16] WO (@ 0x4000A420) Set EM4WU Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IFS >> 16) & 0x0), ((GPIO_IFS = (GPIO_IFS & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIO_IFS  ------------------------------------
// SVD Line: 18472

//  <rtree> SFDITEM_REG__GPIO_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A420) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((GPIO_IFS >> 0) & 0xFFFFFFFF), ((GPIO_IFS = (GPIO_IFS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_IFS_EXT </item>
//    <item> SFDITEM_FIELD__GPIO_IFS_EM4WU </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIO_IFC  --------------------------------
// SVD Line: 18497

unsigned int GPIO_IFC __AT (0x4000A424);



// --------------------------------  Field Item: GPIO_IFC_EXT  ------------------------------------
// SVD Line: 18506

//  <item> SFDITEM_FIELD__GPIO_IFC_EXT
//    <name> EXT </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A424) Clear EXT Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IFC >> 0) & 0x0), ((GPIO_IFC = (GPIO_IFC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIO_IFC_EM4WU  -----------------------------------
// SVD Line: 18513

//  <item> SFDITEM_FIELD__GPIO_IFC_EM4WU
//    <name> EM4WU </name>
//    <w> 
//    <i> [Bits 31..16] WO (@ 0x4000A424) Clear EM4WU Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IFC >> 16) & 0x0), ((GPIO_IFC = (GPIO_IFC & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIO_IFC  ------------------------------------
// SVD Line: 18497

//  <rtree> SFDITEM_REG__GPIO_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000A424) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((GPIO_IFC >> 0) & 0xFFFFFFFF), ((GPIO_IFC = (GPIO_IFC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_IFC_EXT </item>
//    <item> SFDITEM_FIELD__GPIO_IFC_EM4WU </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIO_IEN  --------------------------------
// SVD Line: 18522

unsigned int GPIO_IEN __AT (0x4000A428);



// --------------------------------  Field Item: GPIO_IEN_EXT  ------------------------------------
// SVD Line: 18531

//  <item> SFDITEM_FIELD__GPIO_IEN_EXT
//    <name> EXT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A428) EXT Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IEN >> 0) & 0xFFFF), ((GPIO_IEN = (GPIO_IEN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIO_IEN_EM4WU  -----------------------------------
// SVD Line: 18538

//  <item> SFDITEM_FIELD__GPIO_IEN_EM4WU
//    <name> EM4WU </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4000A428) EM4WU Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_IEN >> 16) & 0xFFFF), ((GPIO_IEN = (GPIO_IEN & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIO_IEN  ------------------------------------
// SVD Line: 18522

//  <rtree> SFDITEM_REG__GPIO_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A428) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((GPIO_IEN >> 0) & 0xFFFFFFFF), ((GPIO_IEN = (GPIO_IEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_IEN_EXT </item>
//    <item> SFDITEM_FIELD__GPIO_IEN_EM4WU </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_EM4WUEN  ------------------------------
// SVD Line: 18547

unsigned int GPIO_EM4WUEN __AT (0x4000A42C);



// ----------------------------  Field Item: GPIO_EM4WUEN_EM4WUEN  --------------------------------
// SVD Line: 18556

//  <item> SFDITEM_FIELD__GPIO_EM4WUEN_EM4WUEN
//    <name> EM4WUEN </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4000A42C) EM4 Wake Up Enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_EM4WUEN >> 16) & 0xFFFF), ((GPIO_EM4WUEN = (GPIO_EM4WUEN & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_EM4WUEN  ----------------------------------
// SVD Line: 18547

//  <rtree> SFDITEM_REG__GPIO_EM4WUEN
//    <name> EM4WUEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A42C) EM4 Wake Up Enable Register </i>
//    <loc> ( (unsigned int)((GPIO_EM4WUEN >> 0) & 0xFFFFFFFF), ((GPIO_EM4WUEN = (GPIO_EM4WUEN & ~(0xFFFF0000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF0000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_EM4WUEN_EM4WUEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_ROUTEPEN  ------------------------------
// SVD Line: 18565

unsigned int GPIO_ROUTEPEN __AT (0x4000A440);



// --------------------------  Field Item: GPIO_ROUTEPEN_SWCLKTCKPEN  -----------------------------
// SVD Line: 18574

//  <item> SFDITEM_FIELD__GPIO_ROUTEPEN_SWCLKTCKPEN
//    <name> SWCLKTCKPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A440) Serial Wire Clock and JTAG Test Clock Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_ROUTEPEN ) </loc>
//      <o.0..0> SWCLKTCKPEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: GPIO_ROUTEPEN_SWDIOTMSPEN  -----------------------------
// SVD Line: 18581

//  <item> SFDITEM_FIELD__GPIO_ROUTEPEN_SWDIOTMSPEN
//    <name> SWDIOTMSPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A440) Serial Wire Data and JTAG Test Mode Select Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_ROUTEPEN ) </loc>
//      <o.1..1> SWDIOTMSPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_ROUTEPEN_TDOPEN  --------------------------------
// SVD Line: 18588

//  <item> SFDITEM_FIELD__GPIO_ROUTEPEN_TDOPEN
//    <name> TDOPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A440) JTAG Test Debug Output Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_ROUTEPEN ) </loc>
//      <o.2..2> TDOPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_ROUTEPEN_TDIPEN  --------------------------------
// SVD Line: 18595

//  <item> SFDITEM_FIELD__GPIO_ROUTEPEN_TDIPEN
//    <name> TDIPEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A440) JTAG Test Debug Input Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_ROUTEPEN ) </loc>
//      <o.3..3> TDIPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPIO_ROUTEPEN_SWVPEN  --------------------------------
// SVD Line: 18602

//  <item> SFDITEM_FIELD__GPIO_ROUTEPEN_SWVPEN
//    <name> SWVPEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A440) Serial Wire Viewer Output Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_ROUTEPEN ) </loc>
//      <o.4..4> SWVPEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_ROUTEPEN  ---------------------------------
// SVD Line: 18565

//  <rtree> SFDITEM_REG__GPIO_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A440) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((GPIO_ROUTEPEN >> 0) & 0xFFFFFFFF), ((GPIO_ROUTEPEN = (GPIO_ROUTEPEN & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_ROUTEPEN_SWCLKTCKPEN </item>
//    <item> SFDITEM_FIELD__GPIO_ROUTEPEN_SWDIOTMSPEN </item>
//    <item> SFDITEM_FIELD__GPIO_ROUTEPEN_TDOPEN </item>
//    <item> SFDITEM_FIELD__GPIO_ROUTEPEN_TDIPEN </item>
//    <item> SFDITEM_FIELD__GPIO_ROUTEPEN_SWVPEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPIO_ROUTELOC0  -----------------------------
// SVD Line: 18611

unsigned int GPIO_ROUTELOC0 __AT (0x4000A444);



// ----------------------------  Field Item: GPIO_ROUTELOC0_SWVLOC  -------------------------------
// SVD Line: 18620

//  <item> SFDITEM_FIELD__GPIO_ROUTELOC0_SWVLOC
//    <name> SWVLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000A444) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) GPIO_ROUTELOC0 ) </loc>
//      <o.5..0> SWVLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: GPIO_ROUTELOC0  ---------------------------------
// SVD Line: 18611

//  <rtree> SFDITEM_REG__GPIO_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A444) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((GPIO_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((GPIO_ROUTELOC0 = (GPIO_ROUTELOC0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_ROUTELOC0_SWVLOC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIO_INSENSE  ------------------------------
// SVD Line: 18651

unsigned int GPIO_INSENSE __AT (0x4000A450);



// ------------------------------  Field Item: GPIO_INSENSE_INT  ----------------------------------
// SVD Line: 18660

//  <item> SFDITEM_FIELD__GPIO_INSENSE_INT
//    <name> INT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A450) Interrupt Sense Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_INSENSE ) </loc>
//      <o.0..0> INT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: GPIO_INSENSE_EM4WU  ---------------------------------
// SVD Line: 18667

//  <item> SFDITEM_FIELD__GPIO_INSENSE_EM4WU
//    <name> EM4WU </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A450) EM4WU Interrupt Sense Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPIO_INSENSE ) </loc>
//      <o.1..1> EM4WU
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: GPIO_INSENSE  ----------------------------------
// SVD Line: 18651

//  <rtree> SFDITEM_REG__GPIO_INSENSE
//    <name> INSENSE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A450) Input Sense Register </i>
//    <loc> ( (unsigned int)((GPIO_INSENSE >> 0) & 0xFFFFFFFF), ((GPIO_INSENSE = (GPIO_INSENSE & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_INSENSE_INT </item>
//    <item> SFDITEM_FIELD__GPIO_INSENSE_EM4WU </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIO_LOCK  --------------------------------
// SVD Line: 18676

unsigned int GPIO_LOCK __AT (0x4000A454);



// ------------------------------  Field Item: GPIO_LOCK_LOCKKEY  ---------------------------------
// SVD Line: 18685

//  <item> SFDITEM_FIELD__GPIO_LOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A454) Configuration Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIO_LOCK >> 0) & 0xFFFF), ((GPIO_LOCK = (GPIO_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIO_LOCK  -----------------------------------
// SVD Line: 18676

//  <rtree> SFDITEM_REG__GPIO_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A454) Configuration Lock Register </i>
//    <loc> ( (unsigned int)((GPIO_LOCK >> 0) & 0xFFFFFFFF), ((GPIO_LOCK = (GPIO_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIO_LOCK_LOCKKEY </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: GPIO  -------------------------------------
// SVD Line: 7754

//  <view> GPIO
//    <name> GPIO </name>
//    <item> SFDITEM_REG__GPIO_PA_CTRL </item>
//    <item> SFDITEM_REG__GPIO_PA_MODEL </item>
//    <item> SFDITEM_REG__GPIO_PA_MODEH </item>
//    <item> SFDITEM_REG__GPIO_PA_DOUT </item>
//    <item> SFDITEM_REG__GPIO_PA_DOUTTGL </item>
//    <item> SFDITEM_REG__GPIO_PA_DIN </item>
//    <item> SFDITEM_REG__GPIO_PA_PINLOCKN </item>
//    <item> SFDITEM_REG__GPIO_PA_OVTDIS </item>
//    <item> SFDITEM_REG__GPIO_PB_CTRL </item>
//    <item> SFDITEM_REG__GPIO_PB_MODEL </item>
//    <item> SFDITEM_REG__GPIO_PB_MODEH </item>
//    <item> SFDITEM_REG__GPIO_PB_DOUT </item>
//    <item> SFDITEM_REG__GPIO_PB_DOUTTGL </item>
//    <item> SFDITEM_REG__GPIO_PB_DIN </item>
//    <item> SFDITEM_REG__GPIO_PB_PINLOCKN </item>
//    <item> SFDITEM_REG__GPIO_PB_OVTDIS </item>
//    <item> SFDITEM_REG__GPIO_PC_CTRL </item>
//    <item> SFDITEM_REG__GPIO_PC_MODEL </item>
//    <item> SFDITEM_REG__GPIO_PC_MODEH </item>
//    <item> SFDITEM_REG__GPIO_PC_DOUT </item>
//    <item> SFDITEM_REG__GPIO_PC_DOUTTGL </item>
//    <item> SFDITEM_REG__GPIO_PC_DIN </item>
//    <item> SFDITEM_REG__GPIO_PC_PINLOCKN </item>
//    <item> SFDITEM_REG__GPIO_PC_OVTDIS </item>
//    <item> SFDITEM_REG__GPIO_PD_CTRL </item>
//    <item> SFDITEM_REG__GPIO_PD_MODEL </item>
//    <item> SFDITEM_REG__GPIO_PD_MODEH </item>
//    <item> SFDITEM_REG__GPIO_PD_DOUT </item>
//    <item> SFDITEM_REG__GPIO_PD_DOUTTGL </item>
//    <item> SFDITEM_REG__GPIO_PD_DIN </item>
//    <item> SFDITEM_REG__GPIO_PD_PINLOCKN </item>
//    <item> SFDITEM_REG__GPIO_PD_OVTDIS </item>
//    <item> SFDITEM_REG__GPIO_PE_CTRL </item>
//    <item> SFDITEM_REG__GPIO_PE_MODEL </item>
//    <item> SFDITEM_REG__GPIO_PE_MODEH </item>
//    <item> SFDITEM_REG__GPIO_PE_DOUT </item>
//    <item> SFDITEM_REG__GPIO_PE_DOUTTGL </item>
//    <item> SFDITEM_REG__GPIO_PE_DIN </item>
//    <item> SFDITEM_REG__GPIO_PE_PINLOCKN </item>
//    <item> SFDITEM_REG__GPIO_PE_OVTDIS </item>
//    <item> SFDITEM_REG__GPIO_PF_CTRL </item>
//    <item> SFDITEM_REG__GPIO_PF_MODEL </item>
//    <item> SFDITEM_REG__GPIO_PF_MODEH </item>
//    <item> SFDITEM_REG__GPIO_PF_DOUT </item>
//    <item> SFDITEM_REG__GPIO_PF_DOUTTGL </item>
//    <item> SFDITEM_REG__GPIO_PF_DIN </item>
//    <item> SFDITEM_REG__GPIO_PF_PINLOCKN </item>
//    <item> SFDITEM_REG__GPIO_PF_OVTDIS </item>
//    <item> SFDITEM_REG__GPIO_EXTIPSELL </item>
//    <item> SFDITEM_REG__GPIO_EXTIPSELH </item>
//    <item> SFDITEM_REG__GPIO_EXTIPINSELL </item>
//    <item> SFDITEM_REG__GPIO_EXTIPINSELH </item>
//    <item> SFDITEM_REG__GPIO_EXTIRISE </item>
//    <item> SFDITEM_REG__GPIO_EXTIFALL </item>
//    <item> SFDITEM_REG__GPIO_EXTILEVEL </item>
//    <item> SFDITEM_REG__GPIO_IF </item>
//    <item> SFDITEM_REG__GPIO_IFS </item>
//    <item> SFDITEM_REG__GPIO_IFC </item>
//    <item> SFDITEM_REG__GPIO_IEN </item>
//    <item> SFDITEM_REG__GPIO_EM4WUEN </item>
//    <item> SFDITEM_REG__GPIO_ROUTEPEN </item>
//    <item> SFDITEM_REG__GPIO_ROUTELOC0 </item>
//    <item> SFDITEM_REG__GPIO_INSENSE </item>
//    <item> SFDITEM_REG__GPIO_LOCK </item>
//  </view>
//  


// ---------------------------  Register Item Address: PRS_SWPULSE  -------------------------------
// SVD Line: 18716

unsigned int PRS_SWPULSE __AT (0x400E6000);



// ----------------------------  Field Item: PRS_SWPULSE_CH0PULSE  --------------------------------
// SVD Line: 18725

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH0PULSE
//    <name> CH0PULSE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E6000) Channel 0 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.0..0> CH0PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH1PULSE  --------------------------------
// SVD Line: 18732

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH1PULSE
//    <name> CH1PULSE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E6000) Channel 1 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.1..1> CH1PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH2PULSE  --------------------------------
// SVD Line: 18739

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH2PULSE
//    <name> CH2PULSE </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E6000) Channel 2 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.2..2> CH2PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH3PULSE  --------------------------------
// SVD Line: 18746

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH3PULSE
//    <name> CH3PULSE </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E6000) Channel 3 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.3..3> CH3PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH4PULSE  --------------------------------
// SVD Line: 18753

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH4PULSE
//    <name> CH4PULSE </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E6000) Channel 4 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.4..4> CH4PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH5PULSE  --------------------------------
// SVD Line: 18760

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH5PULSE
//    <name> CH5PULSE </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E6000) Channel 5 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.5..5> CH5PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH6PULSE  --------------------------------
// SVD Line: 18767

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH6PULSE
//    <name> CH6PULSE </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x400E6000) Channel 6 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.6..6> CH6PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH7PULSE  --------------------------------
// SVD Line: 18774

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH7PULSE
//    <name> CH7PULSE </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x400E6000) Channel 7 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.7..7> CH7PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH8PULSE  --------------------------------
// SVD Line: 18781

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH8PULSE
//    <name> CH8PULSE </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x400E6000) Channel 8 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.8..8> CH8PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH9PULSE  --------------------------------
// SVD Line: 18788

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH9PULSE
//    <name> CH9PULSE </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x400E6000) Channel 9 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.9..9> CH9PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH10PULSE  -------------------------------
// SVD Line: 18795

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH10PULSE
//    <name> CH10PULSE </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x400E6000) Channel 10 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.10..10> CH10PULSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWPULSE_CH11PULSE  -------------------------------
// SVD Line: 18802

//  <item> SFDITEM_FIELD__PRS_SWPULSE_CH11PULSE
//    <name> CH11PULSE </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x400E6000) Channel 11 Pulse Generation </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWPULSE ) </loc>
//      <o.11..11> CH11PULSE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PRS_SWPULSE  ----------------------------------
// SVD Line: 18716

//  <rtree> SFDITEM_REG__PRS_SWPULSE
//    <name> SWPULSE </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E6000) Software Pulse Register </i>
//    <loc> ( (unsigned int)((PRS_SWPULSE >> 0) & 0xFFFFFFFF), ((PRS_SWPULSE = (PRS_SWPULSE & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH0PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH1PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH2PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH3PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH4PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH5PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH6PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH7PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH8PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH9PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH10PULSE </item>
//    <item> SFDITEM_FIELD__PRS_SWPULSE_CH11PULSE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_SWLEVEL  -------------------------------
// SVD Line: 18811

unsigned int PRS_SWLEVEL __AT (0x400E6004);



// ----------------------------  Field Item: PRS_SWLEVEL_CH0LEVEL  --------------------------------
// SVD Line: 18820

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH0LEVEL
//    <name> CH0LEVEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E6004) Channel 0 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.0..0> CH0LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH1LEVEL  --------------------------------
// SVD Line: 18827

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH1LEVEL
//    <name> CH1LEVEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E6004) Channel 1 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.1..1> CH1LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH2LEVEL  --------------------------------
// SVD Line: 18834

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH2LEVEL
//    <name> CH2LEVEL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E6004) Channel 2 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.2..2> CH2LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH3LEVEL  --------------------------------
// SVD Line: 18841

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH3LEVEL
//    <name> CH3LEVEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E6004) Channel 3 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.3..3> CH3LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH4LEVEL  --------------------------------
// SVD Line: 18848

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH4LEVEL
//    <name> CH4LEVEL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E6004) Channel 4 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.4..4> CH4LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH5LEVEL  --------------------------------
// SVD Line: 18855

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH5LEVEL
//    <name> CH5LEVEL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E6004) Channel 5 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.5..5> CH5LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH6LEVEL  --------------------------------
// SVD Line: 18862

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH6LEVEL
//    <name> CH6LEVEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400E6004) Channel 6 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.6..6> CH6LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH7LEVEL  --------------------------------
// SVD Line: 18869

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH7LEVEL
//    <name> CH7LEVEL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400E6004) Channel 7 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.7..7> CH7LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH8LEVEL  --------------------------------
// SVD Line: 18876

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH8LEVEL
//    <name> CH8LEVEL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E6004) Channel 8 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.8..8> CH8LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH9LEVEL  --------------------------------
// SVD Line: 18883

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH9LEVEL
//    <name> CH9LEVEL </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400E6004) Channel 9 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.9..9> CH9LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH10LEVEL  -------------------------------
// SVD Line: 18890

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH10LEVEL
//    <name> CH10LEVEL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400E6004) Channel 10 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.10..10> CH10LEVEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_SWLEVEL_CH11LEVEL  -------------------------------
// SVD Line: 18897

//  <item> SFDITEM_FIELD__PRS_SWLEVEL_CH11LEVEL
//    <name> CH11LEVEL </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400E6004) Channel 11 Software Level </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_SWLEVEL ) </loc>
//      <o.11..11> CH11LEVEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PRS_SWLEVEL  ----------------------------------
// SVD Line: 18811

//  <rtree> SFDITEM_REG__PRS_SWLEVEL
//    <name> SWLEVEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6004) Software Level Register </i>
//    <loc> ( (unsigned int)((PRS_SWLEVEL >> 0) & 0xFFFFFFFF), ((PRS_SWLEVEL = (PRS_SWLEVEL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH0LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH1LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH2LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH3LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH4LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH5LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH6LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH7LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH8LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH9LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH10LEVEL </item>
//    <item> SFDITEM_FIELD__PRS_SWLEVEL_CH11LEVEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_ROUTEPEN  ------------------------------
// SVD Line: 18906

unsigned int PRS_ROUTEPEN __AT (0x400E6008);



// -----------------------------  Field Item: PRS_ROUTEPEN_CH0PEN  --------------------------------
// SVD Line: 18915

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH0PEN
//    <name> CH0PEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E6008) CH0 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.0..0> CH0PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH1PEN  --------------------------------
// SVD Line: 18922

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH1PEN
//    <name> CH1PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E6008) CH1 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.1..1> CH1PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH2PEN  --------------------------------
// SVD Line: 18929

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH2PEN
//    <name> CH2PEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E6008) CH2 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.2..2> CH2PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH3PEN  --------------------------------
// SVD Line: 18936

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH3PEN
//    <name> CH3PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E6008) CH3 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.3..3> CH3PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH4PEN  --------------------------------
// SVD Line: 18943

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH4PEN
//    <name> CH4PEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E6008) CH4 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.4..4> CH4PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH5PEN  --------------------------------
// SVD Line: 18950

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH5PEN
//    <name> CH5PEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E6008) CH5 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.5..5> CH5PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH6PEN  --------------------------------
// SVD Line: 18957

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH6PEN
//    <name> CH6PEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400E6008) CH6 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.6..6> CH6PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH7PEN  --------------------------------
// SVD Line: 18964

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH7PEN
//    <name> CH7PEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400E6008) CH7 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.7..7> CH7PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH8PEN  --------------------------------
// SVD Line: 18971

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH8PEN
//    <name> CH8PEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400E6008) CH8 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.8..8> CH8PEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_ROUTEPEN_CH9PEN  --------------------------------
// SVD Line: 18978

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH9PEN
//    <name> CH9PEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400E6008) CH9 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.9..9> CH9PEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTEPEN_CH10PEN  --------------------------------
// SVD Line: 18985

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH10PEN
//    <name> CH10PEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400E6008) CH10 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.10..10> CH10PEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTEPEN_CH11PEN  --------------------------------
// SVD Line: 18992

//  <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH11PEN
//    <name> CH11PEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400E6008) CH11 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_ROUTEPEN ) </loc>
//      <o.11..11> CH11PEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_ROUTEPEN  ----------------------------------
// SVD Line: 18906

//  <rtree> SFDITEM_REG__PRS_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6008) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((PRS_ROUTEPEN >> 0) & 0xFFFFFFFF), ((PRS_ROUTEPEN = (PRS_ROUTEPEN & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH0PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH1PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH2PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH3PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH4PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH5PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH6PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH7PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH8PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH9PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH10PEN </item>
//    <item> SFDITEM_FIELD__PRS_ROUTEPEN_CH11PEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PRS_ROUTELOC0  ------------------------------
// SVD Line: 19001

unsigned int PRS_ROUTELOC0 __AT (0x400E6010);



// ----------------------------  Field Item: PRS_ROUTELOC0_CH0LOC  --------------------------------
// SVD Line: 19010

//  <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH0LOC
//    <name> CH0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400E6010) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC0 ) </loc>
//      <o.5..0> CH0LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC0_CH1LOC  --------------------------------
// SVD Line: 19089

//  <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH1LOC
//    <name> CH1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400E6010) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC0 ) </loc>
//      <o.13..8> CH1LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC0_CH2LOC  --------------------------------
// SVD Line: 19138

//  <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH2LOC
//    <name> CH2LOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E6010) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC0 ) </loc>
//      <o.21..16> CH2LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC0_CH3LOC  --------------------------------
// SVD Line: 19187

//  <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH3LOC
//    <name> CH3LOC </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x400E6010) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC0 ) </loc>
//      <o.29..24> CH3LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PRS_ROUTELOC0  ---------------------------------
// SVD Line: 19001

//  <rtree> SFDITEM_REG__PRS_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6010) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((PRS_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((PRS_ROUTELOC0 = (PRS_ROUTELOC0 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH0LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH1LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH2LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC0_CH3LOC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PRS_ROUTELOC1  ------------------------------
// SVD Line: 19273

unsigned int PRS_ROUTELOC1 __AT (0x400E6014);



// ----------------------------  Field Item: PRS_ROUTELOC1_CH4LOC  --------------------------------
// SVD Line: 19282

//  <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH4LOC
//    <name> CH4LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400E6014) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC1 ) </loc>
//      <o.5..0> CH4LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC1_CH5LOC  --------------------------------
// SVD Line: 19326

//  <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH5LOC
//    <name> CH5LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400E6014) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC1 ) </loc>
//      <o.13..8> CH5LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC1_CH6LOC  --------------------------------
// SVD Line: 19370

//  <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH6LOC
//    <name> CH6LOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E6014) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC1 ) </loc>
//      <o.21..16> CH6LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC1_CH7LOC  --------------------------------
// SVD Line: 19469

//  <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH7LOC
//    <name> CH7LOC </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x400E6014) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC1 ) </loc>
//      <o.29..24> CH7LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PRS_ROUTELOC1  ---------------------------------
// SVD Line: 19273

//  <rtree> SFDITEM_REG__PRS_ROUTELOC1
//    <name> ROUTELOC1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6014) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((PRS_ROUTELOC1 >> 0) & 0xFFFFFFFF), ((PRS_ROUTELOC1 = (PRS_ROUTELOC1 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH4LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH5LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH6LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC1_CH7LOC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PRS_ROUTELOC2  ------------------------------
// SVD Line: 19535

unsigned int PRS_ROUTELOC2 __AT (0x400E6018);



// ----------------------------  Field Item: PRS_ROUTELOC2_CH8LOC  --------------------------------
// SVD Line: 19544

//  <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH8LOC
//    <name> CH8LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400E6018) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC2 ) </loc>
//      <o.5..0> CH8LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC2_CH9LOC  --------------------------------
// SVD Line: 19608

//  <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH9LOC
//    <name> CH9LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400E6018) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC2 ) </loc>
//      <o.13..8> CH9LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC2_CH10LOC  -------------------------------
// SVD Line: 19702

//  <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH10LOC
//    <name> CH10LOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E6018) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC2 ) </loc>
//      <o.21..16> CH10LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_ROUTELOC2_CH11LOC  -------------------------------
// SVD Line: 19741

//  <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH11LOC
//    <name> CH11LOC </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x400E6018) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : Reserved - do not use\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : Reserved - do not use\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_ROUTELOC2 ) </loc>
//      <o.29..24> CH11LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: 
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: 
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PRS_ROUTELOC2  ---------------------------------
// SVD Line: 19535

//  <rtree> SFDITEM_REG__PRS_ROUTELOC2
//    <name> ROUTELOC2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6018) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((PRS_ROUTELOC2 >> 0) & 0xFFFFFFFF), ((PRS_ROUTELOC2 = (PRS_ROUTELOC2 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH8LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH9LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH10LOC </item>
//    <item> SFDITEM_FIELD__PRS_ROUTELOC2_CH11LOC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PRS_CTRL  --------------------------------
// SVD Line: 19782

unsigned int PRS_CTRL __AT (0x400E6020);



// ------------------------------  Field Item: PRS_CTRL_SEVONPRS  ---------------------------------
// SVD Line: 19791

//  <item> SFDITEM_FIELD__PRS_CTRL_SEVONPRS
//    <name> SEVONPRS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E6020) Set Event on PRS </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CTRL ) </loc>
//      <o.0..0> SEVONPRS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CTRL_SEVONPRSSEL  --------------------------------
// SVD Line: 19798

//  <item> SFDITEM_FIELD__PRS_CTRL_SEVONPRSSEL
//    <name> SEVONPRSSEL </name>
//    <rw> 
//    <i> [Bits 4..1] RW (@ 0x400E6020) \nSEVONPRS PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CTRL ) </loc>
//      <o.4..1> SEVONPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PRS_CTRL  ------------------------------------
// SVD Line: 19782

//  <rtree> SFDITEM_REG__PRS_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6020) Control Register </i>
//    <loc> ( (unsigned int)((PRS_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CTRL = (PRS_CTRL & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CTRL_SEVONPRS </item>
//    <item> SFDITEM_FIELD__PRS_CTRL_SEVONPRSSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_DMAREQ0  -------------------------------
// SVD Line: 19869

unsigned int PRS_DMAREQ0 __AT (0x400E6024);



// -----------------------------  Field Item: PRS_DMAREQ0_PRSSEL  ---------------------------------
// SVD Line: 19878

//  <item> SFDITEM_FIELD__PRS_DMAREQ0_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x400E6024) \nDMA Request 0 PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_DMAREQ0 ) </loc>
//      <o.9..6> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PRS_DMAREQ0  ----------------------------------
// SVD Line: 19869

//  <rtree> SFDITEM_REG__PRS_DMAREQ0
//    <name> DMAREQ0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6024) DMA Request 0 Register </i>
//    <loc> ( (unsigned int)((PRS_DMAREQ0 >> 0) & 0xFFFFFFFF), ((PRS_DMAREQ0 = (PRS_DMAREQ0 & ~(0x3C0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3C0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_DMAREQ0_PRSSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_DMAREQ1  -------------------------------
// SVD Line: 19949

unsigned int PRS_DMAREQ1 __AT (0x400E6028);



// -----------------------------  Field Item: PRS_DMAREQ1_PRSSEL  ---------------------------------
// SVD Line: 19958

//  <item> SFDITEM_FIELD__PRS_DMAREQ1_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x400E6028) \nDMA Request 1 PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_DMAREQ1 ) </loc>
//      <o.9..6> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PRS_DMAREQ1  ----------------------------------
// SVD Line: 19949

//  <rtree> SFDITEM_REG__PRS_DMAREQ1
//    <name> DMAREQ1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6028) DMA Request 1 Register </i>
//    <loc> ( (unsigned int)((PRS_DMAREQ1 >> 0) & 0xFFFFFFFF), ((PRS_DMAREQ1 = (PRS_DMAREQ1 & ~(0x3C0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3C0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_DMAREQ1_PRSSEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PRS_PEEK  --------------------------------
// SVD Line: 20029

unsigned int PRS_PEEK __AT (0x400E6030);



// -------------------------------  Field Item: PRS_PEEK_CH0VAL  ----------------------------------
// SVD Line: 20038

//  <item> SFDITEM_FIELD__PRS_PEEK_CH0VAL
//    <name> CH0VAL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E6030) Channel 0 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.0..0> CH0VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH1VAL  ----------------------------------
// SVD Line: 20045

//  <item> SFDITEM_FIELD__PRS_PEEK_CH1VAL
//    <name> CH1VAL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E6030) Channel 1 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.1..1> CH1VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH2VAL  ----------------------------------
// SVD Line: 20052

//  <item> SFDITEM_FIELD__PRS_PEEK_CH2VAL
//    <name> CH2VAL </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E6030) Channel 2 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.2..2> CH2VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH3VAL  ----------------------------------
// SVD Line: 20059

//  <item> SFDITEM_FIELD__PRS_PEEK_CH3VAL
//    <name> CH3VAL </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E6030) Channel 3 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.3..3> CH3VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH4VAL  ----------------------------------
// SVD Line: 20066

//  <item> SFDITEM_FIELD__PRS_PEEK_CH4VAL
//    <name> CH4VAL </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E6030) Channel 4 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.4..4> CH4VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH5VAL  ----------------------------------
// SVD Line: 20073

//  <item> SFDITEM_FIELD__PRS_PEEK_CH5VAL
//    <name> CH5VAL </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400E6030) Channel 5 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.5..5> CH5VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH6VAL  ----------------------------------
// SVD Line: 20080

//  <item> SFDITEM_FIELD__PRS_PEEK_CH6VAL
//    <name> CH6VAL </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x400E6030) Channel 6 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.6..6> CH6VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH7VAL  ----------------------------------
// SVD Line: 20087

//  <item> SFDITEM_FIELD__PRS_PEEK_CH7VAL
//    <name> CH7VAL </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x400E6030) Channel 7 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.7..7> CH7VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH8VAL  ----------------------------------
// SVD Line: 20094

//  <item> SFDITEM_FIELD__PRS_PEEK_CH8VAL
//    <name> CH8VAL </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x400E6030) Channel 8 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.8..8> CH8VAL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PRS_PEEK_CH9VAL  ----------------------------------
// SVD Line: 20101

//  <item> SFDITEM_FIELD__PRS_PEEK_CH9VAL
//    <name> CH9VAL </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x400E6030) Channel 9 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.9..9> CH9VAL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_PEEK_CH10VAL  ----------------------------------
// SVD Line: 20108

//  <item> SFDITEM_FIELD__PRS_PEEK_CH10VAL
//    <name> CH10VAL </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x400E6030) Channel 10 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.10..10> CH10VAL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_PEEK_CH11VAL  ----------------------------------
// SVD Line: 20115

//  <item> SFDITEM_FIELD__PRS_PEEK_CH11VAL
//    <name> CH11VAL </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x400E6030) Channel 11 Current Value </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_PEEK ) </loc>
//      <o.11..11> CH11VAL
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PRS_PEEK  ------------------------------------
// SVD Line: 20029

//  <rtree> SFDITEM_REG__PRS_PEEK
//    <name> PEEK </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E6030) PRS Channel Values </i>
//    <loc> ( (unsigned int)((PRS_PEEK >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH0VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH1VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH2VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH3VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH4VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH5VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH6VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH7VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH8VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH9VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH10VAL </item>
//    <item> SFDITEM_FIELD__PRS_PEEK_CH11VAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH0_CTRL  ------------------------------
// SVD Line: 20124

unsigned int PRS_CH0_CTRL __AT (0x400E6040);



// -----------------------------  Field Item: PRS_CH0_CTRL_SIGSEL  --------------------------------
// SVD Line: 20133

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6040) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH0_CTRL >> 0) & 0x7), ((PRS_CH0_CTRL = (PRS_CH0_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH0_CTRL_SOURCESEL  -------------------------------
// SVD Line: 20140

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6040) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH0_CTRL >> 8) & 0x7F), ((PRS_CH0_CTRL = (PRS_CH0_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH0_CTRL_EDSEL  ---------------------------------
// SVD Line: 20238

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6040) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH0_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH0_CTRL_STRETCH  --------------------------------
// SVD Line: 20267

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6040) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH0_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH0_CTRL_INV  ----------------------------------
// SVD Line: 20274

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6040) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH0_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH0_CTRL_ORPREV  --------------------------------
// SVD Line: 20281

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6040) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH0_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH0_CTRL_ANDNEXT  --------------------------------
// SVD Line: 20288

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6040) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH0_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH0_CTRL_ASYNC  ---------------------------------
// SVD Line: 20295

//  <item> SFDITEM_FIELD__PRS_CH0_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6040) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH0_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH0_CTRL  ----------------------------------
// SVD Line: 20124

//  <rtree> SFDITEM_REG__PRS_CH0_CTRL
//    <name> CH0_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6040) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH0_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH0_CTRL = (PRS_CH0_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH0_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH1_CTRL  ------------------------------
// SVD Line: 20304

unsigned int PRS_CH1_CTRL __AT (0x400E6044);



// -----------------------------  Field Item: PRS_CH1_CTRL_SIGSEL  --------------------------------
// SVD Line: 20313

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6044) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH1_CTRL >> 0) & 0x7), ((PRS_CH1_CTRL = (PRS_CH1_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH1_CTRL_SOURCESEL  -------------------------------
// SVD Line: 20320

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6044) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH1_CTRL >> 8) & 0x7F), ((PRS_CH1_CTRL = (PRS_CH1_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH1_CTRL_EDSEL  ---------------------------------
// SVD Line: 20418

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6044) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH1_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH1_CTRL_STRETCH  --------------------------------
// SVD Line: 20447

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6044) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH1_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH1_CTRL_INV  ----------------------------------
// SVD Line: 20454

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6044) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH1_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH1_CTRL_ORPREV  --------------------------------
// SVD Line: 20461

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6044) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH1_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH1_CTRL_ANDNEXT  --------------------------------
// SVD Line: 20468

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6044) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH1_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH1_CTRL_ASYNC  ---------------------------------
// SVD Line: 20475

//  <item> SFDITEM_FIELD__PRS_CH1_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6044) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH1_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH1_CTRL  ----------------------------------
// SVD Line: 20304

//  <rtree> SFDITEM_REG__PRS_CH1_CTRL
//    <name> CH1_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6044) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH1_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH1_CTRL = (PRS_CH1_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH1_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH2_CTRL  ------------------------------
// SVD Line: 20484

unsigned int PRS_CH2_CTRL __AT (0x400E6048);



// -----------------------------  Field Item: PRS_CH2_CTRL_SIGSEL  --------------------------------
// SVD Line: 20493

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6048) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH2_CTRL >> 0) & 0x7), ((PRS_CH2_CTRL = (PRS_CH2_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH2_CTRL_SOURCESEL  -------------------------------
// SVD Line: 20500

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6048) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH2_CTRL >> 8) & 0x7F), ((PRS_CH2_CTRL = (PRS_CH2_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH2_CTRL_EDSEL  ---------------------------------
// SVD Line: 20598

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6048) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH2_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH2_CTRL_STRETCH  --------------------------------
// SVD Line: 20627

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6048) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH2_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH2_CTRL_INV  ----------------------------------
// SVD Line: 20634

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6048) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH2_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH2_CTRL_ORPREV  --------------------------------
// SVD Line: 20641

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6048) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH2_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH2_CTRL_ANDNEXT  --------------------------------
// SVD Line: 20648

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6048) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH2_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH2_CTRL_ASYNC  ---------------------------------
// SVD Line: 20655

//  <item> SFDITEM_FIELD__PRS_CH2_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6048) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH2_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH2_CTRL  ----------------------------------
// SVD Line: 20484

//  <rtree> SFDITEM_REG__PRS_CH2_CTRL
//    <name> CH2_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6048) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH2_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH2_CTRL = (PRS_CH2_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH2_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH3_CTRL  ------------------------------
// SVD Line: 20664

unsigned int PRS_CH3_CTRL __AT (0x400E604C);



// -----------------------------  Field Item: PRS_CH3_CTRL_SIGSEL  --------------------------------
// SVD Line: 20673

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E604C) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH3_CTRL >> 0) & 0x7), ((PRS_CH3_CTRL = (PRS_CH3_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH3_CTRL_SOURCESEL  -------------------------------
// SVD Line: 20680

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E604C) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH3_CTRL >> 8) & 0x7F), ((PRS_CH3_CTRL = (PRS_CH3_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH3_CTRL_EDSEL  ---------------------------------
// SVD Line: 20778

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E604C) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH3_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH3_CTRL_STRETCH  --------------------------------
// SVD Line: 20807

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E604C) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH3_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH3_CTRL_INV  ----------------------------------
// SVD Line: 20814

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E604C) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH3_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH3_CTRL_ORPREV  --------------------------------
// SVD Line: 20821

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E604C) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH3_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH3_CTRL_ANDNEXT  --------------------------------
// SVD Line: 20828

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E604C) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH3_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH3_CTRL_ASYNC  ---------------------------------
// SVD Line: 20835

//  <item> SFDITEM_FIELD__PRS_CH3_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E604C) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH3_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH3_CTRL  ----------------------------------
// SVD Line: 20664

//  <rtree> SFDITEM_REG__PRS_CH3_CTRL
//    <name> CH3_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E604C) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH3_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH3_CTRL = (PRS_CH3_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH3_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH4_CTRL  ------------------------------
// SVD Line: 20844

unsigned int PRS_CH4_CTRL __AT (0x400E6050);



// -----------------------------  Field Item: PRS_CH4_CTRL_SIGSEL  --------------------------------
// SVD Line: 20853

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6050) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH4_CTRL >> 0) & 0x7), ((PRS_CH4_CTRL = (PRS_CH4_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH4_CTRL_SOURCESEL  -------------------------------
// SVD Line: 20860

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6050) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH4_CTRL >> 8) & 0x7F), ((PRS_CH4_CTRL = (PRS_CH4_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH4_CTRL_EDSEL  ---------------------------------
// SVD Line: 20958

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6050) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH4_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH4_CTRL_STRETCH  --------------------------------
// SVD Line: 20987

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6050) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH4_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH4_CTRL_INV  ----------------------------------
// SVD Line: 20994

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6050) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH4_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH4_CTRL_ORPREV  --------------------------------
// SVD Line: 21001

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6050) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH4_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH4_CTRL_ANDNEXT  --------------------------------
// SVD Line: 21008

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6050) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH4_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH4_CTRL_ASYNC  ---------------------------------
// SVD Line: 21015

//  <item> SFDITEM_FIELD__PRS_CH4_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6050) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH4_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH4_CTRL  ----------------------------------
// SVD Line: 20844

//  <rtree> SFDITEM_REG__PRS_CH4_CTRL
//    <name> CH4_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6050) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH4_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH4_CTRL = (PRS_CH4_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH4_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH5_CTRL  ------------------------------
// SVD Line: 21024

unsigned int PRS_CH5_CTRL __AT (0x400E6054);



// -----------------------------  Field Item: PRS_CH5_CTRL_SIGSEL  --------------------------------
// SVD Line: 21033

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6054) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH5_CTRL >> 0) & 0x7), ((PRS_CH5_CTRL = (PRS_CH5_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH5_CTRL_SOURCESEL  -------------------------------
// SVD Line: 21040

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6054) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH5_CTRL >> 8) & 0x7F), ((PRS_CH5_CTRL = (PRS_CH5_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH5_CTRL_EDSEL  ---------------------------------
// SVD Line: 21138

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6054) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH5_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH5_CTRL_STRETCH  --------------------------------
// SVD Line: 21167

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6054) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH5_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH5_CTRL_INV  ----------------------------------
// SVD Line: 21174

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6054) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH5_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH5_CTRL_ORPREV  --------------------------------
// SVD Line: 21181

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6054) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH5_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH5_CTRL_ANDNEXT  --------------------------------
// SVD Line: 21188

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6054) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH5_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH5_CTRL_ASYNC  ---------------------------------
// SVD Line: 21195

//  <item> SFDITEM_FIELD__PRS_CH5_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6054) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH5_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH5_CTRL  ----------------------------------
// SVD Line: 21024

//  <rtree> SFDITEM_REG__PRS_CH5_CTRL
//    <name> CH5_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6054) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH5_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH5_CTRL = (PRS_CH5_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH5_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH6_CTRL  ------------------------------
// SVD Line: 21204

unsigned int PRS_CH6_CTRL __AT (0x400E6058);



// -----------------------------  Field Item: PRS_CH6_CTRL_SIGSEL  --------------------------------
// SVD Line: 21213

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6058) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH6_CTRL >> 0) & 0x7), ((PRS_CH6_CTRL = (PRS_CH6_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH6_CTRL_SOURCESEL  -------------------------------
// SVD Line: 21220

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6058) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH6_CTRL >> 8) & 0x7F), ((PRS_CH6_CTRL = (PRS_CH6_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH6_CTRL_EDSEL  ---------------------------------
// SVD Line: 21318

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6058) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH6_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH6_CTRL_STRETCH  --------------------------------
// SVD Line: 21347

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6058) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH6_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH6_CTRL_INV  ----------------------------------
// SVD Line: 21354

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6058) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH6_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH6_CTRL_ORPREV  --------------------------------
// SVD Line: 21361

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6058) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH6_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH6_CTRL_ANDNEXT  --------------------------------
// SVD Line: 21368

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6058) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH6_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH6_CTRL_ASYNC  ---------------------------------
// SVD Line: 21375

//  <item> SFDITEM_FIELD__PRS_CH6_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6058) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH6_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH6_CTRL  ----------------------------------
// SVD Line: 21204

//  <rtree> SFDITEM_REG__PRS_CH6_CTRL
//    <name> CH6_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6058) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH6_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH6_CTRL = (PRS_CH6_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH6_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH7_CTRL  ------------------------------
// SVD Line: 21384

unsigned int PRS_CH7_CTRL __AT (0x400E605C);



// -----------------------------  Field Item: PRS_CH7_CTRL_SIGSEL  --------------------------------
// SVD Line: 21393

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E605C) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH7_CTRL >> 0) & 0x7), ((PRS_CH7_CTRL = (PRS_CH7_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH7_CTRL_SOURCESEL  -------------------------------
// SVD Line: 21400

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E605C) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH7_CTRL >> 8) & 0x7F), ((PRS_CH7_CTRL = (PRS_CH7_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH7_CTRL_EDSEL  ---------------------------------
// SVD Line: 21498

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E605C) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH7_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH7_CTRL_STRETCH  --------------------------------
// SVD Line: 21527

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E605C) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH7_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH7_CTRL_INV  ----------------------------------
// SVD Line: 21534

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E605C) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH7_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH7_CTRL_ORPREV  --------------------------------
// SVD Line: 21541

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E605C) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH7_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH7_CTRL_ANDNEXT  --------------------------------
// SVD Line: 21548

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E605C) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH7_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH7_CTRL_ASYNC  ---------------------------------
// SVD Line: 21555

//  <item> SFDITEM_FIELD__PRS_CH7_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E605C) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH7_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH7_CTRL  ----------------------------------
// SVD Line: 21384

//  <rtree> SFDITEM_REG__PRS_CH7_CTRL
//    <name> CH7_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E605C) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH7_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH7_CTRL = (PRS_CH7_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH7_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH8_CTRL  ------------------------------
// SVD Line: 21564

unsigned int PRS_CH8_CTRL __AT (0x400E6060);



// -----------------------------  Field Item: PRS_CH8_CTRL_SIGSEL  --------------------------------
// SVD Line: 21573

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6060) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH8_CTRL >> 0) & 0x7), ((PRS_CH8_CTRL = (PRS_CH8_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH8_CTRL_SOURCESEL  -------------------------------
// SVD Line: 21580

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6060) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH8_CTRL >> 8) & 0x7F), ((PRS_CH8_CTRL = (PRS_CH8_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH8_CTRL_EDSEL  ---------------------------------
// SVD Line: 21678

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6060) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH8_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH8_CTRL_STRETCH  --------------------------------
// SVD Line: 21707

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6060) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH8_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH8_CTRL_INV  ----------------------------------
// SVD Line: 21714

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6060) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH8_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH8_CTRL_ORPREV  --------------------------------
// SVD Line: 21721

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6060) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH8_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH8_CTRL_ANDNEXT  --------------------------------
// SVD Line: 21728

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6060) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH8_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH8_CTRL_ASYNC  ---------------------------------
// SVD Line: 21735

//  <item> SFDITEM_FIELD__PRS_CH8_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6060) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH8_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH8_CTRL  ----------------------------------
// SVD Line: 21564

//  <rtree> SFDITEM_REG__PRS_CH8_CTRL
//    <name> CH8_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6060) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH8_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH8_CTRL = (PRS_CH8_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH8_CTRL_ASYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PRS_CH9_CTRL  ------------------------------
// SVD Line: 21744

unsigned int PRS_CH9_CTRL __AT (0x400E6064);



// -----------------------------  Field Item: PRS_CH9_CTRL_SIGSEL  --------------------------------
// SVD Line: 21753

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6064) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH9_CTRL >> 0) & 0x7), ((PRS_CH9_CTRL = (PRS_CH9_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH9_CTRL_SOURCESEL  -------------------------------
// SVD Line: 21760

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6064) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH9_CTRL >> 8) & 0x7F), ((PRS_CH9_CTRL = (PRS_CH9_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH9_CTRL_EDSEL  ---------------------------------
// SVD Line: 21858

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6064) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH9_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH9_CTRL_STRETCH  --------------------------------
// SVD Line: 21887

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6064) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH9_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH9_CTRL_INV  ----------------------------------
// SVD Line: 21894

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6064) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH9_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH9_CTRL_ORPREV  --------------------------------
// SVD Line: 21901

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6064) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH9_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH9_CTRL_ANDNEXT  --------------------------------
// SVD Line: 21908

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6064) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH9_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH9_CTRL_ASYNC  ---------------------------------
// SVD Line: 21915

//  <item> SFDITEM_FIELD__PRS_CH9_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6064) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH9_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH9_CTRL  ----------------------------------
// SVD Line: 21744

//  <rtree> SFDITEM_REG__PRS_CH9_CTRL
//    <name> CH9_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6064) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH9_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH9_CTRL = (PRS_CH9_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH9_CTRL_ASYNC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PRS_CH10_CTRL  ------------------------------
// SVD Line: 21924

unsigned int PRS_CH10_CTRL __AT (0x400E6068);



// ----------------------------  Field Item: PRS_CH10_CTRL_SIGSEL  --------------------------------
// SVD Line: 21933

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E6068) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH10_CTRL >> 0) & 0x7), ((PRS_CH10_CTRL = (PRS_CH10_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH10_CTRL_SOURCESEL  ------------------------------
// SVD Line: 21940

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E6068) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH10_CTRL >> 8) & 0x7F), ((PRS_CH10_CTRL = (PRS_CH10_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH10_CTRL_EDSEL  --------------------------------
// SVD Line: 22038

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E6068) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH10_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH10_CTRL_STRETCH  -------------------------------
// SVD Line: 22067

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E6068) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH10_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH10_CTRL_INV  ---------------------------------
// SVD Line: 22074

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E6068) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH10_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH10_CTRL_ORPREV  --------------------------------
// SVD Line: 22081

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E6068) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH10_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH10_CTRL_ANDNEXT  -------------------------------
// SVD Line: 22088

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E6068) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH10_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH10_CTRL_ASYNC  --------------------------------
// SVD Line: 22095

//  <item> SFDITEM_FIELD__PRS_CH10_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E6068) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH10_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH10_CTRL  ---------------------------------
// SVD Line: 21924

//  <rtree> SFDITEM_REG__PRS_CH10_CTRL
//    <name> CH10_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E6068) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH10_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH10_CTRL = (PRS_CH10_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH10_CTRL_ASYNC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PRS_CH11_CTRL  ------------------------------
// SVD Line: 22104

unsigned int PRS_CH11_CTRL __AT (0x400E606C);



// ----------------------------  Field Item: PRS_CH11_CTRL_SIGSEL  --------------------------------
// SVD Line: 22113

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400E606C) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH11_CTRL >> 0) & 0x7), ((PRS_CH11_CTRL = (PRS_CH11_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PRS_CH11_CTRL_SOURCESEL  ------------------------------
// SVD Line: 22120

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400E606C) Source Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PRS_CH11_CTRL >> 8) & 0x7F), ((PRS_CH11_CTRL = (PRS_CH11_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH11_CTRL_EDSEL  --------------------------------
// SVD Line: 22218

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_EDSEL
//    <name> EDSEL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x400E606C) \nEdge Detect Select\n0 : OFF = Signal is left as it is\n1 : POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal\n2 : NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal\n3 : BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal </i>
//    <combo> 
//      <loc> ( (unsigned int) PRS_CH11_CTRL ) </loc>
//      <o.21..20> EDSEL
//        <0=> 0: OFF = Signal is left as it is
//        <1=> 1: POSEDGE = A one HFCLK cycle pulse is generated for every positive edge of the incoming signal
//        <2=> 2: NEGEDGE = A one HFCLK clock cycle pulse is generated for every negative edge of the incoming signal
//        <3=> 3: BOTHEDGES = A one HFCLK clock cycle pulse is generated for every edge of the incoming signal
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH11_CTRL_STRETCH  -------------------------------
// SVD Line: 22247

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_STRETCH
//    <name> STRETCH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400E606C) Stretch Channel Output </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH11_CTRL ) </loc>
//      <o.25..25> STRETCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PRS_CH11_CTRL_INV  ---------------------------------
// SVD Line: 22254

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400E606C) Invert Channel </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH11_CTRL ) </loc>
//      <o.26..26> INV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH11_CTRL_ORPREV  --------------------------------
// SVD Line: 22261

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_ORPREV
//    <name> ORPREV </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400E606C) Or Previous </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH11_CTRL ) </loc>
//      <o.27..27> ORPREV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PRS_CH11_CTRL_ANDNEXT  -------------------------------
// SVD Line: 22268

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_ANDNEXT
//    <name> ANDNEXT </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400E606C) And Next </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH11_CTRL ) </loc>
//      <o.28..28> ANDNEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PRS_CH11_CTRL_ASYNC  --------------------------------
// SVD Line: 22275

//  <item> SFDITEM_FIELD__PRS_CH11_CTRL_ASYNC
//    <name> ASYNC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400E606C) Asynchronous Reflex </i>
//    <check> 
//      <loc> ( (unsigned int) PRS_CH11_CTRL ) </loc>
//      <o.30..30> ASYNC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PRS_CH11_CTRL  ---------------------------------
// SVD Line: 22104

//  <rtree> SFDITEM_REG__PRS_CH11_CTRL
//    <name> CH11_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E606C) Channel Control Register </i>
//    <loc> ( (unsigned int)((PRS_CH11_CTRL >> 0) & 0xFFFFFFFF), ((PRS_CH11_CTRL = (PRS_CH11_CTRL & ~(0x5E307F07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5E307F07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_SIGSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_SOURCESEL </item>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_EDSEL </item>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_STRETCH </item>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_INV </item>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_ORPREV </item>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_ANDNEXT </item>
//    <item> SFDITEM_FIELD__PRS_CH11_CTRL_ASYNC </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PRS  --------------------------------------
// SVD Line: 18706

//  <view> PRS
//    <name> PRS </name>
//    <item> SFDITEM_REG__PRS_SWPULSE </item>
//    <item> SFDITEM_REG__PRS_SWLEVEL </item>
//    <item> SFDITEM_REG__PRS_ROUTEPEN </item>
//    <item> SFDITEM_REG__PRS_ROUTELOC0 </item>
//    <item> SFDITEM_REG__PRS_ROUTELOC1 </item>
//    <item> SFDITEM_REG__PRS_ROUTELOC2 </item>
//    <item> SFDITEM_REG__PRS_CTRL </item>
//    <item> SFDITEM_REG__PRS_DMAREQ0 </item>
//    <item> SFDITEM_REG__PRS_DMAREQ1 </item>
//    <item> SFDITEM_REG__PRS_PEEK </item>
//    <item> SFDITEM_REG__PRS_CH0_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH1_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH2_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH3_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH4_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH5_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH6_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH7_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH8_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH9_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH10_CTRL </item>
//    <item> SFDITEM_REG__PRS_CH11_CTRL </item>
//  </view>
//  


// ----------------------------  Register Item Address: LDMA_CTRL  --------------------------------
// SVD Line: 22300

unsigned int LDMA_CTRL __AT (0x400E2000);



// ---------------------------  Field Item: LDMA_CTRL_SYNCPRSSETEN  -------------------------------
// SVD Line: 22309

//  <item> SFDITEM_FIELD__LDMA_CTRL_SYNCPRSSETEN
//    <name> SYNCPRSSETEN </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2000) Synchronization PRS Set Enable </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CTRL >> 0) & 0xFF), ((LDMA_CTRL = (LDMA_CTRL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CTRL_SYNCPRSCLREN  -------------------------------
// SVD Line: 22316

//  <item> SFDITEM_FIELD__LDMA_CTRL_SYNCPRSCLREN
//    <name> SYNCPRSCLREN </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x400E2000) Synchronization PRS Clear Enable </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CTRL >> 8) & 0xFF), ((LDMA_CTRL = (LDMA_CTRL & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CTRL_NUMFIXED  ---------------------------------
// SVD Line: 22323

//  <item> SFDITEM_FIELD__LDMA_CTRL_NUMFIXED
//    <name> NUMFIXED </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x400E2000) Number of Fixed Priority Channels </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CTRL >> 24) & 0x7), ((LDMA_CTRL = (LDMA_CTRL & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LDMA_CTRL  -----------------------------------
// SVD Line: 22300

//  <rtree> SFDITEM_REG__LDMA_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2000) DMA Control Register </i>
//    <loc> ( (unsigned int)((LDMA_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CTRL = (LDMA_CTRL & ~(0x700FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x700FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CTRL_SYNCPRSSETEN </item>
//    <item> SFDITEM_FIELD__LDMA_CTRL_SYNCPRSCLREN </item>
//    <item> SFDITEM_FIELD__LDMA_CTRL_NUMFIXED </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_STATUS  -------------------------------
// SVD Line: 22332

unsigned int LDMA_STATUS __AT (0x400E2004);



// -----------------------------  Field Item: LDMA_STATUS_ANYBUSY  --------------------------------
// SVD Line: 22341

//  <item> SFDITEM_FIELD__LDMA_STATUS_ANYBUSY
//    <name> ANYBUSY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E2004) Any DMA Channel Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_STATUS ) </loc>
//      <o.0..0> ANYBUSY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_STATUS_ANYREQ  ---------------------------------
// SVD Line: 22348

//  <item> SFDITEM_FIELD__LDMA_STATUS_ANYREQ
//    <name> ANYREQ </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E2004) Any DMA Channel Request Pending </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_STATUS ) </loc>
//      <o.1..1> ANYREQ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_STATUS_CHGRANT  --------------------------------
// SVD Line: 22355

//  <item> SFDITEM_FIELD__LDMA_STATUS_CHGRANT
//    <name> CHGRANT </name>
//    <r> 
//    <i> [Bits 5..3] RO (@ 0x400E2004) Granted Channel Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_STATUS >> 3) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: LDMA_STATUS_CHERROR  --------------------------------
// SVD Line: 22362

//  <item> SFDITEM_FIELD__LDMA_STATUS_CHERROR
//    <name> CHERROR </name>
//    <r> 
//    <i> [Bits 10..8] RO (@ 0x400E2004) Errant Channel Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_STATUS >> 8) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: LDMA_STATUS_FIFOLEVEL  -------------------------------
// SVD Line: 22369

//  <item> SFDITEM_FIELD__LDMA_STATUS_FIFOLEVEL
//    <name> FIFOLEVEL </name>
//    <r> 
//    <i> [Bits 20..16] RO (@ 0x400E2004) FIFO Level </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_STATUS >> 16) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LDMA_STATUS_CHNUM  ---------------------------------
// SVD Line: 22376

//  <item> SFDITEM_FIELD__LDMA_STATUS_CHNUM
//    <name> CHNUM </name>
//    <r> 
//    <i> [Bits 28..24] RO (@ 0x400E2004) Number of Channels </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_STATUS >> 24) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LDMA_STATUS  ----------------------------------
// SVD Line: 22332

//  <rtree> SFDITEM_REG__LDMA_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E2004) DMA Status Register </i>
//    <loc> ( (unsigned int)((LDMA_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LDMA_STATUS_ANYBUSY </item>
//    <item> SFDITEM_FIELD__LDMA_STATUS_ANYREQ </item>
//    <item> SFDITEM_FIELD__LDMA_STATUS_CHGRANT </item>
//    <item> SFDITEM_FIELD__LDMA_STATUS_CHERROR </item>
//    <item> SFDITEM_FIELD__LDMA_STATUS_FIFOLEVEL </item>
//    <item> SFDITEM_FIELD__LDMA_STATUS_CHNUM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LDMA_SYNC  --------------------------------
// SVD Line: 22385

unsigned int LDMA_SYNC __AT (0x400E2008);



// -----------------------------  Field Item: LDMA_SYNC_SYNCTRIG  ---------------------------------
// SVD Line: 22394

//  <item> SFDITEM_FIELD__LDMA_SYNC_SYNCTRIG
//    <name> SYNCTRIG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2008) Synchronization Trigger </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_SYNC >> 0) & 0xFF), ((LDMA_SYNC = (LDMA_SYNC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LDMA_SYNC  -----------------------------------
// SVD Line: 22385

//  <rtree> SFDITEM_REG__LDMA_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2008) DMA Synchronization Trigger Register (Single-Cycle RMW) </i>
//    <loc> ( (unsigned int)((LDMA_SYNC >> 0) & 0xFFFFFFFF), ((LDMA_SYNC = (LDMA_SYNC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_SYNC_SYNCTRIG </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LDMA_CHEN  --------------------------------
// SVD Line: 22403

unsigned int LDMA_CHEN __AT (0x400E2020);



// -------------------------------  Field Item: LDMA_CHEN_CHEN  -----------------------------------
// SVD Line: 22412

//  <item> SFDITEM_FIELD__LDMA_CHEN_CHEN
//    <name> CHEN </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2020) Channel Enables </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CHEN >> 0) & 0xFF), ((LDMA_CHEN = (LDMA_CHEN & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LDMA_CHEN  -----------------------------------
// SVD Line: 22403

//  <rtree> SFDITEM_REG__LDMA_CHEN
//    <name> CHEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2020) DMA Channel Enable Register (Single-Cycle RMW) </i>
//    <loc> ( (unsigned int)((LDMA_CHEN >> 0) & 0xFFFFFFFF), ((LDMA_CHEN = (LDMA_CHEN & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CHEN_CHEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CHBUSY  -------------------------------
// SVD Line: 22421

unsigned int LDMA_CHBUSY __AT (0x400E2024);



// ------------------------------  Field Item: LDMA_CHBUSY_BUSY  ----------------------------------
// SVD Line: 22430

//  <item> SFDITEM_FIELD__LDMA_CHBUSY_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400E2024) Channels Busy </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CHBUSY >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LDMA_CHBUSY  ----------------------------------
// SVD Line: 22421

//  <rtree> SFDITEM_REG__LDMA_CHBUSY
//    <name> CHBUSY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E2024) DMA Channel Busy Register </i>
//    <loc> ( (unsigned int)((LDMA_CHBUSY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LDMA_CHBUSY_BUSY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CHDONE  -------------------------------
// SVD Line: 22439

unsigned int LDMA_CHDONE __AT (0x400E2028);



// -----------------------------  Field Item: LDMA_CHDONE_CHDONE  ---------------------------------
// SVD Line: 22448

//  <item> SFDITEM_FIELD__LDMA_CHDONE_CHDONE
//    <name> CHDONE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2028) DMA Channel Linking or Done </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CHDONE >> 0) & 0xFF), ((LDMA_CHDONE = (LDMA_CHDONE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LDMA_CHDONE  ----------------------------------
// SVD Line: 22439

//  <rtree> SFDITEM_REG__LDMA_CHDONE
//    <name> CHDONE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2028) DMA Channel Linking Done Register (Single-Cycle RMW) </i>
//    <loc> ( (unsigned int)((LDMA_CHDONE >> 0) & 0xFFFFFFFF), ((LDMA_CHDONE = (LDMA_CHDONE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CHDONE_CHDONE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_DBGHALT  ------------------------------
// SVD Line: 22457

unsigned int LDMA_DBGHALT __AT (0x400E202C);



// ----------------------------  Field Item: LDMA_DBGHALT_DBGHALT  --------------------------------
// SVD Line: 22466

//  <item> SFDITEM_FIELD__LDMA_DBGHALT_DBGHALT
//    <name> DBGHALT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E202C) DMA Debug Halt </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_DBGHALT >> 0) & 0xFF), ((LDMA_DBGHALT = (LDMA_DBGHALT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_DBGHALT  ----------------------------------
// SVD Line: 22457

//  <rtree> SFDITEM_REG__LDMA_DBGHALT
//    <name> DBGHALT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E202C) DMA Channel Debug Halt Register </i>
//    <loc> ( (unsigned int)((LDMA_DBGHALT >> 0) & 0xFFFFFFFF), ((LDMA_DBGHALT = (LDMA_DBGHALT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_DBGHALT_DBGHALT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LDMA_SWREQ  -------------------------------
// SVD Line: 22475

unsigned int LDMA_SWREQ __AT (0x400E2030);



// ------------------------------  Field Item: LDMA_SWREQ_SWREQ  ----------------------------------
// SVD Line: 22484

//  <item> SFDITEM_FIELD__LDMA_SWREQ_SWREQ
//    <name> SWREQ </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x400E2030) Software Transfer Requests </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_SWREQ >> 0) & 0x0), ((LDMA_SWREQ = (LDMA_SWREQ & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LDMA_SWREQ  -----------------------------------
// SVD Line: 22475

//  <rtree> SFDITEM_REG__LDMA_SWREQ
//    <name> SWREQ </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E2030) DMA Channel Software Transfer Request Register </i>
//    <loc> ( (unsigned int)((LDMA_SWREQ >> 0) & 0xFFFFFFFF), ((LDMA_SWREQ = (LDMA_SWREQ & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_SWREQ_SWREQ </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_REQDIS  -------------------------------
// SVD Line: 22493

unsigned int LDMA_REQDIS __AT (0x400E2034);



// -----------------------------  Field Item: LDMA_REQDIS_REQDIS  ---------------------------------
// SVD Line: 22502

//  <item> SFDITEM_FIELD__LDMA_REQDIS_REQDIS
//    <name> REQDIS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2034) DMA Request Disables </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_REQDIS >> 0) & 0xFF), ((LDMA_REQDIS = (LDMA_REQDIS & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LDMA_REQDIS  ----------------------------------
// SVD Line: 22493

//  <rtree> SFDITEM_REG__LDMA_REQDIS
//    <name> REQDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2034) DMA Channel Request Disable Register </i>
//    <loc> ( (unsigned int)((LDMA_REQDIS >> 0) & 0xFFFFFFFF), ((LDMA_REQDIS = (LDMA_REQDIS & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_REQDIS_REQDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_REQPEND  ------------------------------
// SVD Line: 22511

unsigned int LDMA_REQPEND __AT (0x400E2038);



// ----------------------------  Field Item: LDMA_REQPEND_REQPEND  --------------------------------
// SVD Line: 22520

//  <item> SFDITEM_FIELD__LDMA_REQPEND_REQPEND
//    <name> REQPEND </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400E2038) DMA Requests Pending </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_REQPEND >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_REQPEND  ----------------------------------
// SVD Line: 22511

//  <rtree> SFDITEM_REG__LDMA_REQPEND
//    <name> REQPEND </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E2038) DMA Channel Requests Pending Register </i>
//    <loc> ( (unsigned int)((LDMA_REQPEND >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LDMA_REQPEND_REQPEND </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_LINKLOAD  ------------------------------
// SVD Line: 22529

unsigned int LDMA_LINKLOAD __AT (0x400E203C);



// ---------------------------  Field Item: LDMA_LINKLOAD_LINKLOAD  -------------------------------
// SVD Line: 22538

//  <item> SFDITEM_FIELD__LDMA_LINKLOAD_LINKLOAD
//    <name> LINKLOAD </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x400E203C) DMA Link Loads </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_LINKLOAD >> 0) & 0x0), ((LDMA_LINKLOAD = (LDMA_LINKLOAD & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_LINKLOAD  ---------------------------------
// SVD Line: 22529

//  <rtree> SFDITEM_REG__LDMA_LINKLOAD
//    <name> LINKLOAD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E203C) DMA Channel Link Load Register </i>
//    <loc> ( (unsigned int)((LDMA_LINKLOAD >> 0) & 0xFFFFFFFF), ((LDMA_LINKLOAD = (LDMA_LINKLOAD & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_LINKLOAD_LINKLOAD </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_REQCLEAR  ------------------------------
// SVD Line: 22547

unsigned int LDMA_REQCLEAR __AT (0x400E2040);



// ---------------------------  Field Item: LDMA_REQCLEAR_REQCLEAR  -------------------------------
// SVD Line: 22556

//  <item> SFDITEM_FIELD__LDMA_REQCLEAR_REQCLEAR
//    <name> REQCLEAR </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x400E2040) DMA Request Clear </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_REQCLEAR >> 0) & 0x0), ((LDMA_REQCLEAR = (LDMA_REQCLEAR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_REQCLEAR  ---------------------------------
// SVD Line: 22547

//  <rtree> SFDITEM_REG__LDMA_REQCLEAR
//    <name> REQCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E2040) DMA Channel Request Clear Register </i>
//    <loc> ( (unsigned int)((LDMA_REQCLEAR >> 0) & 0xFFFFFFFF), ((LDMA_REQCLEAR = (LDMA_REQCLEAR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_REQCLEAR_REQCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LDMA_IF  ---------------------------------
// SVD Line: 22565

unsigned int LDMA_IF __AT (0x400E2060);



// --------------------------------  Field Item: LDMA_IF_DONE  ------------------------------------
// SVD Line: 22574

//  <item> SFDITEM_FIELD__LDMA_IF_DONE
//    <name> DONE </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400E2060) DMA Structure Operation Done Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_IF >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: LDMA_IF_ERROR  -----------------------------------
// SVD Line: 22581

//  <item> SFDITEM_FIELD__LDMA_IF_ERROR
//    <name> ERROR </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E2060) Transfer Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_IF ) </loc>
//      <o.31..31> ERROR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: LDMA_IF  ------------------------------------
// SVD Line: 22565

//  <rtree> SFDITEM_REG__LDMA_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E2060) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((LDMA_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LDMA_IF_DONE </item>
//    <item> SFDITEM_FIELD__LDMA_IF_ERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LDMA_IFS  --------------------------------
// SVD Line: 22590

unsigned int LDMA_IFS __AT (0x400E2064);



// --------------------------------  Field Item: LDMA_IFS_DONE  -----------------------------------
// SVD Line: 22599

//  <item> SFDITEM_FIELD__LDMA_IFS_DONE
//    <name> DONE </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x400E2064) Set DONE Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_IFS >> 0) & 0x0), ((LDMA_IFS = (LDMA_IFS & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LDMA_IFS_ERROR  -----------------------------------
// SVD Line: 22606

//  <item> SFDITEM_FIELD__LDMA_IFS_ERROR
//    <name> ERROR </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x400E2064) Set ERROR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_IFS ) </loc>
//      <o.31..31> ERROR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LDMA_IFS  ------------------------------------
// SVD Line: 22590

//  <rtree> SFDITEM_REG__LDMA_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E2064) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((LDMA_IFS >> 0) & 0xFFFFFFFF), ((LDMA_IFS = (LDMA_IFS & ~(0x800000FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x800000FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_IFS_DONE </item>
//    <item> SFDITEM_FIELD__LDMA_IFS_ERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LDMA_IFC  --------------------------------
// SVD Line: 22615

unsigned int LDMA_IFC __AT (0x400E2068);



// --------------------------------  Field Item: LDMA_IFC_DONE  -----------------------------------
// SVD Line: 22624

//  <item> SFDITEM_FIELD__LDMA_IFC_DONE
//    <name> DONE </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x400E2068) Clear DONE Interrupt Flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_IFC >> 0) & 0x0), ((LDMA_IFC = (LDMA_IFC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LDMA_IFC_ERROR  -----------------------------------
// SVD Line: 22631

//  <item> SFDITEM_FIELD__LDMA_IFC_ERROR
//    <name> ERROR </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x400E2068) Clear ERROR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_IFC ) </loc>
//      <o.31..31> ERROR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LDMA_IFC  ------------------------------------
// SVD Line: 22615

//  <rtree> SFDITEM_REG__LDMA_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E2068) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((LDMA_IFC >> 0) & 0xFFFFFFFF), ((LDMA_IFC = (LDMA_IFC & ~(0x800000FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x800000FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_IFC_DONE </item>
//    <item> SFDITEM_FIELD__LDMA_IFC_ERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LDMA_IEN  --------------------------------
// SVD Line: 22640

unsigned int LDMA_IEN __AT (0x400E206C);



// --------------------------------  Field Item: LDMA_IEN_DONE  -----------------------------------
// SVD Line: 22649

//  <item> SFDITEM_FIELD__LDMA_IEN_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E206C) DONE Interrupt Enable </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_IEN >> 0) & 0xFF), ((LDMA_IEN = (LDMA_IEN & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LDMA_IEN_ERROR  -----------------------------------
// SVD Line: 22656

//  <item> SFDITEM_FIELD__LDMA_IEN_ERROR
//    <name> ERROR </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400E206C) ERROR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_IEN ) </loc>
//      <o.31..31> ERROR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LDMA_IEN  ------------------------------------
// SVD Line: 22640

//  <rtree> SFDITEM_REG__LDMA_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E206C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((LDMA_IEN >> 0) & 0xFFFFFFFF), ((LDMA_IEN = (LDMA_IEN & ~(0x800000FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x800000FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_IEN_DONE </item>
//    <item> SFDITEM_FIELD__LDMA_IEN_ERROR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH0_REQSEL  -----------------------------
// SVD Line: 22665

unsigned int LDMA_CH0_REQSEL __AT (0x400E2080);



// ---------------------------  Field Item: LDMA_CH0_REQSEL_SIGSEL  -------------------------------
// SVD Line: 22674

//  <item> SFDITEM_FIELD__LDMA_CH0_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E2080) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH0_REQSEL >> 0) & 0xF), ((LDMA_CH0_REQSEL = (LDMA_CH0_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH0_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 22681

//  <item> SFDITEM_FIELD__LDMA_CH0_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E2080) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH0_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH0_REQSEL  --------------------------------
// SVD Line: 22665

//  <rtree> SFDITEM_REG__LDMA_CH0_REQSEL
//    <name> CH0_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2080) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH0_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH0_REQSEL = (LDMA_CH0_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH0_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH0_CFG  ------------------------------
// SVD Line: 22747

unsigned int LDMA_CH0_CFG __AT (0x400E2084);



// ----------------------------  Field Item: LDMA_CH0_CFG_ARBSLOTS  -------------------------------
// SVD Line: 22756

//  <item> SFDITEM_FIELD__LDMA_CH0_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E2084) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH0_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH0_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 22785

//  <item> SFDITEM_FIELD__LDMA_CH0_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E2084) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH0_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 22792

//  <item> SFDITEM_FIELD__LDMA_CH0_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E2084) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH0_CFG  ----------------------------------
// SVD Line: 22747

//  <rtree> SFDITEM_REG__LDMA_CH0_CFG
//    <name> CH0_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2084) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH0_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH0_CFG = (LDMA_CH0_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH0_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH0_LOOP  ------------------------------
// SVD Line: 22801

unsigned int LDMA_CH0_LOOP __AT (0x400E2088);



// ----------------------------  Field Item: LDMA_CH0_LOOP_LOOPCNT  -------------------------------
// SVD Line: 22810

//  <item> SFDITEM_FIELD__LDMA_CH0_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2088) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH0_LOOP >> 0) & 0xFF), ((LDMA_CH0_LOOP = (LDMA_CH0_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH0_LOOP  ---------------------------------
// SVD Line: 22801

//  <rtree> SFDITEM_REG__LDMA_CH0_LOOP
//    <name> CH0_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2088) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH0_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH0_LOOP = (LDMA_CH0_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH0_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH0_CTRL  ------------------------------
// SVD Line: 22819

unsigned int LDMA_CH0_CTRL __AT (0x400E208C);



// --------------------------  Field Item: LDMA_CH0_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 22828

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E208C) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH0_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 22852

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E208C) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH0_CTRL_XFERCNT  -------------------------------
// SVD Line: 22859

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E208C) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH0_CTRL >> 4) & 0x7FF), ((LDMA_CH0_CTRL = (LDMA_CH0_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH0_CTRL_BYTESWAP  -------------------------------
// SVD Line: 22866

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E208C) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH0_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 22873

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E208C) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH0_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 22952

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E208C) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH0_CTRL_REQMODE  -------------------------------
// SVD Line: 22959

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E208C) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH0_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 22966

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E208C) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH0_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 22973

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E208C) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH0_CTRL_SRCINC  --------------------------------
// SVD Line: 22980

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E208C) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH0_CTRL_SIZE  ---------------------------------
// SVD Line: 23009

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E208C) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH0_CTRL_DSTINC  --------------------------------
// SVD Line: 23033

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E208C) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH0_CTRL_SRCMODE  -------------------------------
// SVD Line: 23062

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E208C) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH0_CTRL_DSTMODE  -------------------------------
// SVD Line: 23069

//  <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E208C) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH0_CTRL  ---------------------------------
// SVD Line: 22819

//  <rtree> SFDITEM_REG__LDMA_CH0_CTRL
//    <name> CH0_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E208C) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH0_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH0_CTRL = (LDMA_CH0_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH0_SRC  ------------------------------
// SVD Line: 23078

unsigned int LDMA_CH0_SRC __AT (0x400E2090);



// ----------------------------  Field Item: LDMA_CH0_SRC_SRCADDR  --------------------------------
// SVD Line: 23087

//  <item> SFDITEM_FIELD__LDMA_CH0_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2090) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH0_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH0_SRC = (LDMA_CH0_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH0_SRC  ----------------------------------
// SVD Line: 23078

//  <rtree> SFDITEM_REG__LDMA_CH0_SRC
//    <name> CH0_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2090) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH0_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH0_SRC = (LDMA_CH0_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH0_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH0_DST  ------------------------------
// SVD Line: 23096

unsigned int LDMA_CH0_DST __AT (0x400E2094);



// ----------------------------  Field Item: LDMA_CH0_DST_DSTADDR  --------------------------------
// SVD Line: 23105

//  <item> SFDITEM_FIELD__LDMA_CH0_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2094) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH0_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH0_DST = (LDMA_CH0_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH0_DST  ----------------------------------
// SVD Line: 23096

//  <rtree> SFDITEM_REG__LDMA_CH0_DST
//    <name> CH0_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2094) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH0_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH0_DST = (LDMA_CH0_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH0_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH0_LINK  ------------------------------
// SVD Line: 23114

unsigned int LDMA_CH0_LINK __AT (0x400E2098);



// ---------------------------  Field Item: LDMA_CH0_LINK_LINKMODE  -------------------------------
// SVD Line: 23123

//  <item> SFDITEM_FIELD__LDMA_CH0_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E2098) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH0_LINK_LINK  ---------------------------------
// SVD Line: 23130

//  <item> SFDITEM_FIELD__LDMA_CH0_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E2098) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH0_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH0_LINK_LINKADDR  -------------------------------
// SVD Line: 23137

//  <item> SFDITEM_FIELD__LDMA_CH0_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E2098) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH0_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH0_LINK = (LDMA_CH0_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH0_LINK  ---------------------------------
// SVD Line: 23114

//  <rtree> SFDITEM_REG__LDMA_CH0_LINK
//    <name> CH0_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2098) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH0_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH0_LINK = (LDMA_CH0_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH0_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH0_LINK_LINKADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH1_REQSEL  -----------------------------
// SVD Line: 23146

unsigned int LDMA_CH1_REQSEL __AT (0x400E20B0);



// ---------------------------  Field Item: LDMA_CH1_REQSEL_SIGSEL  -------------------------------
// SVD Line: 23155

//  <item> SFDITEM_FIELD__LDMA_CH1_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E20B0) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH1_REQSEL >> 0) & 0xF), ((LDMA_CH1_REQSEL = (LDMA_CH1_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH1_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 23162

//  <item> SFDITEM_FIELD__LDMA_CH1_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E20B0) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH1_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH1_REQSEL  --------------------------------
// SVD Line: 23146

//  <rtree> SFDITEM_REG__LDMA_CH1_REQSEL
//    <name> CH1_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20B0) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH1_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH1_REQSEL = (LDMA_CH1_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH1_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH1_CFG  ------------------------------
// SVD Line: 23228

unsigned int LDMA_CH1_CFG __AT (0x400E20B4);



// ----------------------------  Field Item: LDMA_CH1_CFG_ARBSLOTS  -------------------------------
// SVD Line: 23237

//  <item> SFDITEM_FIELD__LDMA_CH1_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E20B4) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH1_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH1_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 23266

//  <item> SFDITEM_FIELD__LDMA_CH1_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E20B4) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH1_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 23273

//  <item> SFDITEM_FIELD__LDMA_CH1_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E20B4) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH1_CFG  ----------------------------------
// SVD Line: 23228

//  <rtree> SFDITEM_REG__LDMA_CH1_CFG
//    <name> CH1_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20B4) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH1_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH1_CFG = (LDMA_CH1_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH1_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH1_LOOP  ------------------------------
// SVD Line: 23282

unsigned int LDMA_CH1_LOOP __AT (0x400E20B8);



// ----------------------------  Field Item: LDMA_CH1_LOOP_LOOPCNT  -------------------------------
// SVD Line: 23291

//  <item> SFDITEM_FIELD__LDMA_CH1_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E20B8) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH1_LOOP >> 0) & 0xFF), ((LDMA_CH1_LOOP = (LDMA_CH1_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH1_LOOP  ---------------------------------
// SVD Line: 23282

//  <rtree> SFDITEM_REG__LDMA_CH1_LOOP
//    <name> CH1_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20B8) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH1_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH1_LOOP = (LDMA_CH1_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH1_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH1_CTRL  ------------------------------
// SVD Line: 23300

unsigned int LDMA_CH1_CTRL __AT (0x400E20BC);



// --------------------------  Field Item: LDMA_CH1_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 23309

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E20BC) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH1_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 23333

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E20BC) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH1_CTRL_XFERCNT  -------------------------------
// SVD Line: 23340

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E20BC) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH1_CTRL >> 4) & 0x7FF), ((LDMA_CH1_CTRL = (LDMA_CH1_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH1_CTRL_BYTESWAP  -------------------------------
// SVD Line: 23347

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E20BC) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH1_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 23354

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E20BC) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH1_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 23433

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E20BC) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH1_CTRL_REQMODE  -------------------------------
// SVD Line: 23440

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E20BC) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH1_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 23447

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E20BC) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH1_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 23454

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E20BC) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH1_CTRL_SRCINC  --------------------------------
// SVD Line: 23461

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E20BC) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH1_CTRL_SIZE  ---------------------------------
// SVD Line: 23490

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E20BC) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH1_CTRL_DSTINC  --------------------------------
// SVD Line: 23514

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E20BC) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH1_CTRL_SRCMODE  -------------------------------
// SVD Line: 23543

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E20BC) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH1_CTRL_DSTMODE  -------------------------------
// SVD Line: 23550

//  <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E20BC) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH1_CTRL  ---------------------------------
// SVD Line: 23300

//  <rtree> SFDITEM_REG__LDMA_CH1_CTRL
//    <name> CH1_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20BC) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH1_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH1_CTRL = (LDMA_CH1_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH1_SRC  ------------------------------
// SVD Line: 23559

unsigned int LDMA_CH1_SRC __AT (0x400E20C0);



// ----------------------------  Field Item: LDMA_CH1_SRC_SRCADDR  --------------------------------
// SVD Line: 23568

//  <item> SFDITEM_FIELD__LDMA_CH1_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20C0) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH1_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH1_SRC = (LDMA_CH1_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH1_SRC  ----------------------------------
// SVD Line: 23559

//  <rtree> SFDITEM_REG__LDMA_CH1_SRC
//    <name> CH1_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20C0) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH1_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH1_SRC = (LDMA_CH1_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH1_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH1_DST  ------------------------------
// SVD Line: 23577

unsigned int LDMA_CH1_DST __AT (0x400E20C4);



// ----------------------------  Field Item: LDMA_CH1_DST_DSTADDR  --------------------------------
// SVD Line: 23586

//  <item> SFDITEM_FIELD__LDMA_CH1_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20C4) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH1_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH1_DST = (LDMA_CH1_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH1_DST  ----------------------------------
// SVD Line: 23577

//  <rtree> SFDITEM_REG__LDMA_CH1_DST
//    <name> CH1_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20C4) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH1_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH1_DST = (LDMA_CH1_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH1_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH1_LINK  ------------------------------
// SVD Line: 23595

unsigned int LDMA_CH1_LINK __AT (0x400E20C8);



// ---------------------------  Field Item: LDMA_CH1_LINK_LINKMODE  -------------------------------
// SVD Line: 23604

//  <item> SFDITEM_FIELD__LDMA_CH1_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E20C8) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH1_LINK_LINK  ---------------------------------
// SVD Line: 23611

//  <item> SFDITEM_FIELD__LDMA_CH1_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E20C8) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH1_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH1_LINK_LINKADDR  -------------------------------
// SVD Line: 23618

//  <item> SFDITEM_FIELD__LDMA_CH1_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E20C8) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH1_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH1_LINK = (LDMA_CH1_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH1_LINK  ---------------------------------
// SVD Line: 23595

//  <rtree> SFDITEM_REG__LDMA_CH1_LINK
//    <name> CH1_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20C8) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH1_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH1_LINK = (LDMA_CH1_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH1_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH1_LINK_LINKADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH2_REQSEL  -----------------------------
// SVD Line: 23627

unsigned int LDMA_CH2_REQSEL __AT (0x400E20E0);



// ---------------------------  Field Item: LDMA_CH2_REQSEL_SIGSEL  -------------------------------
// SVD Line: 23636

//  <item> SFDITEM_FIELD__LDMA_CH2_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E20E0) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH2_REQSEL >> 0) & 0xF), ((LDMA_CH2_REQSEL = (LDMA_CH2_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH2_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 23643

//  <item> SFDITEM_FIELD__LDMA_CH2_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E20E0) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH2_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH2_REQSEL  --------------------------------
// SVD Line: 23627

//  <rtree> SFDITEM_REG__LDMA_CH2_REQSEL
//    <name> CH2_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20E0) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH2_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH2_REQSEL = (LDMA_CH2_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH2_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH2_CFG  ------------------------------
// SVD Line: 23709

unsigned int LDMA_CH2_CFG __AT (0x400E20E4);



// ----------------------------  Field Item: LDMA_CH2_CFG_ARBSLOTS  -------------------------------
// SVD Line: 23718

//  <item> SFDITEM_FIELD__LDMA_CH2_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E20E4) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH2_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH2_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 23747

//  <item> SFDITEM_FIELD__LDMA_CH2_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E20E4) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH2_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 23754

//  <item> SFDITEM_FIELD__LDMA_CH2_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E20E4) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH2_CFG  ----------------------------------
// SVD Line: 23709

//  <rtree> SFDITEM_REG__LDMA_CH2_CFG
//    <name> CH2_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20E4) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH2_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH2_CFG = (LDMA_CH2_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH2_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH2_LOOP  ------------------------------
// SVD Line: 23763

unsigned int LDMA_CH2_LOOP __AT (0x400E20E8);



// ----------------------------  Field Item: LDMA_CH2_LOOP_LOOPCNT  -------------------------------
// SVD Line: 23772

//  <item> SFDITEM_FIELD__LDMA_CH2_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E20E8) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH2_LOOP >> 0) & 0xFF), ((LDMA_CH2_LOOP = (LDMA_CH2_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH2_LOOP  ---------------------------------
// SVD Line: 23763

//  <rtree> SFDITEM_REG__LDMA_CH2_LOOP
//    <name> CH2_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20E8) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH2_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH2_LOOP = (LDMA_CH2_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH2_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH2_CTRL  ------------------------------
// SVD Line: 23781

unsigned int LDMA_CH2_CTRL __AT (0x400E20EC);



// --------------------------  Field Item: LDMA_CH2_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 23790

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E20EC) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH2_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 23814

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E20EC) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH2_CTRL_XFERCNT  -------------------------------
// SVD Line: 23821

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E20EC) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH2_CTRL >> 4) & 0x7FF), ((LDMA_CH2_CTRL = (LDMA_CH2_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH2_CTRL_BYTESWAP  -------------------------------
// SVD Line: 23828

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E20EC) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH2_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 23835

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E20EC) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH2_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 23914

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E20EC) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH2_CTRL_REQMODE  -------------------------------
// SVD Line: 23921

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E20EC) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH2_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 23928

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E20EC) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH2_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 23935

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E20EC) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH2_CTRL_SRCINC  --------------------------------
// SVD Line: 23942

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E20EC) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH2_CTRL_SIZE  ---------------------------------
// SVD Line: 23971

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E20EC) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH2_CTRL_DSTINC  --------------------------------
// SVD Line: 23995

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E20EC) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH2_CTRL_SRCMODE  -------------------------------
// SVD Line: 24024

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E20EC) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH2_CTRL_DSTMODE  -------------------------------
// SVD Line: 24031

//  <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E20EC) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH2_CTRL  ---------------------------------
// SVD Line: 23781

//  <rtree> SFDITEM_REG__LDMA_CH2_CTRL
//    <name> CH2_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20EC) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH2_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH2_CTRL = (LDMA_CH2_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH2_SRC  ------------------------------
// SVD Line: 24040

unsigned int LDMA_CH2_SRC __AT (0x400E20F0);



// ----------------------------  Field Item: LDMA_CH2_SRC_SRCADDR  --------------------------------
// SVD Line: 24049

//  <item> SFDITEM_FIELD__LDMA_CH2_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20F0) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH2_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH2_SRC = (LDMA_CH2_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH2_SRC  ----------------------------------
// SVD Line: 24040

//  <rtree> SFDITEM_REG__LDMA_CH2_SRC
//    <name> CH2_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20F0) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH2_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH2_SRC = (LDMA_CH2_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH2_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH2_DST  ------------------------------
// SVD Line: 24058

unsigned int LDMA_CH2_DST __AT (0x400E20F4);



// ----------------------------  Field Item: LDMA_CH2_DST_DSTADDR  --------------------------------
// SVD Line: 24067

//  <item> SFDITEM_FIELD__LDMA_CH2_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20F4) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH2_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH2_DST = (LDMA_CH2_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH2_DST  ----------------------------------
// SVD Line: 24058

//  <rtree> SFDITEM_REG__LDMA_CH2_DST
//    <name> CH2_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20F4) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH2_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH2_DST = (LDMA_CH2_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH2_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH2_LINK  ------------------------------
// SVD Line: 24076

unsigned int LDMA_CH2_LINK __AT (0x400E20F8);



// ---------------------------  Field Item: LDMA_CH2_LINK_LINKMODE  -------------------------------
// SVD Line: 24085

//  <item> SFDITEM_FIELD__LDMA_CH2_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E20F8) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH2_LINK_LINK  ---------------------------------
// SVD Line: 24092

//  <item> SFDITEM_FIELD__LDMA_CH2_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E20F8) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH2_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH2_LINK_LINKADDR  -------------------------------
// SVD Line: 24099

//  <item> SFDITEM_FIELD__LDMA_CH2_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E20F8) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH2_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH2_LINK = (LDMA_CH2_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH2_LINK  ---------------------------------
// SVD Line: 24076

//  <rtree> SFDITEM_REG__LDMA_CH2_LINK
//    <name> CH2_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E20F8) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH2_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH2_LINK = (LDMA_CH2_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH2_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH2_LINK_LINKADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH3_REQSEL  -----------------------------
// SVD Line: 24108

unsigned int LDMA_CH3_REQSEL __AT (0x400E2110);



// ---------------------------  Field Item: LDMA_CH3_REQSEL_SIGSEL  -------------------------------
// SVD Line: 24117

//  <item> SFDITEM_FIELD__LDMA_CH3_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E2110) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH3_REQSEL >> 0) & 0xF), ((LDMA_CH3_REQSEL = (LDMA_CH3_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH3_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 24124

//  <item> SFDITEM_FIELD__LDMA_CH3_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E2110) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH3_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH3_REQSEL  --------------------------------
// SVD Line: 24108

//  <rtree> SFDITEM_REG__LDMA_CH3_REQSEL
//    <name> CH3_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2110) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH3_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH3_REQSEL = (LDMA_CH3_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH3_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH3_CFG  ------------------------------
// SVD Line: 24190

unsigned int LDMA_CH3_CFG __AT (0x400E2114);



// ----------------------------  Field Item: LDMA_CH3_CFG_ARBSLOTS  -------------------------------
// SVD Line: 24199

//  <item> SFDITEM_FIELD__LDMA_CH3_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E2114) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH3_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH3_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 24228

//  <item> SFDITEM_FIELD__LDMA_CH3_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E2114) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH3_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 24235

//  <item> SFDITEM_FIELD__LDMA_CH3_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E2114) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH3_CFG  ----------------------------------
// SVD Line: 24190

//  <rtree> SFDITEM_REG__LDMA_CH3_CFG
//    <name> CH3_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2114) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH3_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH3_CFG = (LDMA_CH3_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH3_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH3_LOOP  ------------------------------
// SVD Line: 24244

unsigned int LDMA_CH3_LOOP __AT (0x400E2118);



// ----------------------------  Field Item: LDMA_CH3_LOOP_LOOPCNT  -------------------------------
// SVD Line: 24253

//  <item> SFDITEM_FIELD__LDMA_CH3_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2118) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH3_LOOP >> 0) & 0xFF), ((LDMA_CH3_LOOP = (LDMA_CH3_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH3_LOOP  ---------------------------------
// SVD Line: 24244

//  <rtree> SFDITEM_REG__LDMA_CH3_LOOP
//    <name> CH3_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2118) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH3_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH3_LOOP = (LDMA_CH3_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH3_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH3_CTRL  ------------------------------
// SVD Line: 24262

unsigned int LDMA_CH3_CTRL __AT (0x400E211C);



// --------------------------  Field Item: LDMA_CH3_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 24271

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E211C) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH3_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 24295

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E211C) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH3_CTRL_XFERCNT  -------------------------------
// SVD Line: 24302

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E211C) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH3_CTRL >> 4) & 0x7FF), ((LDMA_CH3_CTRL = (LDMA_CH3_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH3_CTRL_BYTESWAP  -------------------------------
// SVD Line: 24309

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E211C) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH3_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 24316

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E211C) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH3_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 24395

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E211C) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH3_CTRL_REQMODE  -------------------------------
// SVD Line: 24402

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E211C) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH3_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 24409

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E211C) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH3_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 24416

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E211C) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH3_CTRL_SRCINC  --------------------------------
// SVD Line: 24423

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E211C) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH3_CTRL_SIZE  ---------------------------------
// SVD Line: 24452

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E211C) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH3_CTRL_DSTINC  --------------------------------
// SVD Line: 24476

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E211C) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH3_CTRL_SRCMODE  -------------------------------
// SVD Line: 24505

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E211C) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH3_CTRL_DSTMODE  -------------------------------
// SVD Line: 24512

//  <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E211C) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH3_CTRL  ---------------------------------
// SVD Line: 24262

//  <rtree> SFDITEM_REG__LDMA_CH3_CTRL
//    <name> CH3_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E211C) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH3_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH3_CTRL = (LDMA_CH3_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH3_SRC  ------------------------------
// SVD Line: 24521

unsigned int LDMA_CH3_SRC __AT (0x400E2120);



// ----------------------------  Field Item: LDMA_CH3_SRC_SRCADDR  --------------------------------
// SVD Line: 24530

//  <item> SFDITEM_FIELD__LDMA_CH3_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2120) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH3_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH3_SRC = (LDMA_CH3_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH3_SRC  ----------------------------------
// SVD Line: 24521

//  <rtree> SFDITEM_REG__LDMA_CH3_SRC
//    <name> CH3_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2120) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH3_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH3_SRC = (LDMA_CH3_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH3_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH3_DST  ------------------------------
// SVD Line: 24539

unsigned int LDMA_CH3_DST __AT (0x400E2124);



// ----------------------------  Field Item: LDMA_CH3_DST_DSTADDR  --------------------------------
// SVD Line: 24548

//  <item> SFDITEM_FIELD__LDMA_CH3_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2124) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH3_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH3_DST = (LDMA_CH3_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH3_DST  ----------------------------------
// SVD Line: 24539

//  <rtree> SFDITEM_REG__LDMA_CH3_DST
//    <name> CH3_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2124) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH3_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH3_DST = (LDMA_CH3_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH3_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH3_LINK  ------------------------------
// SVD Line: 24557

unsigned int LDMA_CH3_LINK __AT (0x400E2128);



// ---------------------------  Field Item: LDMA_CH3_LINK_LINKMODE  -------------------------------
// SVD Line: 24566

//  <item> SFDITEM_FIELD__LDMA_CH3_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E2128) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH3_LINK_LINK  ---------------------------------
// SVD Line: 24573

//  <item> SFDITEM_FIELD__LDMA_CH3_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E2128) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH3_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH3_LINK_LINKADDR  -------------------------------
// SVD Line: 24580

//  <item> SFDITEM_FIELD__LDMA_CH3_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E2128) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH3_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH3_LINK = (LDMA_CH3_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH3_LINK  ---------------------------------
// SVD Line: 24557

//  <rtree> SFDITEM_REG__LDMA_CH3_LINK
//    <name> CH3_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2128) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH3_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH3_LINK = (LDMA_CH3_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH3_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH3_LINK_LINKADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH4_REQSEL  -----------------------------
// SVD Line: 24589

unsigned int LDMA_CH4_REQSEL __AT (0x400E2140);



// ---------------------------  Field Item: LDMA_CH4_REQSEL_SIGSEL  -------------------------------
// SVD Line: 24598

//  <item> SFDITEM_FIELD__LDMA_CH4_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E2140) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH4_REQSEL >> 0) & 0xF), ((LDMA_CH4_REQSEL = (LDMA_CH4_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH4_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 24605

//  <item> SFDITEM_FIELD__LDMA_CH4_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E2140) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH4_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH4_REQSEL  --------------------------------
// SVD Line: 24589

//  <rtree> SFDITEM_REG__LDMA_CH4_REQSEL
//    <name> CH4_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2140) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH4_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH4_REQSEL = (LDMA_CH4_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH4_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH4_CFG  ------------------------------
// SVD Line: 24671

unsigned int LDMA_CH4_CFG __AT (0x400E2144);



// ----------------------------  Field Item: LDMA_CH4_CFG_ARBSLOTS  -------------------------------
// SVD Line: 24680

//  <item> SFDITEM_FIELD__LDMA_CH4_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E2144) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH4_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH4_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 24709

//  <item> SFDITEM_FIELD__LDMA_CH4_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E2144) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH4_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 24716

//  <item> SFDITEM_FIELD__LDMA_CH4_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E2144) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH4_CFG  ----------------------------------
// SVD Line: 24671

//  <rtree> SFDITEM_REG__LDMA_CH4_CFG
//    <name> CH4_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2144) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH4_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH4_CFG = (LDMA_CH4_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH4_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH4_LOOP  ------------------------------
// SVD Line: 24725

unsigned int LDMA_CH4_LOOP __AT (0x400E2148);



// ----------------------------  Field Item: LDMA_CH4_LOOP_LOOPCNT  -------------------------------
// SVD Line: 24734

//  <item> SFDITEM_FIELD__LDMA_CH4_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2148) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH4_LOOP >> 0) & 0xFF), ((LDMA_CH4_LOOP = (LDMA_CH4_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH4_LOOP  ---------------------------------
// SVD Line: 24725

//  <rtree> SFDITEM_REG__LDMA_CH4_LOOP
//    <name> CH4_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2148) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH4_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH4_LOOP = (LDMA_CH4_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH4_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH4_CTRL  ------------------------------
// SVD Line: 24743

unsigned int LDMA_CH4_CTRL __AT (0x400E214C);



// --------------------------  Field Item: LDMA_CH4_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 24752

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E214C) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH4_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 24776

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E214C) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH4_CTRL_XFERCNT  -------------------------------
// SVD Line: 24783

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E214C) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH4_CTRL >> 4) & 0x7FF), ((LDMA_CH4_CTRL = (LDMA_CH4_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH4_CTRL_BYTESWAP  -------------------------------
// SVD Line: 24790

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E214C) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH4_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 24797

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E214C) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH4_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 24876

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E214C) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH4_CTRL_REQMODE  -------------------------------
// SVD Line: 24883

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E214C) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH4_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 24890

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E214C) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH4_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 24897

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E214C) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH4_CTRL_SRCINC  --------------------------------
// SVD Line: 24904

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E214C) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH4_CTRL_SIZE  ---------------------------------
// SVD Line: 24933

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E214C) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH4_CTRL_DSTINC  --------------------------------
// SVD Line: 24957

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E214C) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH4_CTRL_SRCMODE  -------------------------------
// SVD Line: 24986

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E214C) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH4_CTRL_DSTMODE  -------------------------------
// SVD Line: 24993

//  <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E214C) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH4_CTRL  ---------------------------------
// SVD Line: 24743

//  <rtree> SFDITEM_REG__LDMA_CH4_CTRL
//    <name> CH4_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E214C) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH4_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH4_CTRL = (LDMA_CH4_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH4_SRC  ------------------------------
// SVD Line: 25002

unsigned int LDMA_CH4_SRC __AT (0x400E2150);



// ----------------------------  Field Item: LDMA_CH4_SRC_SRCADDR  --------------------------------
// SVD Line: 25011

//  <item> SFDITEM_FIELD__LDMA_CH4_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2150) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH4_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH4_SRC = (LDMA_CH4_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH4_SRC  ----------------------------------
// SVD Line: 25002

//  <rtree> SFDITEM_REG__LDMA_CH4_SRC
//    <name> CH4_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2150) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH4_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH4_SRC = (LDMA_CH4_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH4_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH4_DST  ------------------------------
// SVD Line: 25020

unsigned int LDMA_CH4_DST __AT (0x400E2154);



// ----------------------------  Field Item: LDMA_CH4_DST_DSTADDR  --------------------------------
// SVD Line: 25029

//  <item> SFDITEM_FIELD__LDMA_CH4_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2154) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH4_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH4_DST = (LDMA_CH4_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH4_DST  ----------------------------------
// SVD Line: 25020

//  <rtree> SFDITEM_REG__LDMA_CH4_DST
//    <name> CH4_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2154) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH4_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH4_DST = (LDMA_CH4_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH4_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH4_LINK  ------------------------------
// SVD Line: 25038

unsigned int LDMA_CH4_LINK __AT (0x400E2158);



// ---------------------------  Field Item: LDMA_CH4_LINK_LINKMODE  -------------------------------
// SVD Line: 25047

//  <item> SFDITEM_FIELD__LDMA_CH4_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E2158) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH4_LINK_LINK  ---------------------------------
// SVD Line: 25054

//  <item> SFDITEM_FIELD__LDMA_CH4_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E2158) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH4_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH4_LINK_LINKADDR  -------------------------------
// SVD Line: 25061

//  <item> SFDITEM_FIELD__LDMA_CH4_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E2158) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH4_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH4_LINK = (LDMA_CH4_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH4_LINK  ---------------------------------
// SVD Line: 25038

//  <rtree> SFDITEM_REG__LDMA_CH4_LINK
//    <name> CH4_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2158) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH4_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH4_LINK = (LDMA_CH4_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH4_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH4_LINK_LINKADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH5_REQSEL  -----------------------------
// SVD Line: 25070

unsigned int LDMA_CH5_REQSEL __AT (0x400E2170);



// ---------------------------  Field Item: LDMA_CH5_REQSEL_SIGSEL  -------------------------------
// SVD Line: 25079

//  <item> SFDITEM_FIELD__LDMA_CH5_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E2170) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH5_REQSEL >> 0) & 0xF), ((LDMA_CH5_REQSEL = (LDMA_CH5_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH5_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 25086

//  <item> SFDITEM_FIELD__LDMA_CH5_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E2170) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH5_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH5_REQSEL  --------------------------------
// SVD Line: 25070

//  <rtree> SFDITEM_REG__LDMA_CH5_REQSEL
//    <name> CH5_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2170) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH5_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH5_REQSEL = (LDMA_CH5_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH5_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH5_CFG  ------------------------------
// SVD Line: 25152

unsigned int LDMA_CH5_CFG __AT (0x400E2174);



// ----------------------------  Field Item: LDMA_CH5_CFG_ARBSLOTS  -------------------------------
// SVD Line: 25161

//  <item> SFDITEM_FIELD__LDMA_CH5_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E2174) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH5_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH5_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 25190

//  <item> SFDITEM_FIELD__LDMA_CH5_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E2174) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH5_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 25197

//  <item> SFDITEM_FIELD__LDMA_CH5_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E2174) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH5_CFG  ----------------------------------
// SVD Line: 25152

//  <rtree> SFDITEM_REG__LDMA_CH5_CFG
//    <name> CH5_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2174) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH5_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH5_CFG = (LDMA_CH5_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH5_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH5_LOOP  ------------------------------
// SVD Line: 25206

unsigned int LDMA_CH5_LOOP __AT (0x400E2178);



// ----------------------------  Field Item: LDMA_CH5_LOOP_LOOPCNT  -------------------------------
// SVD Line: 25215

//  <item> SFDITEM_FIELD__LDMA_CH5_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E2178) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH5_LOOP >> 0) & 0xFF), ((LDMA_CH5_LOOP = (LDMA_CH5_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH5_LOOP  ---------------------------------
// SVD Line: 25206

//  <rtree> SFDITEM_REG__LDMA_CH5_LOOP
//    <name> CH5_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2178) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH5_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH5_LOOP = (LDMA_CH5_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH5_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH5_CTRL  ------------------------------
// SVD Line: 25224

unsigned int LDMA_CH5_CTRL __AT (0x400E217C);



// --------------------------  Field Item: LDMA_CH5_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 25233

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E217C) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH5_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 25257

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E217C) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH5_CTRL_XFERCNT  -------------------------------
// SVD Line: 25264

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E217C) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH5_CTRL >> 4) & 0x7FF), ((LDMA_CH5_CTRL = (LDMA_CH5_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH5_CTRL_BYTESWAP  -------------------------------
// SVD Line: 25271

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E217C) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH5_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 25278

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E217C) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH5_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 25357

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E217C) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH5_CTRL_REQMODE  -------------------------------
// SVD Line: 25364

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E217C) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH5_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 25371

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E217C) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH5_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 25378

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E217C) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH5_CTRL_SRCINC  --------------------------------
// SVD Line: 25385

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E217C) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH5_CTRL_SIZE  ---------------------------------
// SVD Line: 25414

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E217C) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH5_CTRL_DSTINC  --------------------------------
// SVD Line: 25438

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E217C) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH5_CTRL_SRCMODE  -------------------------------
// SVD Line: 25467

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E217C) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH5_CTRL_DSTMODE  -------------------------------
// SVD Line: 25474

//  <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E217C) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH5_CTRL  ---------------------------------
// SVD Line: 25224

//  <rtree> SFDITEM_REG__LDMA_CH5_CTRL
//    <name> CH5_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E217C) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH5_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH5_CTRL = (LDMA_CH5_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH5_SRC  ------------------------------
// SVD Line: 25483

unsigned int LDMA_CH5_SRC __AT (0x400E2180);



// ----------------------------  Field Item: LDMA_CH5_SRC_SRCADDR  --------------------------------
// SVD Line: 25492

//  <item> SFDITEM_FIELD__LDMA_CH5_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2180) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH5_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH5_SRC = (LDMA_CH5_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH5_SRC  ----------------------------------
// SVD Line: 25483

//  <rtree> SFDITEM_REG__LDMA_CH5_SRC
//    <name> CH5_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2180) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH5_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH5_SRC = (LDMA_CH5_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH5_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH5_DST  ------------------------------
// SVD Line: 25501

unsigned int LDMA_CH5_DST __AT (0x400E2184);



// ----------------------------  Field Item: LDMA_CH5_DST_DSTADDR  --------------------------------
// SVD Line: 25510

//  <item> SFDITEM_FIELD__LDMA_CH5_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2184) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH5_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH5_DST = (LDMA_CH5_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH5_DST  ----------------------------------
// SVD Line: 25501

//  <rtree> SFDITEM_REG__LDMA_CH5_DST
//    <name> CH5_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2184) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH5_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH5_DST = (LDMA_CH5_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH5_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH5_LINK  ------------------------------
// SVD Line: 25519

unsigned int LDMA_CH5_LINK __AT (0x400E2188);



// ---------------------------  Field Item: LDMA_CH5_LINK_LINKMODE  -------------------------------
// SVD Line: 25528

//  <item> SFDITEM_FIELD__LDMA_CH5_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E2188) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH5_LINK_LINK  ---------------------------------
// SVD Line: 25535

//  <item> SFDITEM_FIELD__LDMA_CH5_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E2188) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH5_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH5_LINK_LINKADDR  -------------------------------
// SVD Line: 25542

//  <item> SFDITEM_FIELD__LDMA_CH5_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E2188) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH5_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH5_LINK = (LDMA_CH5_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH5_LINK  ---------------------------------
// SVD Line: 25519

//  <rtree> SFDITEM_REG__LDMA_CH5_LINK
//    <name> CH5_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E2188) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH5_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH5_LINK = (LDMA_CH5_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH5_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH5_LINK_LINKADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH6_REQSEL  -----------------------------
// SVD Line: 25551

unsigned int LDMA_CH6_REQSEL __AT (0x400E21A0);



// ---------------------------  Field Item: LDMA_CH6_REQSEL_SIGSEL  -------------------------------
// SVD Line: 25560

//  <item> SFDITEM_FIELD__LDMA_CH6_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E21A0) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH6_REQSEL >> 0) & 0xF), ((LDMA_CH6_REQSEL = (LDMA_CH6_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH6_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 25567

//  <item> SFDITEM_FIELD__LDMA_CH6_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E21A0) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH6_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH6_REQSEL  --------------------------------
// SVD Line: 25551

//  <rtree> SFDITEM_REG__LDMA_CH6_REQSEL
//    <name> CH6_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21A0) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH6_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH6_REQSEL = (LDMA_CH6_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH6_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH6_CFG  ------------------------------
// SVD Line: 25633

unsigned int LDMA_CH6_CFG __AT (0x400E21A4);



// ----------------------------  Field Item: LDMA_CH6_CFG_ARBSLOTS  -------------------------------
// SVD Line: 25642

//  <item> SFDITEM_FIELD__LDMA_CH6_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E21A4) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH6_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH6_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 25671

//  <item> SFDITEM_FIELD__LDMA_CH6_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E21A4) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH6_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 25678

//  <item> SFDITEM_FIELD__LDMA_CH6_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E21A4) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH6_CFG  ----------------------------------
// SVD Line: 25633

//  <rtree> SFDITEM_REG__LDMA_CH6_CFG
//    <name> CH6_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21A4) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH6_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH6_CFG = (LDMA_CH6_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH6_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH6_LOOP  ------------------------------
// SVD Line: 25687

unsigned int LDMA_CH6_LOOP __AT (0x400E21A8);



// ----------------------------  Field Item: LDMA_CH6_LOOP_LOOPCNT  -------------------------------
// SVD Line: 25696

//  <item> SFDITEM_FIELD__LDMA_CH6_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E21A8) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH6_LOOP >> 0) & 0xFF), ((LDMA_CH6_LOOP = (LDMA_CH6_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH6_LOOP  ---------------------------------
// SVD Line: 25687

//  <rtree> SFDITEM_REG__LDMA_CH6_LOOP
//    <name> CH6_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21A8) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH6_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH6_LOOP = (LDMA_CH6_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH6_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH6_CTRL  ------------------------------
// SVD Line: 25705

unsigned int LDMA_CH6_CTRL __AT (0x400E21AC);



// --------------------------  Field Item: LDMA_CH6_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 25714

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E21AC) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH6_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 25738

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E21AC) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH6_CTRL_XFERCNT  -------------------------------
// SVD Line: 25745

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E21AC) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH6_CTRL >> 4) & 0x7FF), ((LDMA_CH6_CTRL = (LDMA_CH6_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH6_CTRL_BYTESWAP  -------------------------------
// SVD Line: 25752

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E21AC) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH6_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 25759

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E21AC) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH6_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 25838

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E21AC) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH6_CTRL_REQMODE  -------------------------------
// SVD Line: 25845

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E21AC) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH6_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 25852

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E21AC) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH6_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 25859

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E21AC) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH6_CTRL_SRCINC  --------------------------------
// SVD Line: 25866

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E21AC) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH6_CTRL_SIZE  ---------------------------------
// SVD Line: 25895

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E21AC) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH6_CTRL_DSTINC  --------------------------------
// SVD Line: 25919

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E21AC) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH6_CTRL_SRCMODE  -------------------------------
// SVD Line: 25948

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E21AC) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH6_CTRL_DSTMODE  -------------------------------
// SVD Line: 25955

//  <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E21AC) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH6_CTRL  ---------------------------------
// SVD Line: 25705

//  <rtree> SFDITEM_REG__LDMA_CH6_CTRL
//    <name> CH6_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21AC) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH6_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH6_CTRL = (LDMA_CH6_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH6_SRC  ------------------------------
// SVD Line: 25964

unsigned int LDMA_CH6_SRC __AT (0x400E21B0);



// ----------------------------  Field Item: LDMA_CH6_SRC_SRCADDR  --------------------------------
// SVD Line: 25973

//  <item> SFDITEM_FIELD__LDMA_CH6_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21B0) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH6_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH6_SRC = (LDMA_CH6_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH6_SRC  ----------------------------------
// SVD Line: 25964

//  <rtree> SFDITEM_REG__LDMA_CH6_SRC
//    <name> CH6_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21B0) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH6_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH6_SRC = (LDMA_CH6_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH6_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH6_DST  ------------------------------
// SVD Line: 25982

unsigned int LDMA_CH6_DST __AT (0x400E21B4);



// ----------------------------  Field Item: LDMA_CH6_DST_DSTADDR  --------------------------------
// SVD Line: 25991

//  <item> SFDITEM_FIELD__LDMA_CH6_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21B4) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH6_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH6_DST = (LDMA_CH6_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH6_DST  ----------------------------------
// SVD Line: 25982

//  <rtree> SFDITEM_REG__LDMA_CH6_DST
//    <name> CH6_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21B4) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH6_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH6_DST = (LDMA_CH6_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH6_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH6_LINK  ------------------------------
// SVD Line: 26000

unsigned int LDMA_CH6_LINK __AT (0x400E21B8);



// ---------------------------  Field Item: LDMA_CH6_LINK_LINKMODE  -------------------------------
// SVD Line: 26009

//  <item> SFDITEM_FIELD__LDMA_CH6_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E21B8) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH6_LINK_LINK  ---------------------------------
// SVD Line: 26016

//  <item> SFDITEM_FIELD__LDMA_CH6_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E21B8) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH6_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH6_LINK_LINKADDR  -------------------------------
// SVD Line: 26023

//  <item> SFDITEM_FIELD__LDMA_CH6_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E21B8) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH6_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH6_LINK = (LDMA_CH6_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH6_LINK  ---------------------------------
// SVD Line: 26000

//  <rtree> SFDITEM_REG__LDMA_CH6_LINK
//    <name> CH6_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21B8) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH6_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH6_LINK = (LDMA_CH6_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH6_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH6_LINK_LINKADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LDMA_CH7_REQSEL  -----------------------------
// SVD Line: 26032

unsigned int LDMA_CH7_REQSEL __AT (0x400E21D0);



// ---------------------------  Field Item: LDMA_CH7_REQSEL_SIGSEL  -------------------------------
// SVD Line: 26041

//  <item> SFDITEM_FIELD__LDMA_CH7_REQSEL_SIGSEL
//    <name> SIGSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400E21D0) Signal Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH7_REQSEL >> 0) & 0xF), ((LDMA_CH7_REQSEL = (LDMA_CH7_REQSEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH7_REQSEL_SOURCESEL  -----------------------------
// SVD Line: 26048

//  <item> SFDITEM_FIELD__LDMA_CH7_REQSEL_SOURCESEL
//    <name> SOURCESEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400E21D0) \nSource Select\n0 : NONE = No source selected\n1 : PRS = Peripheral Reflex System\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : ADC0 = Analog to Digital Converter 0\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0\n13 : USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1\n14 : Reserved - do not use\n15 : Reserved - do not use\n16 : LEUART0 = Low Energy UART 0\n17 : Reserved - do not use\n18 : Reserved - do not use\n19 : Reserved - do not use\n20 : I2C0 = I2C 0\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : TIMER0 = Timer 0\n25 : TIMER1 = Timer 1\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : MSC = Memory System Controller\n49 : CRYPTO = Advanced Encryption Standard Accelerator\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH7_REQSEL ) </loc>
//      <o.21..16> SOURCESEL
//        <0=> 0: NONE = No source selected
//        <1=> 1: PRS = Peripheral Reflex System
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: ADC0 = Analog to Digital Converter 0
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: USART0 = Universal Synchronous/Asynchronous Receiver/Transmitter 0
//        <13=> 13: USART1 = Universal Synchronous/Asynchronous Receiver/Transmitter 1
//        <14=> 14: 
//        <15=> 15: 
//        <16=> 16: LEUART0 = Low Energy UART 0
//        <17=> 17: 
//        <18=> 18: 
//        <19=> 19: 
//        <20=> 20: I2C0 = I2C 0
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: TIMER0 = Timer 0
//        <25=> 25: TIMER1 = Timer 1
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: MSC = Memory System Controller
//        <49=> 49: CRYPTO = Advanced Encryption Standard Accelerator
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LDMA_CH7_REQSEL  --------------------------------
// SVD Line: 26032

//  <rtree> SFDITEM_REG__LDMA_CH7_REQSEL
//    <name> CH7_REQSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21D0) Channel Peripheral Request Select Register </i>
//    <loc> ( (unsigned int)((LDMA_CH7_REQSEL >> 0) & 0xFFFFFFFF), ((LDMA_CH7_REQSEL = (LDMA_CH7_REQSEL & ~(0x3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH7_REQSEL_SIGSEL </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_REQSEL_SOURCESEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH7_CFG  ------------------------------
// SVD Line: 26114

unsigned int LDMA_CH7_CFG __AT (0x400E21D4);



// ----------------------------  Field Item: LDMA_CH7_CFG_ARBSLOTS  -------------------------------
// SVD Line: 26123

//  <item> SFDITEM_FIELD__LDMA_CH7_CFG_ARBSLOTS
//    <name> ARBSLOTS </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400E21D4) \nArbitration Slot Number Select\n0 : ONE = One arbitration slot selected\n1 : TWO = Two arbitration slots selected\n2 : FOUR = Four arbitration slots selected\n3 : EIGHT = Eight arbitration slots selected </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH7_CFG ) </loc>
//      <o.17..16> ARBSLOTS
//        <0=> 0: ONE = One arbitration slot selected
//        <1=> 1: TWO = Two arbitration slots selected
//        <2=> 2: FOUR = Four arbitration slots selected
//        <3=> 3: EIGHT = Eight arbitration slots selected
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH7_CFG_SRCINCSIGN  ------------------------------
// SVD Line: 26152

//  <item> SFDITEM_FIELD__LDMA_CH7_CFG_SRCINCSIGN
//    <name> SRCINCSIGN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E21D4) Source Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CFG ) </loc>
//      <o.20..20> SRCINCSIGN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH7_CFG_DSTINCSIGN  ------------------------------
// SVD Line: 26159

//  <item> SFDITEM_FIELD__LDMA_CH7_CFG_DSTINCSIGN
//    <name> DSTINCSIGN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E21D4) Destination Address Increment Sign </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CFG ) </loc>
//      <o.21..21> DSTINCSIGN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH7_CFG  ----------------------------------
// SVD Line: 26114

//  <rtree> SFDITEM_REG__LDMA_CH7_CFG
//    <name> CH7_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21D4) Channel Configuration Register </i>
//    <loc> ( (unsigned int)((LDMA_CH7_CFG >> 0) & 0xFFFFFFFF), ((LDMA_CH7_CFG = (LDMA_CH7_CFG & ~(0x330000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH7_CFG_ARBSLOTS </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CFG_SRCINCSIGN </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CFG_DSTINCSIGN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH7_LOOP  ------------------------------
// SVD Line: 26168

unsigned int LDMA_CH7_LOOP __AT (0x400E21D8);



// ----------------------------  Field Item: LDMA_CH7_LOOP_LOOPCNT  -------------------------------
// SVD Line: 26177

//  <item> SFDITEM_FIELD__LDMA_CH7_LOOP_LOOPCNT
//    <name> LOOPCNT </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400E21D8) Linked Structure Sequence Loop Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((LDMA_CH7_LOOP >> 0) & 0xFF), ((LDMA_CH7_LOOP = (LDMA_CH7_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH7_LOOP  ---------------------------------
// SVD Line: 26168

//  <rtree> SFDITEM_REG__LDMA_CH7_LOOP
//    <name> CH7_LOOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21D8) Channel Loop Counter Register </i>
//    <loc> ( (unsigned int)((LDMA_CH7_LOOP >> 0) & 0xFFFFFFFF), ((LDMA_CH7_LOOP = (LDMA_CH7_LOOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH7_LOOP_LOOPCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH7_CTRL  ------------------------------
// SVD Line: 26186

unsigned int LDMA_CH7_CTRL __AT (0x400E21DC);



// --------------------------  Field Item: LDMA_CH7_CTRL_STRUCTTYPE  ------------------------------
// SVD Line: 26195

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_STRUCTTYPE
//    <name> STRUCTTYPE </name>
//    <r> 
//    <i> [Bits 1..0] RO (@ 0x400E21DC) \nDMA Structure Type\n0 : TRANSFER = DMA transfer structure type selected.\n1 : SYNCHRONIZE = Synchronization structure type selected.\n2 : WRITE = Write immediate value structure type selected.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.1..0> STRUCTTYPE
//        <0=> 0: TRANSFER = DMA transfer structure type selected.
//        <1=> 1: SYNCHRONIZE = Synchronization structure type selected.
//        <2=> 2: WRITE = Write immediate value structure type selected.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH7_CTRL_STRUCTREQ  ------------------------------
// SVD Line: 26219

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_STRUCTREQ
//    <name> STRUCTREQ </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E21DC) Structure DMA Transfer Request </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.3..3> STRUCTREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH7_CTRL_XFERCNT  -------------------------------
// SVD Line: 26226

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_XFERCNT
//    <name> XFERCNT </name>
//    <rw> 
//    <i> [Bits 14..4] RW (@ 0x400E21DC) DMA Unit Data Transfer Count </i>
//    <edit> 
//      <loc> ( (unsigned short)((LDMA_CH7_CTRL >> 4) & 0x7FF), ((LDMA_CH7_CTRL = (LDMA_CH7_CTRL & ~(0x7FFUL << 4 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH7_CTRL_BYTESWAP  -------------------------------
// SVD Line: 26233

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400E21DC) Endian Byte Swap </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.15..15> BYTESWAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH7_CTRL_BLOCKSIZE  ------------------------------
// SVD Line: 26240

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_BLOCKSIZE
//    <name> BLOCKSIZE </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x400E21DC) \nBlock Transfer Size\n0 : UNIT1 = One unit transfer per arbitration\n1 : UNIT2 = Two unit transfers per arbitration\n2 : UNIT3 = Three unit transfers per arbitration\n3 : UNIT4 = Four unit transfers per arbitration\n4 : UNIT6 = Six unit transfers per arbitration\n5 : UNIT8 = Eight unit transfers per arbitration\n6 : Reserved - do not use\n7 : UNIT16 = Sixteen unit transfers per arbitration\n8 : Reserved - do not use\n9 : UNIT32 = 32 unit transfers per arbitration\n10 : UNIT64 = 64 unit transfers per arbitration\n11 : UNIT128 = 128 unit transfers per arbitration\n12 : UNIT256 = 256 unit transfers per arbitration\n13 : UNIT512 = 512 unit transfers per arbitration\n14 : UNIT1024 = 1024 unit transfers per arbitration\n15 : ALL = Transfer all units as specified by the XFRCNT field </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.19..16> BLOCKSIZE
//        <0=> 0: UNIT1 = One unit transfer per arbitration
//        <1=> 1: UNIT2 = Two unit transfers per arbitration
//        <2=> 2: UNIT3 = Three unit transfers per arbitration
//        <3=> 3: UNIT4 = Four unit transfers per arbitration
//        <4=> 4: UNIT6 = Six unit transfers per arbitration
//        <5=> 5: UNIT8 = Eight unit transfers per arbitration
//        <6=> 6: 
//        <7=> 7: UNIT16 = Sixteen unit transfers per arbitration
//        <8=> 8: 
//        <9=> 9: UNIT32 = 32 unit transfers per arbitration
//        <10=> 10: UNIT64 = 64 unit transfers per arbitration
//        <11=> 11: UNIT128 = 128 unit transfers per arbitration
//        <12=> 12: UNIT256 = 256 unit transfers per arbitration
//        <13=> 13: UNIT512 = 512 unit transfers per arbitration
//        <14=> 14: UNIT1024 = 1024 unit transfers per arbitration
//        <15=> 15: ALL = Transfer all units as specified by the XFRCNT field
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH7_CTRL_DONEIFSEN  ------------------------------
// SVD Line: 26319

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DONEIFSEN
//    <name> DONEIFSEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400E21DC) DMA Operation Done Interrupt Flag Set Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.20..20> DONEIFSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH7_CTRL_REQMODE  -------------------------------
// SVD Line: 26326

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_REQMODE
//    <name> REQMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400E21DC) DMA Request Transfer Mode Select </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.21..21> REQMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH7_CTRL_DECLOOPCNT  ------------------------------
// SVD Line: 26333

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DECLOOPCNT
//    <name> DECLOOPCNT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400E21DC) Decrement Loop Count </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.22..22> DECLOOPCNT
//    </check>
//  </item>
//  


// --------------------------  Field Item: LDMA_CH7_CTRL_IGNORESREQ  ------------------------------
// SVD Line: 26340

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_IGNORESREQ
//    <name> IGNORESREQ </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400E21DC) Ignore Sreq </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.23..23> IGNORESREQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH7_CTRL_SRCINC  --------------------------------
// SVD Line: 26347

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_SRCINC
//    <name> SRCINC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400E21DC) \nSource Address Increment Size\n0 : ONE = Increment source address by one unit data size after each read\n1 : TWO = Increment source address by two unit data sizes after each read\n2 : FOUR = Increment source address by four unit data sizes after each read\n3 : NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.25..24> SRCINC
//        <0=> 0: ONE = Increment source address by one unit data size after each read
//        <1=> 1: TWO = Increment source address by two unit data sizes after each read
//        <2=> 2: FOUR = Increment source address by four unit data sizes after each read
//        <3=> 3: NONE = Do not increment the source address. In this mode reads are made from a fixed source address, for example reading FIFO.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH7_CTRL_SIZE  ---------------------------------
// SVD Line: 26376

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x400E21DC) \nUnit Data Transfer Size\n0 : BYTE = Each unit transfer is a byte\n1 : HALFWORD = Each unit transfer is a half-word\n2 : WORD = Each unit transfer is a word\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.27..26> SIZE
//        <0=> 0: BYTE = Each unit transfer is a byte
//        <1=> 1: HALFWORD = Each unit transfer is a half-word
//        <2=> 2: WORD = Each unit transfer is a word
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH7_CTRL_DSTINC  --------------------------------
// SVD Line: 26400

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DSTINC
//    <name> DSTINC </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x400E21DC) \nDestination Address Increment Size\n0 : ONE = Increment destination address by one unit data size after each write\n1 : TWO = Increment destination address by two unit data sizes after each write\n2 : FOUR = Increment destination address by four unit data sizes after each write\n3 : NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO. </i>
//    <combo> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.29..28> DSTINC
//        <0=> 0: ONE = Increment destination address by one unit data size after each write
//        <1=> 1: TWO = Increment destination address by two unit data sizes after each write
//        <2=> 2: FOUR = Increment destination address by four unit data sizes after each write
//        <3=> 3: NONE = Do not increment the destination address. Writes are made to a fixed destination address, for example writing to a FIFO.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH7_CTRL_SRCMODE  -------------------------------
// SVD Line: 26429

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_SRCMODE
//    <name> SRCMODE </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x400E21DC) Source Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.30..30> SRCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LDMA_CH7_CTRL_DSTMODE  -------------------------------
// SVD Line: 26436

//  <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DSTMODE
//    <name> DSTMODE </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x400E21DC) Destination Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_CTRL ) </loc>
//      <o.31..31> DSTMODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH7_CTRL  ---------------------------------
// SVD Line: 26186

//  <rtree> SFDITEM_REG__LDMA_CH7_CTRL
//    <name> CH7_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21DC) Channel Descriptor Control Word Register </i>
//    <loc> ( (unsigned int)((LDMA_CH7_CTRL >> 0) & 0xFFFFFFFF), ((LDMA_CH7_CTRL = (LDMA_CH7_CTRL & ~(0x3FFFFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_STRUCTTYPE </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_STRUCTREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_XFERCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_BLOCKSIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DONEIFSEN </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_REQMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DECLOOPCNT </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_IGNORESREQ </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_SRCINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_SIZE </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DSTINC </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_SRCMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_CTRL_DSTMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH7_SRC  ------------------------------
// SVD Line: 26445

unsigned int LDMA_CH7_SRC __AT (0x400E21E0);



// ----------------------------  Field Item: LDMA_CH7_SRC_SRCADDR  --------------------------------
// SVD Line: 26454

//  <item> SFDITEM_FIELD__LDMA_CH7_SRC_SRCADDR
//    <name> SRCADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21E0) Source Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH7_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH7_SRC = (LDMA_CH7_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH7_SRC  ----------------------------------
// SVD Line: 26445

//  <rtree> SFDITEM_REG__LDMA_CH7_SRC
//    <name> CH7_SRC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21E0) Channel Descriptor Source Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH7_SRC >> 0) & 0xFFFFFFFF), ((LDMA_CH7_SRC = (LDMA_CH7_SRC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH7_SRC_SRCADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LDMA_CH7_DST  ------------------------------
// SVD Line: 26463

unsigned int LDMA_CH7_DST __AT (0x400E21E4);



// ----------------------------  Field Item: LDMA_CH7_DST_DSTADDR  --------------------------------
// SVD Line: 26472

//  <item> SFDITEM_FIELD__LDMA_CH7_DST_DSTADDR
//    <name> DSTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21E4) Destination Data Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH7_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH7_DST = (LDMA_CH7_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH7_DST  ----------------------------------
// SVD Line: 26463

//  <rtree> SFDITEM_REG__LDMA_CH7_DST
//    <name> CH7_DST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21E4) Channel Descriptor Destination Data Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH7_DST >> 0) & 0xFFFFFFFF), ((LDMA_CH7_DST = (LDMA_CH7_DST & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH7_DST_DSTADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LDMA_CH7_LINK  ------------------------------
// SVD Line: 26481

unsigned int LDMA_CH7_LINK __AT (0x400E21E8);



// ---------------------------  Field Item: LDMA_CH7_LINK_LINKMODE  -------------------------------
// SVD Line: 26490

//  <item> SFDITEM_FIELD__LDMA_CH7_LINK_LINKMODE
//    <name> LINKMODE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E21E8) Link Structure Addressing Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_LINK ) </loc>
//      <o.0..0> LINKMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LDMA_CH7_LINK_LINK  ---------------------------------
// SVD Line: 26497

//  <item> SFDITEM_FIELD__LDMA_CH7_LINK_LINK
//    <name> LINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E21E8) Link Next Structure </i>
//    <check> 
//      <loc> ( (unsigned int) LDMA_CH7_LINK ) </loc>
//      <o.1..1> LINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LDMA_CH7_LINK_LINKADDR  -------------------------------
// SVD Line: 26504

//  <item> SFDITEM_FIELD__LDMA_CH7_LINK_LINKADDR
//    <name> LINKADDR </name>
//    <rw> 
//    <i> [Bits 31..2] RW (@ 0x400E21E8) Link Structure Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((LDMA_CH7_LINK >> 2) & 0x3FFFFFFF), ((LDMA_CH7_LINK = (LDMA_CH7_LINK & ~(0x3FFFFFFFUL << 2 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LDMA_CH7_LINK  ---------------------------------
// SVD Line: 26481

//  <rtree> SFDITEM_REG__LDMA_CH7_LINK
//    <name> CH7_LINK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E21E8) Channel Descriptor Link Structure Address Register </i>
//    <loc> ( (unsigned int)((LDMA_CH7_LINK >> 0) & 0xFFFFFFFF), ((LDMA_CH7_LINK = (LDMA_CH7_LINK & ~(0xFFFFFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LDMA_CH7_LINK_LINKMODE </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_LINK_LINK </item>
//    <item> SFDITEM_FIELD__LDMA_CH7_LINK_LINKADDR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: LDMA  -------------------------------------
// SVD Line: 22286

//  <view> LDMA
//    <name> LDMA </name>
//    <item> SFDITEM_REG__LDMA_CTRL </item>
//    <item> SFDITEM_REG__LDMA_STATUS </item>
//    <item> SFDITEM_REG__LDMA_SYNC </item>
//    <item> SFDITEM_REG__LDMA_CHEN </item>
//    <item> SFDITEM_REG__LDMA_CHBUSY </item>
//    <item> SFDITEM_REG__LDMA_CHDONE </item>
//    <item> SFDITEM_REG__LDMA_DBGHALT </item>
//    <item> SFDITEM_REG__LDMA_SWREQ </item>
//    <item> SFDITEM_REG__LDMA_REQDIS </item>
//    <item> SFDITEM_REG__LDMA_REQPEND </item>
//    <item> SFDITEM_REG__LDMA_LINKLOAD </item>
//    <item> SFDITEM_REG__LDMA_REQCLEAR </item>
//    <item> SFDITEM_REG__LDMA_IF </item>
//    <item> SFDITEM_REG__LDMA_IFS </item>
//    <item> SFDITEM_REG__LDMA_IFC </item>
//    <item> SFDITEM_REG__LDMA_IEN </item>
//    <item> SFDITEM_REG__LDMA_CH0_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH0_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH0_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH0_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH0_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH0_DST </item>
//    <item> SFDITEM_REG__LDMA_CH0_LINK </item>
//    <item> SFDITEM_REG__LDMA_CH1_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH1_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH1_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH1_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH1_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH1_DST </item>
//    <item> SFDITEM_REG__LDMA_CH1_LINK </item>
//    <item> SFDITEM_REG__LDMA_CH2_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH2_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH2_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH2_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH2_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH2_DST </item>
//    <item> SFDITEM_REG__LDMA_CH2_LINK </item>
//    <item> SFDITEM_REG__LDMA_CH3_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH3_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH3_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH3_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH3_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH3_DST </item>
//    <item> SFDITEM_REG__LDMA_CH3_LINK </item>
//    <item> SFDITEM_REG__LDMA_CH4_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH4_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH4_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH4_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH4_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH4_DST </item>
//    <item> SFDITEM_REG__LDMA_CH4_LINK </item>
//    <item> SFDITEM_REG__LDMA_CH5_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH5_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH5_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH5_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH5_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH5_DST </item>
//    <item> SFDITEM_REG__LDMA_CH5_LINK </item>
//    <item> SFDITEM_REG__LDMA_CH6_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH6_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH6_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH6_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH6_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH6_DST </item>
//    <item> SFDITEM_REG__LDMA_CH6_LINK </item>
//    <item> SFDITEM_REG__LDMA_CH7_REQSEL </item>
//    <item> SFDITEM_REG__LDMA_CH7_CFG </item>
//    <item> SFDITEM_REG__LDMA_CH7_LOOP </item>
//    <item> SFDITEM_REG__LDMA_CH7_CTRL </item>
//    <item> SFDITEM_REG__LDMA_CH7_SRC </item>
//    <item> SFDITEM_REG__LDMA_CH7_DST </item>
//    <item> SFDITEM_REG__LDMA_CH7_LINK </item>
//  </view>
//  


// -----------------------------  Register Item Address: FPUEH_IF  --------------------------------
// SVD Line: 26529

unsigned int FPUEH_IF __AT (0x400E1000);



// -------------------------------  Field Item: FPUEH_IF_FPIOC  -----------------------------------
// SVD Line: 26538

//  <item> SFDITEM_FIELD__FPUEH_IF_FPIOC
//    <name> FPIOC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400E1000) FPU invalid operation </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IF ) </loc>
//      <o.0..0> FPIOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IF_FPDZC  -----------------------------------
// SVD Line: 26545

//  <item> SFDITEM_FIELD__FPUEH_IF_FPDZC
//    <name> FPDZC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400E1000) FPU divide-by-zero exception </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IF ) </loc>
//      <o.1..1> FPDZC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IF_FPUFC  -----------------------------------
// SVD Line: 26552

//  <item> SFDITEM_FIELD__FPUEH_IF_FPUFC
//    <name> FPUFC </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400E1000) FPU underflow exception </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IF ) </loc>
//      <o.2..2> FPUFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IF_FPOFC  -----------------------------------
// SVD Line: 26559

//  <item> SFDITEM_FIELD__FPUEH_IF_FPOFC
//    <name> FPOFC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400E1000) FPU overflow exception </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IF ) </loc>
//      <o.3..3> FPOFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IF_FPIDC  -----------------------------------
// SVD Line: 26566

//  <item> SFDITEM_FIELD__FPUEH_IF_FPIDC
//    <name> FPIDC </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x400E1000) FPU input denormal exception </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IF ) </loc>
//      <o.4..4> FPIDC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IF_FPIXC  -----------------------------------
// SVD Line: 26573

//  <item> SFDITEM_FIELD__FPUEH_IF_FPIXC
//    <name> FPIXC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x400E1000) FPU inexact exception </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IF ) </loc>
//      <o.5..5> FPIXC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FPUEH_IF  ------------------------------------
// SVD Line: 26529

//  <rtree> SFDITEM_REG__FPUEH_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400E1000) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((FPUEH_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FPUEH_IF_FPIOC </item>
//    <item> SFDITEM_FIELD__FPUEH_IF_FPDZC </item>
//    <item> SFDITEM_FIELD__FPUEH_IF_FPUFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IF_FPOFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IF_FPIDC </item>
//    <item> SFDITEM_FIELD__FPUEH_IF_FPIXC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FPUEH_IFS  --------------------------------
// SVD Line: 26582

unsigned int FPUEH_IFS __AT (0x400E1004);



// -------------------------------  Field Item: FPUEH_IFS_FPIOC  ----------------------------------
// SVD Line: 26591

//  <item> SFDITEM_FIELD__FPUEH_IFS_FPIOC
//    <name> FPIOC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E1004) Set FPIOC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFS ) </loc>
//      <o.0..0> FPIOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFS_FPDZC  ----------------------------------
// SVD Line: 26598

//  <item> SFDITEM_FIELD__FPUEH_IFS_FPDZC
//    <name> FPDZC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E1004) Set FPDZC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFS ) </loc>
//      <o.1..1> FPDZC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFS_FPUFC  ----------------------------------
// SVD Line: 26605

//  <item> SFDITEM_FIELD__FPUEH_IFS_FPUFC
//    <name> FPUFC </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E1004) Set FPUFC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFS ) </loc>
//      <o.2..2> FPUFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFS_FPOFC  ----------------------------------
// SVD Line: 26612

//  <item> SFDITEM_FIELD__FPUEH_IFS_FPOFC
//    <name> FPOFC </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E1004) Set FPOFC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFS ) </loc>
//      <o.3..3> FPOFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFS_FPIDC  ----------------------------------
// SVD Line: 26619

//  <item> SFDITEM_FIELD__FPUEH_IFS_FPIDC
//    <name> FPIDC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E1004) Set FPIDC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFS ) </loc>
//      <o.4..4> FPIDC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFS_FPIXC  ----------------------------------
// SVD Line: 26626

//  <item> SFDITEM_FIELD__FPUEH_IFS_FPIXC
//    <name> FPIXC </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E1004) Set FPIXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFS ) </loc>
//      <o.5..5> FPIXC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FPUEH_IFS  -----------------------------------
// SVD Line: 26582

//  <rtree> SFDITEM_REG__FPUEH_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E1004) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((FPUEH_IFS >> 0) & 0xFFFFFFFF), ((FPUEH_IFS = (FPUEH_IFS & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPUEH_IFS_FPIOC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFS_FPDZC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFS_FPUFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFS_FPOFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFS_FPIDC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFS_FPIXC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FPUEH_IFC  --------------------------------
// SVD Line: 26635

unsigned int FPUEH_IFC __AT (0x400E1008);



// -------------------------------  Field Item: FPUEH_IFC_FPIOC  ----------------------------------
// SVD Line: 26644

//  <item> SFDITEM_FIELD__FPUEH_IFC_FPIOC
//    <name> FPIOC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400E1008) Clear FPIOC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFC ) </loc>
//      <o.0..0> FPIOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFC_FPDZC  ----------------------------------
// SVD Line: 26651

//  <item> SFDITEM_FIELD__FPUEH_IFC_FPDZC
//    <name> FPDZC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400E1008) Clear FPDZC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFC ) </loc>
//      <o.1..1> FPDZC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFC_FPUFC  ----------------------------------
// SVD Line: 26658

//  <item> SFDITEM_FIELD__FPUEH_IFC_FPUFC
//    <name> FPUFC </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400E1008) Clear FPUFC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFC ) </loc>
//      <o.2..2> FPUFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFC_FPOFC  ----------------------------------
// SVD Line: 26665

//  <item> SFDITEM_FIELD__FPUEH_IFC_FPOFC
//    <name> FPOFC </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400E1008) Clear FPOFC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFC ) </loc>
//      <o.3..3> FPOFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFC_FPIDC  ----------------------------------
// SVD Line: 26672

//  <item> SFDITEM_FIELD__FPUEH_IFC_FPIDC
//    <name> FPIDC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x400E1008) Clear FPIDC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFC ) </loc>
//      <o.4..4> FPIDC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IFC_FPIXC  ----------------------------------
// SVD Line: 26679

//  <item> SFDITEM_FIELD__FPUEH_IFC_FPIXC
//    <name> FPIXC </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x400E1008) Clear FPIXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IFC ) </loc>
//      <o.5..5> FPIXC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FPUEH_IFC  -----------------------------------
// SVD Line: 26635

//  <rtree> SFDITEM_REG__FPUEH_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400E1008) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((FPUEH_IFC >> 0) & 0xFFFFFFFF), ((FPUEH_IFC = (FPUEH_IFC & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPUEH_IFC_FPIOC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFC_FPDZC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFC_FPUFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFC_FPOFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFC_FPIDC </item>
//    <item> SFDITEM_FIELD__FPUEH_IFC_FPIXC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FPUEH_IEN  --------------------------------
// SVD Line: 26688

unsigned int FPUEH_IEN __AT (0x400E100C);



// -------------------------------  Field Item: FPUEH_IEN_FPIOC  ----------------------------------
// SVD Line: 26697

//  <item> SFDITEM_FIELD__FPUEH_IEN_FPIOC
//    <name> FPIOC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400E100C) FPIOC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IEN ) </loc>
//      <o.0..0> FPIOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IEN_FPDZC  ----------------------------------
// SVD Line: 26704

//  <item> SFDITEM_FIELD__FPUEH_IEN_FPDZC
//    <name> FPDZC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400E100C) FPDZC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IEN ) </loc>
//      <o.1..1> FPDZC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IEN_FPUFC  ----------------------------------
// SVD Line: 26711

//  <item> SFDITEM_FIELD__FPUEH_IEN_FPUFC
//    <name> FPUFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400E100C) FPUFC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IEN ) </loc>
//      <o.2..2> FPUFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IEN_FPOFC  ----------------------------------
// SVD Line: 26718

//  <item> SFDITEM_FIELD__FPUEH_IEN_FPOFC
//    <name> FPOFC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400E100C) FPOFC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IEN ) </loc>
//      <o.3..3> FPOFC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IEN_FPIDC  ----------------------------------
// SVD Line: 26725

//  <item> SFDITEM_FIELD__FPUEH_IEN_FPIDC
//    <name> FPIDC </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400E100C) FPIDC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IEN ) </loc>
//      <o.4..4> FPIDC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FPUEH_IEN_FPIXC  ----------------------------------
// SVD Line: 26732

//  <item> SFDITEM_FIELD__FPUEH_IEN_FPIXC
//    <name> FPIXC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400E100C) FPIXC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) FPUEH_IEN ) </loc>
//      <o.5..5> FPIXC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FPUEH_IEN  -----------------------------------
// SVD Line: 26688

//  <rtree> SFDITEM_REG__FPUEH_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400E100C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((FPUEH_IEN >> 0) & 0xFFFFFFFF), ((FPUEH_IEN = (FPUEH_IEN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FPUEH_IEN_FPIOC </item>
//    <item> SFDITEM_FIELD__FPUEH_IEN_FPDZC </item>
//    <item> SFDITEM_FIELD__FPUEH_IEN_FPUFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IEN_FPOFC </item>
//    <item> SFDITEM_FIELD__FPUEH_IEN_FPIDC </item>
//    <item> SFDITEM_FIELD__FPUEH_IEN_FPIXC </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: FPUEH  -------------------------------------
// SVD Line: 26515

//  <view> FPUEH
//    <name> FPUEH </name>
//    <item> SFDITEM_REG__FPUEH_IF </item>
//    <item> SFDITEM_REG__FPUEH_IFS </item>
//    <item> SFDITEM_REG__FPUEH_IFC </item>
//    <item> SFDITEM_REG__FPUEH_IEN </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPCRC_CTRL  -------------------------------
// SVD Line: 26753

unsigned int GPCRC_CTRL __AT (0x4001C000);



// --------------------------------  Field Item: GPCRC_CTRL_EN  -----------------------------------
// SVD Line: 26762

//  <item> SFDITEM_FIELD__GPCRC_CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C000) CRC Functionality Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPCRC_CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: GPCRC_CTRL_POLYSEL  ---------------------------------
// SVD Line: 26769

//  <item> SFDITEM_FIELD__GPCRC_CTRL_POLYSEL
//    <name> POLYSEL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C000) Polynomial Select </i>
//    <check> 
//      <loc> ( (unsigned int) GPCRC_CTRL ) </loc>
//      <o.4..4> POLYSEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: GPCRC_CTRL_BYTEMODE  --------------------------------
// SVD Line: 26776

//  <item> SFDITEM_FIELD__GPCRC_CTRL_BYTEMODE
//    <name> BYTEMODE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001C000) Byte Mode Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPCRC_CTRL ) </loc>
//      <o.8..8> BYTEMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: GPCRC_CTRL_BITREVERSE  -------------------------------
// SVD Line: 26783

//  <item> SFDITEM_FIELD__GPCRC_CTRL_BITREVERSE
//    <name> BITREVERSE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001C000) Byte-level Bit Reverse Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPCRC_CTRL ) </loc>
//      <o.9..9> BITREVERSE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: GPCRC_CTRL_BYTEREVERSE  -------------------------------
// SVD Line: 26790

//  <item> SFDITEM_FIELD__GPCRC_CTRL_BYTEREVERSE
//    <name> BYTEREVERSE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001C000) Byte Reverse Mode </i>
//    <check> 
//      <loc> ( (unsigned int) GPCRC_CTRL ) </loc>
//      <o.10..10> BYTEREVERSE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: GPCRC_CTRL_AUTOINIT  --------------------------------
// SVD Line: 26797

//  <item> SFDITEM_FIELD__GPCRC_CTRL_AUTOINIT
//    <name> AUTOINIT </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001C000) Auto Init Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPCRC_CTRL ) </loc>
//      <o.13..13> AUTOINIT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: GPCRC_CTRL  -----------------------------------
// SVD Line: 26753

//  <rtree> SFDITEM_REG__GPCRC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C000) Control Register </i>
//    <loc> ( (unsigned int)((GPCRC_CTRL >> 0) & 0xFFFFFFFF), ((GPCRC_CTRL = (GPCRC_CTRL & ~(0x2711UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2711) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPCRC_CTRL_EN </item>
//    <item> SFDITEM_FIELD__GPCRC_CTRL_POLYSEL </item>
//    <item> SFDITEM_FIELD__GPCRC_CTRL_BYTEMODE </item>
//    <item> SFDITEM_FIELD__GPCRC_CTRL_BITREVERSE </item>
//    <item> SFDITEM_FIELD__GPCRC_CTRL_BYTEREVERSE </item>
//    <item> SFDITEM_FIELD__GPCRC_CTRL_AUTOINIT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPCRC_CMD  --------------------------------
// SVD Line: 26806

unsigned int GPCRC_CMD __AT (0x4001C004);



// -------------------------------  Field Item: GPCRC_CMD_INIT  -----------------------------------
// SVD Line: 26815

//  <item> SFDITEM_FIELD__GPCRC_CMD_INIT
//    <name> INIT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001C004) Initialization Enable </i>
//    <check> 
//      <loc> ( (unsigned int) GPCRC_CMD ) </loc>
//      <o.0..0> INIT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: GPCRC_CMD  -----------------------------------
// SVD Line: 26806

//  <rtree> SFDITEM_REG__GPCRC_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001C004) Command Register </i>
//    <loc> ( (unsigned int)((GPCRC_CMD >> 0) & 0xFFFFFFFF), ((GPCRC_CMD = (GPCRC_CMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPCRC_CMD_INIT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPCRC_INIT  -------------------------------
// SVD Line: 26824

unsigned int GPCRC_INIT __AT (0x4001C008);



// -------------------------------  Field Item: GPCRC_INIT_INIT  ----------------------------------
// SVD Line: 26833

//  <item> SFDITEM_FIELD__GPCRC_INIT_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C008) CRC Initialization Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPCRC_INIT >> 0) & 0xFFFFFFFF), ((GPCRC_INIT = (GPCRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPCRC_INIT  -----------------------------------
// SVD Line: 26824

//  <rtree> SFDITEM_REG__GPCRC_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C008) CRC Init Value </i>
//    <loc> ( (unsigned int)((GPCRC_INIT >> 0) & 0xFFFFFFFF), ((GPCRC_INIT = (GPCRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPCRC_INIT_INIT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPCRC_POLY  -------------------------------
// SVD Line: 26842

unsigned int GPCRC_POLY __AT (0x4001C00C);



// -------------------------------  Field Item: GPCRC_POLY_POLY  ----------------------------------
// SVD Line: 26851

//  <item> SFDITEM_FIELD__GPCRC_POLY_POLY
//    <name> POLY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001C00C) CRC Polynomial Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPCRC_POLY >> 0) & 0xFFFF), ((GPCRC_POLY = (GPCRC_POLY & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPCRC_POLY  -----------------------------------
// SVD Line: 26842

//  <rtree> SFDITEM_REG__GPCRC_POLY
//    <name> POLY </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C00C) CRC Polynomial Value </i>
//    <loc> ( (unsigned int)((GPCRC_POLY >> 0) & 0xFFFFFFFF), ((GPCRC_POLY = (GPCRC_POLY & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPCRC_POLY_POLY </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPCRC_INPUTDATA  -----------------------------
// SVD Line: 26860

unsigned int GPCRC_INPUTDATA __AT (0x4001C010);



// --------------------------  Field Item: GPCRC_INPUTDATA_INPUTDATA  -----------------------------
// SVD Line: 26869

//  <item> SFDITEM_FIELD__GPCRC_INPUTDATA_INPUTDATA
//    <name> INPUTDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C010) Input Data for 32-bit </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPCRC_INPUTDATA >> 0) & 0xFFFFFFFF), ((GPCRC_INPUTDATA = (GPCRC_INPUTDATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: GPCRC_INPUTDATA  --------------------------------
// SVD Line: 26860

//  <rtree> SFDITEM_REG__GPCRC_INPUTDATA
//    <name> INPUTDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C010) Input 32-bit Data Register </i>
//    <loc> ( (unsigned int)((GPCRC_INPUTDATA >> 0) & 0xFFFFFFFF), ((GPCRC_INPUTDATA = (GPCRC_INPUTDATA & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPCRC_INPUTDATA_INPUTDATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: GPCRC_INPUTDATAHWORD  --------------------------
// SVD Line: 26878

unsigned int GPCRC_INPUTDATAHWORD __AT (0x4001C014);



// ---------------------  Field Item: GPCRC_INPUTDATAHWORD_INPUTDATAHWORD  ------------------------
// SVD Line: 26887

//  <item> SFDITEM_FIELD__GPCRC_INPUTDATAHWORD_INPUTDATAHWORD
//    <name> INPUTDATAHWORD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001C014) Input Data for 16-bit </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPCRC_INPUTDATAHWORD >> 0) & 0xFFFF), ((GPCRC_INPUTDATAHWORD = (GPCRC_INPUTDATAHWORD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: GPCRC_INPUTDATAHWORD  ------------------------------
// SVD Line: 26878

//  <rtree> SFDITEM_REG__GPCRC_INPUTDATAHWORD
//    <name> INPUTDATAHWORD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C014) Input 16-bit Data Register </i>
//    <loc> ( (unsigned int)((GPCRC_INPUTDATAHWORD >> 0) & 0xFFFFFFFF), ((GPCRC_INPUTDATAHWORD = (GPCRC_INPUTDATAHWORD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPCRC_INPUTDATAHWORD_INPUTDATAHWORD </item>
//  </rtree>
//  


// -----------------------  Register Item Address: GPCRC_INPUTDATABYTE  ---------------------------
// SVD Line: 26896

unsigned int GPCRC_INPUTDATABYTE __AT (0x4001C018);



// ----------------------  Field Item: GPCRC_INPUTDATABYTE_INPUTDATABYTE  -------------------------
// SVD Line: 26905

//  <item> SFDITEM_FIELD__GPCRC_INPUTDATABYTE_INPUTDATABYTE
//    <name> INPUTDATABYTE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001C018) Input Data for 8-bit </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPCRC_INPUTDATABYTE >> 0) & 0xFF), ((GPCRC_INPUTDATABYTE = (GPCRC_INPUTDATABYTE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: GPCRC_INPUTDATABYTE  ------------------------------
// SVD Line: 26896

//  <rtree> SFDITEM_REG__GPCRC_INPUTDATABYTE
//    <name> INPUTDATABYTE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C018) Input 8-bit Data Register </i>
//    <loc> ( (unsigned int)((GPCRC_INPUTDATABYTE >> 0) & 0xFFFFFFFF), ((GPCRC_INPUTDATABYTE = (GPCRC_INPUTDATABYTE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPCRC_INPUTDATABYTE_INPUTDATABYTE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPCRC_DATA  -------------------------------
// SVD Line: 26914

unsigned int GPCRC_DATA __AT (0x4001C01C);



// -------------------------------  Field Item: GPCRC_DATA_DATA  ----------------------------------
// SVD Line: 26923

//  <item> SFDITEM_FIELD__GPCRC_DATA_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C01C) CRC Data Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPCRC_DATA >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPCRC_DATA  -----------------------------------
// SVD Line: 26914

//  <rtree> SFDITEM_REG__GPCRC_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C01C) CRC Data Register </i>
//    <loc> ( (unsigned int)((GPCRC_DATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPCRC_DATA_DATA </item>
//  </rtree>
//  


// --------------------------  Register Item Address: GPCRC_DATAREV  ------------------------------
// SVD Line: 26932

unsigned int GPCRC_DATAREV __AT (0x4001C020);



// ----------------------------  Field Item: GPCRC_DATAREV_DATAREV  -------------------------------
// SVD Line: 26941

//  <item> SFDITEM_FIELD__GPCRC_DATAREV_DATAREV
//    <name> DATAREV </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C020) Data Reverse Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPCRC_DATAREV >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPCRC_DATAREV  ---------------------------------
// SVD Line: 26932

//  <rtree> SFDITEM_REG__GPCRC_DATAREV
//    <name> DATAREV </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C020) CRC Data Reverse Register </i>
//    <loc> ( (unsigned int)((GPCRC_DATAREV >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPCRC_DATAREV_DATAREV </item>
//  </rtree>
//  


// ------------------------  Register Item Address: GPCRC_DATABYTEREV  ----------------------------
// SVD Line: 26950

unsigned int GPCRC_DATABYTEREV __AT (0x4001C024);



// ------------------------  Field Item: GPCRC_DATABYTEREV_DATABYTEREV  ---------------------------
// SVD Line: 26959

//  <item> SFDITEM_FIELD__GPCRC_DATABYTEREV_DATABYTEREV
//    <name> DATABYTEREV </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C024) Data Byte Reverse Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPCRC_DATABYTEREV >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: GPCRC_DATABYTEREV  -------------------------------
// SVD Line: 26950

//  <rtree> SFDITEM_REG__GPCRC_DATABYTEREV
//    <name> DATABYTEREV </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C024) CRC Data Byte Reverse Register </i>
//    <loc> ( (unsigned int)((GPCRC_DATABYTEREV >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPCRC_DATABYTEREV_DATABYTEREV </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPCRC  -------------------------------------
// SVD Line: 26743

//  <view> GPCRC
//    <name> GPCRC </name>
//    <item> SFDITEM_REG__GPCRC_CTRL </item>
//    <item> SFDITEM_REG__GPCRC_CMD </item>
//    <item> SFDITEM_REG__GPCRC_INIT </item>
//    <item> SFDITEM_REG__GPCRC_POLY </item>
//    <item> SFDITEM_REG__GPCRC_INPUTDATA </item>
//    <item> SFDITEM_REG__GPCRC_INPUTDATAHWORD </item>
//    <item> SFDITEM_REG__GPCRC_INPUTDATABYTE </item>
//    <item> SFDITEM_REG__GPCRC_DATA </item>
//    <item> SFDITEM_REG__GPCRC_DATAREV </item>
//    <item> SFDITEM_REG__GPCRC_DATABYTEREV </item>
//  </view>
//  


// ---------------------------  Register Item Address: TIMER0_CTRL  -------------------------------
// SVD Line: 26984

unsigned int TIMER0_CTRL __AT (0x40018000);



// ------------------------------  Field Item: TIMER0_CTRL_MODE  ----------------------------------
// SVD Line: 26993

//  <item> SFDITEM_FIELD__TIMER0_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018000) \nTimer Mode\n0 : UP = Up-count mode\n1 : DOWN = Down-count mode\n2 : UPDOWN = Up/down-count mode\n3 : QDEC = Quadrature decoder mode </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: UP = Up-count mode
//        <1=> 1: DOWN = Down-count mode
//        <2=> 2: UPDOWN = Up/down-count mode
//        <3=> 3: QDEC = Quadrature decoder mode
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_SYNC  ----------------------------------
// SVD Line: 27022

//  <item> SFDITEM_FIELD__TIMER0_CTRL_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40018000) Timer Start/Stop/Reload Synchronization </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.3..3> SYNC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_OSMEN  ---------------------------------
// SVD Line: 27029

//  <item> SFDITEM_FIELD__TIMER0_CTRL_OSMEN
//    <name> OSMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018000) One-shot Mode Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.4..4> OSMEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CTRL_QDM  ----------------------------------
// SVD Line: 27036

//  <item> SFDITEM_FIELD__TIMER0_CTRL_QDM
//    <name> QDM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018000) Quadrature Decoder Mode Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.5..5> QDM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CTRL_DEBUGRUN  --------------------------------
// SVD Line: 27043

//  <item> SFDITEM_FIELD__TIMER0_CTRL_DEBUGRUN
//    <name> DEBUGRUN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018000) Debug Mode Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.6..6> DEBUGRUN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CTRL_DMACLRACT  -------------------------------
// SVD Line: 27050

//  <item> SFDITEM_FIELD__TIMER0_CTRL_DMACLRACT
//    <name> DMACLRACT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018000) DMA Request Clear on Active </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.7..7> DMACLRACT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_RISEA  ---------------------------------
// SVD Line: 27057

//  <item> SFDITEM_FIELD__TIMER0_CTRL_RISEA
//    <name> RISEA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018000) \nTimer Rising Input Edge Action\n0 : NONE = No action\n1 : START = Start counter without reload\n2 : STOP = Stop counter without reload\n3 : RELOADSTART = Reload and start counter </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.9..8> RISEA
//        <0=> 0: NONE = No action
//        <1=> 1: START = Start counter without reload
//        <2=> 2: STOP = Stop counter without reload
//        <3=> 3: RELOADSTART = Reload and start counter
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_FALLA  ---------------------------------
// SVD Line: 27086

//  <item> SFDITEM_FIELD__TIMER0_CTRL_FALLA
//    <name> FALLA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018000) \nTimer Falling Input Edge Action\n0 : NONE = No action\n1 : START = Start counter without reload\n2 : STOP = Stop counter without reload\n3 : RELOADSTART = Reload and start counter </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.11..10> FALLA
//        <0=> 0: NONE = No action
//        <1=> 1: START = Start counter without reload
//        <2=> 2: STOP = Stop counter without reload
//        <3=> 3: RELOADSTART = Reload and start counter
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_X2CNT  ---------------------------------
// SVD Line: 27115

//  <item> SFDITEM_FIELD__TIMER0_CTRL_X2CNT
//    <name> X2CNT </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40018000) 2x Count Mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.13..13> X2CNT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CTRL_CLKSEL  ---------------------------------
// SVD Line: 27122

//  <item> SFDITEM_FIELD__TIMER0_CTRL_CLKSEL
//    <name> CLKSEL </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40018000) \nClock Source Select\n0 : PRESCHFPERCLK = Prescaled HFPERCLK\n1 : CC1 = Compare/Capture Channel 1 Input\n2 : TIMEROUF = Timer is clocked by underflow(down-count) or overflow(up-count) in the lower numbered neighbor Timer\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.17..16> CLKSEL
//        <0=> 0: PRESCHFPERCLK = Prescaled HFPERCLK
//        <1=> 1: CC1 = Compare/Capture Channel 1 Input
//        <2=> 2: TIMEROUF = Timer is clocked by underflow(down-count) or overflow(up-count) in the lower numbered neighbor Timer
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CTRL_PRESC  ---------------------------------
// SVD Line: 27146

//  <item> SFDITEM_FIELD__TIMER0_CTRL_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40018000) \nPrescaler Setting\n0 : DIV1 = The HFPERCLK is undivided\n1 : DIV2 = The HFPERCLK is divided by 2\n2 : DIV4 = The HFPERCLK is divided by 4\n3 : DIV8 = The HFPERCLK is divided by 8\n4 : DIV16 = The HFPERCLK is divided by 16\n5 : DIV32 = The HFPERCLK is divided by 32\n6 : DIV64 = The HFPERCLK is divided by 64\n7 : DIV128 = The HFPERCLK is divided by 128\n8 : DIV256 = The HFPERCLK is divided by 256\n9 : DIV512 = The HFPERCLK is divided by 512\n10 : DIV1024 = The HFPERCLK is divided by 1024\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.27..24> PRESC
//        <0=> 0: DIV1 = The HFPERCLK is undivided
//        <1=> 1: DIV2 = The HFPERCLK is divided by 2
//        <2=> 2: DIV4 = The HFPERCLK is divided by 4
//        <3=> 3: DIV8 = The HFPERCLK is divided by 8
//        <4=> 4: DIV16 = The HFPERCLK is divided by 16
//        <5=> 5: DIV32 = The HFPERCLK is divided by 32
//        <6=> 6: DIV64 = The HFPERCLK is divided by 64
//        <7=> 7: DIV128 = The HFPERCLK is divided by 128
//        <8=> 8: DIV256 = The HFPERCLK is divided by 256
//        <9=> 9: DIV512 = The HFPERCLK is divided by 512
//        <10=> 10: DIV1024 = The HFPERCLK is divided by 1024
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CTRL_ATI  ----------------------------------
// SVD Line: 27210

//  <item> SFDITEM_FIELD__TIMER0_CTRL_ATI
//    <name> ATI </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018000) Always Track Inputs </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.28..28> ATI
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CTRL_RSSCOIST  --------------------------------
// SVD Line: 27217

//  <item> SFDITEM_FIELD__TIMER0_CTRL_RSSCOIST
//    <name> RSSCOIST </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018000) Reload-Start Sets Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CTRL ) </loc>
//      <o.29..29> RSSCOIST
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CTRL  ----------------------------------
// SVD Line: 26984

//  <rtree> SFDITEM_REG__TIMER0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018000) Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_CTRL >> 0) & 0xFFFFFFFF), ((TIMER0_CTRL = (TIMER0_CTRL & ~(0x3F032FFBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F032FFB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_SYNC </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_OSMEN </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_QDM </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_DEBUGRUN </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_DMACLRACT </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_RISEA </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_FALLA </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_X2CNT </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_CLKSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_PRESC </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_ATI </item>
//    <item> SFDITEM_FIELD__TIMER0_CTRL_RSSCOIST </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_CMD  -------------------------------
// SVD Line: 27226

unsigned int TIMER0_CMD __AT (0x40018004);



// ------------------------------  Field Item: TIMER0_CMD_START  ----------------------------------
// SVD Line: 27235

//  <item> SFDITEM_FIELD__TIMER0_CMD_START
//    <name> START </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40018004) Start Timer </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CMD ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CMD_STOP  ----------------------------------
// SVD Line: 27242

//  <item> SFDITEM_FIELD__TIMER0_CMD_STOP
//    <name> STOP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40018004) Stop Timer </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CMD ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CMD  -----------------------------------
// SVD Line: 27226

//  <rtree> SFDITEM_REG__TIMER0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40018004) Command Register </i>
//    <loc> ( (unsigned int)((TIMER0_CMD >> 0) & 0xFFFFFFFF), ((TIMER0_CMD = (TIMER0_CMD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CMD_START </item>
//    <item> SFDITEM_FIELD__TIMER0_CMD_STOP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER0_STATUS  ------------------------------
// SVD Line: 27251

unsigned int TIMER0_STATUS __AT (0x40018008);



// ----------------------------  Field Item: TIMER0_STATUS_RUNNING  -------------------------------
// SVD Line: 27260

//  <item> SFDITEM_FIELD__TIMER0_STATUS_RUNNING
//    <name> RUNNING </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40018008) Running </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.0..0> RUNNING
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_STATUS_DIR  ---------------------------------
// SVD Line: 27267

//  <item> SFDITEM_FIELD__TIMER0_STATUS_DIR
//    <name> DIR </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40018008) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.1..1> DIR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_STATUS_TOPBV  --------------------------------
// SVD Line: 27274

//  <item> SFDITEM_FIELD__TIMER0_STATUS_TOPBV
//    <name> TOPBV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40018008) TOPB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.2..2> TOPBV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCVBV0  --------------------------------
// SVD Line: 27281

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV0
//    <name> CCVBV0 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40018008) CC0 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.8..8> CCVBV0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCVBV1  --------------------------------
// SVD Line: 27288

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV1
//    <name> CCVBV1 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40018008) CC1 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.9..9> CCVBV1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCVBV2  --------------------------------
// SVD Line: 27295

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV2
//    <name> CCVBV2 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40018008) CC2 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.10..10> CCVBV2
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCVBV3  --------------------------------
// SVD Line: 27302

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV3
//    <name> CCVBV3 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40018008) CC3 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.11..11> CCVBV3
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_STATUS_ICV0  ---------------------------------
// SVD Line: 27309

//  <item> SFDITEM_FIELD__TIMER0_STATUS_ICV0
//    <name> ICV0 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40018008) CC0 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.16..16> ICV0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_STATUS_ICV1  ---------------------------------
// SVD Line: 27316

//  <item> SFDITEM_FIELD__TIMER0_STATUS_ICV1
//    <name> ICV1 </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x40018008) CC1 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.17..17> ICV1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_STATUS_ICV2  ---------------------------------
// SVD Line: 27323

//  <item> SFDITEM_FIELD__TIMER0_STATUS_ICV2
//    <name> ICV2 </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x40018008) CC2 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.18..18> ICV2
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_STATUS_ICV3  ---------------------------------
// SVD Line: 27330

//  <item> SFDITEM_FIELD__TIMER0_STATUS_ICV3
//    <name> ICV3 </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x40018008) CC3 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.19..19> ICV3
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCPOL0  --------------------------------
// SVD Line: 27337

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL0
//    <name> CCPOL0 </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40018008) CC0 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.24..24> CCPOL0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCPOL1  --------------------------------
// SVD Line: 27344

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL1
//    <name> CCPOL1 </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40018008) CC1 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.25..25> CCPOL1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCPOL2  --------------------------------
// SVD Line: 27351

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL2
//    <name> CCPOL2 </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40018008) CC2 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.26..26> CCPOL2
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_STATUS_CCPOL3  --------------------------------
// SVD Line: 27358

//  <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL3
//    <name> CCPOL3 </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x40018008) CC3 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_STATUS ) </loc>
//      <o.27..27> CCPOL3
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER0_STATUS  ---------------------------------
// SVD Line: 27251

//  <rtree> SFDITEM_REG__TIMER0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018008) Status Register </i>
//    <loc> ( (unsigned int)((TIMER0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_RUNNING </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_DIR </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_TOPBV </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV0 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV1 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV2 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCVBV3 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_ICV0 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_ICV1 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_ICV2 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_ICV3 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL0 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL1 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL2 </item>
//    <item> SFDITEM_FIELD__TIMER0_STATUS_CCPOL3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_IF  --------------------------------
// SVD Line: 27367

unsigned int TIMER0_IF __AT (0x4001800C);



// --------------------------------  Field Item: TIMER0_IF_OF  ------------------------------------
// SVD Line: 27376

//  <item> SFDITEM_FIELD__TIMER0_IF_OF
//    <name> OF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001800C) Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IF_UF  ------------------------------------
// SVD Line: 27383

//  <item> SFDITEM_FIELD__TIMER0_IF_UF
//    <name> UF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001800C) Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IF_DIRCHG  ----------------------------------
// SVD Line: 27390

//  <item> SFDITEM_FIELD__TIMER0_IF_DIRCHG
//    <name> DIRCHG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001800C) Direction Change Detect Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IF_CC0  -----------------------------------
// SVD Line: 27397

//  <item> SFDITEM_FIELD__TIMER0_IF_CC0
//    <name> CC0 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001800C) CC Channel 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IF_CC1  -----------------------------------
// SVD Line: 27404

//  <item> SFDITEM_FIELD__TIMER0_IF_CC1
//    <name> CC1 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4001800C) CC Channel 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IF_CC2  -----------------------------------
// SVD Line: 27411

//  <item> SFDITEM_FIELD__TIMER0_IF_CC2
//    <name> CC2 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4001800C) CC Channel 2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IF_CC3  -----------------------------------
// SVD Line: 27418

//  <item> SFDITEM_FIELD__TIMER0_IF_CC3
//    <name> CC3 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001800C) CC Channel 3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IF_ICBOF0  ----------------------------------
// SVD Line: 27425

//  <item> SFDITEM_FIELD__TIMER0_IF_ICBOF0
//    <name> ICBOF0 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4001800C) CC Channel 0 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IF_ICBOF1  ----------------------------------
// SVD Line: 27432

//  <item> SFDITEM_FIELD__TIMER0_IF_ICBOF1
//    <name> ICBOF1 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4001800C) CC Channel 1 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IF_ICBOF2  ----------------------------------
// SVD Line: 27439

//  <item> SFDITEM_FIELD__TIMER0_IF_ICBOF2
//    <name> ICBOF2 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4001800C) CC Channel 2 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IF_ICBOF3  ----------------------------------
// SVD Line: 27446

//  <item> SFDITEM_FIELD__TIMER0_IF_ICBOF3
//    <name> ICBOF3 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4001800C) CC Channel 3 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IF ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIMER0_IF  -----------------------------------
// SVD Line: 27367

//  <rtree> SFDITEM_REG__TIMER0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001800C) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((TIMER0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_IF_OF </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_UF </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IF_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_IFS  -------------------------------
// SVD Line: 27455

unsigned int TIMER0_IFS __AT (0x40018010);



// --------------------------------  Field Item: TIMER0_IFS_OF  -----------------------------------
// SVD Line: 27464

//  <item> SFDITEM_FIELD__TIMER0_IFS_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40018010) Set OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IFS_UF  -----------------------------------
// SVD Line: 27471

//  <item> SFDITEM_FIELD__TIMER0_IFS_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40018010) Set UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFS_DIRCHG  ---------------------------------
// SVD Line: 27478

//  <item> SFDITEM_FIELD__TIMER0_IFS_DIRCHG
//    <name> DIRCHG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40018010) Set DIRCHG Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFS_CC0  -----------------------------------
// SVD Line: 27485

//  <item> SFDITEM_FIELD__TIMER0_IFS_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40018010) Set CC0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFS_CC1  -----------------------------------
// SVD Line: 27492

//  <item> SFDITEM_FIELD__TIMER0_IFS_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40018010) Set CC1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFS_CC2  -----------------------------------
// SVD Line: 27499

//  <item> SFDITEM_FIELD__TIMER0_IFS_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40018010) Set CC2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFS_CC3  -----------------------------------
// SVD Line: 27506

//  <item> SFDITEM_FIELD__TIMER0_IFS_CC3
//    <name> CC3 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40018010) Set CC3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFS_ICBOF0  ---------------------------------
// SVD Line: 27513

//  <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF0
//    <name> ICBOF0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40018010) Set ICBOF0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFS_ICBOF1  ---------------------------------
// SVD Line: 27520

//  <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF1
//    <name> ICBOF1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40018010) Set ICBOF1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFS_ICBOF2  ---------------------------------
// SVD Line: 27527

//  <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF2
//    <name> ICBOF2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40018010) Set ICBOF2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFS_ICBOF3  ---------------------------------
// SVD Line: 27534

//  <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF3
//    <name> ICBOF3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40018010) Set ICBOF3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFS ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_IFS  -----------------------------------
// SVD Line: 27455

//  <rtree> SFDITEM_REG__TIMER0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40018010) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((TIMER0_IFS >> 0) & 0xFFFFFFFF), ((TIMER0_IFS = (TIMER0_IFS & ~(0xFF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_IFS_OF </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_UF </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFS_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_IFC  -------------------------------
// SVD Line: 27543

unsigned int TIMER0_IFC __AT (0x40018014);



// --------------------------------  Field Item: TIMER0_IFC_OF  -----------------------------------
// SVD Line: 27552

//  <item> SFDITEM_FIELD__TIMER0_IFC_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40018014) Clear OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IFC_UF  -----------------------------------
// SVD Line: 27559

//  <item> SFDITEM_FIELD__TIMER0_IFC_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40018014) Clear UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFC_DIRCHG  ---------------------------------
// SVD Line: 27566

//  <item> SFDITEM_FIELD__TIMER0_IFC_DIRCHG
//    <name> DIRCHG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40018014) Clear DIRCHG Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFC_CC0  -----------------------------------
// SVD Line: 27573

//  <item> SFDITEM_FIELD__TIMER0_IFC_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40018014) Clear CC0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFC_CC1  -----------------------------------
// SVD Line: 27580

//  <item> SFDITEM_FIELD__TIMER0_IFC_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40018014) Clear CC1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFC_CC2  -----------------------------------
// SVD Line: 27587

//  <item> SFDITEM_FIELD__TIMER0_IFC_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40018014) Clear CC2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IFC_CC3  -----------------------------------
// SVD Line: 27594

//  <item> SFDITEM_FIELD__TIMER0_IFC_CC3
//    <name> CC3 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40018014) Clear CC3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFC_ICBOF0  ---------------------------------
// SVD Line: 27601

//  <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF0
//    <name> ICBOF0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40018014) Clear ICBOF0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFC_ICBOF1  ---------------------------------
// SVD Line: 27608

//  <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF1
//    <name> ICBOF1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40018014) Clear ICBOF1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFC_ICBOF2  ---------------------------------
// SVD Line: 27615

//  <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF2
//    <name> ICBOF2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40018014) Clear ICBOF2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IFC_ICBOF3  ---------------------------------
// SVD Line: 27622

//  <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF3
//    <name> ICBOF3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40018014) Clear ICBOF3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IFC ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_IFC  -----------------------------------
// SVD Line: 27543

//  <rtree> SFDITEM_REG__TIMER0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40018014) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((TIMER0_IFC >> 0) & 0xFFFFFFFF), ((TIMER0_IFC = (TIMER0_IFC & ~(0xFF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_IFC_OF </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_UF </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IFC_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_IEN  -------------------------------
// SVD Line: 27631

unsigned int TIMER0_IEN __AT (0x40018018);



// --------------------------------  Field Item: TIMER0_IEN_OF  -----------------------------------
// SVD Line: 27640

//  <item> SFDITEM_FIELD__TIMER0_IEN_OF
//    <name> OF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018018) OF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_IEN_UF  -----------------------------------
// SVD Line: 27647

//  <item> SFDITEM_FIELD__TIMER0_IEN_UF
//    <name> UF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40018018) UF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IEN_DIRCHG  ---------------------------------
// SVD Line: 27654

//  <item> SFDITEM_FIELD__TIMER0_IEN_DIRCHG
//    <name> DIRCHG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018018) DIRCHG Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IEN_CC0  -----------------------------------
// SVD Line: 27661

//  <item> SFDITEM_FIELD__TIMER0_IEN_CC0
//    <name> CC0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018018) CC0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IEN_CC1  -----------------------------------
// SVD Line: 27668

//  <item> SFDITEM_FIELD__TIMER0_IEN_CC1
//    <name> CC1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018018) CC1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IEN_CC2  -----------------------------------
// SVD Line: 27675

//  <item> SFDITEM_FIELD__TIMER0_IEN_CC2
//    <name> CC2 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018018) CC2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_IEN_CC3  -----------------------------------
// SVD Line: 27682

//  <item> SFDITEM_FIELD__TIMER0_IEN_CC3
//    <name> CC3 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018018) CC3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IEN_ICBOF0  ---------------------------------
// SVD Line: 27689

//  <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF0
//    <name> ICBOF0 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40018018) ICBOF0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IEN_ICBOF1  ---------------------------------
// SVD Line: 27696

//  <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF1
//    <name> ICBOF1 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40018018) ICBOF1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IEN_ICBOF2  ---------------------------------
// SVD Line: 27703

//  <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF2
//    <name> ICBOF2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40018018) ICBOF2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_IEN_ICBOF3  ---------------------------------
// SVD Line: 27710

//  <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF3
//    <name> ICBOF3 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40018018) ICBOF3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_IEN ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_IEN  -----------------------------------
// SVD Line: 27631

//  <rtree> SFDITEM_REG__TIMER0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018018) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((TIMER0_IEN >> 0) & 0xFFFFFFFF), ((TIMER0_IEN = (TIMER0_IEN & ~(0xFF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_IEN_OF </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_UF </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER0_IEN_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_TOP  -------------------------------
// SVD Line: 27719

unsigned int TIMER0_TOP __AT (0x4001801C);



// -------------------------------  Field Item: TIMER0_TOP_TOP  -----------------------------------
// SVD Line: 27728

//  <item> SFDITEM_FIELD__TIMER0_TOP_TOP
//    <name> TOP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001801C) Counter Top Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_TOP >> 0) & 0xFFFF), ((TIMER0_TOP = (TIMER0_TOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_TOP  -----------------------------------
// SVD Line: 27719

//  <rtree> SFDITEM_REG__TIMER0_TOP
//    <name> TOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001801C) Counter Top Value Register </i>
//    <loc> ( (unsigned int)((TIMER0_TOP >> 0) & 0xFFFFFFFF), ((TIMER0_TOP = (TIMER0_TOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_TOP_TOP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_TOPB  -------------------------------
// SVD Line: 27737

unsigned int TIMER0_TOPB __AT (0x40018020);



// ------------------------------  Field Item: TIMER0_TOPB_TOPB  ----------------------------------
// SVD Line: 27746

//  <item> SFDITEM_FIELD__TIMER0_TOPB_TOPB
//    <name> TOPB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40018020) Counter Top Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_TOPB >> 0) & 0xFFFF), ((TIMER0_TOPB = (TIMER0_TOPB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_TOPB  ----------------------------------
// SVD Line: 27737

//  <rtree> SFDITEM_REG__TIMER0_TOPB
//    <name> TOPB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018020) Counter Top Value Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER0_TOPB >> 0) & 0xFFFFFFFF), ((TIMER0_TOPB = (TIMER0_TOPB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_TOPB_TOPB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_CNT  -------------------------------
// SVD Line: 27755

unsigned int TIMER0_CNT __AT (0x40018024);



// -------------------------------  Field Item: TIMER0_CNT_CNT  -----------------------------------
// SVD Line: 27764

//  <item> SFDITEM_FIELD__TIMER0_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40018024) Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CNT >> 0) & 0xFFFF), ((TIMER0_CNT = (TIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CNT  -----------------------------------
// SVD Line: 27755

//  <rtree> SFDITEM_REG__TIMER0_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018024) Counter Value Register </i>
//    <loc> ( (unsigned int)((TIMER0_CNT >> 0) & 0xFFFFFFFF), ((TIMER0_CNT = (TIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CNT_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_LOCK  -------------------------------
// SVD Line: 27773

unsigned int TIMER0_LOCK __AT (0x4001802C);



// --------------------------  Field Item: TIMER0_LOCK_TIMERLOCKKEY  ------------------------------
// SVD Line: 27782

//  <item> SFDITEM_FIELD__TIMER0_LOCK_TIMERLOCKKEY
//    <name> TIMERLOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001802C) Timer Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_LOCK >> 0) & 0xFFFF), ((TIMER0_LOCK = (TIMER0_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_LOCK  ----------------------------------
// SVD Line: 27773

//  <rtree> SFDITEM_REG__TIMER0_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001802C) TIMER Configuration Lock Register </i>
//    <loc> ( (unsigned int)((TIMER0_LOCK >> 0) & 0xFFFFFFFF), ((TIMER0_LOCK = (TIMER0_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_LOCK_TIMERLOCKKEY </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_ROUTEPEN  -----------------------------
// SVD Line: 27801

unsigned int TIMER0_ROUTEPEN __AT (0x40018030);



// ---------------------------  Field Item: TIMER0_ROUTEPEN_CC0PEN  -------------------------------
// SVD Line: 27810

//  <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC0PEN
//    <name> CC0PEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018030) CC Channel 0 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_ROUTEPEN ) </loc>
//      <o.0..0> CC0PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_ROUTEPEN_CC1PEN  -------------------------------
// SVD Line: 27817

//  <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC1PEN
//    <name> CC1PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40018030) CC Channel 1 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_ROUTEPEN ) </loc>
//      <o.1..1> CC1PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_ROUTEPEN_CC2PEN  -------------------------------
// SVD Line: 27824

//  <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC2PEN
//    <name> CC2PEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018030) CC Channel 2 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_ROUTEPEN ) </loc>
//      <o.2..2> CC2PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_ROUTEPEN_CC3PEN  -------------------------------
// SVD Line: 27831

//  <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC3PEN
//    <name> CC3PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40018030) CC Channel 3 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_ROUTEPEN ) </loc>
//      <o.3..3> CC3PEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_ROUTEPEN_CDTI0PEN  ------------------------------
// SVD Line: 27838

//  <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CDTI0PEN
//    <name> CDTI0PEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40018030) CC Channel 0 Complementary Dead-Time Insertion Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_ROUTEPEN ) </loc>
//      <o.8..8> CDTI0PEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_ROUTEPEN_CDTI1PEN  ------------------------------
// SVD Line: 27845

//  <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CDTI1PEN
//    <name> CDTI1PEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40018030) CC Channel 1 Complementary Dead-Time Insertion Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_ROUTEPEN ) </loc>
//      <o.9..9> CDTI1PEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_ROUTEPEN_CDTI2PEN  ------------------------------
// SVD Line: 27852

//  <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CDTI2PEN
//    <name> CDTI2PEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40018030) CC Channel 2 Complementary Dead-Time Insertion Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_ROUTEPEN ) </loc>
//      <o.10..10> CDTI2PEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_ROUTEPEN  --------------------------------
// SVD Line: 27801

//  <rtree> SFDITEM_REG__TIMER0_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018030) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((TIMER0_ROUTEPEN >> 0) & 0xFFFFFFFF), ((TIMER0_ROUTEPEN = (TIMER0_ROUTEPEN & ~(0x70FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC0PEN </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC1PEN </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC2PEN </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CC3PEN </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CDTI0PEN </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CDTI1PEN </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTEPEN_CDTI2PEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_ROUTELOC0  ----------------------------
// SVD Line: 27861

unsigned int TIMER0_ROUTELOC0 __AT (0x40018034);



// ---------------------------  Field Item: TIMER0_ROUTELOC0_CC0LOC  ------------------------------
// SVD Line: 27870

//  <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC0LOC
//    <name> CC0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40018034) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_ROUTELOC0 ) </loc>
//      <o.5..0> CC0LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_ROUTELOC0_CC1LOC  ------------------------------
// SVD Line: 28039

//  <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC1LOC
//    <name> CC1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40018034) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_ROUTELOC0 ) </loc>
//      <o.13..8> CC1LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_ROUTELOC0_CC2LOC  ------------------------------
// SVD Line: 28208

//  <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC2LOC
//    <name> CC2LOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40018034) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_ROUTELOC0 ) </loc>
//      <o.21..16> CC2LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_ROUTELOC0_CC3LOC  ------------------------------
// SVD Line: 28377

//  <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC3LOC
//    <name> CC3LOC </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40018034) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_ROUTELOC0 ) </loc>
//      <o.29..24> CC3LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: TIMER0_ROUTELOC0  --------------------------------
// SVD Line: 27861

//  <rtree> SFDITEM_REG__TIMER0_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018034) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((TIMER0_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((TIMER0_ROUTELOC0 = (TIMER0_ROUTELOC0 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC0LOC </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC1LOC </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC2LOC </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTELOC0_CC3LOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_ROUTELOC2  ----------------------------
// SVD Line: 28548

unsigned int TIMER0_ROUTELOC2 __AT (0x4001803C);



// --------------------------  Field Item: TIMER0_ROUTELOC2_CDTI0LOC  -----------------------------
// SVD Line: 28557

//  <item> SFDITEM_FIELD__TIMER0_ROUTELOC2_CDTI0LOC
//    <name> CDTI0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4001803C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_ROUTELOC2 ) </loc>
//      <o.5..0> CDTI0LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_ROUTELOC2_CDTI1LOC  -----------------------------
// SVD Line: 28726

//  <item> SFDITEM_FIELD__TIMER0_ROUTELOC2_CDTI1LOC
//    <name> CDTI1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x4001803C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_ROUTELOC2 ) </loc>
//      <o.13..8> CDTI1LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_ROUTELOC2_CDTI2LOC  -----------------------------
// SVD Line: 28895

//  <item> SFDITEM_FIELD__TIMER0_ROUTELOC2_CDTI2LOC
//    <name> CDTI2LOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x4001803C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_ROUTELOC2 ) </loc>
//      <o.21..16> CDTI2LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: TIMER0_ROUTELOC2  --------------------------------
// SVD Line: 28548

//  <rtree> SFDITEM_REG__TIMER0_ROUTELOC2
//    <name> ROUTELOC2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001803C) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((TIMER0_ROUTELOC2 >> 0) & 0xFFFFFFFF), ((TIMER0_ROUTELOC2 = (TIMER0_ROUTELOC2 & ~(0x3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_ROUTELOC2_CDTI0LOC </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTELOC2_CDTI1LOC </item>
//    <item> SFDITEM_FIELD__TIMER0_ROUTELOC2_CDTI2LOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC0_CTRL  -----------------------------
// SVD Line: 29066

unsigned int TIMER0_CC0_CTRL __AT (0x40018060);



// ----------------------------  Field Item: TIMER0_CC0_CTRL_MODE  --------------------------------
// SVD Line: 29075

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018060) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC0_CTRL_OUTINV  -------------------------------
// SVD Line: 29104

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018060) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC0_CTRL_COIST  -------------------------------
// SVD Line: 29111

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018060) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC0_CTRL_CMOA  --------------------------------
// SVD Line: 29118

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018060) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC0_CTRL_COFOA  -------------------------------
// SVD Line: 29147

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018060) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC0_CTRL_CUFOA  -------------------------------
// SVD Line: 29176

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018060) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC0_CTRL_PRSSEL  -------------------------------
// SVD Line: 29205

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018060) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC0_CTRL_ICEDGE  -------------------------------
// SVD Line: 29274

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018060) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_CC0_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 29303

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018060) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC0_CTRL_PRSCONF  ------------------------------
// SVD Line: 29332

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018060) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC0_CTRL_INSEL  -------------------------------
// SVD Line: 29339

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018060) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC0_CTRL_FILT  --------------------------------
// SVD Line: 29346

//  <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018060) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC0_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC0_CTRL  --------------------------------
// SVD Line: 29066

//  <rtree> SFDITEM_REG__TIMER0_CC0_CTRL
//    <name> CC0_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018060) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC0_CTRL >> 0) & 0xFFFFFFFF), ((TIMER0_CC0_CTRL = (TIMER0_CC0_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC0_CCVP  -----------------------------
// SVD Line: 29374

unsigned int TIMER0_CC0_CCVP __AT (0x40018068);



// ----------------------------  Field Item: TIMER0_CC0_CCVP_CCVP  --------------------------------
// SVD Line: 29383

//  <item> SFDITEM_FIELD__TIMER0_CC0_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018068) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC0_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC0_CCVP  --------------------------------
// SVD Line: 29374

//  <rtree> SFDITEM_REG__TIMER0_CC0_CCVP
//    <name> CC0_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018068) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC0_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC0_CCVB  -----------------------------
// SVD Line: 29392

unsigned int TIMER0_CC0_CCVB __AT (0x4001806C);



// ----------------------------  Field Item: TIMER0_CC0_CCVB_CCVB  --------------------------------
// SVD Line: 29401

//  <item> SFDITEM_FIELD__TIMER0_CC0_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001806C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC0_CCVB >> 0) & 0xFFFF), ((TIMER0_CC0_CCVB = (TIMER0_CC0_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC0_CCVB  --------------------------------
// SVD Line: 29392

//  <rtree> SFDITEM_REG__TIMER0_CC0_CCVB
//    <name> CC0_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001806C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC0_CCVB >> 0) & 0xFFFFFFFF), ((TIMER0_CC0_CCVB = (TIMER0_CC0_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC0_CCVB_CCVB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC1_CTRL  -----------------------------
// SVD Line: 29410

unsigned int TIMER0_CC1_CTRL __AT (0x40018070);



// ----------------------------  Field Item: TIMER0_CC1_CTRL_MODE  --------------------------------
// SVD Line: 29419

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018070) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC1_CTRL_OUTINV  -------------------------------
// SVD Line: 29448

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018070) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC1_CTRL_COIST  -------------------------------
// SVD Line: 29455

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018070) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC1_CTRL_CMOA  --------------------------------
// SVD Line: 29462

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018070) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC1_CTRL_COFOA  -------------------------------
// SVD Line: 29491

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018070) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC1_CTRL_CUFOA  -------------------------------
// SVD Line: 29520

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018070) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC1_CTRL_PRSSEL  -------------------------------
// SVD Line: 29549

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018070) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC1_CTRL_ICEDGE  -------------------------------
// SVD Line: 29618

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018070) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_CC1_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 29647

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018070) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC1_CTRL_PRSCONF  ------------------------------
// SVD Line: 29676

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018070) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC1_CTRL_INSEL  -------------------------------
// SVD Line: 29683

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018070) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC1_CTRL_FILT  --------------------------------
// SVD Line: 29690

//  <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018070) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC1_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC1_CTRL  --------------------------------
// SVD Line: 29410

//  <rtree> SFDITEM_REG__TIMER0_CC1_CTRL
//    <name> CC1_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018070) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC1_CTRL >> 0) & 0xFFFFFFFF), ((TIMER0_CC1_CTRL = (TIMER0_CC1_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC1_CCVP  -----------------------------
// SVD Line: 29718

unsigned int TIMER0_CC1_CCVP __AT (0x40018078);



// ----------------------------  Field Item: TIMER0_CC1_CCVP_CCVP  --------------------------------
// SVD Line: 29727

//  <item> SFDITEM_FIELD__TIMER0_CC1_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018078) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC1_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC1_CCVP  --------------------------------
// SVD Line: 29718

//  <rtree> SFDITEM_REG__TIMER0_CC1_CCVP
//    <name> CC1_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018078) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC1_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC1_CCVB  -----------------------------
// SVD Line: 29736

unsigned int TIMER0_CC1_CCVB __AT (0x4001807C);



// ----------------------------  Field Item: TIMER0_CC1_CCVB_CCVB  --------------------------------
// SVD Line: 29745

//  <item> SFDITEM_FIELD__TIMER0_CC1_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001807C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC1_CCVB >> 0) & 0xFFFF), ((TIMER0_CC1_CCVB = (TIMER0_CC1_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC1_CCVB  --------------------------------
// SVD Line: 29736

//  <rtree> SFDITEM_REG__TIMER0_CC1_CCVB
//    <name> CC1_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001807C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC1_CCVB >> 0) & 0xFFFFFFFF), ((TIMER0_CC1_CCVB = (TIMER0_CC1_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC1_CCVB_CCVB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC2_CTRL  -----------------------------
// SVD Line: 29754

unsigned int TIMER0_CC2_CTRL __AT (0x40018080);



// ----------------------------  Field Item: TIMER0_CC2_CTRL_MODE  --------------------------------
// SVD Line: 29763

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018080) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC2_CTRL_OUTINV  -------------------------------
// SVD Line: 29792

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018080) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC2_CTRL_COIST  -------------------------------
// SVD Line: 29799

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018080) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC2_CTRL_CMOA  --------------------------------
// SVD Line: 29806

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018080) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC2_CTRL_COFOA  -------------------------------
// SVD Line: 29835

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018080) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC2_CTRL_CUFOA  -------------------------------
// SVD Line: 29864

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018080) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC2_CTRL_PRSSEL  -------------------------------
// SVD Line: 29893

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018080) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC2_CTRL_ICEDGE  -------------------------------
// SVD Line: 29962

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018080) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_CC2_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 29991

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018080) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC2_CTRL_PRSCONF  ------------------------------
// SVD Line: 30020

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018080) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC2_CTRL_INSEL  -------------------------------
// SVD Line: 30027

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018080) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC2_CTRL_FILT  --------------------------------
// SVD Line: 30034

//  <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018080) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC2_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC2_CTRL  --------------------------------
// SVD Line: 29754

//  <rtree> SFDITEM_REG__TIMER0_CC2_CTRL
//    <name> CC2_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018080) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC2_CTRL >> 0) & 0xFFFFFFFF), ((TIMER0_CC2_CTRL = (TIMER0_CC2_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC2_CCVP  -----------------------------
// SVD Line: 30062

unsigned int TIMER0_CC2_CCVP __AT (0x40018088);



// ----------------------------  Field Item: TIMER0_CC2_CCVP_CCVP  --------------------------------
// SVD Line: 30071

//  <item> SFDITEM_FIELD__TIMER0_CC2_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018088) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC2_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC2_CCVP  --------------------------------
// SVD Line: 30062

//  <rtree> SFDITEM_REG__TIMER0_CC2_CCVP
//    <name> CC2_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018088) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC2_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC2_CCVB  -----------------------------
// SVD Line: 30080

unsigned int TIMER0_CC2_CCVB __AT (0x4001808C);



// ----------------------------  Field Item: TIMER0_CC2_CCVB_CCVB  --------------------------------
// SVD Line: 30089

//  <item> SFDITEM_FIELD__TIMER0_CC2_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001808C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC2_CCVB >> 0) & 0xFFFF), ((TIMER0_CC2_CCVB = (TIMER0_CC2_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC2_CCVB  --------------------------------
// SVD Line: 30080

//  <rtree> SFDITEM_REG__TIMER0_CC2_CCVB
//    <name> CC2_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001808C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC2_CCVB >> 0) & 0xFFFFFFFF), ((TIMER0_CC2_CCVB = (TIMER0_CC2_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC2_CCVB_CCVB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC3_CTRL  -----------------------------
// SVD Line: 30098

unsigned int TIMER0_CC3_CTRL __AT (0x40018090);



// ----------------------------  Field Item: TIMER0_CC3_CTRL_MODE  --------------------------------
// SVD Line: 30107

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018090) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC3_CTRL_OUTINV  -------------------------------
// SVD Line: 30136

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018090) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC3_CTRL_COIST  -------------------------------
// SVD Line: 30143

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018090) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC3_CTRL_CMOA  --------------------------------
// SVD Line: 30150

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018090) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC3_CTRL_COFOA  -------------------------------
// SVD Line: 30179

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018090) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC3_CTRL_CUFOA  -------------------------------
// SVD Line: 30208

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018090) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC3_CTRL_PRSSEL  -------------------------------
// SVD Line: 30237

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018090) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC3_CTRL_ICEDGE  -------------------------------
// SVD Line: 30306

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018090) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER0_CC3_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 30335

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018090) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_CC3_CTRL_PRSCONF  ------------------------------
// SVD Line: 30364

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018090) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC3_CTRL_INSEL  -------------------------------
// SVD Line: 30371

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018090) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_CC3_CTRL_FILT  --------------------------------
// SVD Line: 30378

//  <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018090) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_CC3_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC3_CTRL  --------------------------------
// SVD Line: 30098

//  <rtree> SFDITEM_REG__TIMER0_CC3_CTRL
//    <name> CC3_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018090) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC3_CTRL >> 0) & 0xFFFFFFFF), ((TIMER0_CC3_CTRL = (TIMER0_CC3_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC3_CCVP  -----------------------------
// SVD Line: 30406

unsigned int TIMER0_CC3_CCVP __AT (0x40018098);



// ----------------------------  Field Item: TIMER0_CC3_CCVP_CCVP  --------------------------------
// SVD Line: 30415

//  <item> SFDITEM_FIELD__TIMER0_CC3_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018098) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC3_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC3_CCVP  --------------------------------
// SVD Line: 30406

//  <rtree> SFDITEM_REG__TIMER0_CC3_CCVP
//    <name> CC3_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018098) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC3_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_CC3_CCVB  -----------------------------
// SVD Line: 30424

unsigned int TIMER0_CC3_CCVB __AT (0x4001809C);



// ----------------------------  Field Item: TIMER0_CC3_CCVB_CCVB  --------------------------------
// SVD Line: 30433

//  <item> SFDITEM_FIELD__TIMER0_CC3_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001809C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CC3_CCVB >> 0) & 0xFFFF), ((TIMER0_CC3_CCVB = (TIMER0_CC3_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_CC3_CCVB  --------------------------------
// SVD Line: 30424

//  <rtree> SFDITEM_REG__TIMER0_CC3_CCVB
//    <name> CC3_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001809C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER0_CC3_CCVB >> 0) & 0xFFFFFFFF), ((TIMER0_CC3_CCVB = (TIMER0_CC3_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CC3_CCVB_CCVB </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER0_DTCTRL  ------------------------------
// SVD Line: 30442

unsigned int TIMER0_DTCTRL __AT (0x400180A0);



// -----------------------------  Field Item: TIMER0_DTCTRL_DTEN  ---------------------------------
// SVD Line: 30451

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTEN
//    <name> DTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400180A0) DTI Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.0..0> DTEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_DTCTRL_DTDAS  --------------------------------
// SVD Line: 30458

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTDAS
//    <name> DTDAS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400180A0) DTI Automatic Start-up Functionality </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.1..1> DTDAS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTCTRL_DTIPOL  --------------------------------
// SVD Line: 30465

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTIPOL
//    <name> DTIPOL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400180A0) DTI Inactive Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.2..2> DTIPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTCTRL_DTCINV  --------------------------------
// SVD Line: 30472

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTCINV
//    <name> DTCINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400180A0) DTI Complementary Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.3..3> DTCINV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_DTCTRL_DTPRSSEL  -------------------------------
// SVD Line: 30479

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTPRSSEL
//    <name> DTPRSSEL </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400180A0) \nDTI PRS Source Channel Select\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.7..4> DTPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_DTCTRL_DTAR  ---------------------------------
// SVD Line: 30548

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTAR
//    <name> DTAR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400180A0) DTI Always Run </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.9..9> DTAR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTCTRL_DTFATS  --------------------------------
// SVD Line: 30555

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTFATS
//    <name> DTFATS </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400180A0) DTI Fault Action on Timer Stop </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.10..10> DTFATS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTCTRL_DTPRSEN  -------------------------------
// SVD Line: 30562

//  <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTPRSEN
//    <name> DTPRSEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400180A0) DTI PRS Source Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTCTRL ) </loc>
//      <o.24..24> DTPRSEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER0_DTCTRL  ---------------------------------
// SVD Line: 30442

//  <rtree> SFDITEM_REG__TIMER0_DTCTRL
//    <name> DTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400180A0) DTI Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_DTCTRL >> 0) & 0xFFFFFFFF), ((TIMER0_DTCTRL = (TIMER0_DTCTRL & ~(0x10006FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10006FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTEN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTDAS </item>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTIPOL </item>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTCINV </item>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTPRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTAR </item>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTFATS </item>
//    <item> SFDITEM_FIELD__TIMER0_DTCTRL_DTPRSEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER0_DTTIME  ------------------------------
// SVD Line: 30571

unsigned int TIMER0_DTTIME __AT (0x400180A4);



// ----------------------------  Field Item: TIMER0_DTTIME_DTPRESC  -------------------------------
// SVD Line: 30580

//  <item> SFDITEM_FIELD__TIMER0_DTTIME_DTPRESC
//    <name> DTPRESC </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400180A4) \nDTI Prescaler Setting\n0 : DIV1 = The HFPERCLK is undivided\n1 : DIV2 = The HFPERCLK is divided by 2\n2 : DIV4 = The HFPERCLK is divided by 4\n3 : DIV8 = The HFPERCLK is divided by 8\n4 : DIV16 = The HFPERCLK is divided by 16\n5 : DIV32 = The HFPERCLK is divided by 32\n6 : DIV64 = The HFPERCLK is divided by 64\n7 : DIV128 = The HFPERCLK is divided by 128\n8 : DIV256 = The HFPERCLK is divided by 256\n9 : DIV512 = The HFPERCLK is divided by 512\n10 : DIV1024 = The HFPERCLK is divided by 1024\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_DTTIME ) </loc>
//      <o.3..0> DTPRESC
//        <0=> 0: DIV1 = The HFPERCLK is undivided
//        <1=> 1: DIV2 = The HFPERCLK is divided by 2
//        <2=> 2: DIV4 = The HFPERCLK is divided by 4
//        <3=> 3: DIV8 = The HFPERCLK is divided by 8
//        <4=> 4: DIV16 = The HFPERCLK is divided by 16
//        <5=> 5: DIV32 = The HFPERCLK is divided by 32
//        <6=> 6: DIV64 = The HFPERCLK is divided by 64
//        <7=> 7: DIV128 = The HFPERCLK is divided by 128
//        <8=> 8: DIV256 = The HFPERCLK is divided by 256
//        <9=> 9: DIV512 = The HFPERCLK is divided by 512
//        <10=> 10: DIV1024 = The HFPERCLK is divided by 1024
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTTIME_DTRISET  -------------------------------
// SVD Line: 30644

//  <item> SFDITEM_FIELD__TIMER0_DTTIME_DTRISET
//    <name> DTRISET </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400180A4) DTI Rise-time </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_DTTIME >> 8) & 0x3F), ((TIMER0_DTTIME = (TIMER0_DTTIME & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTTIME_DTFALLT  -------------------------------
// SVD Line: 30651

//  <item> SFDITEM_FIELD__TIMER0_DTTIME_DTFALLT
//    <name> DTFALLT </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400180A4) DTI Fall-time </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_DTTIME >> 16) & 0x3F), ((TIMER0_DTTIME = (TIMER0_DTTIME & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: TIMER0_DTTIME  ---------------------------------
// SVD Line: 30571

//  <rtree> SFDITEM_REG__TIMER0_DTTIME
//    <name> DTTIME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400180A4) DTI Time Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_DTTIME >> 0) & 0xFFFFFFFF), ((TIMER0_DTTIME = (TIMER0_DTTIME & ~(0x3F3F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DTTIME_DTPRESC </item>
//    <item> SFDITEM_FIELD__TIMER0_DTTIME_DTRISET </item>
//    <item> SFDITEM_FIELD__TIMER0_DTTIME_DTFALLT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_DTFC  -------------------------------
// SVD Line: 30660

unsigned int TIMER0_DTFC __AT (0x400180A8);



// ---------------------------  Field Item: TIMER0_DTFC_DTPRS0FSEL  -------------------------------
// SVD Line: 30669

//  <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS0FSEL
//    <name> DTPRS0FSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400180A8) \nDTI PRS Fault Source 0 Select\n0 : PRSCH0 = PRS Channel 0 selected as fault source 0\n1 : PRSCH1 = PRS Channel 1 selected as fault source 1\n2 : PRSCH2 = PRS Channel 2 selected as fault source 2\n3 : PRSCH3 = PRS Channel 3 selected as fault source 3\n4 : PRSCH4 = PRS Channel 4 selected as fault source 4\n5 : PRSCH5 = PRS Channel 5 selected as fault source 5\n6 : PRSCH6 = PRS Channel 6 selected as fault source 6\n7 : PRSCH7 = PRS Channel 7 selected as fault source 7\n8 : PRSCH8 = PRS Channel 8 selected as fault source 8\n9 : PRSCH9 = PRS Channel 9 selected as fault source 9\n10 : PRSCH10 = PRS Channel 10 selected as fault source 10\n11 : PRSCH11 = PRS Channel 11 selected as fault source 11\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_DTFC ) </loc>
//      <o.3..0> DTPRS0FSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as fault source 0
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as fault source 1
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as fault source 2
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as fault source 3
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as fault source 4
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as fault source 5
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as fault source 6
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as fault source 7
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as fault source 8
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as fault source 9
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as fault source 10
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as fault source 11
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_DTFC_DTPRS1FSEL  -------------------------------
// SVD Line: 30738

//  <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS1FSEL
//    <name> DTPRS1FSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400180A8) \nDTI PRS Fault Source 1 Select\n0 : PRSCH0 = PRS Channel 0 selected as fault source 1\n1 : PRSCH1 = PRS Channel 1 selected as fault source 1\n2 : PRSCH2 = PRS Channel 2 selected as fault source 1\n3 : PRSCH3 = PRS Channel 3 selected as fault source 1\n4 : PRSCH4 = PRS Channel 4 selected as fault source 1\n5 : PRSCH5 = PRS Channel 5 selected as fault source 1\n6 : PRSCH6 = PRS Channel 6 selected as fault source 1\n7 : PRSCH7 = PRS Channel 7 selected as fault source 1\n8 : PRSCH8 = PRS Channel 8 selected as fault source 1\n9 : PRSCH9 = PRS Channel 9 selected as fault source 1\n10 : PRSCH10 = PRS Channel 10 selected as fault source 1\n11 : PRSCH11 = PRS Channel 11 selected as fault source 1\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_DTFC ) </loc>
//      <o.11..8> DTPRS1FSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as fault source 1
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as fault source 1
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as fault source 1
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as fault source 1
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as fault source 1
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as fault source 1
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as fault source 1
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as fault source 1
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as fault source 1
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as fault source 1
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as fault source 1
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as fault source 1
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DTFC_DTFA  ----------------------------------
// SVD Line: 30807

//  <item> SFDITEM_FIELD__TIMER0_DTFC_DTFA
//    <name> DTFA </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400180A8) \nDTI Fault Action\n0 : NONE = No action on fault\n1 : INACTIVE = Set outputs inactive\n2 : CLEAR = Clear outputs\n3 : TRISTATE = Tristate outputs </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_DTFC ) </loc>
//      <o.17..16> DTFA
//        <0=> 0: NONE = No action on fault
//        <1=> 1: INACTIVE = Set outputs inactive
//        <2=> 2: CLEAR = Clear outputs
//        <3=> 3: TRISTATE = Tristate outputs
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTFC_DTPRS0FEN  -------------------------------
// SVD Line: 30836

//  <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS0FEN
//    <name> DTPRS0FEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400180A8) DTI PRS 0 Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFC ) </loc>
//      <o.24..24> DTPRS0FEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTFC_DTPRS1FEN  -------------------------------
// SVD Line: 30843

//  <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS1FEN
//    <name> DTPRS1FEN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400180A8) DTI PRS 1 Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFC ) </loc>
//      <o.25..25> DTPRS1FEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTFC_DTDBGFEN  --------------------------------
// SVD Line: 30850

//  <item> SFDITEM_FIELD__TIMER0_DTFC_DTDBGFEN
//    <name> DTDBGFEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400180A8) DTI Debugger Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFC ) </loc>
//      <o.26..26> DTDBGFEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_DTFC_DTLOCKUPFEN  ------------------------------
// SVD Line: 30857

//  <item> SFDITEM_FIELD__TIMER0_DTFC_DTLOCKUPFEN
//    <name> DTLOCKUPFEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400180A8) DTI Lockup Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFC ) </loc>
//      <o.27..27> DTLOCKUPFEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_DTFC  ----------------------------------
// SVD Line: 30660

//  <rtree> SFDITEM_REG__TIMER0_DTFC
//    <name> DTFC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400180A8) DTI Fault Configuration Register </i>
//    <loc> ( (unsigned int)((TIMER0_DTFC >> 0) & 0xFFFFFFFF), ((TIMER0_DTFC = (TIMER0_DTFC & ~(0xF030F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF030F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS0FSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS1FSEL </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFC_DTFA </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS0FEN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFC_DTPRS1FEN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFC_DTDBGFEN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFC_DTLOCKUPFEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER0_DTOGEN  ------------------------------
// SVD Line: 30866

unsigned int TIMER0_DTOGEN __AT (0x400180AC);



// ---------------------------  Field Item: TIMER0_DTOGEN_DTOGCC0EN  ------------------------------
// SVD Line: 30875

//  <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCC0EN
//    <name> DTOGCC0EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400180AC) DTI CC0 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTOGEN ) </loc>
//      <o.0..0> DTOGCC0EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_DTOGEN_DTOGCC1EN  ------------------------------
// SVD Line: 30882

//  <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCC1EN
//    <name> DTOGCC1EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400180AC) DTI CC1 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTOGEN ) </loc>
//      <o.1..1> DTOGCC1EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_DTOGEN_DTOGCC2EN  ------------------------------
// SVD Line: 30889

//  <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCC2EN
//    <name> DTOGCC2EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400180AC) DTI CC2 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTOGEN ) </loc>
//      <o.2..2> DTOGCC2EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_DTOGEN_DTOGCDTI0EN  -----------------------------
// SVD Line: 30896

//  <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCDTI0EN
//    <name> DTOGCDTI0EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400180AC) DTI CDTI0 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTOGEN ) </loc>
//      <o.3..3> DTOGCDTI0EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_DTOGEN_DTOGCDTI1EN  -----------------------------
// SVD Line: 30903

//  <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCDTI1EN
//    <name> DTOGCDTI1EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400180AC) DTI CDTI1 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTOGEN ) </loc>
//      <o.4..4> DTOGCDTI1EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_DTOGEN_DTOGCDTI2EN  -----------------------------
// SVD Line: 30910

//  <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCDTI2EN
//    <name> DTOGCDTI2EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400180AC) DTI CDTI2 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTOGEN ) </loc>
//      <o.5..5> DTOGCDTI2EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER0_DTOGEN  ---------------------------------
// SVD Line: 30866

//  <rtree> SFDITEM_REG__TIMER0_DTOGEN
//    <name> DTOGEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400180AC) DTI Output Generation Enable Register </i>
//    <loc> ( (unsigned int)((TIMER0_DTOGEN >> 0) & 0xFFFFFFFF), ((TIMER0_DTOGEN = (TIMER0_DTOGEN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCC0EN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCC1EN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCC2EN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCDTI0EN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCDTI1EN </item>
//    <item> SFDITEM_FIELD__TIMER0_DTOGEN_DTOGCDTI2EN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER0_DTFAULT  -----------------------------
// SVD Line: 30919

unsigned int TIMER0_DTFAULT __AT (0x400180B0);



// ---------------------------  Field Item: TIMER0_DTFAULT_DTPRS0F  -------------------------------
// SVD Line: 30928

//  <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTPRS0F
//    <name> DTPRS0F </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400180B0) DTI PRS 0 Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULT ) </loc>
//      <o.0..0> DTPRS0F
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_DTFAULT_DTPRS1F  -------------------------------
// SVD Line: 30935

//  <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTPRS1F
//    <name> DTPRS1F </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400180B0) DTI PRS 1 Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULT ) </loc>
//      <o.1..1> DTPRS1F
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER0_DTFAULT_DTDBGF  -------------------------------
// SVD Line: 30942

//  <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTDBGF
//    <name> DTDBGF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400180B0) DTI Debugger Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULT ) </loc>
//      <o.2..2> DTDBGF
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_DTFAULT_DTLOCKUPF  ------------------------------
// SVD Line: 30949

//  <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTLOCKUPF
//    <name> DTLOCKUPF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400180B0) DTI Lockup Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULT ) </loc>
//      <o.3..3> DTLOCKUPF
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_DTFAULT  ---------------------------------
// SVD Line: 30919

//  <rtree> SFDITEM_REG__TIMER0_DTFAULT
//    <name> DTFAULT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400180B0) DTI Fault Register </i>
//    <loc> ( (unsigned int)((TIMER0_DTFAULT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTPRS0F </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTPRS1F </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTDBGF </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULT_DTLOCKUPF </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER0_DTFAULTC  -----------------------------
// SVD Line: 30958

unsigned int TIMER0_DTFAULTC __AT (0x400180B4);



// --------------------------  Field Item: TIMER0_DTFAULTC_DTPRS0FC  ------------------------------
// SVD Line: 30967

//  <item> SFDITEM_FIELD__TIMER0_DTFAULTC_DTPRS0FC
//    <name> DTPRS0FC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400180B4) DTI PRS0 Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULTC ) </loc>
//      <o.0..0> DTPRS0FC
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_DTFAULTC_DTPRS1FC  ------------------------------
// SVD Line: 30974

//  <item> SFDITEM_FIELD__TIMER0_DTFAULTC_DTPRS1FC
//    <name> DTPRS1FC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400180B4) DTI PRS1 Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULTC ) </loc>
//      <o.1..1> DTPRS1FC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER0_DTFAULTC_DTDBGFC  ------------------------------
// SVD Line: 30981

//  <item> SFDITEM_FIELD__TIMER0_DTFAULTC_DTDBGFC
//    <name> DTDBGFC </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400180B4) DTI Debugger Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULTC ) </loc>
//      <o.2..2> DTDBGFC
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER0_DTFAULTC_TLOCKUPFC  -----------------------------
// SVD Line: 30988

//  <item> SFDITEM_FIELD__TIMER0_DTFAULTC_TLOCKUPFC
//    <name> TLOCKUPFC </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400180B4) DTI Lockup Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER0_DTFAULTC ) </loc>
//      <o.3..3> TLOCKUPFC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_DTFAULTC  --------------------------------
// SVD Line: 30958

//  <rtree> SFDITEM_REG__TIMER0_DTFAULTC
//    <name> DTFAULTC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400180B4) DTI Fault Clear Register </i>
//    <loc> ( (unsigned int)((TIMER0_DTFAULTC >> 0) & 0xFFFFFFFF), ((TIMER0_DTFAULTC = (TIMER0_DTFAULTC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULTC_DTPRS0FC </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULTC_DTPRS1FC </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULTC_DTDBGFC </item>
//    <item> SFDITEM_FIELD__TIMER0_DTFAULTC_TLOCKUPFC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER0_DTLOCK  ------------------------------
// SVD Line: 30997

unsigned int TIMER0_DTLOCK __AT (0x400180B8);



// ----------------------------  Field Item: TIMER0_DTLOCK_LOCKKEY  -------------------------------
// SVD Line: 31006

//  <item> SFDITEM_FIELD__TIMER0_DTLOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400180B8) DTI Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_DTLOCK >> 0) & 0xFFFF), ((TIMER0_DTLOCK = (TIMER0_DTLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: TIMER0_DTLOCK  ---------------------------------
// SVD Line: 30997

//  <rtree> SFDITEM_REG__TIMER0_DTLOCK
//    <name> DTLOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400180B8) DTI Configuration Lock Register </i>
//    <loc> ( (unsigned int)((TIMER0_DTLOCK >> 0) & 0xFFFFFFFF), ((TIMER0_DTLOCK = (TIMER0_DTLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DTLOCK_LOCKKEY </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER0  ------------------------------------
// SVD Line: 26970

//  <view> TIMER0
//    <name> TIMER0 </name>
//    <item> SFDITEM_REG__TIMER0_CTRL </item>
//    <item> SFDITEM_REG__TIMER0_CMD </item>
//    <item> SFDITEM_REG__TIMER0_STATUS </item>
//    <item> SFDITEM_REG__TIMER0_IF </item>
//    <item> SFDITEM_REG__TIMER0_IFS </item>
//    <item> SFDITEM_REG__TIMER0_IFC </item>
//    <item> SFDITEM_REG__TIMER0_IEN </item>
//    <item> SFDITEM_REG__TIMER0_TOP </item>
//    <item> SFDITEM_REG__TIMER0_TOPB </item>
//    <item> SFDITEM_REG__TIMER0_CNT </item>
//    <item> SFDITEM_REG__TIMER0_LOCK </item>
//    <item> SFDITEM_REG__TIMER0_ROUTEPEN </item>
//    <item> SFDITEM_REG__TIMER0_ROUTELOC0 </item>
//    <item> SFDITEM_REG__TIMER0_ROUTELOC2 </item>
//    <item> SFDITEM_REG__TIMER0_CC0_CTRL </item>
//    <item> SFDITEM_REG__TIMER0_CC0_CCVP </item>
//    <item> SFDITEM_REG__TIMER0_CC0_CCVB </item>
//    <item> SFDITEM_REG__TIMER0_CC1_CTRL </item>
//    <item> SFDITEM_REG__TIMER0_CC1_CCVP </item>
//    <item> SFDITEM_REG__TIMER0_CC1_CCVB </item>
//    <item> SFDITEM_REG__TIMER0_CC2_CTRL </item>
//    <item> SFDITEM_REG__TIMER0_CC2_CCVP </item>
//    <item> SFDITEM_REG__TIMER0_CC2_CCVB </item>
//    <item> SFDITEM_REG__TIMER0_CC3_CTRL </item>
//    <item> SFDITEM_REG__TIMER0_CC3_CCVP </item>
//    <item> SFDITEM_REG__TIMER0_CC3_CCVB </item>
//    <item> SFDITEM_REG__TIMER0_DTCTRL </item>
//    <item> SFDITEM_REG__TIMER0_DTTIME </item>
//    <item> SFDITEM_REG__TIMER0_DTFC </item>
//    <item> SFDITEM_REG__TIMER0_DTOGEN </item>
//    <item> SFDITEM_REG__TIMER0_DTFAULT </item>
//    <item> SFDITEM_REG__TIMER0_DTFAULTC </item>
//    <item> SFDITEM_REG__TIMER0_DTLOCK </item>
//  </view>
//  


// ---------------------------  Register Item Address: TIMER1_CTRL  -------------------------------
// SVD Line: 31041

unsigned int TIMER1_CTRL __AT (0x40018400);



// ------------------------------  Field Item: TIMER1_CTRL_MODE  ----------------------------------
// SVD Line: 31050

//  <item> SFDITEM_FIELD__TIMER1_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018400) \nTimer Mode\n0 : UP = Up-count mode\n1 : DOWN = Down-count mode\n2 : UPDOWN = Up/down-count mode\n3 : QDEC = Quadrature decoder mode </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: UP = Up-count mode
//        <1=> 1: DOWN = Down-count mode
//        <2=> 2: UPDOWN = Up/down-count mode
//        <3=> 3: QDEC = Quadrature decoder mode
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_SYNC  ----------------------------------
// SVD Line: 31079

//  <item> SFDITEM_FIELD__TIMER1_CTRL_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40018400) Timer Start/Stop/Reload Synchronization </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.3..3> SYNC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_OSMEN  ---------------------------------
// SVD Line: 31086

//  <item> SFDITEM_FIELD__TIMER1_CTRL_OSMEN
//    <name> OSMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018400) One-shot Mode Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.4..4> OSMEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CTRL_QDM  ----------------------------------
// SVD Line: 31093

//  <item> SFDITEM_FIELD__TIMER1_CTRL_QDM
//    <name> QDM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018400) Quadrature Decoder Mode Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.5..5> QDM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CTRL_DEBUGRUN  --------------------------------
// SVD Line: 31100

//  <item> SFDITEM_FIELD__TIMER1_CTRL_DEBUGRUN
//    <name> DEBUGRUN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018400) Debug Mode Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.6..6> DEBUGRUN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CTRL_DMACLRACT  -------------------------------
// SVD Line: 31107

//  <item> SFDITEM_FIELD__TIMER1_CTRL_DMACLRACT
//    <name> DMACLRACT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018400) DMA Request Clear on Active </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.7..7> DMACLRACT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_RISEA  ---------------------------------
// SVD Line: 31114

//  <item> SFDITEM_FIELD__TIMER1_CTRL_RISEA
//    <name> RISEA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018400) \nTimer Rising Input Edge Action\n0 : NONE = No action\n1 : START = Start counter without reload\n2 : STOP = Stop counter without reload\n3 : RELOADSTART = Reload and start counter </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.9..8> RISEA
//        <0=> 0: NONE = No action
//        <1=> 1: START = Start counter without reload
//        <2=> 2: STOP = Stop counter without reload
//        <3=> 3: RELOADSTART = Reload and start counter
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_FALLA  ---------------------------------
// SVD Line: 31143

//  <item> SFDITEM_FIELD__TIMER1_CTRL_FALLA
//    <name> FALLA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018400) \nTimer Falling Input Edge Action\n0 : NONE = No action\n1 : START = Start counter without reload\n2 : STOP = Stop counter without reload\n3 : RELOADSTART = Reload and start counter </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.11..10> FALLA
//        <0=> 0: NONE = No action
//        <1=> 1: START = Start counter without reload
//        <2=> 2: STOP = Stop counter without reload
//        <3=> 3: RELOADSTART = Reload and start counter
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_X2CNT  ---------------------------------
// SVD Line: 31172

//  <item> SFDITEM_FIELD__TIMER1_CTRL_X2CNT
//    <name> X2CNT </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40018400) 2x Count Mode </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.13..13> X2CNT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CTRL_CLKSEL  ---------------------------------
// SVD Line: 31179

//  <item> SFDITEM_FIELD__TIMER1_CTRL_CLKSEL
//    <name> CLKSEL </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40018400) \nClock Source Select\n0 : PRESCHFPERCLK = Prescaled HFPERCLK\n1 : CC1 = Compare/Capture Channel 1 Input\n2 : TIMEROUF = Timer is clocked by underflow(down-count) or overflow(up-count) in the lower numbered neighbor Timer\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.17..16> CLKSEL
//        <0=> 0: PRESCHFPERCLK = Prescaled HFPERCLK
//        <1=> 1: CC1 = Compare/Capture Channel 1 Input
//        <2=> 2: TIMEROUF = Timer is clocked by underflow(down-count) or overflow(up-count) in the lower numbered neighbor Timer
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CTRL_PRESC  ---------------------------------
// SVD Line: 31203

//  <item> SFDITEM_FIELD__TIMER1_CTRL_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40018400) \nPrescaler Setting\n0 : DIV1 = The HFPERCLK is undivided\n1 : DIV2 = The HFPERCLK is divided by 2\n2 : DIV4 = The HFPERCLK is divided by 4\n3 : DIV8 = The HFPERCLK is divided by 8\n4 : DIV16 = The HFPERCLK is divided by 16\n5 : DIV32 = The HFPERCLK is divided by 32\n6 : DIV64 = The HFPERCLK is divided by 64\n7 : DIV128 = The HFPERCLK is divided by 128\n8 : DIV256 = The HFPERCLK is divided by 256\n9 : DIV512 = The HFPERCLK is divided by 512\n10 : DIV1024 = The HFPERCLK is divided by 1024\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.27..24> PRESC
//        <0=> 0: DIV1 = The HFPERCLK is undivided
//        <1=> 1: DIV2 = The HFPERCLK is divided by 2
//        <2=> 2: DIV4 = The HFPERCLK is divided by 4
//        <3=> 3: DIV8 = The HFPERCLK is divided by 8
//        <4=> 4: DIV16 = The HFPERCLK is divided by 16
//        <5=> 5: DIV32 = The HFPERCLK is divided by 32
//        <6=> 6: DIV64 = The HFPERCLK is divided by 64
//        <7=> 7: DIV128 = The HFPERCLK is divided by 128
//        <8=> 8: DIV256 = The HFPERCLK is divided by 256
//        <9=> 9: DIV512 = The HFPERCLK is divided by 512
//        <10=> 10: DIV1024 = The HFPERCLK is divided by 1024
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CTRL_ATI  ----------------------------------
// SVD Line: 31267

//  <item> SFDITEM_FIELD__TIMER1_CTRL_ATI
//    <name> ATI </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018400) Always Track Inputs </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.28..28> ATI
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CTRL_RSSCOIST  --------------------------------
// SVD Line: 31274

//  <item> SFDITEM_FIELD__TIMER1_CTRL_RSSCOIST
//    <name> RSSCOIST </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018400) Reload-Start Sets Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CTRL ) </loc>
//      <o.29..29> RSSCOIST
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CTRL  ----------------------------------
// SVD Line: 31041

//  <rtree> SFDITEM_REG__TIMER1_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018400) Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_CTRL >> 0) & 0xFFFFFFFF), ((TIMER1_CTRL = (TIMER1_CTRL & ~(0x3F032FFBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F032FFB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_SYNC </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_OSMEN </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_QDM </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_DEBUGRUN </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_DMACLRACT </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_RISEA </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_FALLA </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_X2CNT </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_CLKSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_PRESC </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_ATI </item>
//    <item> SFDITEM_FIELD__TIMER1_CTRL_RSSCOIST </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_CMD  -------------------------------
// SVD Line: 31283

unsigned int TIMER1_CMD __AT (0x40018404);



// ------------------------------  Field Item: TIMER1_CMD_START  ----------------------------------
// SVD Line: 31292

//  <item> SFDITEM_FIELD__TIMER1_CMD_START
//    <name> START </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40018404) Start Timer </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CMD ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CMD_STOP  ----------------------------------
// SVD Line: 31299

//  <item> SFDITEM_FIELD__TIMER1_CMD_STOP
//    <name> STOP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40018404) Stop Timer </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CMD ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CMD  -----------------------------------
// SVD Line: 31283

//  <rtree> SFDITEM_REG__TIMER1_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40018404) Command Register </i>
//    <loc> ( (unsigned int)((TIMER1_CMD >> 0) & 0xFFFFFFFF), ((TIMER1_CMD = (TIMER1_CMD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CMD_START </item>
//    <item> SFDITEM_FIELD__TIMER1_CMD_STOP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER1_STATUS  ------------------------------
// SVD Line: 31308

unsigned int TIMER1_STATUS __AT (0x40018408);



// ----------------------------  Field Item: TIMER1_STATUS_RUNNING  -------------------------------
// SVD Line: 31317

//  <item> SFDITEM_FIELD__TIMER1_STATUS_RUNNING
//    <name> RUNNING </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40018408) Running </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.0..0> RUNNING
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_STATUS_DIR  ---------------------------------
// SVD Line: 31324

//  <item> SFDITEM_FIELD__TIMER1_STATUS_DIR
//    <name> DIR </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40018408) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.1..1> DIR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_STATUS_TOPBV  --------------------------------
// SVD Line: 31331

//  <item> SFDITEM_FIELD__TIMER1_STATUS_TOPBV
//    <name> TOPBV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40018408) TOPB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.2..2> TOPBV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCVBV0  --------------------------------
// SVD Line: 31338

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV0
//    <name> CCVBV0 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40018408) CC0 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.8..8> CCVBV0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCVBV1  --------------------------------
// SVD Line: 31345

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV1
//    <name> CCVBV1 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40018408) CC1 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.9..9> CCVBV1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCVBV2  --------------------------------
// SVD Line: 31352

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV2
//    <name> CCVBV2 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40018408) CC2 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.10..10> CCVBV2
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCVBV3  --------------------------------
// SVD Line: 31359

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV3
//    <name> CCVBV3 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40018408) CC3 CCVB Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.11..11> CCVBV3
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_STATUS_ICV0  ---------------------------------
// SVD Line: 31366

//  <item> SFDITEM_FIELD__TIMER1_STATUS_ICV0
//    <name> ICV0 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40018408) CC0 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.16..16> ICV0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_STATUS_ICV1  ---------------------------------
// SVD Line: 31373

//  <item> SFDITEM_FIELD__TIMER1_STATUS_ICV1
//    <name> ICV1 </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x40018408) CC1 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.17..17> ICV1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_STATUS_ICV2  ---------------------------------
// SVD Line: 31380

//  <item> SFDITEM_FIELD__TIMER1_STATUS_ICV2
//    <name> ICV2 </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x40018408) CC2 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.18..18> ICV2
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_STATUS_ICV3  ---------------------------------
// SVD Line: 31387

//  <item> SFDITEM_FIELD__TIMER1_STATUS_ICV3
//    <name> ICV3 </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x40018408) CC3 Input Capture Valid </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.19..19> ICV3
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCPOL0  --------------------------------
// SVD Line: 31394

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL0
//    <name> CCPOL0 </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40018408) CC0 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.24..24> CCPOL0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCPOL1  --------------------------------
// SVD Line: 31401

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL1
//    <name> CCPOL1 </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40018408) CC1 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.25..25> CCPOL1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCPOL2  --------------------------------
// SVD Line: 31408

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL2
//    <name> CCPOL2 </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40018408) CC2 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.26..26> CCPOL2
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_STATUS_CCPOL3  --------------------------------
// SVD Line: 31415

//  <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL3
//    <name> CCPOL3 </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x40018408) CC3 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_STATUS ) </loc>
//      <o.27..27> CCPOL3
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER1_STATUS  ---------------------------------
// SVD Line: 31308

//  <rtree> SFDITEM_REG__TIMER1_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018408) Status Register </i>
//    <loc> ( (unsigned int)((TIMER1_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_RUNNING </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_DIR </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_TOPBV </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV0 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV1 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV2 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCVBV3 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_ICV0 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_ICV1 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_ICV2 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_ICV3 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL0 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL1 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL2 </item>
//    <item> SFDITEM_FIELD__TIMER1_STATUS_CCPOL3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_IF  --------------------------------
// SVD Line: 31424

unsigned int TIMER1_IF __AT (0x4001840C);



// --------------------------------  Field Item: TIMER1_IF_OF  ------------------------------------
// SVD Line: 31433

//  <item> SFDITEM_FIELD__TIMER1_IF_OF
//    <name> OF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001840C) Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IF_UF  ------------------------------------
// SVD Line: 31440

//  <item> SFDITEM_FIELD__TIMER1_IF_UF
//    <name> UF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001840C) Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IF_DIRCHG  ----------------------------------
// SVD Line: 31447

//  <item> SFDITEM_FIELD__TIMER1_IF_DIRCHG
//    <name> DIRCHG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001840C) Direction Change Detect Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IF_CC0  -----------------------------------
// SVD Line: 31454

//  <item> SFDITEM_FIELD__TIMER1_IF_CC0
//    <name> CC0 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001840C) CC Channel 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IF_CC1  -----------------------------------
// SVD Line: 31461

//  <item> SFDITEM_FIELD__TIMER1_IF_CC1
//    <name> CC1 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4001840C) CC Channel 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IF_CC2  -----------------------------------
// SVD Line: 31468

//  <item> SFDITEM_FIELD__TIMER1_IF_CC2
//    <name> CC2 </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4001840C) CC Channel 2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IF_CC3  -----------------------------------
// SVD Line: 31475

//  <item> SFDITEM_FIELD__TIMER1_IF_CC3
//    <name> CC3 </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001840C) CC Channel 3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IF_ICBOF0  ----------------------------------
// SVD Line: 31482

//  <item> SFDITEM_FIELD__TIMER1_IF_ICBOF0
//    <name> ICBOF0 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4001840C) CC Channel 0 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IF_ICBOF1  ----------------------------------
// SVD Line: 31489

//  <item> SFDITEM_FIELD__TIMER1_IF_ICBOF1
//    <name> ICBOF1 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4001840C) CC Channel 1 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IF_ICBOF2  ----------------------------------
// SVD Line: 31496

//  <item> SFDITEM_FIELD__TIMER1_IF_ICBOF2
//    <name> ICBOF2 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4001840C) CC Channel 2 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IF_ICBOF3  ----------------------------------
// SVD Line: 31503

//  <item> SFDITEM_FIELD__TIMER1_IF_ICBOF3
//    <name> ICBOF3 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4001840C) CC Channel 3 Input Capture Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IF ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIMER1_IF  -----------------------------------
// SVD Line: 31424

//  <rtree> SFDITEM_REG__TIMER1_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001840C) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((TIMER1_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_IF_OF </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_UF </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IF_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_IFS  -------------------------------
// SVD Line: 31512

unsigned int TIMER1_IFS __AT (0x40018410);



// --------------------------------  Field Item: TIMER1_IFS_OF  -----------------------------------
// SVD Line: 31521

//  <item> SFDITEM_FIELD__TIMER1_IFS_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40018410) Set OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IFS_UF  -----------------------------------
// SVD Line: 31528

//  <item> SFDITEM_FIELD__TIMER1_IFS_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40018410) Set UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFS_DIRCHG  ---------------------------------
// SVD Line: 31535

//  <item> SFDITEM_FIELD__TIMER1_IFS_DIRCHG
//    <name> DIRCHG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40018410) Set DIRCHG Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFS_CC0  -----------------------------------
// SVD Line: 31542

//  <item> SFDITEM_FIELD__TIMER1_IFS_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40018410) Set CC0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFS_CC1  -----------------------------------
// SVD Line: 31549

//  <item> SFDITEM_FIELD__TIMER1_IFS_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40018410) Set CC1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFS_CC2  -----------------------------------
// SVD Line: 31556

//  <item> SFDITEM_FIELD__TIMER1_IFS_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40018410) Set CC2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFS_CC3  -----------------------------------
// SVD Line: 31563

//  <item> SFDITEM_FIELD__TIMER1_IFS_CC3
//    <name> CC3 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40018410) Set CC3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFS_ICBOF0  ---------------------------------
// SVD Line: 31570

//  <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF0
//    <name> ICBOF0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40018410) Set ICBOF0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFS_ICBOF1  ---------------------------------
// SVD Line: 31577

//  <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF1
//    <name> ICBOF1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40018410) Set ICBOF1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFS_ICBOF2  ---------------------------------
// SVD Line: 31584

//  <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF2
//    <name> ICBOF2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40018410) Set ICBOF2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFS_ICBOF3  ---------------------------------
// SVD Line: 31591

//  <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF3
//    <name> ICBOF3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40018410) Set ICBOF3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFS ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_IFS  -----------------------------------
// SVD Line: 31512

//  <rtree> SFDITEM_REG__TIMER1_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40018410) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((TIMER1_IFS >> 0) & 0xFFFFFFFF), ((TIMER1_IFS = (TIMER1_IFS & ~(0xFF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_IFS_OF </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_UF </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFS_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_IFC  -------------------------------
// SVD Line: 31600

unsigned int TIMER1_IFC __AT (0x40018414);



// --------------------------------  Field Item: TIMER1_IFC_OF  -----------------------------------
// SVD Line: 31609

//  <item> SFDITEM_FIELD__TIMER1_IFC_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40018414) Clear OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IFC_UF  -----------------------------------
// SVD Line: 31616

//  <item> SFDITEM_FIELD__TIMER1_IFC_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40018414) Clear UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFC_DIRCHG  ---------------------------------
// SVD Line: 31623

//  <item> SFDITEM_FIELD__TIMER1_IFC_DIRCHG
//    <name> DIRCHG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40018414) Clear DIRCHG Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFC_CC0  -----------------------------------
// SVD Line: 31630

//  <item> SFDITEM_FIELD__TIMER1_IFC_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40018414) Clear CC0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFC_CC1  -----------------------------------
// SVD Line: 31637

//  <item> SFDITEM_FIELD__TIMER1_IFC_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40018414) Clear CC1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFC_CC2  -----------------------------------
// SVD Line: 31644

//  <item> SFDITEM_FIELD__TIMER1_IFC_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40018414) Clear CC2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IFC_CC3  -----------------------------------
// SVD Line: 31651

//  <item> SFDITEM_FIELD__TIMER1_IFC_CC3
//    <name> CC3 </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40018414) Clear CC3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFC_ICBOF0  ---------------------------------
// SVD Line: 31658

//  <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF0
//    <name> ICBOF0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40018414) Clear ICBOF0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFC_ICBOF1  ---------------------------------
// SVD Line: 31665

//  <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF1
//    <name> ICBOF1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40018414) Clear ICBOF1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFC_ICBOF2  ---------------------------------
// SVD Line: 31672

//  <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF2
//    <name> ICBOF2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40018414) Clear ICBOF2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IFC_ICBOF3  ---------------------------------
// SVD Line: 31679

//  <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF3
//    <name> ICBOF3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40018414) Clear ICBOF3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IFC ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_IFC  -----------------------------------
// SVD Line: 31600

//  <rtree> SFDITEM_REG__TIMER1_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40018414) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((TIMER1_IFC >> 0) & 0xFFFFFFFF), ((TIMER1_IFC = (TIMER1_IFC & ~(0xFF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_IFC_OF </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_UF </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IFC_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_IEN  -------------------------------
// SVD Line: 31688

unsigned int TIMER1_IEN __AT (0x40018418);



// --------------------------------  Field Item: TIMER1_IEN_OF  -----------------------------------
// SVD Line: 31697

//  <item> SFDITEM_FIELD__TIMER1_IEN_OF
//    <name> OF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018418) OF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_IEN_UF  -----------------------------------
// SVD Line: 31704

//  <item> SFDITEM_FIELD__TIMER1_IEN_UF
//    <name> UF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40018418) UF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.1..1> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IEN_DIRCHG  ---------------------------------
// SVD Line: 31711

//  <item> SFDITEM_FIELD__TIMER1_IEN_DIRCHG
//    <name> DIRCHG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018418) DIRCHG Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.2..2> DIRCHG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IEN_CC0  -----------------------------------
// SVD Line: 31718

//  <item> SFDITEM_FIELD__TIMER1_IEN_CC0
//    <name> CC0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018418) CC0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.4..4> CC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IEN_CC1  -----------------------------------
// SVD Line: 31725

//  <item> SFDITEM_FIELD__TIMER1_IEN_CC1
//    <name> CC1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018418) CC1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.5..5> CC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IEN_CC2  -----------------------------------
// SVD Line: 31732

//  <item> SFDITEM_FIELD__TIMER1_IEN_CC2
//    <name> CC2 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018418) CC2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.6..6> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_IEN_CC3  -----------------------------------
// SVD Line: 31739

//  <item> SFDITEM_FIELD__TIMER1_IEN_CC3
//    <name> CC3 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018418) CC3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.7..7> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IEN_ICBOF0  ---------------------------------
// SVD Line: 31746

//  <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF0
//    <name> ICBOF0 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40018418) ICBOF0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.8..8> ICBOF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IEN_ICBOF1  ---------------------------------
// SVD Line: 31753

//  <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF1
//    <name> ICBOF1 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40018418) ICBOF1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.9..9> ICBOF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IEN_ICBOF2  ---------------------------------
// SVD Line: 31760

//  <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF2
//    <name> ICBOF2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40018418) ICBOF2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.10..10> ICBOF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_IEN_ICBOF3  ---------------------------------
// SVD Line: 31767

//  <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF3
//    <name> ICBOF3 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40018418) ICBOF3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_IEN ) </loc>
//      <o.11..11> ICBOF3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_IEN  -----------------------------------
// SVD Line: 31688

//  <rtree> SFDITEM_REG__TIMER1_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018418) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((TIMER1_IEN >> 0) & 0xFFFFFFFF), ((TIMER1_IEN = (TIMER1_IEN & ~(0xFF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_IEN_OF </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_UF </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_DIRCHG </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_CC0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_CC1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_CC2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_CC3 </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF0 </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF1 </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF2 </item>
//    <item> SFDITEM_FIELD__TIMER1_IEN_ICBOF3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_TOP  -------------------------------
// SVD Line: 31776

unsigned int TIMER1_TOP __AT (0x4001841C);



// -------------------------------  Field Item: TIMER1_TOP_TOP  -----------------------------------
// SVD Line: 31785

//  <item> SFDITEM_FIELD__TIMER1_TOP_TOP
//    <name> TOP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001841C) Counter Top Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_TOP >> 0) & 0xFFFF), ((TIMER1_TOP = (TIMER1_TOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_TOP  -----------------------------------
// SVD Line: 31776

//  <rtree> SFDITEM_REG__TIMER1_TOP
//    <name> TOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001841C) Counter Top Value Register </i>
//    <loc> ( (unsigned int)((TIMER1_TOP >> 0) & 0xFFFFFFFF), ((TIMER1_TOP = (TIMER1_TOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_TOP_TOP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_TOPB  -------------------------------
// SVD Line: 31794

unsigned int TIMER1_TOPB __AT (0x40018420);



// ------------------------------  Field Item: TIMER1_TOPB_TOPB  ----------------------------------
// SVD Line: 31803

//  <item> SFDITEM_FIELD__TIMER1_TOPB_TOPB
//    <name> TOPB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40018420) Counter Top Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_TOPB >> 0) & 0xFFFF), ((TIMER1_TOPB = (TIMER1_TOPB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_TOPB  ----------------------------------
// SVD Line: 31794

//  <rtree> SFDITEM_REG__TIMER1_TOPB
//    <name> TOPB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018420) Counter Top Value Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER1_TOPB >> 0) & 0xFFFFFFFF), ((TIMER1_TOPB = (TIMER1_TOPB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_TOPB_TOPB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_CNT  -------------------------------
// SVD Line: 31812

unsigned int TIMER1_CNT __AT (0x40018424);



// -------------------------------  Field Item: TIMER1_CNT_CNT  -----------------------------------
// SVD Line: 31821

//  <item> SFDITEM_FIELD__TIMER1_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40018424) Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CNT >> 0) & 0xFFFF), ((TIMER1_CNT = (TIMER1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CNT  -----------------------------------
// SVD Line: 31812

//  <rtree> SFDITEM_REG__TIMER1_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018424) Counter Value Register </i>
//    <loc> ( (unsigned int)((TIMER1_CNT >> 0) & 0xFFFFFFFF), ((TIMER1_CNT = (TIMER1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CNT_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_LOCK  -------------------------------
// SVD Line: 31830

unsigned int TIMER1_LOCK __AT (0x4001842C);



// --------------------------  Field Item: TIMER1_LOCK_TIMERLOCKKEY  ------------------------------
// SVD Line: 31839

//  <item> SFDITEM_FIELD__TIMER1_LOCK_TIMERLOCKKEY
//    <name> TIMERLOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001842C) Timer Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_LOCK >> 0) & 0xFFFF), ((TIMER1_LOCK = (TIMER1_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_LOCK  ----------------------------------
// SVD Line: 31830

//  <rtree> SFDITEM_REG__TIMER1_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001842C) TIMER Configuration Lock Register </i>
//    <loc> ( (unsigned int)((TIMER1_LOCK >> 0) & 0xFFFFFFFF), ((TIMER1_LOCK = (TIMER1_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_LOCK_TIMERLOCKKEY </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_ROUTEPEN  -----------------------------
// SVD Line: 31858

unsigned int TIMER1_ROUTEPEN __AT (0x40018430);



// ---------------------------  Field Item: TIMER1_ROUTEPEN_CC0PEN  -------------------------------
// SVD Line: 31867

//  <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC0PEN
//    <name> CC0PEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018430) CC Channel 0 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_ROUTEPEN ) </loc>
//      <o.0..0> CC0PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_ROUTEPEN_CC1PEN  -------------------------------
// SVD Line: 31874

//  <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC1PEN
//    <name> CC1PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40018430) CC Channel 1 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_ROUTEPEN ) </loc>
//      <o.1..1> CC1PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_ROUTEPEN_CC2PEN  -------------------------------
// SVD Line: 31881

//  <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC2PEN
//    <name> CC2PEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018430) CC Channel 2 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_ROUTEPEN ) </loc>
//      <o.2..2> CC2PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_ROUTEPEN_CC3PEN  -------------------------------
// SVD Line: 31888

//  <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC3PEN
//    <name> CC3PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40018430) CC Channel 3 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_ROUTEPEN ) </loc>
//      <o.3..3> CC3PEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_ROUTEPEN_CDTI0PEN  ------------------------------
// SVD Line: 31895

//  <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CDTI0PEN
//    <name> CDTI0PEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40018430) CC Channel 0 Complementary Dead-Time Insertion Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_ROUTEPEN ) </loc>
//      <o.8..8> CDTI0PEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_ROUTEPEN_CDTI1PEN  ------------------------------
// SVD Line: 31902

//  <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CDTI1PEN
//    <name> CDTI1PEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40018430) CC Channel 1 Complementary Dead-Time Insertion Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_ROUTEPEN ) </loc>
//      <o.9..9> CDTI1PEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_ROUTEPEN_CDTI2PEN  ------------------------------
// SVD Line: 31909

//  <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CDTI2PEN
//    <name> CDTI2PEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40018430) CC Channel 2 Complementary Dead-Time Insertion Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_ROUTEPEN ) </loc>
//      <o.10..10> CDTI2PEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_ROUTEPEN  --------------------------------
// SVD Line: 31858

//  <rtree> SFDITEM_REG__TIMER1_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018430) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((TIMER1_ROUTEPEN >> 0) & 0xFFFFFFFF), ((TIMER1_ROUTEPEN = (TIMER1_ROUTEPEN & ~(0x70FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC0PEN </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC1PEN </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC2PEN </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CC3PEN </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CDTI0PEN </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CDTI1PEN </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTEPEN_CDTI2PEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_ROUTELOC0  ----------------------------
// SVD Line: 31918

unsigned int TIMER1_ROUTELOC0 __AT (0x40018434);



// ---------------------------  Field Item: TIMER1_ROUTELOC0_CC0LOC  ------------------------------
// SVD Line: 31927

//  <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC0LOC
//    <name> CC0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40018434) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_ROUTELOC0 ) </loc>
//      <o.5..0> CC0LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_ROUTELOC0_CC1LOC  ------------------------------
// SVD Line: 32096

//  <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC1LOC
//    <name> CC1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40018434) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_ROUTELOC0 ) </loc>
//      <o.13..8> CC1LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_ROUTELOC0_CC2LOC  ------------------------------
// SVD Line: 32265

//  <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC2LOC
//    <name> CC2LOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40018434) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_ROUTELOC0 ) </loc>
//      <o.21..16> CC2LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_ROUTELOC0_CC3LOC  ------------------------------
// SVD Line: 32434

//  <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC3LOC
//    <name> CC3LOC </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40018434) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_ROUTELOC0 ) </loc>
//      <o.29..24> CC3LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: TIMER1_ROUTELOC0  --------------------------------
// SVD Line: 31918

//  <rtree> SFDITEM_REG__TIMER1_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018434) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((TIMER1_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((TIMER1_ROUTELOC0 = (TIMER1_ROUTELOC0 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC0LOC </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC1LOC </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC2LOC </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTELOC0_CC3LOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_ROUTELOC2  ----------------------------
// SVD Line: 32605

unsigned int TIMER1_ROUTELOC2 __AT (0x4001843C);



// --------------------------  Field Item: TIMER1_ROUTELOC2_CDTI0LOC  -----------------------------
// SVD Line: 32614

//  <item> SFDITEM_FIELD__TIMER1_ROUTELOC2_CDTI0LOC
//    <name> CDTI0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4001843C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_ROUTELOC2 ) </loc>
//      <o.5..0> CDTI0LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_ROUTELOC2_CDTI1LOC  -----------------------------
// SVD Line: 32783

//  <item> SFDITEM_FIELD__TIMER1_ROUTELOC2_CDTI1LOC
//    <name> CDTI1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x4001843C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_ROUTELOC2 ) </loc>
//      <o.13..8> CDTI1LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_ROUTELOC2_CDTI2LOC  -----------------------------
// SVD Line: 32952

//  <item> SFDITEM_FIELD__TIMER1_ROUTELOC2_CDTI2LOC
//    <name> CDTI2LOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x4001843C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_ROUTELOC2 ) </loc>
//      <o.21..16> CDTI2LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: TIMER1_ROUTELOC2  --------------------------------
// SVD Line: 32605

//  <rtree> SFDITEM_REG__TIMER1_ROUTELOC2
//    <name> ROUTELOC2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001843C) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((TIMER1_ROUTELOC2 >> 0) & 0xFFFFFFFF), ((TIMER1_ROUTELOC2 = (TIMER1_ROUTELOC2 & ~(0x3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_ROUTELOC2_CDTI0LOC </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTELOC2_CDTI1LOC </item>
//    <item> SFDITEM_FIELD__TIMER1_ROUTELOC2_CDTI2LOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC0_CTRL  -----------------------------
// SVD Line: 33123

unsigned int TIMER1_CC0_CTRL __AT (0x40018460);



// ----------------------------  Field Item: TIMER1_CC0_CTRL_MODE  --------------------------------
// SVD Line: 33132

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018460) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC0_CTRL_OUTINV  -------------------------------
// SVD Line: 33161

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018460) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC0_CTRL_COIST  -------------------------------
// SVD Line: 33168

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018460) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC0_CTRL_CMOA  --------------------------------
// SVD Line: 33175

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018460) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC0_CTRL_COFOA  -------------------------------
// SVD Line: 33204

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018460) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC0_CTRL_CUFOA  -------------------------------
// SVD Line: 33233

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018460) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC0_CTRL_PRSSEL  -------------------------------
// SVD Line: 33262

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018460) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC0_CTRL_ICEDGE  -------------------------------
// SVD Line: 33331

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018460) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_CC0_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 33360

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018460) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC0_CTRL_PRSCONF  ------------------------------
// SVD Line: 33389

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018460) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC0_CTRL_INSEL  -------------------------------
// SVD Line: 33396

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018460) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC0_CTRL_FILT  --------------------------------
// SVD Line: 33403

//  <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018460) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC0_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC0_CTRL  --------------------------------
// SVD Line: 33123

//  <rtree> SFDITEM_REG__TIMER1_CC0_CTRL
//    <name> CC0_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018460) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC0_CTRL >> 0) & 0xFFFFFFFF), ((TIMER1_CC0_CTRL = (TIMER1_CC0_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC0_CCVP  -----------------------------
// SVD Line: 33431

unsigned int TIMER1_CC0_CCVP __AT (0x40018468);



// ----------------------------  Field Item: TIMER1_CC0_CCVP_CCVP  --------------------------------
// SVD Line: 33440

//  <item> SFDITEM_FIELD__TIMER1_CC0_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018468) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC0_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC0_CCVP  --------------------------------
// SVD Line: 33431

//  <rtree> SFDITEM_REG__TIMER1_CC0_CCVP
//    <name> CC0_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018468) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC0_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC0_CCVB  -----------------------------
// SVD Line: 33449

unsigned int TIMER1_CC0_CCVB __AT (0x4001846C);



// ----------------------------  Field Item: TIMER1_CC0_CCVB_CCVB  --------------------------------
// SVD Line: 33458

//  <item> SFDITEM_FIELD__TIMER1_CC0_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001846C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC0_CCVB >> 0) & 0xFFFF), ((TIMER1_CC0_CCVB = (TIMER1_CC0_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC0_CCVB  --------------------------------
// SVD Line: 33449

//  <rtree> SFDITEM_REG__TIMER1_CC0_CCVB
//    <name> CC0_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001846C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC0_CCVB >> 0) & 0xFFFFFFFF), ((TIMER1_CC0_CCVB = (TIMER1_CC0_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC0_CCVB_CCVB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC1_CTRL  -----------------------------
// SVD Line: 33467

unsigned int TIMER1_CC1_CTRL __AT (0x40018470);



// ----------------------------  Field Item: TIMER1_CC1_CTRL_MODE  --------------------------------
// SVD Line: 33476

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018470) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC1_CTRL_OUTINV  -------------------------------
// SVD Line: 33505

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018470) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC1_CTRL_COIST  -------------------------------
// SVD Line: 33512

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018470) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC1_CTRL_CMOA  --------------------------------
// SVD Line: 33519

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018470) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC1_CTRL_COFOA  -------------------------------
// SVD Line: 33548

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018470) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC1_CTRL_CUFOA  -------------------------------
// SVD Line: 33577

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018470) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC1_CTRL_PRSSEL  -------------------------------
// SVD Line: 33606

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018470) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC1_CTRL_ICEDGE  -------------------------------
// SVD Line: 33675

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018470) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_CC1_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 33704

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018470) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC1_CTRL_PRSCONF  ------------------------------
// SVD Line: 33733

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018470) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC1_CTRL_INSEL  -------------------------------
// SVD Line: 33740

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018470) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC1_CTRL_FILT  --------------------------------
// SVD Line: 33747

//  <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018470) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC1_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC1_CTRL  --------------------------------
// SVD Line: 33467

//  <rtree> SFDITEM_REG__TIMER1_CC1_CTRL
//    <name> CC1_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018470) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC1_CTRL >> 0) & 0xFFFFFFFF), ((TIMER1_CC1_CTRL = (TIMER1_CC1_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC1_CCVP  -----------------------------
// SVD Line: 33775

unsigned int TIMER1_CC1_CCVP __AT (0x40018478);



// ----------------------------  Field Item: TIMER1_CC1_CCVP_CCVP  --------------------------------
// SVD Line: 33784

//  <item> SFDITEM_FIELD__TIMER1_CC1_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018478) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC1_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC1_CCVP  --------------------------------
// SVD Line: 33775

//  <rtree> SFDITEM_REG__TIMER1_CC1_CCVP
//    <name> CC1_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018478) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC1_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC1_CCVB  -----------------------------
// SVD Line: 33793

unsigned int TIMER1_CC1_CCVB __AT (0x4001847C);



// ----------------------------  Field Item: TIMER1_CC1_CCVB_CCVB  --------------------------------
// SVD Line: 33802

//  <item> SFDITEM_FIELD__TIMER1_CC1_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001847C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC1_CCVB >> 0) & 0xFFFF), ((TIMER1_CC1_CCVB = (TIMER1_CC1_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC1_CCVB  --------------------------------
// SVD Line: 33793

//  <rtree> SFDITEM_REG__TIMER1_CC1_CCVB
//    <name> CC1_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001847C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC1_CCVB >> 0) & 0xFFFFFFFF), ((TIMER1_CC1_CCVB = (TIMER1_CC1_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC1_CCVB_CCVB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC2_CTRL  -----------------------------
// SVD Line: 33811

unsigned int TIMER1_CC2_CTRL __AT (0x40018480);



// ----------------------------  Field Item: TIMER1_CC2_CTRL_MODE  --------------------------------
// SVD Line: 33820

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018480) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC2_CTRL_OUTINV  -------------------------------
// SVD Line: 33849

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018480) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC2_CTRL_COIST  -------------------------------
// SVD Line: 33856

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018480) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC2_CTRL_CMOA  --------------------------------
// SVD Line: 33863

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018480) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC2_CTRL_COFOA  -------------------------------
// SVD Line: 33892

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018480) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC2_CTRL_CUFOA  -------------------------------
// SVD Line: 33921

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018480) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC2_CTRL_PRSSEL  -------------------------------
// SVD Line: 33950

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018480) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC2_CTRL_ICEDGE  -------------------------------
// SVD Line: 34019

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018480) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_CC2_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 34048

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018480) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC2_CTRL_PRSCONF  ------------------------------
// SVD Line: 34077

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018480) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC2_CTRL_INSEL  -------------------------------
// SVD Line: 34084

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018480) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC2_CTRL_FILT  --------------------------------
// SVD Line: 34091

//  <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018480) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC2_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC2_CTRL  --------------------------------
// SVD Line: 33811

//  <rtree> SFDITEM_REG__TIMER1_CC2_CTRL
//    <name> CC2_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018480) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC2_CTRL >> 0) & 0xFFFFFFFF), ((TIMER1_CC2_CTRL = (TIMER1_CC2_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC2_CCVP  -----------------------------
// SVD Line: 34119

unsigned int TIMER1_CC2_CCVP __AT (0x40018488);



// ----------------------------  Field Item: TIMER1_CC2_CCVP_CCVP  --------------------------------
// SVD Line: 34128

//  <item> SFDITEM_FIELD__TIMER1_CC2_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018488) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC2_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC2_CCVP  --------------------------------
// SVD Line: 34119

//  <rtree> SFDITEM_REG__TIMER1_CC2_CCVP
//    <name> CC2_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018488) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC2_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC2_CCVB  -----------------------------
// SVD Line: 34137

unsigned int TIMER1_CC2_CCVB __AT (0x4001848C);



// ----------------------------  Field Item: TIMER1_CC2_CCVB_CCVB  --------------------------------
// SVD Line: 34146

//  <item> SFDITEM_FIELD__TIMER1_CC2_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001848C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC2_CCVB >> 0) & 0xFFFF), ((TIMER1_CC2_CCVB = (TIMER1_CC2_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC2_CCVB  --------------------------------
// SVD Line: 34137

//  <rtree> SFDITEM_REG__TIMER1_CC2_CCVB
//    <name> CC2_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001848C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC2_CCVB >> 0) & 0xFFFFFFFF), ((TIMER1_CC2_CCVB = (TIMER1_CC2_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC2_CCVB_CCVB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC3_CTRL  -----------------------------
// SVD Line: 34155

unsigned int TIMER1_CC3_CTRL __AT (0x40018490);



// ----------------------------  Field Item: TIMER1_CC3_CTRL_MODE  --------------------------------
// SVD Line: 34164

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018490) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : PWM = Pulse-Width Modulation </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: PWM = Pulse-Width Modulation
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC3_CTRL_OUTINV  -------------------------------
// SVD Line: 34193

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018490) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.2..2> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC3_CTRL_COIST  -------------------------------
// SVD Line: 34200

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_COIST
//    <name> COIST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018490) Compare Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.4..4> COIST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC3_CTRL_CMOA  --------------------------------
// SVD Line: 34207

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40018490) \nCompare Match Output Action\n0 : NONE = No action on compare match\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.9..8> CMOA
//        <0=> 0: NONE = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC3_CTRL_COFOA  -------------------------------
// SVD Line: 34236

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_COFOA
//    <name> COFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40018490) \nCounter Overflow Output Action\n0 : NONE = No action on counter overflow\n1 : TOGGLE = Toggle output on counter overflow\n2 : CLEAR = Clear output on counter overflow\n3 : SET = Set output on counter overflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.11..10> COFOA
//        <0=> 0: NONE = No action on counter overflow
//        <1=> 1: TOGGLE = Toggle output on counter overflow
//        <2=> 2: CLEAR = Clear output on counter overflow
//        <3=> 3: SET = Set output on counter overflow
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC3_CTRL_CUFOA  -------------------------------
// SVD Line: 34265

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_CUFOA
//    <name> CUFOA </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40018490) \nCounter Underflow Output Action\n0 : NONE = No action on counter underflow\n1 : TOGGLE = Toggle output on counter underflow\n2 : CLEAR = Clear output on counter underflow\n3 : SET = Set output on counter underflow </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.13..12> CUFOA
//        <0=> 0: NONE = No action on counter underflow
//        <1=> 1: TOGGLE = Toggle output on counter underflow
//        <2=> 2: CLEAR = Clear output on counter underflow
//        <3=> 3: SET = Set output on counter underflow
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC3_CTRL_PRSSEL  -------------------------------
// SVD Line: 34294

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40018490) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.19..16> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC3_CTRL_ICEDGE  -------------------------------
// SVD Line: 34363

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40018490) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.25..24> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// --------------------------  Field Item: TIMER1_CC3_CTRL_ICEVCTRL  ------------------------------
// SVD Line: 34392

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_ICEVCTRL
//    <name> ICEVCTRL </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40018490) \nInput Capture Event Control\n0 : EVERYEDGE = PRS output pulse and interrupt flag set on every capture\n1 : EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture\n2 : RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)\n3 : FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH) </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.27..26> ICEVCTRL
//        <0=> 0: EVERYEDGE = PRS output pulse and interrupt flag set on every capture
//        <1=> 1: EVERYSECONDEDGE = PRS output pulse and interrupt flag set on every second capture
//        <2=> 2: RISING = PRS output pulse and interrupt flag set on rising edge only (if ICEDGE = BOTH)
//        <3=> 3: FALLING = PRS output pulse and interrupt flag set on falling edge only (if ICEDGE = BOTH)
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_CC3_CTRL_PRSCONF  ------------------------------
// SVD Line: 34421

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40018490) PRS Configuration </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.28..28> PRSCONF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC3_CTRL_INSEL  -------------------------------
// SVD Line: 34428

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40018490) Input Selection </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.29..29> INSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_CC3_CTRL_FILT  --------------------------------
// SVD Line: 34435

//  <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40018490) Digital Filter </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_CC3_CTRL ) </loc>
//      <o.30..30> FILT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC3_CTRL  --------------------------------
// SVD Line: 34155

//  <rtree> SFDITEM_REG__TIMER1_CC3_CTRL
//    <name> CC3_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018490) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC3_CTRL >> 0) & 0xFFFFFFFF), ((TIMER1_CC3_CTRL = (TIMER1_CC3_CTRL & ~(0x7F0F3F17UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0F3F17) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_COIST </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_COFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_CUFOA </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_ICEVCTRL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CTRL_FILT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC3_CCVP  -----------------------------
// SVD Line: 34463

unsigned int TIMER1_CC3_CCVP __AT (0x40018498);



// ----------------------------  Field Item: TIMER1_CC3_CCVP_CCVP  --------------------------------
// SVD Line: 34472

//  <item> SFDITEM_FIELD__TIMER1_CC3_CCVP_CCVP
//    <name> CCVP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40018498) CC Channel Value Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC3_CCVP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC3_CCVP  --------------------------------
// SVD Line: 34463

//  <rtree> SFDITEM_REG__TIMER1_CC3_CCVP
//    <name> CC3_CCVP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018498) CC Channel Value Peek Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC3_CCVP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CCVP_CCVP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_CC3_CCVB  -----------------------------
// SVD Line: 34481

unsigned int TIMER1_CC3_CCVB __AT (0x4001849C);



// ----------------------------  Field Item: TIMER1_CC3_CCVB_CCVB  --------------------------------
// SVD Line: 34490

//  <item> SFDITEM_FIELD__TIMER1_CC3_CCVB_CCVB
//    <name> CCVB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001849C) CC Channel Value Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CC3_CCVB >> 0) & 0xFFFF), ((TIMER1_CC3_CCVB = (TIMER1_CC3_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_CC3_CCVB  --------------------------------
// SVD Line: 34481

//  <rtree> SFDITEM_REG__TIMER1_CC3_CCVB
//    <name> CC3_CCVB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001849C) CC Channel Buffer Register </i>
//    <loc> ( (unsigned int)((TIMER1_CC3_CCVB >> 0) & 0xFFFFFFFF), ((TIMER1_CC3_CCVB = (TIMER1_CC3_CCVB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CC3_CCVB_CCVB </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER1_DTCTRL  ------------------------------
// SVD Line: 34499

unsigned int TIMER1_DTCTRL __AT (0x400184A0);



// -----------------------------  Field Item: TIMER1_DTCTRL_DTEN  ---------------------------------
// SVD Line: 34508

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTEN
//    <name> DTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400184A0) DTI Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.0..0> DTEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_DTCTRL_DTDAS  --------------------------------
// SVD Line: 34515

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTDAS
//    <name> DTDAS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400184A0) DTI Automatic Start-up Functionality </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.1..1> DTDAS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTCTRL_DTIPOL  --------------------------------
// SVD Line: 34522

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTIPOL
//    <name> DTIPOL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400184A0) DTI Inactive Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.2..2> DTIPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTCTRL_DTCINV  --------------------------------
// SVD Line: 34529

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTCINV
//    <name> DTCINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400184A0) DTI Complementary Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.3..3> DTCINV
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_DTCTRL_DTPRSSEL  -------------------------------
// SVD Line: 34536

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTPRSSEL
//    <name> DTPRSSEL </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400184A0) \nDTI PRS Source Channel Select\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.7..4> DTPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_DTCTRL_DTAR  ---------------------------------
// SVD Line: 34605

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTAR
//    <name> DTAR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400184A0) DTI Always Run </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.9..9> DTAR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTCTRL_DTFATS  --------------------------------
// SVD Line: 34612

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTFATS
//    <name> DTFATS </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400184A0) DTI Fault Action on Timer Stop </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.10..10> DTFATS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTCTRL_DTPRSEN  -------------------------------
// SVD Line: 34619

//  <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTPRSEN
//    <name> DTPRSEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400184A0) DTI PRS Source Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTCTRL ) </loc>
//      <o.24..24> DTPRSEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER1_DTCTRL  ---------------------------------
// SVD Line: 34499

//  <rtree> SFDITEM_REG__TIMER1_DTCTRL
//    <name> DTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400184A0) DTI Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_DTCTRL >> 0) & 0xFFFFFFFF), ((TIMER1_DTCTRL = (TIMER1_DTCTRL & ~(0x10006FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10006FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTEN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTDAS </item>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTIPOL </item>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTCINV </item>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTPRSSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTAR </item>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTFATS </item>
//    <item> SFDITEM_FIELD__TIMER1_DTCTRL_DTPRSEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER1_DTTIME  ------------------------------
// SVD Line: 34628

unsigned int TIMER1_DTTIME __AT (0x400184A4);



// ----------------------------  Field Item: TIMER1_DTTIME_DTPRESC  -------------------------------
// SVD Line: 34637

//  <item> SFDITEM_FIELD__TIMER1_DTTIME_DTPRESC
//    <name> DTPRESC </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400184A4) \nDTI Prescaler Setting\n0 : DIV1 = The HFPERCLK is undivided\n1 : DIV2 = The HFPERCLK is divided by 2\n2 : DIV4 = The HFPERCLK is divided by 4\n3 : DIV8 = The HFPERCLK is divided by 8\n4 : DIV16 = The HFPERCLK is divided by 16\n5 : DIV32 = The HFPERCLK is divided by 32\n6 : DIV64 = The HFPERCLK is divided by 64\n7 : DIV128 = The HFPERCLK is divided by 128\n8 : DIV256 = The HFPERCLK is divided by 256\n9 : DIV512 = The HFPERCLK is divided by 512\n10 : DIV1024 = The HFPERCLK is divided by 1024\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_DTTIME ) </loc>
//      <o.3..0> DTPRESC
//        <0=> 0: DIV1 = The HFPERCLK is undivided
//        <1=> 1: DIV2 = The HFPERCLK is divided by 2
//        <2=> 2: DIV4 = The HFPERCLK is divided by 4
//        <3=> 3: DIV8 = The HFPERCLK is divided by 8
//        <4=> 4: DIV16 = The HFPERCLK is divided by 16
//        <5=> 5: DIV32 = The HFPERCLK is divided by 32
//        <6=> 6: DIV64 = The HFPERCLK is divided by 64
//        <7=> 7: DIV128 = The HFPERCLK is divided by 128
//        <8=> 8: DIV256 = The HFPERCLK is divided by 256
//        <9=> 9: DIV512 = The HFPERCLK is divided by 512
//        <10=> 10: DIV1024 = The HFPERCLK is divided by 1024
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTTIME_DTRISET  -------------------------------
// SVD Line: 34701

//  <item> SFDITEM_FIELD__TIMER1_DTTIME_DTRISET
//    <name> DTRISET </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x400184A4) DTI Rise-time </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_DTTIME >> 8) & 0x3F), ((TIMER1_DTTIME = (TIMER1_DTTIME & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTTIME_DTFALLT  -------------------------------
// SVD Line: 34708

//  <item> SFDITEM_FIELD__TIMER1_DTTIME_DTFALLT
//    <name> DTFALLT </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400184A4) DTI Fall-time </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_DTTIME >> 16) & 0x3F), ((TIMER1_DTTIME = (TIMER1_DTTIME & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: TIMER1_DTTIME  ---------------------------------
// SVD Line: 34628

//  <rtree> SFDITEM_REG__TIMER1_DTTIME
//    <name> DTTIME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400184A4) DTI Time Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_DTTIME >> 0) & 0xFFFFFFFF), ((TIMER1_DTTIME = (TIMER1_DTTIME & ~(0x3F3F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DTTIME_DTPRESC </item>
//    <item> SFDITEM_FIELD__TIMER1_DTTIME_DTRISET </item>
//    <item> SFDITEM_FIELD__TIMER1_DTTIME_DTFALLT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_DTFC  -------------------------------
// SVD Line: 34717

unsigned int TIMER1_DTFC __AT (0x400184A8);



// ---------------------------  Field Item: TIMER1_DTFC_DTPRS0FSEL  -------------------------------
// SVD Line: 34726

//  <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS0FSEL
//    <name> DTPRS0FSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400184A8) \nDTI PRS Fault Source 0 Select\n0 : PRSCH0 = PRS Channel 0 selected as fault source 0\n1 : PRSCH1 = PRS Channel 1 selected as fault source 1\n2 : PRSCH2 = PRS Channel 2 selected as fault source 2\n3 : PRSCH3 = PRS Channel 3 selected as fault source 3\n4 : PRSCH4 = PRS Channel 4 selected as fault source 4\n5 : PRSCH5 = PRS Channel 5 selected as fault source 5\n6 : PRSCH6 = PRS Channel 6 selected as fault source 6\n7 : PRSCH7 = PRS Channel 7 selected as fault source 7\n8 : PRSCH8 = PRS Channel 8 selected as fault source 8\n9 : PRSCH9 = PRS Channel 9 selected as fault source 9\n10 : PRSCH10 = PRS Channel 10 selected as fault source 10\n11 : PRSCH11 = PRS Channel 11 selected as fault source 11\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_DTFC ) </loc>
//      <o.3..0> DTPRS0FSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as fault source 0
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as fault source 1
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as fault source 2
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as fault source 3
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as fault source 4
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as fault source 5
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as fault source 6
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as fault source 7
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as fault source 8
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as fault source 9
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as fault source 10
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as fault source 11
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_DTFC_DTPRS1FSEL  -------------------------------
// SVD Line: 34795

//  <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS1FSEL
//    <name> DTPRS1FSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400184A8) \nDTI PRS Fault Source 1 Select\n0 : PRSCH0 = PRS Channel 0 selected as fault source 1\n1 : PRSCH1 = PRS Channel 1 selected as fault source 1\n2 : PRSCH2 = PRS Channel 2 selected as fault source 1\n3 : PRSCH3 = PRS Channel 3 selected as fault source 1\n4 : PRSCH4 = PRS Channel 4 selected as fault source 1\n5 : PRSCH5 = PRS Channel 5 selected as fault source 1\n6 : PRSCH6 = PRS Channel 6 selected as fault source 1\n7 : PRSCH7 = PRS Channel 7 selected as fault source 1\n8 : PRSCH8 = PRS Channel 8 selected as fault source 1\n9 : PRSCH9 = PRS Channel 9 selected as fault source 1\n10 : PRSCH10 = PRS Channel 10 selected as fault source 1\n11 : PRSCH11 = PRS Channel 11 selected as fault source 1\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_DTFC ) </loc>
//      <o.11..8> DTPRS1FSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as fault source 1
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as fault source 1
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as fault source 1
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as fault source 1
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as fault source 1
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as fault source 1
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as fault source 1
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as fault source 1
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as fault source 1
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as fault source 1
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as fault source 1
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as fault source 1
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DTFC_DTFA  ----------------------------------
// SVD Line: 34864

//  <item> SFDITEM_FIELD__TIMER1_DTFC_DTFA
//    <name> DTFA </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400184A8) \nDTI Fault Action\n0 : NONE = No action on fault\n1 : INACTIVE = Set outputs inactive\n2 : CLEAR = Clear outputs\n3 : TRISTATE = Tristate outputs </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_DTFC ) </loc>
//      <o.17..16> DTFA
//        <0=> 0: NONE = No action on fault
//        <1=> 1: INACTIVE = Set outputs inactive
//        <2=> 2: CLEAR = Clear outputs
//        <3=> 3: TRISTATE = Tristate outputs
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTFC_DTPRS0FEN  -------------------------------
// SVD Line: 34893

//  <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS0FEN
//    <name> DTPRS0FEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400184A8) DTI PRS 0 Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFC ) </loc>
//      <o.24..24> DTPRS0FEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTFC_DTPRS1FEN  -------------------------------
// SVD Line: 34900

//  <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS1FEN
//    <name> DTPRS1FEN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400184A8) DTI PRS 1 Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFC ) </loc>
//      <o.25..25> DTPRS1FEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTFC_DTDBGFEN  --------------------------------
// SVD Line: 34907

//  <item> SFDITEM_FIELD__TIMER1_DTFC_DTDBGFEN
//    <name> DTDBGFEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400184A8) DTI Debugger Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFC ) </loc>
//      <o.26..26> DTDBGFEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_DTFC_DTLOCKUPFEN  ------------------------------
// SVD Line: 34914

//  <item> SFDITEM_FIELD__TIMER1_DTFC_DTLOCKUPFEN
//    <name> DTLOCKUPFEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400184A8) DTI Lockup Fault Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFC ) </loc>
//      <o.27..27> DTLOCKUPFEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_DTFC  ----------------------------------
// SVD Line: 34717

//  <rtree> SFDITEM_REG__TIMER1_DTFC
//    <name> DTFC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400184A8) DTI Fault Configuration Register </i>
//    <loc> ( (unsigned int)((TIMER1_DTFC >> 0) & 0xFFFFFFFF), ((TIMER1_DTFC = (TIMER1_DTFC & ~(0xF030F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF030F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS0FSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS1FSEL </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFC_DTFA </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS0FEN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFC_DTPRS1FEN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFC_DTDBGFEN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFC_DTLOCKUPFEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER1_DTOGEN  ------------------------------
// SVD Line: 34923

unsigned int TIMER1_DTOGEN __AT (0x400184AC);



// ---------------------------  Field Item: TIMER1_DTOGEN_DTOGCC0EN  ------------------------------
// SVD Line: 34932

//  <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCC0EN
//    <name> DTOGCC0EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400184AC) DTI CC0 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTOGEN ) </loc>
//      <o.0..0> DTOGCC0EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_DTOGEN_DTOGCC1EN  ------------------------------
// SVD Line: 34939

//  <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCC1EN
//    <name> DTOGCC1EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400184AC) DTI CC1 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTOGEN ) </loc>
//      <o.1..1> DTOGCC1EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_DTOGEN_DTOGCC2EN  ------------------------------
// SVD Line: 34946

//  <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCC2EN
//    <name> DTOGCC2EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400184AC) DTI CC2 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTOGEN ) </loc>
//      <o.2..2> DTOGCC2EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_DTOGEN_DTOGCDTI0EN  -----------------------------
// SVD Line: 34953

//  <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCDTI0EN
//    <name> DTOGCDTI0EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400184AC) DTI CDTI0 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTOGEN ) </loc>
//      <o.3..3> DTOGCDTI0EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_DTOGEN_DTOGCDTI1EN  -----------------------------
// SVD Line: 34960

//  <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCDTI1EN
//    <name> DTOGCDTI1EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400184AC) DTI CDTI1 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTOGEN ) </loc>
//      <o.4..4> DTOGCDTI1EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_DTOGEN_DTOGCDTI2EN  -----------------------------
// SVD Line: 34967

//  <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCDTI2EN
//    <name> DTOGCDTI2EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400184AC) DTI CDTI2 Output Generation Enable </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTOGEN ) </loc>
//      <o.5..5> DTOGCDTI2EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER1_DTOGEN  ---------------------------------
// SVD Line: 34923

//  <rtree> SFDITEM_REG__TIMER1_DTOGEN
//    <name> DTOGEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400184AC) DTI Output Generation Enable Register </i>
//    <loc> ( (unsigned int)((TIMER1_DTOGEN >> 0) & 0xFFFFFFFF), ((TIMER1_DTOGEN = (TIMER1_DTOGEN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCC0EN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCC1EN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCC2EN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCDTI0EN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCDTI1EN </item>
//    <item> SFDITEM_FIELD__TIMER1_DTOGEN_DTOGCDTI2EN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER1_DTFAULT  -----------------------------
// SVD Line: 34976

unsigned int TIMER1_DTFAULT __AT (0x400184B0);



// ---------------------------  Field Item: TIMER1_DTFAULT_DTPRS0F  -------------------------------
// SVD Line: 34985

//  <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTPRS0F
//    <name> DTPRS0F </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400184B0) DTI PRS 0 Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULT ) </loc>
//      <o.0..0> DTPRS0F
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_DTFAULT_DTPRS1F  -------------------------------
// SVD Line: 34992

//  <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTPRS1F
//    <name> DTPRS1F </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400184B0) DTI PRS 1 Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULT ) </loc>
//      <o.1..1> DTPRS1F
//    </check>
//  </item>
//  


// ----------------------------  Field Item: TIMER1_DTFAULT_DTDBGF  -------------------------------
// SVD Line: 34999

//  <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTDBGF
//    <name> DTDBGF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400184B0) DTI Debugger Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULT ) </loc>
//      <o.2..2> DTDBGF
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_DTFAULT_DTLOCKUPF  ------------------------------
// SVD Line: 35006

//  <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTLOCKUPF
//    <name> DTLOCKUPF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400184B0) DTI Lockup Fault </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULT ) </loc>
//      <o.3..3> DTLOCKUPF
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_DTFAULT  ---------------------------------
// SVD Line: 34976

//  <rtree> SFDITEM_REG__TIMER1_DTFAULT
//    <name> DTFAULT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400184B0) DTI Fault Register </i>
//    <loc> ( (unsigned int)((TIMER1_DTFAULT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTPRS0F </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTPRS1F </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTDBGF </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULT_DTLOCKUPF </item>
//  </rtree>
//  


// -------------------------  Register Item Address: TIMER1_DTFAULTC  -----------------------------
// SVD Line: 35015

unsigned int TIMER1_DTFAULTC __AT (0x400184B4);



// --------------------------  Field Item: TIMER1_DTFAULTC_DTPRS0FC  ------------------------------
// SVD Line: 35024

//  <item> SFDITEM_FIELD__TIMER1_DTFAULTC_DTPRS0FC
//    <name> DTPRS0FC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400184B4) DTI PRS0 Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULTC ) </loc>
//      <o.0..0> DTPRS0FC
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_DTFAULTC_DTPRS1FC  ------------------------------
// SVD Line: 35031

//  <item> SFDITEM_FIELD__TIMER1_DTFAULTC_DTPRS1FC
//    <name> DTPRS1FC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400184B4) DTI PRS1 Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULTC ) </loc>
//      <o.1..1> DTPRS1FC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: TIMER1_DTFAULTC_DTDBGFC  ------------------------------
// SVD Line: 35038

//  <item> SFDITEM_FIELD__TIMER1_DTFAULTC_DTDBGFC
//    <name> DTDBGFC </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x400184B4) DTI Debugger Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULTC ) </loc>
//      <o.2..2> DTDBGFC
//    </check>
//  </item>
//  


// --------------------------  Field Item: TIMER1_DTFAULTC_TLOCKUPFC  -----------------------------
// SVD Line: 35045

//  <item> SFDITEM_FIELD__TIMER1_DTFAULTC_TLOCKUPFC
//    <name> TLOCKUPFC </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x400184B4) DTI Lockup Fault Clear </i>
//    <check> 
//      <loc> ( (unsigned int) TIMER1_DTFAULTC ) </loc>
//      <o.3..3> TLOCKUPFC
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_DTFAULTC  --------------------------------
// SVD Line: 35015

//  <rtree> SFDITEM_REG__TIMER1_DTFAULTC
//    <name> DTFAULTC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400184B4) DTI Fault Clear Register </i>
//    <loc> ( (unsigned int)((TIMER1_DTFAULTC >> 0) & 0xFFFFFFFF), ((TIMER1_DTFAULTC = (TIMER1_DTFAULTC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULTC_DTPRS0FC </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULTC_DTPRS1FC </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULTC_DTDBGFC </item>
//    <item> SFDITEM_FIELD__TIMER1_DTFAULTC_TLOCKUPFC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: TIMER1_DTLOCK  ------------------------------
// SVD Line: 35054

unsigned int TIMER1_DTLOCK __AT (0x400184B8);



// ----------------------------  Field Item: TIMER1_DTLOCK_LOCKKEY  -------------------------------
// SVD Line: 35063

//  <item> SFDITEM_FIELD__TIMER1_DTLOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400184B8) DTI Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_DTLOCK >> 0) & 0xFFFF), ((TIMER1_DTLOCK = (TIMER1_DTLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: TIMER1_DTLOCK  ---------------------------------
// SVD Line: 35054

//  <rtree> SFDITEM_REG__TIMER1_DTLOCK
//    <name> DTLOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400184B8) DTI Configuration Lock Register </i>
//    <loc> ( (unsigned int)((TIMER1_DTLOCK >> 0) & 0xFFFFFFFF), ((TIMER1_DTLOCK = (TIMER1_DTLOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DTLOCK_LOCKKEY </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER1  ------------------------------------
// SVD Line: 31027

//  <view> TIMER1
//    <name> TIMER1 </name>
//    <item> SFDITEM_REG__TIMER1_CTRL </item>
//    <item> SFDITEM_REG__TIMER1_CMD </item>
//    <item> SFDITEM_REG__TIMER1_STATUS </item>
//    <item> SFDITEM_REG__TIMER1_IF </item>
//    <item> SFDITEM_REG__TIMER1_IFS </item>
//    <item> SFDITEM_REG__TIMER1_IFC </item>
//    <item> SFDITEM_REG__TIMER1_IEN </item>
//    <item> SFDITEM_REG__TIMER1_TOP </item>
//    <item> SFDITEM_REG__TIMER1_TOPB </item>
//    <item> SFDITEM_REG__TIMER1_CNT </item>
//    <item> SFDITEM_REG__TIMER1_LOCK </item>
//    <item> SFDITEM_REG__TIMER1_ROUTEPEN </item>
//    <item> SFDITEM_REG__TIMER1_ROUTELOC0 </item>
//    <item> SFDITEM_REG__TIMER1_ROUTELOC2 </item>
//    <item> SFDITEM_REG__TIMER1_CC0_CTRL </item>
//    <item> SFDITEM_REG__TIMER1_CC0_CCVP </item>
//    <item> SFDITEM_REG__TIMER1_CC0_CCVB </item>
//    <item> SFDITEM_REG__TIMER1_CC1_CTRL </item>
//    <item> SFDITEM_REG__TIMER1_CC1_CCVP </item>
//    <item> SFDITEM_REG__TIMER1_CC1_CCVB </item>
//    <item> SFDITEM_REG__TIMER1_CC2_CTRL </item>
//    <item> SFDITEM_REG__TIMER1_CC2_CCVP </item>
//    <item> SFDITEM_REG__TIMER1_CC2_CCVB </item>
//    <item> SFDITEM_REG__TIMER1_CC3_CTRL </item>
//    <item> SFDITEM_REG__TIMER1_CC3_CCVP </item>
//    <item> SFDITEM_REG__TIMER1_CC3_CCVB </item>
//    <item> SFDITEM_REG__TIMER1_DTCTRL </item>
//    <item> SFDITEM_REG__TIMER1_DTTIME </item>
//    <item> SFDITEM_REG__TIMER1_DTFC </item>
//    <item> SFDITEM_REG__TIMER1_DTOGEN </item>
//    <item> SFDITEM_REG__TIMER1_DTFAULT </item>
//    <item> SFDITEM_REG__TIMER1_DTFAULTC </item>
//    <item> SFDITEM_REG__TIMER1_DTLOCK </item>
//  </view>
//  


// ---------------------------  Register Item Address: USART0_CTRL  -------------------------------
// SVD Line: 35102

unsigned int USART0_CTRL __AT (0x40010000);



// ------------------------------  Field Item: USART0_CTRL_SYNC  ----------------------------------
// SVD Line: 35111

//  <item> SFDITEM_FIELD__USART0_CTRL_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010000) USART Synchronous Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.0..0> SYNC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_LOOPBK  ---------------------------------
// SVD Line: 35118

//  <item> SFDITEM_FIELD__USART0_CTRL_LOOPBK
//    <name> LOOPBK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010000) Loopback Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.1..1> LOOPBK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_CCEN  ----------------------------------
// SVD Line: 35125

//  <item> SFDITEM_FIELD__USART0_CTRL_CCEN
//    <name> CCEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010000) Collision Check Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.2..2> CCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_CTRL_MPM  ----------------------------------
// SVD Line: 35132

//  <item> SFDITEM_FIELD__USART0_CTRL_MPM
//    <name> MPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010000) Multi-Processor Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.3..3> MPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_MPAB  ----------------------------------
// SVD Line: 35139

//  <item> SFDITEM_FIELD__USART0_CTRL_MPAB
//    <name> MPAB </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010000) Multi-Processor Address-Bit </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.4..4> MPAB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_CTRL_OVS  ----------------------------------
// SVD Line: 35146

//  <item> SFDITEM_FIELD__USART0_CTRL_OVS
//    <name> OVS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40010000) \nOversampling\n0 : X16 = Regular UART mode with 16X oversampling in asynchronous mode\n1 : X8 = Double speed with 8X oversampling in asynchronous mode\n2 : X6 = 6X oversampling in asynchronous mode\n3 : X4 = Quadruple speed with 4X oversampling in asynchronous mode </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.6..5> OVS
//        <0=> 0: X16 = Regular UART mode with 16X oversampling in asynchronous mode
//        <1=> 1: X8 = Double speed with 8X oversampling in asynchronous mode
//        <2=> 2: X6 = 6X oversampling in asynchronous mode
//        <3=> 3: X4 = Quadruple speed with 4X oversampling in asynchronous mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_CLKPOL  ---------------------------------
// SVD Line: 35175

//  <item> SFDITEM_FIELD__USART0_CTRL_CLKPOL
//    <name> CLKPOL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010000) Clock Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.8..8> CLKPOL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_CLKPHA  ---------------------------------
// SVD Line: 35182

//  <item> SFDITEM_FIELD__USART0_CTRL_CLKPHA
//    <name> CLKPHA </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40010000) Clock Edge for Setup/Sample </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.9..9> CLKPHA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_MSBF  ----------------------------------
// SVD Line: 35189

//  <item> SFDITEM_FIELD__USART0_CTRL_MSBF
//    <name> MSBF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40010000) Most Significant Bit First </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.10..10> MSBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_CSMA  ----------------------------------
// SVD Line: 35196

//  <item> SFDITEM_FIELD__USART0_CTRL_CSMA
//    <name> CSMA </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010000) Action on Slave-Select in Master Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.11..11> CSMA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_TXBIL  ---------------------------------
// SVD Line: 35203

//  <item> SFDITEM_FIELD__USART0_CTRL_TXBIL
//    <name> TXBIL </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010000) TX Buffer Interrupt Level </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.12..12> TXBIL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_RXINV  ---------------------------------
// SVD Line: 35210

//  <item> SFDITEM_FIELD__USART0_CTRL_RXINV
//    <name> RXINV </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40010000) Receiver Input Invert </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.13..13> RXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_TXINV  ---------------------------------
// SVD Line: 35217

//  <item> SFDITEM_FIELD__USART0_CTRL_TXINV
//    <name> TXINV </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010000) Transmitter Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.14..14> TXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_CSINV  ---------------------------------
// SVD Line: 35224

//  <item> SFDITEM_FIELD__USART0_CTRL_CSINV
//    <name> CSINV </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010000) Chip Select Invert </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.15..15> CSINV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_AUTOCS  ---------------------------------
// SVD Line: 35231

//  <item> SFDITEM_FIELD__USART0_CTRL_AUTOCS
//    <name> AUTOCS </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40010000) Automatic Chip Select </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.16..16> AUTOCS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_AUTOTRI  --------------------------------
// SVD Line: 35238

//  <item> SFDITEM_FIELD__USART0_CTRL_AUTOTRI
//    <name> AUTOTRI </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40010000) Automatic TX Tristate </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.17..17> AUTOTRI
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_SCMODE  ---------------------------------
// SVD Line: 35245

//  <item> SFDITEM_FIELD__USART0_CTRL_SCMODE
//    <name> SCMODE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40010000) SmartCard Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.18..18> SCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CTRL_SCRETRANS  -------------------------------
// SVD Line: 35252

//  <item> SFDITEM_FIELD__USART0_CTRL_SCRETRANS
//    <name> SCRETRANS </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40010000) SmartCard Retransmit </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.19..19> SCRETRANS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CTRL_SKIPPERRF  -------------------------------
// SVD Line: 35259

//  <item> SFDITEM_FIELD__USART0_CTRL_SKIPPERRF
//    <name> SKIPPERRF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40010000) Skip Parity Error Frames </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.20..20> SKIPPERRF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_BIT8DV  ---------------------------------
// SVD Line: 35266

//  <item> SFDITEM_FIELD__USART0_CTRL_BIT8DV
//    <name> BIT8DV </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40010000) Bit 8 Default Value </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.21..21> BIT8DV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_ERRSDMA  --------------------------------
// SVD Line: 35273

//  <item> SFDITEM_FIELD__USART0_CTRL_ERRSDMA
//    <name> ERRSDMA </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40010000) Halt DMA on Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.22..22> ERRSDMA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_ERRSRX  ---------------------------------
// SVD Line: 35280

//  <item> SFDITEM_FIELD__USART0_CTRL_ERRSRX
//    <name> ERRSRX </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40010000) Disable RX on Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.23..23> ERRSRX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_ERRSTX  ---------------------------------
// SVD Line: 35287

//  <item> SFDITEM_FIELD__USART0_CTRL_ERRSTX
//    <name> ERRSTX </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40010000) Disable TX on Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.24..24> ERRSTX
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CTRL_SSSEARLY  --------------------------------
// SVD Line: 35294

//  <item> SFDITEM_FIELD__USART0_CTRL_SSSEARLY
//    <name> SSSEARLY </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40010000) Synchronous Slave Setup Early </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.25..25> SSSEARLY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CTRL_BYTESWAP  --------------------------------
// SVD Line: 35301

//  <item> SFDITEM_FIELD__USART0_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40010000) Byteswap in Double Accesses </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.28..28> BYTESWAP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRL_AUTOTX  ---------------------------------
// SVD Line: 35308

//  <item> SFDITEM_FIELD__USART0_CTRL_AUTOTX
//    <name> AUTOTX </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40010000) Always Transmit When RX Not Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.29..29> AUTOTX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CTRL_MVDIS  ---------------------------------
// SVD Line: 35315

//  <item> SFDITEM_FIELD__USART0_CTRL_MVDIS
//    <name> MVDIS </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40010000) Majority Vote Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.30..30> MVDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CTRL_SMSDELAY  --------------------------------
// SVD Line: 35322

//  <item> SFDITEM_FIELD__USART0_CTRL_SMSDELAY
//    <name> SMSDELAY </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010000) Synchronous Master Sample Delay </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRL ) </loc>
//      <o.31..31> SMSDELAY
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART0_CTRL  ----------------------------------
// SVD Line: 35102

//  <rtree> SFDITEM_REG__USART0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010000) Control Register </i>
//    <loc> ( (unsigned int)((USART0_CTRL >> 0) & 0xFFFFFFFF), ((USART0_CTRL = (USART0_CTRL & ~(0xF3FFFF7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3FFFF7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_CTRL_SYNC </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_LOOPBK </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_CCEN </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_MPM </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_MPAB </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_OVS </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_CLKPOL </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_CLKPHA </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_MSBF </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_CSMA </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_TXBIL </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_RXINV </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_TXINV </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_CSINV </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_AUTOCS </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_AUTOTRI </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_SCMODE </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_SCRETRANS </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_SKIPPERRF </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_BIT8DV </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_ERRSDMA </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_ERRSRX </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_ERRSTX </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_SSSEARLY </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_AUTOTX </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_MVDIS </item>
//    <item> SFDITEM_FIELD__USART0_CTRL_SMSDELAY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART0_FRAME  ------------------------------
// SVD Line: 35331

unsigned int USART0_FRAME __AT (0x40010004);



// ----------------------------  Field Item: USART0_FRAME_DATABITS  -------------------------------
// SVD Line: 35340

//  <item> SFDITEM_FIELD__USART0_FRAME_DATABITS
//    <name> DATABITS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40010004) \nData-Bit Mode\n0 : Reserved - do not use\n1 : FOUR = Each frame contains 4 data bits\n2 : FIVE = Each frame contains 5 data bits\n3 : SIX = Each frame contains 6 data bits\n4 : SEVEN = Each frame contains 7 data bits\n5 : EIGHT = Each frame contains 8 data bits\n6 : NINE = Each frame contains 9 data bits\n7 : TEN = Each frame contains 10 data bits\n8 : ELEVEN = Each frame contains 11 data bits\n9 : TWELVE = Each frame contains 12 data bits\n10 : THIRTEEN = Each frame contains 13 data bits\n11 : FOURTEEN = Each frame contains 14 data bits\n12 : FIFTEEN = Each frame contains 15 data bits\n13 : SIXTEEN = Each frame contains 16 data bits\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_FRAME ) </loc>
//      <o.3..0> DATABITS
//        <0=> 0: 
//        <1=> 1: FOUR = Each frame contains 4 data bits
//        <2=> 2: FIVE = Each frame contains 5 data bits
//        <3=> 3: SIX = Each frame contains 6 data bits
//        <4=> 4: SEVEN = Each frame contains 7 data bits
//        <5=> 5: EIGHT = Each frame contains 8 data bits
//        <6=> 6: NINE = Each frame contains 9 data bits
//        <7=> 7: TEN = Each frame contains 10 data bits
//        <8=> 8: ELEVEN = Each frame contains 11 data bits
//        <9=> 9: TWELVE = Each frame contains 12 data bits
//        <10=> 10: THIRTEEN = Each frame contains 13 data bits
//        <11=> 11: FOURTEEN = Each frame contains 14 data bits
//        <12=> 12: FIFTEEN = Each frame contains 15 data bits
//        <13=> 13: SIXTEEN = Each frame contains 16 data bits
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART0_FRAME_PARITY  --------------------------------
// SVD Line: 35414

//  <item> SFDITEM_FIELD__USART0_FRAME_PARITY
//    <name> PARITY </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40010004) \nParity-Bit Mode\n0 : NONE = Parity bits are not used\n1 : Reserved - do not use\n2 : EVEN = Even parity are used. Parity bits are automatically generated and checked by hardware.\n3 : ODD = Odd parity is used. Parity bits are automatically generated and checked by hardware. </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_FRAME ) </loc>
//      <o.9..8> PARITY
//        <0=> 0: NONE = Parity bits are not used
//        <1=> 1: 
//        <2=> 2: EVEN = Even parity are used. Parity bits are automatically generated and checked by hardware.
//        <3=> 3: ODD = Odd parity is used. Parity bits are automatically generated and checked by hardware.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART0_FRAME_STOPBITS  -------------------------------
// SVD Line: 35438

//  <item> SFDITEM_FIELD__USART0_FRAME_STOPBITS
//    <name> STOPBITS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40010004) \nStop-Bit Mode\n0 : HALF = The transmitter generates a half stop bit. Stop-bits are not verified by receiver\n1 : ONE = One stop bit is generated and verified\n2 : ONEANDAHALF = The transmitter generates one and a half stop bit. The receiver verifies the first stop bit\n3 : TWO = The transmitter generates two stop bits. The receiver checks the first stop-bit only </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_FRAME ) </loc>
//      <o.13..12> STOPBITS
//        <0=> 0: HALF = The transmitter generates a half stop bit. Stop-bits are not verified by receiver
//        <1=> 1: ONE = One stop bit is generated and verified
//        <2=> 2: ONEANDAHALF = The transmitter generates one and a half stop bit. The receiver verifies the first stop bit
//        <3=> 3: TWO = The transmitter generates two stop bits. The receiver checks the first stop-bit only
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: USART0_FRAME  ----------------------------------
// SVD Line: 35331

//  <rtree> SFDITEM_REG__USART0_FRAME
//    <name> FRAME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010004) USART Frame Format Register </i>
//    <loc> ( (unsigned int)((USART0_FRAME >> 0) & 0xFFFFFFFF), ((USART0_FRAME = (USART0_FRAME & ~(0x330FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_FRAME_DATABITS </item>
//    <item> SFDITEM_FIELD__USART0_FRAME_PARITY </item>
//    <item> SFDITEM_FIELD__USART0_FRAME_STOPBITS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_TRIGCTRL  -----------------------------
// SVD Line: 35469

unsigned int USART0_TRIGCTRL __AT (0x40010008);



// ----------------------------  Field Item: USART0_TRIGCTRL_RXTEN  -------------------------------
// SVD Line: 35478

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXTEN
//    <name> RXTEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010008) Receive Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.4..4> RXTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_TRIGCTRL_TXTEN  -------------------------------
// SVD Line: 35485

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXTEN
//    <name> TXTEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40010008) Transmit Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.5..5> TXTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TRIGCTRL_AUTOTXTEN  -----------------------------
// SVD Line: 35492

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_AUTOTXTEN
//    <name> AUTOTXTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40010008) AUTOTX Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.6..6> AUTOTXTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TRIGCTRL_TXARX0EN  ------------------------------
// SVD Line: 35499

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXARX0EN
//    <name> TXARX0EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40010008) Enable Transmit Trigger After RX End of Frame Plus TCMP0VAL </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.7..7> TXARX0EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TRIGCTRL_TXARX1EN  ------------------------------
// SVD Line: 35506

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXARX1EN
//    <name> TXARX1EN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010008) Enable Transmit Trigger After RX End of Frame Plus TCMP1VAL </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.8..8> TXARX1EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TRIGCTRL_TXARX2EN  ------------------------------
// SVD Line: 35513

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXARX2EN
//    <name> TXARX2EN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40010008) Enable Transmit Trigger After RX End of Frame Plus TCMP2VAL </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.9..9> TXARX2EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TRIGCTRL_RXATX0EN  ------------------------------
// SVD Line: 35520

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXATX0EN
//    <name> RXATX0EN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40010008) Enable Receive Trigger After TX End of Frame Plus TCMPVAL0 Baud-times </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.10..10> RXATX0EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TRIGCTRL_RXATX1EN  ------------------------------
// SVD Line: 35527

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXATX1EN
//    <name> RXATX1EN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010008) Enable Receive Trigger After TX End of Frame Plus TCMPVAL1 Baud-times </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.11..11> RXATX1EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TRIGCTRL_RXATX2EN  ------------------------------
// SVD Line: 35534

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXATX2EN
//    <name> RXATX2EN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010008) Enable Receive Trigger After TX End of Frame Plus TCMPVAL2 Baud-times </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.12..12> RXATX2EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_TRIGCTRL_TSEL  --------------------------------
// SVD Line: 35541

//  <item> SFDITEM_FIELD__USART0_TRIGCTRL_TSEL
//    <name> TSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40010008) \nTrigger PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TRIGCTRL ) </loc>
//      <o.19..16> TSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: USART0_TRIGCTRL  --------------------------------
// SVD Line: 35469

//  <rtree> SFDITEM_REG__USART0_TRIGCTRL
//    <name> TRIGCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010008) USART Trigger Control Register </i>
//    <loc> ( (unsigned int)((USART0_TRIGCTRL >> 0) & 0xFFFFFFFF), ((USART0_TRIGCTRL = (USART0_TRIGCTRL & ~(0xF1FF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF1FF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXTEN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXTEN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_AUTOTXTEN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXARX0EN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXARX1EN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_TXARX2EN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXATX0EN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXATX1EN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_RXATX2EN </item>
//    <item> SFDITEM_FIELD__USART0_TRIGCTRL_TSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART0_CMD  -------------------------------
// SVD Line: 35612

unsigned int USART0_CMD __AT (0x4001000C);



// -------------------------------  Field Item: USART0_CMD_RXEN  ----------------------------------
// SVD Line: 35621

//  <item> SFDITEM_FIELD__USART0_CMD_RXEN
//    <name> RXEN </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001000C) Receiver Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CMD_RXDIS  ----------------------------------
// SVD Line: 35628

//  <item> SFDITEM_FIELD__USART0_CMD_RXDIS
//    <name> RXDIS </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4001000C) Receiver Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.1..1> RXDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_CMD_TXEN  ----------------------------------
// SVD Line: 35635

//  <item> SFDITEM_FIELD__USART0_CMD_TXEN
//    <name> TXEN </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4001000C) Transmitter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.2..2> TXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_CMD_TXDIS  ----------------------------------
// SVD Line: 35642

//  <item> SFDITEM_FIELD__USART0_CMD_TXDIS
//    <name> TXDIS </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4001000C) Transmitter Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.3..3> TXDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CMD_MASTEREN  --------------------------------
// SVD Line: 35649

//  <item> SFDITEM_FIELD__USART0_CMD_MASTEREN
//    <name> MASTEREN </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4001000C) Master Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.4..4> MASTEREN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CMD_MASTERDIS  --------------------------------
// SVD Line: 35656

//  <item> SFDITEM_FIELD__USART0_CMD_MASTERDIS
//    <name> MASTERDIS </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4001000C) Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.5..5> MASTERDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CMD_RXBLOCKEN  --------------------------------
// SVD Line: 35663

//  <item> SFDITEM_FIELD__USART0_CMD_RXBLOCKEN
//    <name> RXBLOCKEN </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4001000C) Receiver Block Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.6..6> RXBLOCKEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_CMD_RXBLOCKDIS  -------------------------------
// SVD Line: 35670

//  <item> SFDITEM_FIELD__USART0_CMD_RXBLOCKDIS
//    <name> RXBLOCKDIS </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4001000C) Receiver Block Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.7..7> RXBLOCKDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CMD_TXTRIEN  ---------------------------------
// SVD Line: 35677

//  <item> SFDITEM_FIELD__USART0_CMD_TXTRIEN
//    <name> TXTRIEN </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4001000C) Transmitter Tristate Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.8..8> TXTRIEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CMD_TXTRIDIS  --------------------------------
// SVD Line: 35684

//  <item> SFDITEM_FIELD__USART0_CMD_TXTRIDIS
//    <name> TXTRIDIS </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4001000C) Transmitter Tristate Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.9..9> TXTRIDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CMD_CLEARTX  ---------------------------------
// SVD Line: 35691

//  <item> SFDITEM_FIELD__USART0_CMD_CLEARTX
//    <name> CLEARTX </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4001000C) Clear TX </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.10..10> CLEARTX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CMD_CLEARRX  ---------------------------------
// SVD Line: 35698

//  <item> SFDITEM_FIELD__USART0_CMD_CLEARRX
//    <name> CLEARRX </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x4001000C) Clear RX </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CMD ) </loc>
//      <o.11..11> CLEARRX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART0_CMD  -----------------------------------
// SVD Line: 35612

//  <rtree> SFDITEM_REG__USART0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001000C) Command Register </i>
//    <loc> ( (unsigned int)((USART0_CMD >> 0) & 0xFFFFFFFF), ((USART0_CMD = (USART0_CMD & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_CMD_RXEN </item>
//    <item> SFDITEM_FIELD__USART0_CMD_RXDIS </item>
//    <item> SFDITEM_FIELD__USART0_CMD_TXEN </item>
//    <item> SFDITEM_FIELD__USART0_CMD_TXDIS </item>
//    <item> SFDITEM_FIELD__USART0_CMD_MASTEREN </item>
//    <item> SFDITEM_FIELD__USART0_CMD_MASTERDIS </item>
//    <item> SFDITEM_FIELD__USART0_CMD_RXBLOCKEN </item>
//    <item> SFDITEM_FIELD__USART0_CMD_RXBLOCKDIS </item>
//    <item> SFDITEM_FIELD__USART0_CMD_TXTRIEN </item>
//    <item> SFDITEM_FIELD__USART0_CMD_TXTRIDIS </item>
//    <item> SFDITEM_FIELD__USART0_CMD_CLEARTX </item>
//    <item> SFDITEM_FIELD__USART0_CMD_CLEARRX </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART0_STATUS  ------------------------------
// SVD Line: 35707

unsigned int USART0_STATUS __AT (0x40010010);



// -----------------------------  Field Item: USART0_STATUS_RXENS  --------------------------------
// SVD Line: 35716

//  <item> SFDITEM_FIELD__USART0_STATUS_RXENS
//    <name> RXENS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010010) Receiver Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.0..0> RXENS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_STATUS_TXENS  --------------------------------
// SVD Line: 35723

//  <item> SFDITEM_FIELD__USART0_STATUS_TXENS
//    <name> TXENS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40010010) Transmitter Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.1..1> TXENS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_STATUS_MASTER  --------------------------------
// SVD Line: 35730

//  <item> SFDITEM_FIELD__USART0_STATUS_MASTER
//    <name> MASTER </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40010010) SPI Master Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.2..2> MASTER
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_STATUS_RXBLOCK  -------------------------------
// SVD Line: 35737

//  <item> SFDITEM_FIELD__USART0_STATUS_RXBLOCK
//    <name> RXBLOCK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40010010) Block Incoming Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.3..3> RXBLOCK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_STATUS_TXTRI  --------------------------------
// SVD Line: 35744

//  <item> SFDITEM_FIELD__USART0_STATUS_TXTRI
//    <name> TXTRI </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40010010) Transmitter Tristated </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.4..4> TXTRI
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_STATUS_TXC  ---------------------------------
// SVD Line: 35751

//  <item> SFDITEM_FIELD__USART0_STATUS_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40010010) TX Complete </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.5..5> TXC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_STATUS_TXBL  ---------------------------------
// SVD Line: 35758

//  <item> SFDITEM_FIELD__USART0_STATUS_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40010010) TX Buffer Level </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.6..6> TXBL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_STATUS_RXDATAV  -------------------------------
// SVD Line: 35765

//  <item> SFDITEM_FIELD__USART0_STATUS_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40010010) RX Data Valid </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.7..7> RXDATAV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_STATUS_RXFULL  --------------------------------
// SVD Line: 35772

//  <item> SFDITEM_FIELD__USART0_STATUS_RXFULL
//    <name> RXFULL </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40010010) RX FIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.8..8> RXFULL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_STATUS_TXBDRIGHT  ------------------------------
// SVD Line: 35779

//  <item> SFDITEM_FIELD__USART0_STATUS_TXBDRIGHT
//    <name> TXBDRIGHT </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40010010) TX Buffer Expects Double Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.9..9> TXBDRIGHT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_STATUS_TXBSRIGHT  ------------------------------
// SVD Line: 35786

//  <item> SFDITEM_FIELD__USART0_STATUS_TXBSRIGHT
//    <name> TXBSRIGHT </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40010010) TX Buffer Expects Single Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.10..10> TXBSRIGHT
//    </check>
//  </item>
//  


// -------------------------  Field Item: USART0_STATUS_RXDATAVRIGHT  -----------------------------
// SVD Line: 35793

//  <item> SFDITEM_FIELD__USART0_STATUS_RXDATAVRIGHT
//    <name> RXDATAVRIGHT </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40010010) RX Data Right </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.11..11> RXDATAVRIGHT
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_STATUS_RXFULLRIGHT  -----------------------------
// SVD Line: 35800

//  <item> SFDITEM_FIELD__USART0_STATUS_RXFULLRIGHT
//    <name> RXFULLRIGHT </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40010010) RX Full of Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.12..12> RXFULLRIGHT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_STATUS_TXIDLE  --------------------------------
// SVD Line: 35807

//  <item> SFDITEM_FIELD__USART0_STATUS_TXIDLE
//    <name> TXIDLE </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40010010) TX Idle </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------  Field Item: USART0_STATUS_TIMERRESTARTED  ----------------------------
// SVD Line: 35814

//  <item> SFDITEM_FIELD__USART0_STATUS_TIMERRESTARTED
//    <name> TIMERRESTARTED </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40010010) The USART Timer Restarted Itself </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_STATUS ) </loc>
//      <o.14..14> TIMERRESTARTED
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_STATUS_TXBUFCNT  -------------------------------
// SVD Line: 35821

//  <item> SFDITEM_FIELD__USART0_STATUS_TXBUFCNT
//    <name> TXBUFCNT </name>
//    <r> 
//    <i> [Bits 17..16] RO (@ 0x40010010) TX Buffer Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART0_STATUS >> 16) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART0_STATUS  ---------------------------------
// SVD Line: 35707

//  <rtree> SFDITEM_REG__USART0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010010) USART Status Register </i>
//    <loc> ( (unsigned int)((USART0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART0_STATUS_RXENS </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXENS </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_MASTER </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_RXBLOCK </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXTRI </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXC </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXBL </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_RXDATAV </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_RXFULL </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXBDRIGHT </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXBSRIGHT </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_RXDATAVRIGHT </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_RXFULLRIGHT </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TIMERRESTARTED </item>
//    <item> SFDITEM_FIELD__USART0_STATUS_TXBUFCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART0_CLKDIV  ------------------------------
// SVD Line: 35830

unsigned int USART0_CLKDIV __AT (0x40010014);



// ------------------------------  Field Item: USART0_CLKDIV_DIV  ---------------------------------
// SVD Line: 35839

//  <item> SFDITEM_FIELD__USART0_CLKDIV_DIV
//    <name> DIV </name>
//    <rw> 
//    <i> [Bits 22..3] RW (@ 0x40010014) Fractional Clock Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((USART0_CLKDIV >> 3) & 0xFFFFF), ((USART0_CLKDIV = (USART0_CLKDIV & ~(0xFFFFFUL << 3 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART0_CLKDIV_AUTOBAUDEN  ------------------------------
// SVD Line: 35846

//  <item> SFDITEM_FIELD__USART0_CLKDIV_AUTOBAUDEN
//    <name> AUTOBAUDEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010014) AUTOBAUD Detection Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CLKDIV ) </loc>
//      <o.31..31> AUTOBAUDEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USART0_CLKDIV  ---------------------------------
// SVD Line: 35830

//  <rtree> SFDITEM_REG__USART0_CLKDIV
//    <name> CLKDIV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010014) Clock Control Register </i>
//    <loc> ( (unsigned int)((USART0_CLKDIV >> 0) & 0xFFFFFFFF), ((USART0_CLKDIV = (USART0_CLKDIV & ~(0x807FFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x807FFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_CLKDIV_DIV </item>
//    <item> SFDITEM_FIELD__USART0_CLKDIV_AUTOBAUDEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_RXDATAXP  -----------------------------
// SVD Line: 35987

unsigned int USART0_RXDATAXP __AT (0x40010028);



// ---------------------------  Field Item: USART0_RXDATAXP_RXDATAP  ------------------------------
// SVD Line: 35996

//  <item> SFDITEM_FIELD__USART0_RXDATAXP_RXDATAP
//    <name> RXDATAP </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x40010028) RX Data Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART0_RXDATAXP >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USART0_RXDATAXP_PERRP  -------------------------------
// SVD Line: 36003

//  <item> SFDITEM_FIELD__USART0_RXDATAXP_PERRP
//    <name> PERRP </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40010028) Data Parity Error Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_RXDATAXP ) </loc>
//      <o.14..14> PERRP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_RXDATAXP_FERRP  -------------------------------
// SVD Line: 36010

//  <item> SFDITEM_FIELD__USART0_RXDATAXP_FERRP
//    <name> FERRP </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40010028) Data Framing Error Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_RXDATAXP ) </loc>
//      <o.15..15> FERRP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART0_RXDATAXP  --------------------------------
// SVD Line: 35987

//  <rtree> SFDITEM_REG__USART0_RXDATAXP
//    <name> RXDATAXP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010028) RX Buffer Data Extended Peek Register </i>
//    <loc> ( (unsigned int)((USART0_RXDATAXP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART0_RXDATAXP_RXDATAP </item>
//    <item> SFDITEM_FIELD__USART0_RXDATAXP_PERRP </item>
//    <item> SFDITEM_FIELD__USART0_RXDATAXP_FERRP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: USART0_RXDOUBLEXP  ----------------------------
// SVD Line: 36019

unsigned int USART0_RXDOUBLEXP __AT (0x4001002C);



// -------------------------  Field Item: USART0_RXDOUBLEXP_RXDATAP0  -----------------------------
// SVD Line: 36028

//  <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_RXDATAP0
//    <name> RXDATAP0 </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x4001002C) RX Data 0 Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART0_RXDOUBLEXP >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART0_RXDOUBLEXP_PERRP0  ------------------------------
// SVD Line: 36035

//  <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_PERRP0
//    <name> PERRP0 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4001002C) Data Parity Error 0 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_RXDOUBLEXP ) </loc>
//      <o.14..14> PERRP0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_RXDOUBLEXP_FERRP0  ------------------------------
// SVD Line: 36042

//  <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_FERRP0
//    <name> FERRP0 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4001002C) Data Framing Error 0 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_RXDOUBLEXP ) </loc>
//      <o.15..15> FERRP0
//    </check>
//  </item>
//  


// -------------------------  Field Item: USART0_RXDOUBLEXP_RXDATAP1  -----------------------------
// SVD Line: 36049

//  <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_RXDATAP1
//    <name> RXDATAP1 </name>
//    <r> 
//    <i> [Bits 24..16] RO (@ 0x4001002C) RX Data 1 Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART0_RXDOUBLEXP >> 16) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART0_RXDOUBLEXP_PERRP1  ------------------------------
// SVD Line: 36056

//  <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_PERRP1
//    <name> PERRP1 </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x4001002C) Data Parity Error 1 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_RXDOUBLEXP ) </loc>
//      <o.30..30> PERRP1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_RXDOUBLEXP_FERRP1  ------------------------------
// SVD Line: 36063

//  <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_FERRP1
//    <name> FERRP1 </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x4001002C) Data Framing Error 1 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_RXDOUBLEXP ) </loc>
//      <o.31..31> FERRP1
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: USART0_RXDOUBLEXP  -------------------------------
// SVD Line: 36019

//  <rtree> SFDITEM_REG__USART0_RXDOUBLEXP
//    <name> RXDOUBLEXP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001002C) RX Buffer Double Data Extended Peek Register </i>
//    <loc> ( (unsigned int)((USART0_RXDOUBLEXP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_RXDATAP0 </item>
//    <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_PERRP0 </item>
//    <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_FERRP0 </item>
//    <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_RXDATAP1 </item>
//    <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_PERRP1 </item>
//    <item> SFDITEM_FIELD__USART0_RXDOUBLEXP_FERRP1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART0_TXDATAX  -----------------------------
// SVD Line: 36072

unsigned int USART0_TXDATAX __AT (0x40010030);



// ---------------------------  Field Item: USART0_TXDATAX_TXDATAX  -------------------------------
// SVD Line: 36081

//  <item> SFDITEM_FIELD__USART0_TXDATAX_TXDATAX
//    <name> TXDATAX </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40010030) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART0_TXDATAX >> 0) & 0x1FF), ((USART0_TXDATAX = (USART0_TXDATAX & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USART0_TXDATAX_UBRXAT  -------------------------------
// SVD Line: 36088

//  <item> SFDITEM_FIELD__USART0_TXDATAX_UBRXAT
//    <name> UBRXAT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010030) Unblock RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDATAX ) </loc>
//      <o.11..11> UBRXAT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_TXDATAX_TXTRIAT  -------------------------------
// SVD Line: 36095

//  <item> SFDITEM_FIELD__USART0_TXDATAX_TXTRIAT
//    <name> TXTRIAT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010030) Set TXTRI After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDATAX ) </loc>
//      <o.12..12> TXTRIAT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_TXDATAX_TXBREAK  -------------------------------
// SVD Line: 36102

//  <item> SFDITEM_FIELD__USART0_TXDATAX_TXBREAK
//    <name> TXBREAK </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40010030) Transmit Data as Break </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDATAX ) </loc>
//      <o.13..13> TXBREAK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_TXDATAX_TXDISAT  -------------------------------
// SVD Line: 36109

//  <item> SFDITEM_FIELD__USART0_TXDATAX_TXDISAT
//    <name> TXDISAT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010030) Clear TXEN After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDATAX ) </loc>
//      <o.14..14> TXDISAT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_TXDATAX_RXENAT  -------------------------------
// SVD Line: 36116

//  <item> SFDITEM_FIELD__USART0_TXDATAX_RXENAT
//    <name> RXENAT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010030) Enable RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDATAX ) </loc>
//      <o.15..15> RXENAT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART0_TXDATAX  ---------------------------------
// SVD Line: 36072

//  <rtree> SFDITEM_REG__USART0_TXDATAX
//    <name> TXDATAX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010030) TX Buffer Data Extended Register </i>
//    <loc> ( (unsigned int)((USART0_TXDATAX >> 0) & 0xFFFFFFFF), ((USART0_TXDATAX = (USART0_TXDATAX & ~(0xF9FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF9FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TXDATAX_TXDATAX </item>
//    <item> SFDITEM_FIELD__USART0_TXDATAX_UBRXAT </item>
//    <item> SFDITEM_FIELD__USART0_TXDATAX_TXTRIAT </item>
//    <item> SFDITEM_FIELD__USART0_TXDATAX_TXBREAK </item>
//    <item> SFDITEM_FIELD__USART0_TXDATAX_TXDISAT </item>
//    <item> SFDITEM_FIELD__USART0_TXDATAX_RXENAT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART0_TXDATA  ------------------------------
// SVD Line: 36125

unsigned int USART0_TXDATA __AT (0x40010034);



// ----------------------------  Field Item: USART0_TXDATA_TXDATA  --------------------------------
// SVD Line: 36134

//  <item> SFDITEM_FIELD__USART0_TXDATA_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010034) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART0_TXDATA >> 0) & 0xFF), ((USART0_TXDATA = (USART0_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART0_TXDATA  ---------------------------------
// SVD Line: 36125

//  <rtree> SFDITEM_REG__USART0_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010034) TX Buffer Data Register </i>
//    <loc> ( (unsigned int)((USART0_TXDATA >> 0) & 0xFFFFFFFF), ((USART0_TXDATA = (USART0_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TXDATA_TXDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_TXDOUBLEX  ----------------------------
// SVD Line: 36143

unsigned int USART0_TXDOUBLEX __AT (0x40010038);



// --------------------------  Field Item: USART0_TXDOUBLEX_TXDATA0  ------------------------------
// SVD Line: 36152

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDATA0
//    <name> TXDATA0 </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40010038) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART0_TXDOUBLEX >> 0) & 0x1FF), ((USART0_TXDOUBLEX = (USART0_TXDOUBLEX & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_UBRXAT0  ------------------------------
// SVD Line: 36159

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_UBRXAT0
//    <name> UBRXAT0 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010038) Unblock RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.11..11> UBRXAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_TXTRIAT0  -----------------------------
// SVD Line: 36166

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXTRIAT0
//    <name> TXTRIAT0 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010038) Set TXTRI After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.12..12> TXTRIAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_TXBREAK0  -----------------------------
// SVD Line: 36173

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXBREAK0
//    <name> TXBREAK0 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40010038) Transmit Data as Break </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.13..13> TXBREAK0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_TXDISAT0  -----------------------------
// SVD Line: 36180

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDISAT0
//    <name> TXDISAT0 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010038) Clear TXEN After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.14..14> TXDISAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_RXENAT0  ------------------------------
// SVD Line: 36187

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_RXENAT0
//    <name> RXENAT0 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010038) Enable RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.15..15> RXENAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_TXDATA1  ------------------------------
// SVD Line: 36194

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDATA1
//    <name> TXDATA1 </name>
//    <rw> 
//    <i> [Bits 24..16] RW (@ 0x40010038) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART0_TXDOUBLEX >> 16) & 0x1FF), ((USART0_TXDOUBLEX = (USART0_TXDOUBLEX & ~(0x1FFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_UBRXAT1  ------------------------------
// SVD Line: 36201

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_UBRXAT1
//    <name> UBRXAT1 </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40010038) Unblock RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.27..27> UBRXAT1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_TXTRIAT1  -----------------------------
// SVD Line: 36208

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXTRIAT1
//    <name> TXTRIAT1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40010038) Set TXTRI After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.28..28> TXTRIAT1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_TXBREAK1  -----------------------------
// SVD Line: 36215

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXBREAK1
//    <name> TXBREAK1 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40010038) Transmit Data as Break </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.29..29> TXBREAK1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_TXDISAT1  -----------------------------
// SVD Line: 36222

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDISAT1
//    <name> TXDISAT1 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40010038) Clear TXEN After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.30..30> TXDISAT1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART0_TXDOUBLEX_RXENAT1  ------------------------------
// SVD Line: 36229

//  <item> SFDITEM_FIELD__USART0_TXDOUBLEX_RXENAT1
//    <name> RXENAT1 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010038) Enable RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TXDOUBLEX ) </loc>
//      <o.31..31> RXENAT1
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: USART0_TXDOUBLEX  --------------------------------
// SVD Line: 36143

//  <rtree> SFDITEM_REG__USART0_TXDOUBLEX
//    <name> TXDOUBLEX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010038) TX Buffer Double Data Extended Register </i>
//    <loc> ( (unsigned int)((USART0_TXDOUBLEX >> 0) & 0xFFFFFFFF), ((USART0_TXDOUBLEX = (USART0_TXDOUBLEX & ~(0xF9FFF9FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF9FFF9FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDATA0 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_UBRXAT0 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXTRIAT0 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXBREAK0 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDISAT0 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_RXENAT0 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDATA1 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_UBRXAT1 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXTRIAT1 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXBREAK1 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_TXDISAT1 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLEX_RXENAT1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_TXDOUBLE  -----------------------------
// SVD Line: 36238

unsigned int USART0_TXDOUBLE __AT (0x4001003C);



// ---------------------------  Field Item: USART0_TXDOUBLE_TXDATA0  ------------------------------
// SVD Line: 36247

//  <item> SFDITEM_FIELD__USART0_TXDOUBLE_TXDATA0
//    <name> TXDATA0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001003C) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART0_TXDOUBLE >> 0) & 0xFF), ((USART0_TXDOUBLE = (USART0_TXDOUBLE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART0_TXDOUBLE_TXDATA1  ------------------------------
// SVD Line: 36254

//  <item> SFDITEM_FIELD__USART0_TXDOUBLE_TXDATA1
//    <name> TXDATA1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4001003C) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART0_TXDOUBLE >> 8) & 0xFF), ((USART0_TXDOUBLE = (USART0_TXDOUBLE & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: USART0_TXDOUBLE  --------------------------------
// SVD Line: 36238

//  <rtree> SFDITEM_REG__USART0_TXDOUBLE
//    <name> TXDOUBLE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001003C) TX Buffer Double Data Register </i>
//    <loc> ( (unsigned int)((USART0_TXDOUBLE >> 0) & 0xFFFFFFFF), ((USART0_TXDOUBLE = (USART0_TXDOUBLE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLE_TXDATA0 </item>
//    <item> SFDITEM_FIELD__USART0_TXDOUBLE_TXDATA1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART0_IF  --------------------------------
// SVD Line: 36263

unsigned int USART0_IF __AT (0x40010040);



// --------------------------------  Field Item: USART0_IF_TXC  -----------------------------------
// SVD Line: 36272

//  <item> SFDITEM_FIELD__USART0_IF_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010040) TX Complete Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_TXBL  -----------------------------------
// SVD Line: 36279

//  <item> SFDITEM_FIELD__USART0_IF_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40010040) TX Buffer Level Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.1..1> TXBL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IF_RXDATAV  ---------------------------------
// SVD Line: 36286

//  <item> SFDITEM_FIELD__USART0_IF_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40010040) RX Data Valid Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.2..2> RXDATAV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IF_RXFULL  ----------------------------------
// SVD Line: 36293

//  <item> SFDITEM_FIELD__USART0_IF_RXFULL
//    <name> RXFULL </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40010040) RX Buffer Full Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_RXOF  -----------------------------------
// SVD Line: 36300

//  <item> SFDITEM_FIELD__USART0_IF_RXOF
//    <name> RXOF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40010040) RX Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_RXUF  -----------------------------------
// SVD Line: 36307

//  <item> SFDITEM_FIELD__USART0_IF_RXUF
//    <name> RXUF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40010040) RX Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_TXOF  -----------------------------------
// SVD Line: 36314

//  <item> SFDITEM_FIELD__USART0_IF_TXOF
//    <name> TXOF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40010040) TX Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_TXUF  -----------------------------------
// SVD Line: 36321

//  <item> SFDITEM_FIELD__USART0_IF_TXUF
//    <name> TXUF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40010040) TX Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_PERR  -----------------------------------
// SVD Line: 36328

//  <item> SFDITEM_FIELD__USART0_IF_PERR
//    <name> PERR </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40010040) Parity Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_FERR  -----------------------------------
// SVD Line: 36335

//  <item> SFDITEM_FIELD__USART0_IF_FERR
//    <name> FERR </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40010040) Framing Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_MPAF  -----------------------------------
// SVD Line: 36342

//  <item> SFDITEM_FIELD__USART0_IF_MPAF
//    <name> MPAF </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40010040) Multi-Processor Address Frame Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART0_IF_SSM  -----------------------------------
// SVD Line: 36349

//  <item> SFDITEM_FIELD__USART0_IF_SSM
//    <name> SSM </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40010040) Slave-Select in Master Mode Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART0_IF_CCF  -----------------------------------
// SVD Line: 36356

//  <item> SFDITEM_FIELD__USART0_IF_CCF
//    <name> CCF </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40010040) Collision Check Fail Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IF_TXIDLE  ----------------------------------
// SVD Line: 36363

//  <item> SFDITEM_FIELD__USART0_IF_TXIDLE
//    <name> TXIDLE </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40010040) TX Idle Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_TCMP0  ----------------------------------
// SVD Line: 36370

//  <item> SFDITEM_FIELD__USART0_IF_TCMP0
//    <name> TCMP0 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40010040) Timer Comparator 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_TCMP1  ----------------------------------
// SVD Line: 36377

//  <item> SFDITEM_FIELD__USART0_IF_TCMP1
//    <name> TCMP1 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40010040) Timer Comparator 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IF_TCMP2  ----------------------------------
// SVD Line: 36384

//  <item> SFDITEM_FIELD__USART0_IF_TCMP2
//    <name> TCMP2 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40010040) Timer Comparator 2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IF ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: USART0_IF  -----------------------------------
// SVD Line: 36263

//  <rtree> SFDITEM_REG__USART0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010040) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((USART0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART0_IF_TXC </item>
//    <item> SFDITEM_FIELD__USART0_IF_TXBL </item>
//    <item> SFDITEM_FIELD__USART0_IF_RXDATAV </item>
//    <item> SFDITEM_FIELD__USART0_IF_RXFULL </item>
//    <item> SFDITEM_FIELD__USART0_IF_RXOF </item>
//    <item> SFDITEM_FIELD__USART0_IF_RXUF </item>
//    <item> SFDITEM_FIELD__USART0_IF_TXOF </item>
//    <item> SFDITEM_FIELD__USART0_IF_TXUF </item>
//    <item> SFDITEM_FIELD__USART0_IF_PERR </item>
//    <item> SFDITEM_FIELD__USART0_IF_FERR </item>
//    <item> SFDITEM_FIELD__USART0_IF_MPAF </item>
//    <item> SFDITEM_FIELD__USART0_IF_SSM </item>
//    <item> SFDITEM_FIELD__USART0_IF_CCF </item>
//    <item> SFDITEM_FIELD__USART0_IF_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART0_IF_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART0_IF_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART0_IF_TCMP2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART0_IFS  -------------------------------
// SVD Line: 36393

unsigned int USART0_IFS __AT (0x40010044);



// -------------------------------  Field Item: USART0_IFS_TXC  -----------------------------------
// SVD Line: 36402

//  <item> SFDITEM_FIELD__USART0_IFS_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40010044) Set TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFS_RXFULL  ---------------------------------
// SVD Line: 36409

//  <item> SFDITEM_FIELD__USART0_IFS_RXFULL
//    <name> RXFULL </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40010044) Set RXFULL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_RXOF  ----------------------------------
// SVD Line: 36416

//  <item> SFDITEM_FIELD__USART0_IFS_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40010044) Set RXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_RXUF  ----------------------------------
// SVD Line: 36423

//  <item> SFDITEM_FIELD__USART0_IFS_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40010044) Set RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_TXOF  ----------------------------------
// SVD Line: 36430

//  <item> SFDITEM_FIELD__USART0_IFS_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40010044) Set TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_TXUF  ----------------------------------
// SVD Line: 36437

//  <item> SFDITEM_FIELD__USART0_IFS_TXUF
//    <name> TXUF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40010044) Set TXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_PERR  ----------------------------------
// SVD Line: 36444

//  <item> SFDITEM_FIELD__USART0_IFS_PERR
//    <name> PERR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40010044) Set PERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_FERR  ----------------------------------
// SVD Line: 36451

//  <item> SFDITEM_FIELD__USART0_IFS_FERR
//    <name> FERR </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40010044) Set FERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_MPAF  ----------------------------------
// SVD Line: 36458

//  <item> SFDITEM_FIELD__USART0_IFS_MPAF
//    <name> MPAF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40010044) Set MPAF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_SSM  -----------------------------------
// SVD Line: 36465

//  <item> SFDITEM_FIELD__USART0_IFS_SSM
//    <name> SSM </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40010044) Set SSM Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFS_CCF  -----------------------------------
// SVD Line: 36472

//  <item> SFDITEM_FIELD__USART0_IFS_CCF
//    <name> CCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40010044) Set CCF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFS_TXIDLE  ---------------------------------
// SVD Line: 36479

//  <item> SFDITEM_FIELD__USART0_IFS_TXIDLE
//    <name> TXIDLE </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40010044) Set TXIDLE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFS_TCMP0  ----------------------------------
// SVD Line: 36486

//  <item> SFDITEM_FIELD__USART0_IFS_TCMP0
//    <name> TCMP0 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40010044) Set TCMP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFS_TCMP1  ----------------------------------
// SVD Line: 36493

//  <item> SFDITEM_FIELD__USART0_IFS_TCMP1
//    <name> TCMP1 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40010044) Set TCMP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFS_TCMP2  ----------------------------------
// SVD Line: 36500

//  <item> SFDITEM_FIELD__USART0_IFS_TCMP2
//    <name> TCMP2 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40010044) Set TCMP2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFS ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART0_IFS  -----------------------------------
// SVD Line: 36393

//  <rtree> SFDITEM_REG__USART0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40010044) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((USART0_IFS >> 0) & 0xFFFFFFFF), ((USART0_IFS = (USART0_IFS & ~(0x1FFF9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_IFS_TXC </item>
//    <item> SFDITEM_FIELD__USART0_IFS_RXFULL </item>
//    <item> SFDITEM_FIELD__USART0_IFS_RXOF </item>
//    <item> SFDITEM_FIELD__USART0_IFS_RXUF </item>
//    <item> SFDITEM_FIELD__USART0_IFS_TXOF </item>
//    <item> SFDITEM_FIELD__USART0_IFS_TXUF </item>
//    <item> SFDITEM_FIELD__USART0_IFS_PERR </item>
//    <item> SFDITEM_FIELD__USART0_IFS_FERR </item>
//    <item> SFDITEM_FIELD__USART0_IFS_MPAF </item>
//    <item> SFDITEM_FIELD__USART0_IFS_SSM </item>
//    <item> SFDITEM_FIELD__USART0_IFS_CCF </item>
//    <item> SFDITEM_FIELD__USART0_IFS_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART0_IFS_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART0_IFS_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART0_IFS_TCMP2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART0_IFC  -------------------------------
// SVD Line: 36509

unsigned int USART0_IFC __AT (0x40010048);



// -------------------------------  Field Item: USART0_IFC_TXC  -----------------------------------
// SVD Line: 36518

//  <item> SFDITEM_FIELD__USART0_IFC_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40010048) Clear TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFC_RXFULL  ---------------------------------
// SVD Line: 36525

//  <item> SFDITEM_FIELD__USART0_IFC_RXFULL
//    <name> RXFULL </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40010048) Clear RXFULL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_RXOF  ----------------------------------
// SVD Line: 36532

//  <item> SFDITEM_FIELD__USART0_IFC_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40010048) Clear RXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_RXUF  ----------------------------------
// SVD Line: 36539

//  <item> SFDITEM_FIELD__USART0_IFC_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40010048) Clear RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_TXOF  ----------------------------------
// SVD Line: 36546

//  <item> SFDITEM_FIELD__USART0_IFC_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40010048) Clear TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_TXUF  ----------------------------------
// SVD Line: 36553

//  <item> SFDITEM_FIELD__USART0_IFC_TXUF
//    <name> TXUF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40010048) Clear TXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_PERR  ----------------------------------
// SVD Line: 36560

//  <item> SFDITEM_FIELD__USART0_IFC_PERR
//    <name> PERR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40010048) Clear PERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_FERR  ----------------------------------
// SVD Line: 36567

//  <item> SFDITEM_FIELD__USART0_IFC_FERR
//    <name> FERR </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40010048) Clear FERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_MPAF  ----------------------------------
// SVD Line: 36574

//  <item> SFDITEM_FIELD__USART0_IFC_MPAF
//    <name> MPAF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40010048) Clear MPAF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_SSM  -----------------------------------
// SVD Line: 36581

//  <item> SFDITEM_FIELD__USART0_IFC_SSM
//    <name> SSM </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40010048) Clear SSM Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IFC_CCF  -----------------------------------
// SVD Line: 36588

//  <item> SFDITEM_FIELD__USART0_IFC_CCF
//    <name> CCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40010048) Clear CCF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFC_TXIDLE  ---------------------------------
// SVD Line: 36595

//  <item> SFDITEM_FIELD__USART0_IFC_TXIDLE
//    <name> TXIDLE </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40010048) Clear TXIDLE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFC_TCMP0  ----------------------------------
// SVD Line: 36602

//  <item> SFDITEM_FIELD__USART0_IFC_TCMP0
//    <name> TCMP0 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40010048) Clear TCMP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFC_TCMP1  ----------------------------------
// SVD Line: 36609

//  <item> SFDITEM_FIELD__USART0_IFC_TCMP1
//    <name> TCMP1 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40010048) Clear TCMP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IFC_TCMP2  ----------------------------------
// SVD Line: 36616

//  <item> SFDITEM_FIELD__USART0_IFC_TCMP2
//    <name> TCMP2 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40010048) Clear TCMP2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IFC ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART0_IFC  -----------------------------------
// SVD Line: 36509

//  <rtree> SFDITEM_REG__USART0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40010048) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((USART0_IFC >> 0) & 0xFFFFFFFF), ((USART0_IFC = (USART0_IFC & ~(0x1FFF9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_IFC_TXC </item>
//    <item> SFDITEM_FIELD__USART0_IFC_RXFULL </item>
//    <item> SFDITEM_FIELD__USART0_IFC_RXOF </item>
//    <item> SFDITEM_FIELD__USART0_IFC_RXUF </item>
//    <item> SFDITEM_FIELD__USART0_IFC_TXOF </item>
//    <item> SFDITEM_FIELD__USART0_IFC_TXUF </item>
//    <item> SFDITEM_FIELD__USART0_IFC_PERR </item>
//    <item> SFDITEM_FIELD__USART0_IFC_FERR </item>
//    <item> SFDITEM_FIELD__USART0_IFC_MPAF </item>
//    <item> SFDITEM_FIELD__USART0_IFC_SSM </item>
//    <item> SFDITEM_FIELD__USART0_IFC_CCF </item>
//    <item> SFDITEM_FIELD__USART0_IFC_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART0_IFC_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART0_IFC_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART0_IFC_TCMP2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART0_IEN  -------------------------------
// SVD Line: 36625

unsigned int USART0_IEN __AT (0x4001004C);



// -------------------------------  Field Item: USART0_IEN_TXC  -----------------------------------
// SVD Line: 36634

//  <item> SFDITEM_FIELD__USART0_IEN_TXC
//    <name> TXC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001004C) TXC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_TXBL  ----------------------------------
// SVD Line: 36641

//  <item> SFDITEM_FIELD__USART0_IEN_TXBL
//    <name> TXBL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001004C) TXBL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.1..1> TXBL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_IEN_RXDATAV  ---------------------------------
// SVD Line: 36648

//  <item> SFDITEM_FIELD__USART0_IEN_RXDATAV
//    <name> RXDATAV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001004C) RXDATAV Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.2..2> RXDATAV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IEN_RXFULL  ---------------------------------
// SVD Line: 36655

//  <item> SFDITEM_FIELD__USART0_IEN_RXFULL
//    <name> RXFULL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001004C) RXFULL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_RXOF  ----------------------------------
// SVD Line: 36662

//  <item> SFDITEM_FIELD__USART0_IEN_RXOF
//    <name> RXOF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001004C) RXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_RXUF  ----------------------------------
// SVD Line: 36669

//  <item> SFDITEM_FIELD__USART0_IEN_RXUF
//    <name> RXUF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001004C) RXUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_TXOF  ----------------------------------
// SVD Line: 36676

//  <item> SFDITEM_FIELD__USART0_IEN_TXOF
//    <name> TXOF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001004C) TXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_TXUF  ----------------------------------
// SVD Line: 36683

//  <item> SFDITEM_FIELD__USART0_IEN_TXUF
//    <name> TXUF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001004C) TXUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_PERR  ----------------------------------
// SVD Line: 36690

//  <item> SFDITEM_FIELD__USART0_IEN_PERR
//    <name> PERR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001004C) PERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_FERR  ----------------------------------
// SVD Line: 36697

//  <item> SFDITEM_FIELD__USART0_IEN_FERR
//    <name> FERR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001004C) FERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_MPAF  ----------------------------------
// SVD Line: 36704

//  <item> SFDITEM_FIELD__USART0_IEN_MPAF
//    <name> MPAF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001004C) MPAF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_SSM  -----------------------------------
// SVD Line: 36711

//  <item> SFDITEM_FIELD__USART0_IEN_SSM
//    <name> SSM </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001004C) SSM Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART0_IEN_CCF  -----------------------------------
// SVD Line: 36718

//  <item> SFDITEM_FIELD__USART0_IEN_CCF
//    <name> CCF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001004C) CCF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IEN_TXIDLE  ---------------------------------
// SVD Line: 36725

//  <item> SFDITEM_FIELD__USART0_IEN_TXIDLE
//    <name> TXIDLE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001004C) TXIDLE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IEN_TCMP0  ----------------------------------
// SVD Line: 36732

//  <item> SFDITEM_FIELD__USART0_IEN_TCMP0
//    <name> TCMP0 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001004C) TCMP0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IEN_TCMP1  ----------------------------------
// SVD Line: 36739

//  <item> SFDITEM_FIELD__USART0_IEN_TCMP1
//    <name> TCMP1 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001004C) TCMP1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART0_IEN_TCMP2  ----------------------------------
// SVD Line: 36746

//  <item> SFDITEM_FIELD__USART0_IEN_TCMP2
//    <name> TCMP2 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001004C) TCMP2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IEN ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART0_IEN  -----------------------------------
// SVD Line: 36625

//  <rtree> SFDITEM_REG__USART0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001004C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((USART0_IEN >> 0) & 0xFFFFFFFF), ((USART0_IEN = (USART0_IEN & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_IEN_TXC </item>
//    <item> SFDITEM_FIELD__USART0_IEN_TXBL </item>
//    <item> SFDITEM_FIELD__USART0_IEN_RXDATAV </item>
//    <item> SFDITEM_FIELD__USART0_IEN_RXFULL </item>
//    <item> SFDITEM_FIELD__USART0_IEN_RXOF </item>
//    <item> SFDITEM_FIELD__USART0_IEN_RXUF </item>
//    <item> SFDITEM_FIELD__USART0_IEN_TXOF </item>
//    <item> SFDITEM_FIELD__USART0_IEN_TXUF </item>
//    <item> SFDITEM_FIELD__USART0_IEN_PERR </item>
//    <item> SFDITEM_FIELD__USART0_IEN_FERR </item>
//    <item> SFDITEM_FIELD__USART0_IEN_MPAF </item>
//    <item> SFDITEM_FIELD__USART0_IEN_SSM </item>
//    <item> SFDITEM_FIELD__USART0_IEN_CCF </item>
//    <item> SFDITEM_FIELD__USART0_IEN_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART0_IEN_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART0_IEN_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART0_IEN_TCMP2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART0_IRCTRL  ------------------------------
// SVD Line: 36755

unsigned int USART0_IRCTRL __AT (0x40010050);



// -----------------------------  Field Item: USART0_IRCTRL_IREN  ---------------------------------
// SVD Line: 36764

//  <item> SFDITEM_FIELD__USART0_IRCTRL_IREN
//    <name> IREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010050) Enable IrDA Module </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IRCTRL ) </loc>
//      <o.0..0> IREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_IRCTRL_IRPW  ---------------------------------
// SVD Line: 36771

//  <item> SFDITEM_FIELD__USART0_IRCTRL_IRPW
//    <name> IRPW </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40010050) \nIrDA TX Pulse Width\n0 : ONE = IrDA pulse width is 1/16 for OVS=0 and 1/8 for OVS=1\n1 : TWO = IrDA pulse width is 2/16 for OVS=0 and 2/8 for OVS=1\n2 : THREE = IrDA pulse width is 3/16 for OVS=0 and 3/8 for OVS=1\n3 : FOUR = IrDA pulse width is 4/16 for OVS=0 and 4/8 for OVS=1 </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_IRCTRL ) </loc>
//      <o.2..1> IRPW
//        <0=> 0: ONE = IrDA pulse width is 1/16 for OVS=0 and 1/8 for OVS=1
//        <1=> 1: TWO = IrDA pulse width is 2/16 for OVS=0 and 2/8 for OVS=1
//        <2=> 2: THREE = IrDA pulse width is 3/16 for OVS=0 and 3/8 for OVS=1
//        <3=> 3: FOUR = IrDA pulse width is 4/16 for OVS=0 and 4/8 for OVS=1
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART0_IRCTRL_IRFILT  --------------------------------
// SVD Line: 36800

//  <item> SFDITEM_FIELD__USART0_IRCTRL_IRFILT
//    <name> IRFILT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010050) IrDA RX Filter </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IRCTRL ) </loc>
//      <o.3..3> IRFILT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_IRCTRL_IRPRSEN  -------------------------------
// SVD Line: 36807

//  <item> SFDITEM_FIELD__USART0_IRCTRL_IRPRSEN
//    <name> IRPRSEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40010050) IrDA PRS Channel Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_IRCTRL ) </loc>
//      <o.7..7> IRPRSEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_IRCTRL_IRPRSSEL  -------------------------------
// SVD Line: 36814

//  <item> SFDITEM_FIELD__USART0_IRCTRL_IRPRSSEL
//    <name> IRPRSSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40010050) \nIrDA PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_IRCTRL ) </loc>
//      <o.11..8> IRPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: USART0_IRCTRL  ---------------------------------
// SVD Line: 36755

//  <rtree> SFDITEM_REG__USART0_IRCTRL
//    <name> IRCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010050) IrDA Control Register </i>
//    <loc> ( (unsigned int)((USART0_IRCTRL >> 0) & 0xFFFFFFFF), ((USART0_IRCTRL = (USART0_IRCTRL & ~(0xF8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_IRCTRL_IREN </item>
//    <item> SFDITEM_FIELD__USART0_IRCTRL_IRPW </item>
//    <item> SFDITEM_FIELD__USART0_IRCTRL_IRFILT </item>
//    <item> SFDITEM_FIELD__USART0_IRCTRL_IRPRSEN </item>
//    <item> SFDITEM_FIELD__USART0_IRCTRL_IRPRSSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART0_INPUT  ------------------------------
// SVD Line: 36885

unsigned int USART0_INPUT __AT (0x40010058);



// ----------------------------  Field Item: USART0_INPUT_RXPRSSEL  -------------------------------
// SVD Line: 36894

//  <item> SFDITEM_FIELD__USART0_INPUT_RXPRSSEL
//    <name> RXPRSSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40010058) \nRX PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_INPUT ) </loc>
//      <o.3..0> RXPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART0_INPUT_RXPRS  ---------------------------------
// SVD Line: 36963

//  <item> SFDITEM_FIELD__USART0_INPUT_RXPRS
//    <name> RXPRS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40010058) PRS RX Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_INPUT ) </loc>
//      <o.7..7> RXPRS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_INPUT_CLKPRSSEL  -------------------------------
// SVD Line: 36970

//  <item> SFDITEM_FIELD__USART0_INPUT_CLKPRSSEL
//    <name> CLKPRSSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40010058) \nCLK PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_INPUT ) </loc>
//      <o.11..8> CLKPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART0_INPUT_CLKPRS  --------------------------------
// SVD Line: 37039

//  <item> SFDITEM_FIELD__USART0_INPUT_CLKPRS
//    <name> CLKPRS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010058) PRS CLK Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_INPUT ) </loc>
//      <o.15..15> CLKPRS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USART0_INPUT  ----------------------------------
// SVD Line: 36885

//  <rtree> SFDITEM_REG__USART0_INPUT
//    <name> INPUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010058) USART Input Register </i>
//    <loc> ( (unsigned int)((USART0_INPUT >> 0) & 0xFFFFFFFF), ((USART0_INPUT = (USART0_INPUT & ~(0x8F8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_INPUT_RXPRSSEL </item>
//    <item> SFDITEM_FIELD__USART0_INPUT_RXPRS </item>
//    <item> SFDITEM_FIELD__USART0_INPUT_CLKPRSSEL </item>
//    <item> SFDITEM_FIELD__USART0_INPUT_CLKPRS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART0_I2SCTRL  -----------------------------
// SVD Line: 37048

unsigned int USART0_I2SCTRL __AT (0x4001005C);



// ------------------------------  Field Item: USART0_I2SCTRL_EN  ---------------------------------
// SVD Line: 37057

//  <item> SFDITEM_FIELD__USART0_I2SCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001005C) Enable I2S Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_I2SCTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_I2SCTRL_MONO  --------------------------------
// SVD Line: 37064

//  <item> SFDITEM_FIELD__USART0_I2SCTRL_MONO
//    <name> MONO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001005C) Stero or Mono </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_I2SCTRL ) </loc>
//      <o.1..1> MONO
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_I2SCTRL_JUSTIFY  -------------------------------
// SVD Line: 37071

//  <item> SFDITEM_FIELD__USART0_I2SCTRL_JUSTIFY
//    <name> JUSTIFY </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001005C) Justification of I2S Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_I2SCTRL ) </loc>
//      <o.2..2> JUSTIFY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_I2SCTRL_DMASPLIT  ------------------------------
// SVD Line: 37078

//  <item> SFDITEM_FIELD__USART0_I2SCTRL_DMASPLIT
//    <name> DMASPLIT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001005C) Separate DMA Request for Left/Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_I2SCTRL ) </loc>
//      <o.3..3> DMASPLIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_I2SCTRL_DELAY  --------------------------------
// SVD Line: 37085

//  <item> SFDITEM_FIELD__USART0_I2SCTRL_DELAY
//    <name> DELAY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001005C) Delay on I2S Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_I2SCTRL ) </loc>
//      <o.4..4> DELAY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_I2SCTRL_FORMAT  -------------------------------
// SVD Line: 37092

//  <item> SFDITEM_FIELD__USART0_I2SCTRL_FORMAT
//    <name> FORMAT </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4001005C) \nI2S Word Format\n0 : W32D32 = 32-bit word, 32-bit data\n1 : W32D24M = 32-bit word, 32-bit data with 8 lsb masked\n2 : W32D24 = 32-bit word, 24-bit data\n3 : W32D16 = 32-bit word, 16-bit data\n4 : W32D8 = 32-bit word, 8-bit data\n5 : W16D16 = 16-bit word, 16-bit data\n6 : W16D8 = 16-bit word, 8-bit data\n7 : W8D8 = 8-bit word, 8-bit data </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_I2SCTRL ) </loc>
//      <o.10..8> FORMAT
//        <0=> 0: W32D32 = 32-bit word, 32-bit data
//        <1=> 1: W32D24M = 32-bit word, 32-bit data with 8 lsb masked
//        <2=> 2: W32D24 = 32-bit word, 24-bit data
//        <3=> 3: W32D16 = 32-bit word, 16-bit data
//        <4=> 4: W32D8 = 32-bit word, 8-bit data
//        <5=> 5: W16D16 = 16-bit word, 16-bit data
//        <6=> 6: W16D8 = 16-bit word, 8-bit data
//        <7=> 7: W8D8 = 8-bit word, 8-bit data
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: USART0_I2SCTRL  ---------------------------------
// SVD Line: 37048

//  <rtree> SFDITEM_REG__USART0_I2SCTRL
//    <name> I2SCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001005C) I2S Control Register </i>
//    <loc> ( (unsigned int)((USART0_I2SCTRL >> 0) & 0xFFFFFFFF), ((USART0_I2SCTRL = (USART0_I2SCTRL & ~(0x71FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x71F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_I2SCTRL_EN </item>
//    <item> SFDITEM_FIELD__USART0_I2SCTRL_MONO </item>
//    <item> SFDITEM_FIELD__USART0_I2SCTRL_JUSTIFY </item>
//    <item> SFDITEM_FIELD__USART0_I2SCTRL_DMASPLIT </item>
//    <item> SFDITEM_FIELD__USART0_I2SCTRL_DELAY </item>
//    <item> SFDITEM_FIELD__USART0_I2SCTRL_FORMAT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART0_TIMING  ------------------------------
// SVD Line: 37143

unsigned int USART0_TIMING __AT (0x40010060);



// ----------------------------  Field Item: USART0_TIMING_TXDELAY  -------------------------------
// SVD Line: 37152

//  <item> SFDITEM_FIELD__USART0_TIMING_TXDELAY
//    <name> TXDELAY </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40010060) \nTX Frame Start Delay\n0 : DISABLE = Disable - TXDELAY in USARTn_CTRL can be used for legacy\n1 : ONE = Start of transmission is delayed for 1 baud-times\n2 : TWO = Start of transmission is delayed for 2 baud-times\n3 : THREE = Start of transmission is delayed for 3 baud-times\n4 : SEVEN = Start of transmission is delayed for 7 baud-times\n5 : TCMP0 = Start of transmission is delayed for TCMPVAL0 baud-times\n6 : TCMP1 = Start of transmission is delayed for TCMPVAL1 baud-times\n7 : TCMP2 = Start of transmission is delayed for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMING ) </loc>
//      <o.18..16> TXDELAY
//        <0=> 0: DISABLE = Disable - TXDELAY in USARTn_CTRL can be used for legacy
//        <1=> 1: ONE = Start of transmission is delayed for 1 baud-times
//        <2=> 2: TWO = Start of transmission is delayed for 2 baud-times
//        <3=> 3: THREE = Start of transmission is delayed for 3 baud-times
//        <4=> 4: SEVEN = Start of transmission is delayed for 7 baud-times
//        <5=> 5: TCMP0 = Start of transmission is delayed for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = Start of transmission is delayed for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = Start of transmission is delayed for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART0_TIMING_CSSETUP  -------------------------------
// SVD Line: 37201

//  <item> SFDITEM_FIELD__USART0_TIMING_CSSETUP
//    <name> CSSETUP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40010060) \nChip Select Setup\n0 : ZERO = CS is not asserted before start of transmission\n1 : ONE = CS is asserted for 1 baud-times before start of transmission\n2 : TWO = CS is asserted for 2 baud-times before start of transmission\n3 : THREE = CS is asserted for 3 baud-times before start of transmission\n4 : SEVEN = CS is asserted for 7 baud-times before start of transmission\n5 : TCMP0 = CS is asserted before the start of transmission for TCMPVAL0 baud-times\n6 : TCMP1 = CS is asserted before the start of transmission for TCMPVAL1 baud-times\n7 : TCMP2 = CS is asserted before the start of transmission for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMING ) </loc>
//      <o.22..20> CSSETUP
//        <0=> 0: ZERO = CS is not asserted before start of transmission
//        <1=> 1: ONE = CS is asserted for 1 baud-times before start of transmission
//        <2=> 2: TWO = CS is asserted for 2 baud-times before start of transmission
//        <3=> 3: THREE = CS is asserted for 3 baud-times before start of transmission
//        <4=> 4: SEVEN = CS is asserted for 7 baud-times before start of transmission
//        <5=> 5: TCMP0 = CS is asserted before the start of transmission for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = CS is asserted before the start of transmission for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = CS is asserted before the start of transmission for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: USART0_TIMING_ICS  ---------------------------------
// SVD Line: 37250

//  <item> SFDITEM_FIELD__USART0_TIMING_ICS
//    <name> ICS </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40010060) \nInter-character Spacing\n0 : ZERO = There is no space between charcters\n1 : ONE = Create a space of 1 baud-times before start of transmission\n2 : TWO = Create a space of 2 baud-times before start of transmission\n3 : THREE = Create a space of 3 baud-times before start of transmission\n4 : SEVEN = Create a space of 7 baud-times before start of transmission\n5 : TCMP0 = Create a space of before the start of transmission for TCMPVAL0 baud-times\n6 : TCMP1 = Create a space of before the start of transmission for TCMPVAL1 baud-times\n7 : TCMP2 = Create a space of before the start of transmission for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMING ) </loc>
//      <o.26..24> ICS
//        <0=> 0: ZERO = There is no space between charcters
//        <1=> 1: ONE = Create a space of 1 baud-times before start of transmission
//        <2=> 2: TWO = Create a space of 2 baud-times before start of transmission
//        <3=> 3: THREE = Create a space of 3 baud-times before start of transmission
//        <4=> 4: SEVEN = Create a space of 7 baud-times before start of transmission
//        <5=> 5: TCMP0 = Create a space of before the start of transmission for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = Create a space of before the start of transmission for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = Create a space of before the start of transmission for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART0_TIMING_CSHOLD  --------------------------------
// SVD Line: 37299

//  <item> SFDITEM_FIELD__USART0_TIMING_CSHOLD
//    <name> CSHOLD </name>
//    <rw> 
//    <i> [Bits 30..28] RW (@ 0x40010060) \nChip Select Hold\n0 : ZERO = Disable CS being asserted after the end of transmission\n1 : ONE = CS is asserted for 1 baud-times after the end of transmission\n2 : TWO = CS is asserted for 2 baud-times after the end of transmission\n3 : THREE = CS is asserted for 3 baud-times after the end of transmission\n4 : SEVEN = CS is asserted for 7 baud-times after the end of transmission\n5 : TCMP0 = CS is asserted after the end of transmission for TCMPVAL0 baud-times\n6 : TCMP1 = CS is asserted after the end of transmission for TCMPVAL1 baud-times\n7 : TCMP2 = CS is asserted after the end of transmission for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMING ) </loc>
//      <o.30..28> CSHOLD
//        <0=> 0: ZERO = Disable CS being asserted after the end of transmission
//        <1=> 1: ONE = CS is asserted for 1 baud-times after the end of transmission
//        <2=> 2: TWO = CS is asserted for 2 baud-times after the end of transmission
//        <3=> 3: THREE = CS is asserted for 3 baud-times after the end of transmission
//        <4=> 4: SEVEN = CS is asserted for 7 baud-times after the end of transmission
//        <5=> 5: TCMP0 = CS is asserted after the end of transmission for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = CS is asserted after the end of transmission for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = CS is asserted after the end of transmission for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: USART0_TIMING  ---------------------------------
// SVD Line: 37143

//  <rtree> SFDITEM_REG__USART0_TIMING
//    <name> TIMING </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010060) Timing Register </i>
//    <loc> ( (unsigned int)((USART0_TIMING >> 0) & 0xFFFFFFFF), ((USART0_TIMING = (USART0_TIMING & ~(0x77770000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x77770000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TIMING_TXDELAY </item>
//    <item> SFDITEM_FIELD__USART0_TIMING_CSSETUP </item>
//    <item> SFDITEM_FIELD__USART0_TIMING_ICS </item>
//    <item> SFDITEM_FIELD__USART0_TIMING_CSHOLD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART0_CTRLX  ------------------------------
// SVD Line: 37350

unsigned int USART0_CTRLX __AT (0x40010064);



// ----------------------------  Field Item: USART0_CTRLX_DBGHALT  --------------------------------
// SVD Line: 37359

//  <item> SFDITEM_FIELD__USART0_CTRLX_DBGHALT
//    <name> DBGHALT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010064) Debug Halt </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRLX ) </loc>
//      <o.0..0> DBGHALT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRLX_CTSINV  --------------------------------
// SVD Line: 37366

//  <item> SFDITEM_FIELD__USART0_CTRLX_CTSINV
//    <name> CTSINV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010064) CTS Pin Inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRLX ) </loc>
//      <o.1..1> CTSINV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRLX_CTSEN  ---------------------------------
// SVD Line: 37373

//  <item> SFDITEM_FIELD__USART0_CTRLX_CTSEN
//    <name> CTSEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010064) CTS Function Enabled </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRLX ) </loc>
//      <o.2..2> CTSEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART0_CTRLX_RTSINV  --------------------------------
// SVD Line: 37380

//  <item> SFDITEM_FIELD__USART0_CTRLX_RTSINV
//    <name> RTSINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010064) RTS Pin Inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_CTRLX ) </loc>
//      <o.3..3> RTSINV
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USART0_CTRLX  ----------------------------------
// SVD Line: 37350

//  <rtree> SFDITEM_REG__USART0_CTRLX
//    <name> CTRLX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010064) Control Register Extended </i>
//    <loc> ( (unsigned int)((USART0_CTRLX >> 0) & 0xFFFFFFFF), ((USART0_CTRLX = (USART0_CTRLX & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_CTRLX_DBGHALT </item>
//    <item> SFDITEM_FIELD__USART0_CTRLX_CTSINV </item>
//    <item> SFDITEM_FIELD__USART0_CTRLX_CTSEN </item>
//    <item> SFDITEM_FIELD__USART0_CTRLX_RTSINV </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_TIMECMP0  -----------------------------
// SVD Line: 37389

unsigned int USART0_TIMECMP0 __AT (0x40010068);



// ---------------------------  Field Item: USART0_TIMECMP0_TCMPVAL  ------------------------------
// SVD Line: 37398

//  <item> SFDITEM_FIELD__USART0_TIMECMP0_TCMPVAL
//    <name> TCMPVAL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010068) Timer Comparator 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART0_TIMECMP0 >> 0) & 0xFF), ((USART0_TIMECMP0 = (USART0_TIMECMP0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART0_TIMECMP0_TSTART  -------------------------------
// SVD Line: 37405

//  <item> SFDITEM_FIELD__USART0_TIMECMP0_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40010068) \nTimer Start Source\n0 : DISABLE = Comparator 0 is disabled\n1 : TXEOF = Comparator 0 and timer are started at TX end of frame\n2 : TXC = Comparator 0 and timer are started at TX Complete\n3 : RXACT = Comparator 0 and timer are started at RX going Active (default: low)\n4 : RXEOF = Comparator 0 and timer are started at RX end of frame\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMECMP0 ) </loc>
//      <o.18..16> TSTART
//        <0=> 0: DISABLE = Comparator 0 is disabled
//        <1=> 1: TXEOF = Comparator 0 and timer are started at TX end of frame
//        <2=> 2: TXC = Comparator 0 and timer are started at TX Complete
//        <3=> 3: RXACT = Comparator 0 and timer are started at RX going Active (default: low)
//        <4=> 4: RXEOF = Comparator 0 and timer are started at RX end of frame
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART0_TIMECMP0_TSTOP  -------------------------------
// SVD Line: 37439

//  <item> SFDITEM_FIELD__USART0_TIMECMP0_TSTOP
//    <name> TSTOP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40010068) \nSource Used to Disable Comparator 0\n0 : TCMP0 = Comparator 0 is disabled when the counter equals TCMPVAL and triggers a TCMP0 event\n1 : TXST = Comparator 0 is disabled at the start of transmission\n2 : RXACT = Comparator 0 is disabled on RX going going Active (default: low)\n3 : RXACTN = Comparator 0 is disabled on RX going Inactive\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMECMP0 ) </loc>
//      <o.22..20> TSTOP
//        <0=> 0: TCMP0 = Comparator 0 is disabled when the counter equals TCMPVAL and triggers a TCMP0 event
//        <1=> 1: TXST = Comparator 0 is disabled at the start of transmission
//        <2=> 2: RXACT = Comparator 0 is disabled on RX going going Active (default: low)
//        <3=> 3: RXACTN = Comparator 0 is disabled on RX going Inactive
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: USART0_TIMECMP0_RESTARTEN  -----------------------------
// SVD Line: 37468

//  <item> SFDITEM_FIELD__USART0_TIMECMP0_RESTARTEN
//    <name> RESTARTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40010068) Restart Timer on TCMP0 </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TIMECMP0 ) </loc>
//      <o.24..24> RESTARTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART0_TIMECMP0  --------------------------------
// SVD Line: 37389

//  <rtree> SFDITEM_REG__USART0_TIMECMP0
//    <name> TIMECMP0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010068) Used to Generate Interrupts and Various Delays </i>
//    <loc> ( (unsigned int)((USART0_TIMECMP0 >> 0) & 0xFFFFFFFF), ((USART0_TIMECMP0 = (USART0_TIMECMP0 & ~(0x17700FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17700FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TIMECMP0_TCMPVAL </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP0_TSTART </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP0_TSTOP </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP0_RESTARTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_TIMECMP1  -----------------------------
// SVD Line: 37477

unsigned int USART0_TIMECMP1 __AT (0x4001006C);



// ---------------------------  Field Item: USART0_TIMECMP1_TCMPVAL  ------------------------------
// SVD Line: 37486

//  <item> SFDITEM_FIELD__USART0_TIMECMP1_TCMPVAL
//    <name> TCMPVAL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001006C) Timer Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART0_TIMECMP1 >> 0) & 0xFF), ((USART0_TIMECMP1 = (USART0_TIMECMP1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART0_TIMECMP1_TSTART  -------------------------------
// SVD Line: 37493

//  <item> SFDITEM_FIELD__USART0_TIMECMP1_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x4001006C) \nTimer Start Source\n0 : DISABLE = Comparator 1 is disabled\n1 : TXEOF = Comparator 1 and timer are started at TX end of frame\n2 : TXC = Comparator 1 and timer are started at TX Complete\n3 : RXACT = Comparator 1 and timer are started at RX going going Active (default: low)\n4 : RXEOF = Comparator 1 and timer are started at RX end of frame\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMECMP1 ) </loc>
//      <o.18..16> TSTART
//        <0=> 0: DISABLE = Comparator 1 is disabled
//        <1=> 1: TXEOF = Comparator 1 and timer are started at TX end of frame
//        <2=> 2: TXC = Comparator 1 and timer are started at TX Complete
//        <3=> 3: RXACT = Comparator 1 and timer are started at RX going going Active (default: low)
//        <4=> 4: RXEOF = Comparator 1 and timer are started at RX end of frame
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART0_TIMECMP1_TSTOP  -------------------------------
// SVD Line: 37527

//  <item> SFDITEM_FIELD__USART0_TIMECMP1_TSTOP
//    <name> TSTOP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4001006C) \nSource Used to Disable Comparator 1\n0 : TCMP1 = Comparator 1 is disabled when the counter equals TCMPVAL and triggers a TCMP1 event\n1 : TXST = Comparator 1 is disabled at TX start TX Engine\n2 : RXACT = Comparator 1 is disabled on RX going going Active (default: low)\n3 : RXACTN = Comparator 1 is disabled on RX going Inactive\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMECMP1 ) </loc>
//      <o.22..20> TSTOP
//        <0=> 0: TCMP1 = Comparator 1 is disabled when the counter equals TCMPVAL and triggers a TCMP1 event
//        <1=> 1: TXST = Comparator 1 is disabled at TX start TX Engine
//        <2=> 2: RXACT = Comparator 1 is disabled on RX going going Active (default: low)
//        <3=> 3: RXACTN = Comparator 1 is disabled on RX going Inactive
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: USART0_TIMECMP1_RESTARTEN  -----------------------------
// SVD Line: 37556

//  <item> SFDITEM_FIELD__USART0_TIMECMP1_RESTARTEN
//    <name> RESTARTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4001006C) Restart Timer on TCMP1 </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TIMECMP1 ) </loc>
//      <o.24..24> RESTARTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART0_TIMECMP1  --------------------------------
// SVD Line: 37477

//  <rtree> SFDITEM_REG__USART0_TIMECMP1
//    <name> TIMECMP1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001006C) Used to Generate Interrupts and Various Delays </i>
//    <loc> ( (unsigned int)((USART0_TIMECMP1 >> 0) & 0xFFFFFFFF), ((USART0_TIMECMP1 = (USART0_TIMECMP1 & ~(0x17700FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17700FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TIMECMP1_TCMPVAL </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP1_TSTART </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP1_TSTOP </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP1_RESTARTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_TIMECMP2  -----------------------------
// SVD Line: 37565

unsigned int USART0_TIMECMP2 __AT (0x40010070);



// ---------------------------  Field Item: USART0_TIMECMP2_TCMPVAL  ------------------------------
// SVD Line: 37574

//  <item> SFDITEM_FIELD__USART0_TIMECMP2_TCMPVAL
//    <name> TCMPVAL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010070) Timer Comparator 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART0_TIMECMP2 >> 0) & 0xFF), ((USART0_TIMECMP2 = (USART0_TIMECMP2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART0_TIMECMP2_TSTART  -------------------------------
// SVD Line: 37581

//  <item> SFDITEM_FIELD__USART0_TIMECMP2_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40010070) \nTimer Start Source\n0 : DISABLE = Comparator 2 is disabled\n1 : TXEOF = Comparator 2 and timer are started at TX end of frame\n2 : TXC = Comparator 2 and timer are started at TX Complete\n3 : RXACT = Comparator 2 and timer are started at RX going going Active (default: low)\n4 : RXEOF = Comparator 2 and timer are started at RX end of frame\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMECMP2 ) </loc>
//      <o.18..16> TSTART
//        <0=> 0: DISABLE = Comparator 2 is disabled
//        <1=> 1: TXEOF = Comparator 2 and timer are started at TX end of frame
//        <2=> 2: TXC = Comparator 2 and timer are started at TX Complete
//        <3=> 3: RXACT = Comparator 2 and timer are started at RX going going Active (default: low)
//        <4=> 4: RXEOF = Comparator 2 and timer are started at RX end of frame
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART0_TIMECMP2_TSTOP  -------------------------------
// SVD Line: 37615

//  <item> SFDITEM_FIELD__USART0_TIMECMP2_TSTOP
//    <name> TSTOP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40010070) \nSource Used to Disable Comparator 2\n0 : TCMP2 = Comparator 2 is disabled when the counter equals TCMPVAL and triggers a TCMP2 event\n1 : TXST = Comparator 2 is disabled at TX start TX Engine\n2 : RXACT = Comparator 2 is disabled on RX going going Active (default: low)\n3 : RXACTN = Comparator 2 is disabled on RX going Inactive\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_TIMECMP2 ) </loc>
//      <o.22..20> TSTOP
//        <0=> 0: TCMP2 = Comparator 2 is disabled when the counter equals TCMPVAL and triggers a TCMP2 event
//        <1=> 1: TXST = Comparator 2 is disabled at TX start TX Engine
//        <2=> 2: RXACT = Comparator 2 is disabled on RX going going Active (default: low)
//        <3=> 3: RXACTN = Comparator 2 is disabled on RX going Inactive
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: USART0_TIMECMP2_RESTARTEN  -----------------------------
// SVD Line: 37644

//  <item> SFDITEM_FIELD__USART0_TIMECMP2_RESTARTEN
//    <name> RESTARTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40010070) Restart Timer on TCMP2 </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_TIMECMP2 ) </loc>
//      <o.24..24> RESTARTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART0_TIMECMP2  --------------------------------
// SVD Line: 37565

//  <rtree> SFDITEM_REG__USART0_TIMECMP2
//    <name> TIMECMP2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010070) Used to Generate Interrupts and Various Delays </i>
//    <loc> ( (unsigned int)((USART0_TIMECMP2 >> 0) & 0xFFFFFFFF), ((USART0_TIMECMP2 = (USART0_TIMECMP2 & ~(0x17700FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17700FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_TIMECMP2_TCMPVAL </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP2_TSTART </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP2_TSTOP </item>
//    <item> SFDITEM_FIELD__USART0_TIMECMP2_RESTARTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_ROUTEPEN  -----------------------------
// SVD Line: 37653

unsigned int USART0_ROUTEPEN __AT (0x40010074);



// ----------------------------  Field Item: USART0_ROUTEPEN_RXPEN  -------------------------------
// SVD Line: 37662

//  <item> SFDITEM_FIELD__USART0_ROUTEPEN_RXPEN
//    <name> RXPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010074) RX Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_ROUTEPEN ) </loc>
//      <o.0..0> RXPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_ROUTEPEN_TXPEN  -------------------------------
// SVD Line: 37669

//  <item> SFDITEM_FIELD__USART0_ROUTEPEN_TXPEN
//    <name> TXPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010074) TX Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_ROUTEPEN ) </loc>
//      <o.1..1> TXPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART0_ROUTEPEN_CSPEN  -------------------------------
// SVD Line: 37676

//  <item> SFDITEM_FIELD__USART0_ROUTEPEN_CSPEN
//    <name> CSPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010074) CS Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_ROUTEPEN ) </loc>
//      <o.2..2> CSPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_ROUTEPEN_CLKPEN  -------------------------------
// SVD Line: 37683

//  <item> SFDITEM_FIELD__USART0_ROUTEPEN_CLKPEN
//    <name> CLKPEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010074) CLK Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_ROUTEPEN ) </loc>
//      <o.3..3> CLKPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_ROUTEPEN_CTSPEN  -------------------------------
// SVD Line: 37690

//  <item> SFDITEM_FIELD__USART0_ROUTEPEN_CTSPEN
//    <name> CTSPEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010074) CTS Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_ROUTEPEN ) </loc>
//      <o.4..4> CTSPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART0_ROUTEPEN_RTSPEN  -------------------------------
// SVD Line: 37697

//  <item> SFDITEM_FIELD__USART0_ROUTEPEN_RTSPEN
//    <name> RTSPEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40010074) RTS Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART0_ROUTEPEN ) </loc>
//      <o.5..5> RTSPEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART0_ROUTEPEN  --------------------------------
// SVD Line: 37653

//  <rtree> SFDITEM_REG__USART0_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010074) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((USART0_ROUTEPEN >> 0) & 0xFFFFFFFF), ((USART0_ROUTEPEN = (USART0_ROUTEPEN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_ROUTEPEN_RXPEN </item>
//    <item> SFDITEM_FIELD__USART0_ROUTEPEN_TXPEN </item>
//    <item> SFDITEM_FIELD__USART0_ROUTEPEN_CSPEN </item>
//    <item> SFDITEM_FIELD__USART0_ROUTEPEN_CLKPEN </item>
//    <item> SFDITEM_FIELD__USART0_ROUTEPEN_CTSPEN </item>
//    <item> SFDITEM_FIELD__USART0_ROUTEPEN_RTSPEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_ROUTELOC0  ----------------------------
// SVD Line: 37706

unsigned int USART0_ROUTELOC0 __AT (0x40010078);



// ---------------------------  Field Item: USART0_ROUTELOC0_RXLOC  -------------------------------
// SVD Line: 37715

//  <item> SFDITEM_FIELD__USART0_ROUTELOC0_RXLOC
//    <name> RXLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40010078) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_ROUTELOC0 ) </loc>
//      <o.5..0> RXLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART0_ROUTELOC0_TXLOC  -------------------------------
// SVD Line: 37884

//  <item> SFDITEM_FIELD__USART0_ROUTELOC0_TXLOC
//    <name> TXLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40010078) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_ROUTELOC0 ) </loc>
//      <o.13..8> TXLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART0_ROUTELOC0_CSLOC  -------------------------------
// SVD Line: 38053

//  <item> SFDITEM_FIELD__USART0_ROUTELOC0_CSLOC
//    <name> CSLOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40010078) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_ROUTELOC0 ) </loc>
//      <o.21..16> CSLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART0_ROUTELOC0_CLKLOC  ------------------------------
// SVD Line: 38222

//  <item> SFDITEM_FIELD__USART0_ROUTELOC0_CLKLOC
//    <name> CLKLOC </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40010078) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_ROUTELOC0 ) </loc>
//      <o.29..24> CLKLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: USART0_ROUTELOC0  --------------------------------
// SVD Line: 37706

//  <rtree> SFDITEM_REG__USART0_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010078) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((USART0_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((USART0_ROUTELOC0 = (USART0_ROUTELOC0 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_ROUTELOC0_RXLOC </item>
//    <item> SFDITEM_FIELD__USART0_ROUTELOC0_TXLOC </item>
//    <item> SFDITEM_FIELD__USART0_ROUTELOC0_CSLOC </item>
//    <item> SFDITEM_FIELD__USART0_ROUTELOC0_CLKLOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART0_ROUTELOC1  ----------------------------
// SVD Line: 38393

unsigned int USART0_ROUTELOC1 __AT (0x4001007C);



// ---------------------------  Field Item: USART0_ROUTELOC1_CTSLOC  ------------------------------
// SVD Line: 38402

//  <item> SFDITEM_FIELD__USART0_ROUTELOC1_CTSLOC
//    <name> CTSLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4001007C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_ROUTELOC1 ) </loc>
//      <o.5..0> CTSLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART0_ROUTELOC1_RTSLOC  ------------------------------
// SVD Line: 38571

//  <item> SFDITEM_FIELD__USART0_ROUTELOC1_RTSLOC
//    <name> RTSLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x4001007C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART0_ROUTELOC1 ) </loc>
//      <o.13..8> RTSLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: USART0_ROUTELOC1  --------------------------------
// SVD Line: 38393

//  <rtree> SFDITEM_REG__USART0_ROUTELOC1
//    <name> ROUTELOC1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001007C) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((USART0_ROUTELOC1 >> 0) & 0xFFFFFFFF), ((USART0_ROUTELOC1 = (USART0_ROUTELOC1 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART0_ROUTELOC1_CTSLOC </item>
//    <item> SFDITEM_FIELD__USART0_ROUTELOC1_RTSLOC </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: USART0  ------------------------------------
// SVD Line: 35084

//  <view> USART0
//    <name> USART0 </name>
//    <item> SFDITEM_REG__USART0_CTRL </item>
//    <item> SFDITEM_REG__USART0_FRAME </item>
//    <item> SFDITEM_REG__USART0_TRIGCTRL </item>
//    <item> SFDITEM_REG__USART0_CMD </item>
//    <item> SFDITEM_REG__USART0_STATUS </item>
//    <item> SFDITEM_REG__USART0_CLKDIV </item>
//    <item> SFDITEM_REG__USART0_RXDATAXP </item>
//    <item> SFDITEM_REG__USART0_RXDOUBLEXP </item>
//    <item> SFDITEM_REG__USART0_TXDATAX </item>
//    <item> SFDITEM_REG__USART0_TXDATA </item>
//    <item> SFDITEM_REG__USART0_TXDOUBLEX </item>
//    <item> SFDITEM_REG__USART0_TXDOUBLE </item>
//    <item> SFDITEM_REG__USART0_IF </item>
//    <item> SFDITEM_REG__USART0_IFS </item>
//    <item> SFDITEM_REG__USART0_IFC </item>
//    <item> SFDITEM_REG__USART0_IEN </item>
//    <item> SFDITEM_REG__USART0_IRCTRL </item>
//    <item> SFDITEM_REG__USART0_INPUT </item>
//    <item> SFDITEM_REG__USART0_I2SCTRL </item>
//    <item> SFDITEM_REG__USART0_TIMING </item>
//    <item> SFDITEM_REG__USART0_CTRLX </item>
//    <item> SFDITEM_REG__USART0_TIMECMP0 </item>
//    <item> SFDITEM_REG__USART0_TIMECMP1 </item>
//    <item> SFDITEM_REG__USART0_TIMECMP2 </item>
//    <item> SFDITEM_REG__USART0_ROUTEPEN </item>
//    <item> SFDITEM_REG__USART0_ROUTELOC0 </item>
//    <item> SFDITEM_REG__USART0_ROUTELOC1 </item>
//  </view>
//  


// ---------------------------  Register Item Address: USART1_CTRL  -------------------------------
// SVD Line: 38762

unsigned int USART1_CTRL __AT (0x40010400);



// ------------------------------  Field Item: USART1_CTRL_SYNC  ----------------------------------
// SVD Line: 38771

//  <item> SFDITEM_FIELD__USART1_CTRL_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010400) USART Synchronous Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.0..0> SYNC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_LOOPBK  ---------------------------------
// SVD Line: 38778

//  <item> SFDITEM_FIELD__USART1_CTRL_LOOPBK
//    <name> LOOPBK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010400) Loopback Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.1..1> LOOPBK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_CCEN  ----------------------------------
// SVD Line: 38785

//  <item> SFDITEM_FIELD__USART1_CTRL_CCEN
//    <name> CCEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010400) Collision Check Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.2..2> CCEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CTRL_MPM  ----------------------------------
// SVD Line: 38792

//  <item> SFDITEM_FIELD__USART1_CTRL_MPM
//    <name> MPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010400) Multi-Processor Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.3..3> MPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_MPAB  ----------------------------------
// SVD Line: 38799

//  <item> SFDITEM_FIELD__USART1_CTRL_MPAB
//    <name> MPAB </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010400) Multi-Processor Address-Bit </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.4..4> MPAB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CTRL_OVS  ----------------------------------
// SVD Line: 38806

//  <item> SFDITEM_FIELD__USART1_CTRL_OVS
//    <name> OVS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40010400) \nOversampling\n0 : X16 = Regular UART mode with 16X oversampling in asynchronous mode\n1 : X8 = Double speed with 8X oversampling in asynchronous mode\n2 : X6 = 6X oversampling in asynchronous mode\n3 : X4 = Quadruple speed with 4X oversampling in asynchronous mode </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.6..5> OVS
//        <0=> 0: X16 = Regular UART mode with 16X oversampling in asynchronous mode
//        <1=> 1: X8 = Double speed with 8X oversampling in asynchronous mode
//        <2=> 2: X6 = 6X oversampling in asynchronous mode
//        <3=> 3: X4 = Quadruple speed with 4X oversampling in asynchronous mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_CLKPOL  ---------------------------------
// SVD Line: 38835

//  <item> SFDITEM_FIELD__USART1_CTRL_CLKPOL
//    <name> CLKPOL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010400) Clock Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.8..8> CLKPOL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_CLKPHA  ---------------------------------
// SVD Line: 38842

//  <item> SFDITEM_FIELD__USART1_CTRL_CLKPHA
//    <name> CLKPHA </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40010400) Clock Edge for Setup/Sample </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.9..9> CLKPHA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_MSBF  ----------------------------------
// SVD Line: 38849

//  <item> SFDITEM_FIELD__USART1_CTRL_MSBF
//    <name> MSBF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40010400) Most Significant Bit First </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.10..10> MSBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_CSMA  ----------------------------------
// SVD Line: 38856

//  <item> SFDITEM_FIELD__USART1_CTRL_CSMA
//    <name> CSMA </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010400) Action on Slave-Select in Master Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.11..11> CSMA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_TXBIL  ---------------------------------
// SVD Line: 38863

//  <item> SFDITEM_FIELD__USART1_CTRL_TXBIL
//    <name> TXBIL </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010400) TX Buffer Interrupt Level </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.12..12> TXBIL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_RXINV  ---------------------------------
// SVD Line: 38870

//  <item> SFDITEM_FIELD__USART1_CTRL_RXINV
//    <name> RXINV </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40010400) Receiver Input Invert </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.13..13> RXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_TXINV  ---------------------------------
// SVD Line: 38877

//  <item> SFDITEM_FIELD__USART1_CTRL_TXINV
//    <name> TXINV </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010400) Transmitter Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.14..14> TXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_CSINV  ---------------------------------
// SVD Line: 38884

//  <item> SFDITEM_FIELD__USART1_CTRL_CSINV
//    <name> CSINV </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010400) Chip Select Invert </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.15..15> CSINV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_AUTOCS  ---------------------------------
// SVD Line: 38891

//  <item> SFDITEM_FIELD__USART1_CTRL_AUTOCS
//    <name> AUTOCS </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40010400) Automatic Chip Select </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.16..16> AUTOCS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_AUTOTRI  --------------------------------
// SVD Line: 38898

//  <item> SFDITEM_FIELD__USART1_CTRL_AUTOTRI
//    <name> AUTOTRI </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40010400) Automatic TX Tristate </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.17..17> AUTOTRI
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_SCMODE  ---------------------------------
// SVD Line: 38905

//  <item> SFDITEM_FIELD__USART1_CTRL_SCMODE
//    <name> SCMODE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40010400) SmartCard Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.18..18> SCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CTRL_SCRETRANS  -------------------------------
// SVD Line: 38912

//  <item> SFDITEM_FIELD__USART1_CTRL_SCRETRANS
//    <name> SCRETRANS </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40010400) SmartCard Retransmit </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.19..19> SCRETRANS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CTRL_SKIPPERRF  -------------------------------
// SVD Line: 38919

//  <item> SFDITEM_FIELD__USART1_CTRL_SKIPPERRF
//    <name> SKIPPERRF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40010400) Skip Parity Error Frames </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.20..20> SKIPPERRF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_BIT8DV  ---------------------------------
// SVD Line: 38926

//  <item> SFDITEM_FIELD__USART1_CTRL_BIT8DV
//    <name> BIT8DV </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40010400) Bit 8 Default Value </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.21..21> BIT8DV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_ERRSDMA  --------------------------------
// SVD Line: 38933

//  <item> SFDITEM_FIELD__USART1_CTRL_ERRSDMA
//    <name> ERRSDMA </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40010400) Halt DMA on Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.22..22> ERRSDMA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_ERRSRX  ---------------------------------
// SVD Line: 38940

//  <item> SFDITEM_FIELD__USART1_CTRL_ERRSRX
//    <name> ERRSRX </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40010400) Disable RX on Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.23..23> ERRSRX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_ERRSTX  ---------------------------------
// SVD Line: 38947

//  <item> SFDITEM_FIELD__USART1_CTRL_ERRSTX
//    <name> ERRSTX </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40010400) Disable TX on Error </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.24..24> ERRSTX
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CTRL_SSSEARLY  --------------------------------
// SVD Line: 38954

//  <item> SFDITEM_FIELD__USART1_CTRL_SSSEARLY
//    <name> SSSEARLY </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40010400) Synchronous Slave Setup Early </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.25..25> SSSEARLY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CTRL_BYTESWAP  --------------------------------
// SVD Line: 38961

//  <item> SFDITEM_FIELD__USART1_CTRL_BYTESWAP
//    <name> BYTESWAP </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40010400) Byteswap in Double Accesses </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.28..28> BYTESWAP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRL_AUTOTX  ---------------------------------
// SVD Line: 38968

//  <item> SFDITEM_FIELD__USART1_CTRL_AUTOTX
//    <name> AUTOTX </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40010400) Always Transmit When RX Not Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.29..29> AUTOTX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CTRL_MVDIS  ---------------------------------
// SVD Line: 38975

//  <item> SFDITEM_FIELD__USART1_CTRL_MVDIS
//    <name> MVDIS </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40010400) Majority Vote Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.30..30> MVDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CTRL_SMSDELAY  --------------------------------
// SVD Line: 38982

//  <item> SFDITEM_FIELD__USART1_CTRL_SMSDELAY
//    <name> SMSDELAY </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010400) Synchronous Master Sample Delay </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRL ) </loc>
//      <o.31..31> SMSDELAY
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_CTRL  ----------------------------------
// SVD Line: 38762

//  <rtree> SFDITEM_REG__USART1_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010400) Control Register </i>
//    <loc> ( (unsigned int)((USART1_CTRL >> 0) & 0xFFFFFFFF), ((USART1_CTRL = (USART1_CTRL & ~(0xF3FFFF7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3FFFF7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_CTRL_SYNC </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_LOOPBK </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_CCEN </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_MPM </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_MPAB </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_OVS </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_CLKPOL </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_CLKPHA </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_MSBF </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_CSMA </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_TXBIL </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_RXINV </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_TXINV </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_CSINV </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_AUTOCS </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_AUTOTRI </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_SCMODE </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_SCRETRANS </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_SKIPPERRF </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_BIT8DV </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_ERRSDMA </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_ERRSRX </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_ERRSTX </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_SSSEARLY </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_BYTESWAP </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_AUTOTX </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_MVDIS </item>
//    <item> SFDITEM_FIELD__USART1_CTRL_SMSDELAY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART1_FRAME  ------------------------------
// SVD Line: 38991

unsigned int USART1_FRAME __AT (0x40010404);



// ----------------------------  Field Item: USART1_FRAME_DATABITS  -------------------------------
// SVD Line: 39000

//  <item> SFDITEM_FIELD__USART1_FRAME_DATABITS
//    <name> DATABITS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40010404) \nData-Bit Mode\n0 : Reserved - do not use\n1 : FOUR = Each frame contains 4 data bits\n2 : FIVE = Each frame contains 5 data bits\n3 : SIX = Each frame contains 6 data bits\n4 : SEVEN = Each frame contains 7 data bits\n5 : EIGHT = Each frame contains 8 data bits\n6 : NINE = Each frame contains 9 data bits\n7 : TEN = Each frame contains 10 data bits\n8 : ELEVEN = Each frame contains 11 data bits\n9 : TWELVE = Each frame contains 12 data bits\n10 : THIRTEEN = Each frame contains 13 data bits\n11 : FOURTEEN = Each frame contains 14 data bits\n12 : FIFTEEN = Each frame contains 15 data bits\n13 : SIXTEEN = Each frame contains 16 data bits\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_FRAME ) </loc>
//      <o.3..0> DATABITS
//        <0=> 0: 
//        <1=> 1: FOUR = Each frame contains 4 data bits
//        <2=> 2: FIVE = Each frame contains 5 data bits
//        <3=> 3: SIX = Each frame contains 6 data bits
//        <4=> 4: SEVEN = Each frame contains 7 data bits
//        <5=> 5: EIGHT = Each frame contains 8 data bits
//        <6=> 6: NINE = Each frame contains 9 data bits
//        <7=> 7: TEN = Each frame contains 10 data bits
//        <8=> 8: ELEVEN = Each frame contains 11 data bits
//        <9=> 9: TWELVE = Each frame contains 12 data bits
//        <10=> 10: THIRTEEN = Each frame contains 13 data bits
//        <11=> 11: FOURTEEN = Each frame contains 14 data bits
//        <12=> 12: FIFTEEN = Each frame contains 15 data bits
//        <13=> 13: SIXTEEN = Each frame contains 16 data bits
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART1_FRAME_PARITY  --------------------------------
// SVD Line: 39074

//  <item> SFDITEM_FIELD__USART1_FRAME_PARITY
//    <name> PARITY </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40010404) \nParity-Bit Mode\n0 : NONE = Parity bits are not used\n1 : Reserved - do not use\n2 : EVEN = Even parity are used. Parity bits are automatically generated and checked by hardware.\n3 : ODD = Odd parity is used. Parity bits are automatically generated and checked by hardware. </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_FRAME ) </loc>
//      <o.9..8> PARITY
//        <0=> 0: NONE = Parity bits are not used
//        <1=> 1: 
//        <2=> 2: EVEN = Even parity are used. Parity bits are automatically generated and checked by hardware.
//        <3=> 3: ODD = Odd parity is used. Parity bits are automatically generated and checked by hardware.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART1_FRAME_STOPBITS  -------------------------------
// SVD Line: 39098

//  <item> SFDITEM_FIELD__USART1_FRAME_STOPBITS
//    <name> STOPBITS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40010404) \nStop-Bit Mode\n0 : HALF = The transmitter generates a half stop bit. Stop-bits are not verified by receiver\n1 : ONE = One stop bit is generated and verified\n2 : ONEANDAHALF = The transmitter generates one and a half stop bit. The receiver verifies the first stop bit\n3 : TWO = The transmitter generates two stop bits. The receiver checks the first stop-bit only </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_FRAME ) </loc>
//      <o.13..12> STOPBITS
//        <0=> 0: HALF = The transmitter generates a half stop bit. Stop-bits are not verified by receiver
//        <1=> 1: ONE = One stop bit is generated and verified
//        <2=> 2: ONEANDAHALF = The transmitter generates one and a half stop bit. The receiver verifies the first stop bit
//        <3=> 3: TWO = The transmitter generates two stop bits. The receiver checks the first stop-bit only
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: USART1_FRAME  ----------------------------------
// SVD Line: 38991

//  <rtree> SFDITEM_REG__USART1_FRAME
//    <name> FRAME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010404) USART Frame Format Register </i>
//    <loc> ( (unsigned int)((USART1_FRAME >> 0) & 0xFFFFFFFF), ((USART1_FRAME = (USART1_FRAME & ~(0x330FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x330F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_FRAME_DATABITS </item>
//    <item> SFDITEM_FIELD__USART1_FRAME_PARITY </item>
//    <item> SFDITEM_FIELD__USART1_FRAME_STOPBITS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_TRIGCTRL  -----------------------------
// SVD Line: 39129

unsigned int USART1_TRIGCTRL __AT (0x40010408);



// ----------------------------  Field Item: USART1_TRIGCTRL_RXTEN  -------------------------------
// SVD Line: 39138

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXTEN
//    <name> RXTEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010408) Receive Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.4..4> RXTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_TRIGCTRL_TXTEN  -------------------------------
// SVD Line: 39145

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXTEN
//    <name> TXTEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40010408) Transmit Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.5..5> TXTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TRIGCTRL_AUTOTXTEN  -----------------------------
// SVD Line: 39152

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_AUTOTXTEN
//    <name> AUTOTXTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40010408) AUTOTX Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.6..6> AUTOTXTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TRIGCTRL_TXARX0EN  ------------------------------
// SVD Line: 39159

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXARX0EN
//    <name> TXARX0EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40010408) Enable Transmit Trigger After RX End of Frame Plus TCMP0VAL </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.7..7> TXARX0EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TRIGCTRL_TXARX1EN  ------------------------------
// SVD Line: 39166

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXARX1EN
//    <name> TXARX1EN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010408) Enable Transmit Trigger After RX End of Frame Plus TCMP1VAL </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.8..8> TXARX1EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TRIGCTRL_TXARX2EN  ------------------------------
// SVD Line: 39173

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXARX2EN
//    <name> TXARX2EN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40010408) Enable Transmit Trigger After RX End of Frame Plus TCMP2VAL </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.9..9> TXARX2EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TRIGCTRL_RXATX0EN  ------------------------------
// SVD Line: 39180

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXATX0EN
//    <name> RXATX0EN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40010408) Enable Receive Trigger After TX End of Frame Plus TCMPVAL0 Baud-times </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.10..10> RXATX0EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TRIGCTRL_RXATX1EN  ------------------------------
// SVD Line: 39187

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXATX1EN
//    <name> RXATX1EN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010408) Enable Receive Trigger After TX End of Frame Plus TCMPVAL1 Baud-times </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.11..11> RXATX1EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TRIGCTRL_RXATX2EN  ------------------------------
// SVD Line: 39194

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXATX2EN
//    <name> RXATX2EN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010408) Enable Receive Trigger After TX End of Frame Plus TCMPVAL2 Baud-times </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.12..12> RXATX2EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_TRIGCTRL_TSEL  --------------------------------
// SVD Line: 39201

//  <item> SFDITEM_FIELD__USART1_TRIGCTRL_TSEL
//    <name> TSEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40010408) \nTrigger PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TRIGCTRL ) </loc>
//      <o.19..16> TSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: USART1_TRIGCTRL  --------------------------------
// SVD Line: 39129

//  <rtree> SFDITEM_REG__USART1_TRIGCTRL
//    <name> TRIGCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010408) USART Trigger Control Register </i>
//    <loc> ( (unsigned int)((USART1_TRIGCTRL >> 0) & 0xFFFFFFFF), ((USART1_TRIGCTRL = (USART1_TRIGCTRL & ~(0xF1FF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF1FF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXTEN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXTEN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_AUTOTXTEN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXARX0EN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXARX1EN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_TXARX2EN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXATX0EN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXATX1EN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_RXATX2EN </item>
//    <item> SFDITEM_FIELD__USART1_TRIGCTRL_TSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_CMD  -------------------------------
// SVD Line: 39272

unsigned int USART1_CMD __AT (0x4001040C);



// -------------------------------  Field Item: USART1_CMD_RXEN  ----------------------------------
// SVD Line: 39281

//  <item> SFDITEM_FIELD__USART1_CMD_RXEN
//    <name> RXEN </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001040C) Receiver Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CMD_RXDIS  ----------------------------------
// SVD Line: 39288

//  <item> SFDITEM_FIELD__USART1_CMD_RXDIS
//    <name> RXDIS </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4001040C) Receiver Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.1..1> RXDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_CMD_TXEN  ----------------------------------
// SVD Line: 39295

//  <item> SFDITEM_FIELD__USART1_CMD_TXEN
//    <name> TXEN </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4001040C) Transmitter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.2..2> TXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_CMD_TXDIS  ----------------------------------
// SVD Line: 39302

//  <item> SFDITEM_FIELD__USART1_CMD_TXDIS
//    <name> TXDIS </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4001040C) Transmitter Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.3..3> TXDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CMD_MASTEREN  --------------------------------
// SVD Line: 39309

//  <item> SFDITEM_FIELD__USART1_CMD_MASTEREN
//    <name> MASTEREN </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4001040C) Master Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.4..4> MASTEREN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CMD_MASTERDIS  --------------------------------
// SVD Line: 39316

//  <item> SFDITEM_FIELD__USART1_CMD_MASTERDIS
//    <name> MASTERDIS </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4001040C) Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.5..5> MASTERDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CMD_RXBLOCKEN  --------------------------------
// SVD Line: 39323

//  <item> SFDITEM_FIELD__USART1_CMD_RXBLOCKEN
//    <name> RXBLOCKEN </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4001040C) Receiver Block Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.6..6> RXBLOCKEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_CMD_RXBLOCKDIS  -------------------------------
// SVD Line: 39330

//  <item> SFDITEM_FIELD__USART1_CMD_RXBLOCKDIS
//    <name> RXBLOCKDIS </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4001040C) Receiver Block Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.7..7> RXBLOCKDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CMD_TXTRIEN  ---------------------------------
// SVD Line: 39337

//  <item> SFDITEM_FIELD__USART1_CMD_TXTRIEN
//    <name> TXTRIEN </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4001040C) Transmitter Tristate Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.8..8> TXTRIEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CMD_TXTRIDIS  --------------------------------
// SVD Line: 39344

//  <item> SFDITEM_FIELD__USART1_CMD_TXTRIDIS
//    <name> TXTRIDIS </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4001040C) Transmitter Tristate Disable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.9..9> TXTRIDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CMD_CLEARTX  ---------------------------------
// SVD Line: 39351

//  <item> SFDITEM_FIELD__USART1_CMD_CLEARTX
//    <name> CLEARTX </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4001040C) Clear TX </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.10..10> CLEARTX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CMD_CLEARRX  ---------------------------------
// SVD Line: 39358

//  <item> SFDITEM_FIELD__USART1_CMD_CLEARRX
//    <name> CLEARRX </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x4001040C) Clear RX </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CMD ) </loc>
//      <o.11..11> CLEARRX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_CMD  -----------------------------------
// SVD Line: 39272

//  <rtree> SFDITEM_REG__USART1_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001040C) Command Register </i>
//    <loc> ( (unsigned int)((USART1_CMD >> 0) & 0xFFFFFFFF), ((USART1_CMD = (USART1_CMD & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_CMD_RXEN </item>
//    <item> SFDITEM_FIELD__USART1_CMD_RXDIS </item>
//    <item> SFDITEM_FIELD__USART1_CMD_TXEN </item>
//    <item> SFDITEM_FIELD__USART1_CMD_TXDIS </item>
//    <item> SFDITEM_FIELD__USART1_CMD_MASTEREN </item>
//    <item> SFDITEM_FIELD__USART1_CMD_MASTERDIS </item>
//    <item> SFDITEM_FIELD__USART1_CMD_RXBLOCKEN </item>
//    <item> SFDITEM_FIELD__USART1_CMD_RXBLOCKDIS </item>
//    <item> SFDITEM_FIELD__USART1_CMD_TXTRIEN </item>
//    <item> SFDITEM_FIELD__USART1_CMD_TXTRIDIS </item>
//    <item> SFDITEM_FIELD__USART1_CMD_CLEARTX </item>
//    <item> SFDITEM_FIELD__USART1_CMD_CLEARRX </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART1_STATUS  ------------------------------
// SVD Line: 39367

unsigned int USART1_STATUS __AT (0x40010410);



// -----------------------------  Field Item: USART1_STATUS_RXENS  --------------------------------
// SVD Line: 39376

//  <item> SFDITEM_FIELD__USART1_STATUS_RXENS
//    <name> RXENS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010410) Receiver Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.0..0> RXENS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_STATUS_TXENS  --------------------------------
// SVD Line: 39383

//  <item> SFDITEM_FIELD__USART1_STATUS_TXENS
//    <name> TXENS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40010410) Transmitter Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.1..1> TXENS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_STATUS_MASTER  --------------------------------
// SVD Line: 39390

//  <item> SFDITEM_FIELD__USART1_STATUS_MASTER
//    <name> MASTER </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40010410) SPI Master Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.2..2> MASTER
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_STATUS_RXBLOCK  -------------------------------
// SVD Line: 39397

//  <item> SFDITEM_FIELD__USART1_STATUS_RXBLOCK
//    <name> RXBLOCK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40010410) Block Incoming Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.3..3> RXBLOCK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_STATUS_TXTRI  --------------------------------
// SVD Line: 39404

//  <item> SFDITEM_FIELD__USART1_STATUS_TXTRI
//    <name> TXTRI </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40010410) Transmitter Tristated </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.4..4> TXTRI
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_STATUS_TXC  ---------------------------------
// SVD Line: 39411

//  <item> SFDITEM_FIELD__USART1_STATUS_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40010410) TX Complete </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.5..5> TXC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_STATUS_TXBL  ---------------------------------
// SVD Line: 39418

//  <item> SFDITEM_FIELD__USART1_STATUS_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40010410) TX Buffer Level </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.6..6> TXBL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_STATUS_RXDATAV  -------------------------------
// SVD Line: 39425

//  <item> SFDITEM_FIELD__USART1_STATUS_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40010410) RX Data Valid </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.7..7> RXDATAV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_STATUS_RXFULL  --------------------------------
// SVD Line: 39432

//  <item> SFDITEM_FIELD__USART1_STATUS_RXFULL
//    <name> RXFULL </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40010410) RX FIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.8..8> RXFULL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_STATUS_TXBDRIGHT  ------------------------------
// SVD Line: 39439

//  <item> SFDITEM_FIELD__USART1_STATUS_TXBDRIGHT
//    <name> TXBDRIGHT </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40010410) TX Buffer Expects Double Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.9..9> TXBDRIGHT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_STATUS_TXBSRIGHT  ------------------------------
// SVD Line: 39446

//  <item> SFDITEM_FIELD__USART1_STATUS_TXBSRIGHT
//    <name> TXBSRIGHT </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40010410) TX Buffer Expects Single Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.10..10> TXBSRIGHT
//    </check>
//  </item>
//  


// -------------------------  Field Item: USART1_STATUS_RXDATAVRIGHT  -----------------------------
// SVD Line: 39453

//  <item> SFDITEM_FIELD__USART1_STATUS_RXDATAVRIGHT
//    <name> RXDATAVRIGHT </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40010410) RX Data Right </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.11..11> RXDATAVRIGHT
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_STATUS_RXFULLRIGHT  -----------------------------
// SVD Line: 39460

//  <item> SFDITEM_FIELD__USART1_STATUS_RXFULLRIGHT
//    <name> RXFULLRIGHT </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40010410) RX Full of Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.12..12> RXFULLRIGHT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_STATUS_TXIDLE  --------------------------------
// SVD Line: 39467

//  <item> SFDITEM_FIELD__USART1_STATUS_TXIDLE
//    <name> TXIDLE </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40010410) TX Idle </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------  Field Item: USART1_STATUS_TIMERRESTARTED  ----------------------------
// SVD Line: 39474

//  <item> SFDITEM_FIELD__USART1_STATUS_TIMERRESTARTED
//    <name> TIMERRESTARTED </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40010410) The USART Timer Restarted Itself </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_STATUS ) </loc>
//      <o.14..14> TIMERRESTARTED
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_STATUS_TXBUFCNT  -------------------------------
// SVD Line: 39481

//  <item> SFDITEM_FIELD__USART1_STATUS_TXBUFCNT
//    <name> TXBUFCNT </name>
//    <r> 
//    <i> [Bits 17..16] RO (@ 0x40010410) TX Buffer Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_STATUS >> 16) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART1_STATUS  ---------------------------------
// SVD Line: 39367

//  <rtree> SFDITEM_REG__USART1_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010410) USART Status Register </i>
//    <loc> ( (unsigned int)((USART1_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART1_STATUS_RXENS </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXENS </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_MASTER </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_RXBLOCK </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXTRI </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXC </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXBL </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_RXDATAV </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_RXFULL </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXBDRIGHT </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXBSRIGHT </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_RXDATAVRIGHT </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_RXFULLRIGHT </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TIMERRESTARTED </item>
//    <item> SFDITEM_FIELD__USART1_STATUS_TXBUFCNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART1_CLKDIV  ------------------------------
// SVD Line: 39490

unsigned int USART1_CLKDIV __AT (0x40010414);



// ------------------------------  Field Item: USART1_CLKDIV_DIV  ---------------------------------
// SVD Line: 39499

//  <item> SFDITEM_FIELD__USART1_CLKDIV_DIV
//    <name> DIV </name>
//    <rw> 
//    <i> [Bits 22..3] RW (@ 0x40010414) Fractional Clock Divider </i>
//    <edit> 
//      <loc> ( (unsigned int)((USART1_CLKDIV >> 3) & 0xFFFFF), ((USART1_CLKDIV = (USART1_CLKDIV & ~(0xFFFFFUL << 3 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART1_CLKDIV_AUTOBAUDEN  ------------------------------
// SVD Line: 39506

//  <item> SFDITEM_FIELD__USART1_CLKDIV_AUTOBAUDEN
//    <name> AUTOBAUDEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010414) AUTOBAUD Detection Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CLKDIV ) </loc>
//      <o.31..31> AUTOBAUDEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USART1_CLKDIV  ---------------------------------
// SVD Line: 39490

//  <rtree> SFDITEM_REG__USART1_CLKDIV
//    <name> CLKDIV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010414) Clock Control Register </i>
//    <loc> ( (unsigned int)((USART1_CLKDIV >> 0) & 0xFFFFFFFF), ((USART1_CLKDIV = (USART1_CLKDIV & ~(0x807FFFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x807FFFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_CLKDIV_DIV </item>
//    <item> SFDITEM_FIELD__USART1_CLKDIV_AUTOBAUDEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_RXDATAXP  -----------------------------
// SVD Line: 39647

unsigned int USART1_RXDATAXP __AT (0x40010428);



// ---------------------------  Field Item: USART1_RXDATAXP_RXDATAP  ------------------------------
// SVD Line: 39656

//  <item> SFDITEM_FIELD__USART1_RXDATAXP_RXDATAP
//    <name> RXDATAP </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x40010428) RX Data Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_RXDATAXP >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USART1_RXDATAXP_PERRP  -------------------------------
// SVD Line: 39663

//  <item> SFDITEM_FIELD__USART1_RXDATAXP_PERRP
//    <name> PERRP </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40010428) Data Parity Error Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RXDATAXP ) </loc>
//      <o.14..14> PERRP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_RXDATAXP_FERRP  -------------------------------
// SVD Line: 39670

//  <item> SFDITEM_FIELD__USART1_RXDATAXP_FERRP
//    <name> FERRP </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40010428) Data Framing Error Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RXDATAXP ) </loc>
//      <o.15..15> FERRP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART1_RXDATAXP  --------------------------------
// SVD Line: 39647

//  <rtree> SFDITEM_REG__USART1_RXDATAXP
//    <name> RXDATAXP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010428) RX Buffer Data Extended Peek Register </i>
//    <loc> ( (unsigned int)((USART1_RXDATAXP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART1_RXDATAXP_RXDATAP </item>
//    <item> SFDITEM_FIELD__USART1_RXDATAXP_PERRP </item>
//    <item> SFDITEM_FIELD__USART1_RXDATAXP_FERRP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: USART1_RXDOUBLEXP  ----------------------------
// SVD Line: 39679

unsigned int USART1_RXDOUBLEXP __AT (0x4001042C);



// -------------------------  Field Item: USART1_RXDOUBLEXP_RXDATAP0  -----------------------------
// SVD Line: 39688

//  <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_RXDATAP0
//    <name> RXDATAP0 </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x4001042C) RX Data 0 Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_RXDOUBLEXP >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART1_RXDOUBLEXP_PERRP0  ------------------------------
// SVD Line: 39695

//  <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_PERRP0
//    <name> PERRP0 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4001042C) Data Parity Error 0 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RXDOUBLEXP ) </loc>
//      <o.14..14> PERRP0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_RXDOUBLEXP_FERRP0  ------------------------------
// SVD Line: 39702

//  <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_FERRP0
//    <name> FERRP0 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4001042C) Data Framing Error 0 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RXDOUBLEXP ) </loc>
//      <o.15..15> FERRP0
//    </check>
//  </item>
//  


// -------------------------  Field Item: USART1_RXDOUBLEXP_RXDATAP1  -----------------------------
// SVD Line: 39709

//  <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_RXDATAP1
//    <name> RXDATAP1 </name>
//    <r> 
//    <i> [Bits 24..16] RO (@ 0x4001042C) RX Data 1 Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_RXDOUBLEXP >> 16) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART1_RXDOUBLEXP_PERRP1  ------------------------------
// SVD Line: 39716

//  <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_PERRP1
//    <name> PERRP1 </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x4001042C) Data Parity Error 1 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RXDOUBLEXP ) </loc>
//      <o.30..30> PERRP1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_RXDOUBLEXP_FERRP1  ------------------------------
// SVD Line: 39723

//  <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_FERRP1
//    <name> FERRP1 </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x4001042C) Data Framing Error 1 Peek </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_RXDOUBLEXP ) </loc>
//      <o.31..31> FERRP1
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: USART1_RXDOUBLEXP  -------------------------------
// SVD Line: 39679

//  <rtree> SFDITEM_REG__USART1_RXDOUBLEXP
//    <name> RXDOUBLEXP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001042C) RX Buffer Double Data Extended Peek Register </i>
//    <loc> ( (unsigned int)((USART1_RXDOUBLEXP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_RXDATAP0 </item>
//    <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_PERRP0 </item>
//    <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_FERRP0 </item>
//    <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_RXDATAP1 </item>
//    <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_PERRP1 </item>
//    <item> SFDITEM_FIELD__USART1_RXDOUBLEXP_FERRP1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART1_TXDATAX  -----------------------------
// SVD Line: 39732

unsigned int USART1_TXDATAX __AT (0x40010430);



// ---------------------------  Field Item: USART1_TXDATAX_TXDATAX  -------------------------------
// SVD Line: 39741

//  <item> SFDITEM_FIELD__USART1_TXDATAX_TXDATAX
//    <name> TXDATAX </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40010430) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_TXDATAX >> 0) & 0x1FF), ((USART1_TXDATAX = (USART1_TXDATAX & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: USART1_TXDATAX_UBRXAT  -------------------------------
// SVD Line: 39748

//  <item> SFDITEM_FIELD__USART1_TXDATAX_UBRXAT
//    <name> UBRXAT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010430) Unblock RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDATAX ) </loc>
//      <o.11..11> UBRXAT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_TXDATAX_TXTRIAT  -------------------------------
// SVD Line: 39755

//  <item> SFDITEM_FIELD__USART1_TXDATAX_TXTRIAT
//    <name> TXTRIAT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010430) Set TXTRI After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDATAX ) </loc>
//      <o.12..12> TXTRIAT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_TXDATAX_TXBREAK  -------------------------------
// SVD Line: 39762

//  <item> SFDITEM_FIELD__USART1_TXDATAX_TXBREAK
//    <name> TXBREAK </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40010430) Transmit Data as Break </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDATAX ) </loc>
//      <o.13..13> TXBREAK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_TXDATAX_TXDISAT  -------------------------------
// SVD Line: 39769

//  <item> SFDITEM_FIELD__USART1_TXDATAX_TXDISAT
//    <name> TXDISAT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010430) Clear TXEN After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDATAX ) </loc>
//      <o.14..14> TXDISAT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_TXDATAX_RXENAT  -------------------------------
// SVD Line: 39776

//  <item> SFDITEM_FIELD__USART1_TXDATAX_RXENAT
//    <name> RXENAT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010430) Enable RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDATAX ) </loc>
//      <o.15..15> RXENAT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART1_TXDATAX  ---------------------------------
// SVD Line: 39732

//  <rtree> SFDITEM_REG__USART1_TXDATAX
//    <name> TXDATAX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010430) TX Buffer Data Extended Register </i>
//    <loc> ( (unsigned int)((USART1_TXDATAX >> 0) & 0xFFFFFFFF), ((USART1_TXDATAX = (USART1_TXDATAX & ~(0xF9FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF9FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TXDATAX_TXDATAX </item>
//    <item> SFDITEM_FIELD__USART1_TXDATAX_UBRXAT </item>
//    <item> SFDITEM_FIELD__USART1_TXDATAX_TXTRIAT </item>
//    <item> SFDITEM_FIELD__USART1_TXDATAX_TXBREAK </item>
//    <item> SFDITEM_FIELD__USART1_TXDATAX_TXDISAT </item>
//    <item> SFDITEM_FIELD__USART1_TXDATAX_RXENAT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART1_TXDATA  ------------------------------
// SVD Line: 39785

unsigned int USART1_TXDATA __AT (0x40010434);



// ----------------------------  Field Item: USART1_TXDATA_TXDATA  --------------------------------
// SVD Line: 39794

//  <item> SFDITEM_FIELD__USART1_TXDATA_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010434) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_TXDATA >> 0) & 0xFF), ((USART1_TXDATA = (USART1_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: USART1_TXDATA  ---------------------------------
// SVD Line: 39785

//  <rtree> SFDITEM_REG__USART1_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010434) TX Buffer Data Register </i>
//    <loc> ( (unsigned int)((USART1_TXDATA >> 0) & 0xFFFFFFFF), ((USART1_TXDATA = (USART1_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TXDATA_TXDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_TXDOUBLEX  ----------------------------
// SVD Line: 39803

unsigned int USART1_TXDOUBLEX __AT (0x40010438);



// --------------------------  Field Item: USART1_TXDOUBLEX_TXDATA0  ------------------------------
// SVD Line: 39812

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDATA0
//    <name> TXDATA0 </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40010438) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_TXDOUBLEX >> 0) & 0x1FF), ((USART1_TXDOUBLEX = (USART1_TXDOUBLEX & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_UBRXAT0  ------------------------------
// SVD Line: 39819

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_UBRXAT0
//    <name> UBRXAT0 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40010438) Unblock RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.11..11> UBRXAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_TXTRIAT0  -----------------------------
// SVD Line: 39826

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXTRIAT0
//    <name> TXTRIAT0 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40010438) Set TXTRI After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.12..12> TXTRIAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_TXBREAK0  -----------------------------
// SVD Line: 39833

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXBREAK0
//    <name> TXBREAK0 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40010438) Transmit Data as Break </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.13..13> TXBREAK0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_TXDISAT0  -----------------------------
// SVD Line: 39840

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDISAT0
//    <name> TXDISAT0 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010438) Clear TXEN After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.14..14> TXDISAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_RXENAT0  ------------------------------
// SVD Line: 39847

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_RXENAT0
//    <name> RXENAT0 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010438) Enable RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.15..15> RXENAT0
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_TXDATA1  ------------------------------
// SVD Line: 39854

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDATA1
//    <name> TXDATA1 </name>
//    <rw> 
//    <i> [Bits 24..16] RW (@ 0x40010438) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((USART1_TXDOUBLEX >> 16) & 0x1FF), ((USART1_TXDOUBLEX = (USART1_TXDOUBLEX & ~(0x1FFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_UBRXAT1  ------------------------------
// SVD Line: 39861

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_UBRXAT1
//    <name> UBRXAT1 </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40010438) Unblock RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.27..27> UBRXAT1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_TXTRIAT1  -----------------------------
// SVD Line: 39868

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXTRIAT1
//    <name> TXTRIAT1 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40010438) Set TXTRI After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.28..28> TXTRIAT1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_TXBREAK1  -----------------------------
// SVD Line: 39875

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXBREAK1
//    <name> TXBREAK1 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40010438) Transmit Data as Break </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.29..29> TXBREAK1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_TXDISAT1  -----------------------------
// SVD Line: 39882

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDISAT1
//    <name> TXDISAT1 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40010438) Clear TXEN After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.30..30> TXDISAT1
//    </check>
//  </item>
//  


// --------------------------  Field Item: USART1_TXDOUBLEX_RXENAT1  ------------------------------
// SVD Line: 39889

//  <item> SFDITEM_FIELD__USART1_TXDOUBLEX_RXENAT1
//    <name> RXENAT1 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40010438) Enable RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TXDOUBLEX ) </loc>
//      <o.31..31> RXENAT1
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: USART1_TXDOUBLEX  --------------------------------
// SVD Line: 39803

//  <rtree> SFDITEM_REG__USART1_TXDOUBLEX
//    <name> TXDOUBLEX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010438) TX Buffer Double Data Extended Register </i>
//    <loc> ( (unsigned int)((USART1_TXDOUBLEX >> 0) & 0xFFFFFFFF), ((USART1_TXDOUBLEX = (USART1_TXDOUBLEX & ~(0xF9FFF9FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF9FFF9FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDATA0 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_UBRXAT0 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXTRIAT0 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXBREAK0 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDISAT0 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_RXENAT0 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDATA1 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_UBRXAT1 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXTRIAT1 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXBREAK1 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_TXDISAT1 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLEX_RXENAT1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_TXDOUBLE  -----------------------------
// SVD Line: 39898

unsigned int USART1_TXDOUBLE __AT (0x4001043C);



// ---------------------------  Field Item: USART1_TXDOUBLE_TXDATA0  ------------------------------
// SVD Line: 39907

//  <item> SFDITEM_FIELD__USART1_TXDOUBLE_TXDATA0
//    <name> TXDATA0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001043C) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_TXDOUBLE >> 0) & 0xFF), ((USART1_TXDOUBLE = (USART1_TXDOUBLE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART1_TXDOUBLE_TXDATA1  ------------------------------
// SVD Line: 39914

//  <item> SFDITEM_FIELD__USART1_TXDOUBLE_TXDATA1
//    <name> TXDATA1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4001043C) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_TXDOUBLE >> 8) & 0xFF), ((USART1_TXDOUBLE = (USART1_TXDOUBLE & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: USART1_TXDOUBLE  --------------------------------
// SVD Line: 39898

//  <rtree> SFDITEM_REG__USART1_TXDOUBLE
//    <name> TXDOUBLE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001043C) TX Buffer Double Data Register </i>
//    <loc> ( (unsigned int)((USART1_TXDOUBLE >> 0) & 0xFFFFFFFF), ((USART1_TXDOUBLE = (USART1_TXDOUBLE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLE_TXDATA0 </item>
//    <item> SFDITEM_FIELD__USART1_TXDOUBLE_TXDATA1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_IF  --------------------------------
// SVD Line: 39923

unsigned int USART1_IF __AT (0x40010440);



// --------------------------------  Field Item: USART1_IF_TXC  -----------------------------------
// SVD Line: 39932

//  <item> SFDITEM_FIELD__USART1_IF_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40010440) TX Complete Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_TXBL  -----------------------------------
// SVD Line: 39939

//  <item> SFDITEM_FIELD__USART1_IF_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40010440) TX Buffer Level Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.1..1> TXBL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IF_RXDATAV  ---------------------------------
// SVD Line: 39946

//  <item> SFDITEM_FIELD__USART1_IF_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40010440) RX Data Valid Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.2..2> RXDATAV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IF_RXFULL  ----------------------------------
// SVD Line: 39953

//  <item> SFDITEM_FIELD__USART1_IF_RXFULL
//    <name> RXFULL </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40010440) RX Buffer Full Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_RXOF  -----------------------------------
// SVD Line: 39960

//  <item> SFDITEM_FIELD__USART1_IF_RXOF
//    <name> RXOF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40010440) RX Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_RXUF  -----------------------------------
// SVD Line: 39967

//  <item> SFDITEM_FIELD__USART1_IF_RXUF
//    <name> RXUF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40010440) RX Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_TXOF  -----------------------------------
// SVD Line: 39974

//  <item> SFDITEM_FIELD__USART1_IF_TXOF
//    <name> TXOF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40010440) TX Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_TXUF  -----------------------------------
// SVD Line: 39981

//  <item> SFDITEM_FIELD__USART1_IF_TXUF
//    <name> TXUF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40010440) TX Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_PERR  -----------------------------------
// SVD Line: 39988

//  <item> SFDITEM_FIELD__USART1_IF_PERR
//    <name> PERR </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40010440) Parity Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_FERR  -----------------------------------
// SVD Line: 39995

//  <item> SFDITEM_FIELD__USART1_IF_FERR
//    <name> FERR </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40010440) Framing Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_MPAF  -----------------------------------
// SVD Line: 40002

//  <item> SFDITEM_FIELD__USART1_IF_MPAF
//    <name> MPAF </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40010440) Multi-Processor Address Frame Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_IF_SSM  -----------------------------------
// SVD Line: 40009

//  <item> SFDITEM_FIELD__USART1_IF_SSM
//    <name> SSM </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40010440) Slave-Select in Master Mode Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: USART1_IF_CCF  -----------------------------------
// SVD Line: 40016

//  <item> SFDITEM_FIELD__USART1_IF_CCF
//    <name> CCF </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40010440) Collision Check Fail Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IF_TXIDLE  ----------------------------------
// SVD Line: 40023

//  <item> SFDITEM_FIELD__USART1_IF_TXIDLE
//    <name> TXIDLE </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40010440) TX Idle Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_TCMP0  ----------------------------------
// SVD Line: 40030

//  <item> SFDITEM_FIELD__USART1_IF_TCMP0
//    <name> TCMP0 </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40010440) Timer Comparator 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_TCMP1  ----------------------------------
// SVD Line: 40037

//  <item> SFDITEM_FIELD__USART1_IF_TCMP1
//    <name> TCMP1 </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40010440) Timer Comparator 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IF_TCMP2  ----------------------------------
// SVD Line: 40044

//  <item> SFDITEM_FIELD__USART1_IF_TCMP2
//    <name> TCMP2 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40010440) Timer Comparator 2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IF ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: USART1_IF  -----------------------------------
// SVD Line: 39923

//  <rtree> SFDITEM_REG__USART1_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010440) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((USART1_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__USART1_IF_TXC </item>
//    <item> SFDITEM_FIELD__USART1_IF_TXBL </item>
//    <item> SFDITEM_FIELD__USART1_IF_RXDATAV </item>
//    <item> SFDITEM_FIELD__USART1_IF_RXFULL </item>
//    <item> SFDITEM_FIELD__USART1_IF_RXOF </item>
//    <item> SFDITEM_FIELD__USART1_IF_RXUF </item>
//    <item> SFDITEM_FIELD__USART1_IF_TXOF </item>
//    <item> SFDITEM_FIELD__USART1_IF_TXUF </item>
//    <item> SFDITEM_FIELD__USART1_IF_PERR </item>
//    <item> SFDITEM_FIELD__USART1_IF_FERR </item>
//    <item> SFDITEM_FIELD__USART1_IF_MPAF </item>
//    <item> SFDITEM_FIELD__USART1_IF_SSM </item>
//    <item> SFDITEM_FIELD__USART1_IF_CCF </item>
//    <item> SFDITEM_FIELD__USART1_IF_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART1_IF_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART1_IF_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART1_IF_TCMP2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_IFS  -------------------------------
// SVD Line: 40053

unsigned int USART1_IFS __AT (0x40010444);



// -------------------------------  Field Item: USART1_IFS_TXC  -----------------------------------
// SVD Line: 40062

//  <item> SFDITEM_FIELD__USART1_IFS_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40010444) Set TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFS_RXFULL  ---------------------------------
// SVD Line: 40069

//  <item> SFDITEM_FIELD__USART1_IFS_RXFULL
//    <name> RXFULL </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40010444) Set RXFULL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_RXOF  ----------------------------------
// SVD Line: 40076

//  <item> SFDITEM_FIELD__USART1_IFS_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40010444) Set RXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_RXUF  ----------------------------------
// SVD Line: 40083

//  <item> SFDITEM_FIELD__USART1_IFS_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40010444) Set RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_TXOF  ----------------------------------
// SVD Line: 40090

//  <item> SFDITEM_FIELD__USART1_IFS_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40010444) Set TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_TXUF  ----------------------------------
// SVD Line: 40097

//  <item> SFDITEM_FIELD__USART1_IFS_TXUF
//    <name> TXUF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40010444) Set TXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_PERR  ----------------------------------
// SVD Line: 40104

//  <item> SFDITEM_FIELD__USART1_IFS_PERR
//    <name> PERR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40010444) Set PERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_FERR  ----------------------------------
// SVD Line: 40111

//  <item> SFDITEM_FIELD__USART1_IFS_FERR
//    <name> FERR </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40010444) Set FERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_MPAF  ----------------------------------
// SVD Line: 40118

//  <item> SFDITEM_FIELD__USART1_IFS_MPAF
//    <name> MPAF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40010444) Set MPAF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_SSM  -----------------------------------
// SVD Line: 40125

//  <item> SFDITEM_FIELD__USART1_IFS_SSM
//    <name> SSM </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40010444) Set SSM Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFS_CCF  -----------------------------------
// SVD Line: 40132

//  <item> SFDITEM_FIELD__USART1_IFS_CCF
//    <name> CCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40010444) Set CCF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFS_TXIDLE  ---------------------------------
// SVD Line: 40139

//  <item> SFDITEM_FIELD__USART1_IFS_TXIDLE
//    <name> TXIDLE </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40010444) Set TXIDLE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFS_TCMP0  ----------------------------------
// SVD Line: 40146

//  <item> SFDITEM_FIELD__USART1_IFS_TCMP0
//    <name> TCMP0 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40010444) Set TCMP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFS_TCMP1  ----------------------------------
// SVD Line: 40153

//  <item> SFDITEM_FIELD__USART1_IFS_TCMP1
//    <name> TCMP1 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40010444) Set TCMP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFS_TCMP2  ----------------------------------
// SVD Line: 40160

//  <item> SFDITEM_FIELD__USART1_IFS_TCMP2
//    <name> TCMP2 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40010444) Set TCMP2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFS ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_IFS  -----------------------------------
// SVD Line: 40053

//  <rtree> SFDITEM_REG__USART1_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40010444) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((USART1_IFS >> 0) & 0xFFFFFFFF), ((USART1_IFS = (USART1_IFS & ~(0x1FFF9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_IFS_TXC </item>
//    <item> SFDITEM_FIELD__USART1_IFS_RXFULL </item>
//    <item> SFDITEM_FIELD__USART1_IFS_RXOF </item>
//    <item> SFDITEM_FIELD__USART1_IFS_RXUF </item>
//    <item> SFDITEM_FIELD__USART1_IFS_TXOF </item>
//    <item> SFDITEM_FIELD__USART1_IFS_TXUF </item>
//    <item> SFDITEM_FIELD__USART1_IFS_PERR </item>
//    <item> SFDITEM_FIELD__USART1_IFS_FERR </item>
//    <item> SFDITEM_FIELD__USART1_IFS_MPAF </item>
//    <item> SFDITEM_FIELD__USART1_IFS_SSM </item>
//    <item> SFDITEM_FIELD__USART1_IFS_CCF </item>
//    <item> SFDITEM_FIELD__USART1_IFS_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART1_IFS_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART1_IFS_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART1_IFS_TCMP2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_IFC  -------------------------------
// SVD Line: 40169

unsigned int USART1_IFC __AT (0x40010448);



// -------------------------------  Field Item: USART1_IFC_TXC  -----------------------------------
// SVD Line: 40178

//  <item> SFDITEM_FIELD__USART1_IFC_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40010448) Clear TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFC_RXFULL  ---------------------------------
// SVD Line: 40185

//  <item> SFDITEM_FIELD__USART1_IFC_RXFULL
//    <name> RXFULL </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40010448) Clear RXFULL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_RXOF  ----------------------------------
// SVD Line: 40192

//  <item> SFDITEM_FIELD__USART1_IFC_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40010448) Clear RXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_RXUF  ----------------------------------
// SVD Line: 40199

//  <item> SFDITEM_FIELD__USART1_IFC_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40010448) Clear RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_TXOF  ----------------------------------
// SVD Line: 40206

//  <item> SFDITEM_FIELD__USART1_IFC_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40010448) Clear TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_TXUF  ----------------------------------
// SVD Line: 40213

//  <item> SFDITEM_FIELD__USART1_IFC_TXUF
//    <name> TXUF </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40010448) Clear TXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_PERR  ----------------------------------
// SVD Line: 40220

//  <item> SFDITEM_FIELD__USART1_IFC_PERR
//    <name> PERR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40010448) Clear PERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_FERR  ----------------------------------
// SVD Line: 40227

//  <item> SFDITEM_FIELD__USART1_IFC_FERR
//    <name> FERR </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40010448) Clear FERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_MPAF  ----------------------------------
// SVD Line: 40234

//  <item> SFDITEM_FIELD__USART1_IFC_MPAF
//    <name> MPAF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40010448) Clear MPAF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_SSM  -----------------------------------
// SVD Line: 40241

//  <item> SFDITEM_FIELD__USART1_IFC_SSM
//    <name> SSM </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40010448) Clear SSM Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IFC_CCF  -----------------------------------
// SVD Line: 40248

//  <item> SFDITEM_FIELD__USART1_IFC_CCF
//    <name> CCF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40010448) Clear CCF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFC_TXIDLE  ---------------------------------
// SVD Line: 40255

//  <item> SFDITEM_FIELD__USART1_IFC_TXIDLE
//    <name> TXIDLE </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40010448) Clear TXIDLE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFC_TCMP0  ----------------------------------
// SVD Line: 40262

//  <item> SFDITEM_FIELD__USART1_IFC_TCMP0
//    <name> TCMP0 </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40010448) Clear TCMP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFC_TCMP1  ----------------------------------
// SVD Line: 40269

//  <item> SFDITEM_FIELD__USART1_IFC_TCMP1
//    <name> TCMP1 </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40010448) Clear TCMP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IFC_TCMP2  ----------------------------------
// SVD Line: 40276

//  <item> SFDITEM_FIELD__USART1_IFC_TCMP2
//    <name> TCMP2 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40010448) Clear TCMP2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IFC ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_IFC  -----------------------------------
// SVD Line: 40169

//  <rtree> SFDITEM_REG__USART1_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40010448) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((USART1_IFC >> 0) & 0xFFFFFFFF), ((USART1_IFC = (USART1_IFC & ~(0x1FFF9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_IFC_TXC </item>
//    <item> SFDITEM_FIELD__USART1_IFC_RXFULL </item>
//    <item> SFDITEM_FIELD__USART1_IFC_RXOF </item>
//    <item> SFDITEM_FIELD__USART1_IFC_RXUF </item>
//    <item> SFDITEM_FIELD__USART1_IFC_TXOF </item>
//    <item> SFDITEM_FIELD__USART1_IFC_TXUF </item>
//    <item> SFDITEM_FIELD__USART1_IFC_PERR </item>
//    <item> SFDITEM_FIELD__USART1_IFC_FERR </item>
//    <item> SFDITEM_FIELD__USART1_IFC_MPAF </item>
//    <item> SFDITEM_FIELD__USART1_IFC_SSM </item>
//    <item> SFDITEM_FIELD__USART1_IFC_CCF </item>
//    <item> SFDITEM_FIELD__USART1_IFC_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART1_IFC_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART1_IFC_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART1_IFC_TCMP2 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: USART1_IEN  -------------------------------
// SVD Line: 40285

unsigned int USART1_IEN __AT (0x4001044C);



// -------------------------------  Field Item: USART1_IEN_TXC  -----------------------------------
// SVD Line: 40294

//  <item> SFDITEM_FIELD__USART1_IEN_TXC
//    <name> TXC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001044C) TXC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_TXBL  ----------------------------------
// SVD Line: 40301

//  <item> SFDITEM_FIELD__USART1_IEN_TXBL
//    <name> TXBL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001044C) TXBL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.1..1> TXBL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_IEN_RXDATAV  ---------------------------------
// SVD Line: 40308

//  <item> SFDITEM_FIELD__USART1_IEN_RXDATAV
//    <name> RXDATAV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001044C) RXDATAV Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.2..2> RXDATAV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IEN_RXFULL  ---------------------------------
// SVD Line: 40315

//  <item> SFDITEM_FIELD__USART1_IEN_RXFULL
//    <name> RXFULL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001044C) RXFULL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.3..3> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_RXOF  ----------------------------------
// SVD Line: 40322

//  <item> SFDITEM_FIELD__USART1_IEN_RXOF
//    <name> RXOF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001044C) RXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.4..4> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_RXUF  ----------------------------------
// SVD Line: 40329

//  <item> SFDITEM_FIELD__USART1_IEN_RXUF
//    <name> RXUF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001044C) RXUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.5..5> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_TXOF  ----------------------------------
// SVD Line: 40336

//  <item> SFDITEM_FIELD__USART1_IEN_TXOF
//    <name> TXOF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001044C) TXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.6..6> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_TXUF  ----------------------------------
// SVD Line: 40343

//  <item> SFDITEM_FIELD__USART1_IEN_TXUF
//    <name> TXUF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001044C) TXUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.7..7> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_PERR  ----------------------------------
// SVD Line: 40350

//  <item> SFDITEM_FIELD__USART1_IEN_PERR
//    <name> PERR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001044C) PERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.8..8> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_FERR  ----------------------------------
// SVD Line: 40357

//  <item> SFDITEM_FIELD__USART1_IEN_FERR
//    <name> FERR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001044C) FERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.9..9> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_MPAF  ----------------------------------
// SVD Line: 40364

//  <item> SFDITEM_FIELD__USART1_IEN_MPAF
//    <name> MPAF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001044C) MPAF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.10..10> MPAF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_SSM  -----------------------------------
// SVD Line: 40371

//  <item> SFDITEM_FIELD__USART1_IEN_SSM
//    <name> SSM </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001044C) SSM Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.11..11> SSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: USART1_IEN_CCF  -----------------------------------
// SVD Line: 40378

//  <item> SFDITEM_FIELD__USART1_IEN_CCF
//    <name> CCF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001044C) CCF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.12..12> CCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IEN_TXIDLE  ---------------------------------
// SVD Line: 40385

//  <item> SFDITEM_FIELD__USART1_IEN_TXIDLE
//    <name> TXIDLE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001044C) TXIDLE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.13..13> TXIDLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IEN_TCMP0  ----------------------------------
// SVD Line: 40392

//  <item> SFDITEM_FIELD__USART1_IEN_TCMP0
//    <name> TCMP0 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001044C) TCMP0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.14..14> TCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IEN_TCMP1  ----------------------------------
// SVD Line: 40399

//  <item> SFDITEM_FIELD__USART1_IEN_TCMP1
//    <name> TCMP1 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001044C) TCMP1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.15..15> TCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: USART1_IEN_TCMP2  ----------------------------------
// SVD Line: 40406

//  <item> SFDITEM_FIELD__USART1_IEN_TCMP2
//    <name> TCMP2 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001044C) TCMP2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IEN ) </loc>
//      <o.16..16> TCMP2
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: USART1_IEN  -----------------------------------
// SVD Line: 40285

//  <rtree> SFDITEM_REG__USART1_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001044C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((USART1_IEN >> 0) & 0xFFFFFFFF), ((USART1_IEN = (USART1_IEN & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_IEN_TXC </item>
//    <item> SFDITEM_FIELD__USART1_IEN_TXBL </item>
//    <item> SFDITEM_FIELD__USART1_IEN_RXDATAV </item>
//    <item> SFDITEM_FIELD__USART1_IEN_RXFULL </item>
//    <item> SFDITEM_FIELD__USART1_IEN_RXOF </item>
//    <item> SFDITEM_FIELD__USART1_IEN_RXUF </item>
//    <item> SFDITEM_FIELD__USART1_IEN_TXOF </item>
//    <item> SFDITEM_FIELD__USART1_IEN_TXUF </item>
//    <item> SFDITEM_FIELD__USART1_IEN_PERR </item>
//    <item> SFDITEM_FIELD__USART1_IEN_FERR </item>
//    <item> SFDITEM_FIELD__USART1_IEN_MPAF </item>
//    <item> SFDITEM_FIELD__USART1_IEN_SSM </item>
//    <item> SFDITEM_FIELD__USART1_IEN_CCF </item>
//    <item> SFDITEM_FIELD__USART1_IEN_TXIDLE </item>
//    <item> SFDITEM_FIELD__USART1_IEN_TCMP0 </item>
//    <item> SFDITEM_FIELD__USART1_IEN_TCMP1 </item>
//    <item> SFDITEM_FIELD__USART1_IEN_TCMP2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART1_IRCTRL  ------------------------------
// SVD Line: 40415

unsigned int USART1_IRCTRL __AT (0x40010450);



// -----------------------------  Field Item: USART1_IRCTRL_IREN  ---------------------------------
// SVD Line: 40424

//  <item> SFDITEM_FIELD__USART1_IRCTRL_IREN
//    <name> IREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010450) Enable IrDA Module </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IRCTRL ) </loc>
//      <o.0..0> IREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_IRCTRL_IRPW  ---------------------------------
// SVD Line: 40431

//  <item> SFDITEM_FIELD__USART1_IRCTRL_IRPW
//    <name> IRPW </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40010450) \nIrDA TX Pulse Width\n0 : ONE = IrDA pulse width is 1/16 for OVS=0 and 1/8 for OVS=1\n1 : TWO = IrDA pulse width is 2/16 for OVS=0 and 2/8 for OVS=1\n2 : THREE = IrDA pulse width is 3/16 for OVS=0 and 3/8 for OVS=1\n3 : FOUR = IrDA pulse width is 4/16 for OVS=0 and 4/8 for OVS=1 </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_IRCTRL ) </loc>
//      <o.2..1> IRPW
//        <0=> 0: ONE = IrDA pulse width is 1/16 for OVS=0 and 1/8 for OVS=1
//        <1=> 1: TWO = IrDA pulse width is 2/16 for OVS=0 and 2/8 for OVS=1
//        <2=> 2: THREE = IrDA pulse width is 3/16 for OVS=0 and 3/8 for OVS=1
//        <3=> 3: FOUR = IrDA pulse width is 4/16 for OVS=0 and 4/8 for OVS=1
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART1_IRCTRL_IRFILT  --------------------------------
// SVD Line: 40460

//  <item> SFDITEM_FIELD__USART1_IRCTRL_IRFILT
//    <name> IRFILT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010450) IrDA RX Filter </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IRCTRL ) </loc>
//      <o.3..3> IRFILT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_IRCTRL_IRPRSEN  -------------------------------
// SVD Line: 40467

//  <item> SFDITEM_FIELD__USART1_IRCTRL_IRPRSEN
//    <name> IRPRSEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40010450) IrDA PRS Channel Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_IRCTRL ) </loc>
//      <o.7..7> IRPRSEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_IRCTRL_IRPRSSEL  -------------------------------
// SVD Line: 40474

//  <item> SFDITEM_FIELD__USART1_IRCTRL_IRPRSSEL
//    <name> IRPRSSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40010450) \nIrDA PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_IRCTRL ) </loc>
//      <o.11..8> IRPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: USART1_IRCTRL  ---------------------------------
// SVD Line: 40415

//  <rtree> SFDITEM_REG__USART1_IRCTRL
//    <name> IRCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010450) IrDA Control Register </i>
//    <loc> ( (unsigned int)((USART1_IRCTRL >> 0) & 0xFFFFFFFF), ((USART1_IRCTRL = (USART1_IRCTRL & ~(0xF8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_IRCTRL_IREN </item>
//    <item> SFDITEM_FIELD__USART1_IRCTRL_IRPW </item>
//    <item> SFDITEM_FIELD__USART1_IRCTRL_IRFILT </item>
//    <item> SFDITEM_FIELD__USART1_IRCTRL_IRPRSEN </item>
//    <item> SFDITEM_FIELD__USART1_IRCTRL_IRPRSSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART1_INPUT  ------------------------------
// SVD Line: 40545

unsigned int USART1_INPUT __AT (0x40010458);



// ----------------------------  Field Item: USART1_INPUT_RXPRSSEL  -------------------------------
// SVD Line: 40554

//  <item> SFDITEM_FIELD__USART1_INPUT_RXPRSSEL
//    <name> RXPRSSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40010458) \nRX PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_INPUT ) </loc>
//      <o.3..0> RXPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART1_INPUT_RXPRS  ---------------------------------
// SVD Line: 40623

//  <item> SFDITEM_FIELD__USART1_INPUT_RXPRS
//    <name> RXPRS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40010458) PRS RX Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_INPUT ) </loc>
//      <o.7..7> RXPRS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_INPUT_CLKPRSSEL  -------------------------------
// SVD Line: 40630

//  <item> SFDITEM_FIELD__USART1_INPUT_CLKPRSSEL
//    <name> CLKPRSSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40010458) \nCLK PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_INPUT ) </loc>
//      <o.11..8> CLKPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: USART1_INPUT_CLKPRS  --------------------------------
// SVD Line: 40699

//  <item> SFDITEM_FIELD__USART1_INPUT_CLKPRS
//    <name> CLKPRS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010458) PRS CLK Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_INPUT ) </loc>
//      <o.15..15> CLKPRS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USART1_INPUT  ----------------------------------
// SVD Line: 40545

//  <rtree> SFDITEM_REG__USART1_INPUT
//    <name> INPUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010458) USART Input Register </i>
//    <loc> ( (unsigned int)((USART1_INPUT >> 0) & 0xFFFFFFFF), ((USART1_INPUT = (USART1_INPUT & ~(0x8F8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_INPUT_RXPRSSEL </item>
//    <item> SFDITEM_FIELD__USART1_INPUT_RXPRS </item>
//    <item> SFDITEM_FIELD__USART1_INPUT_CLKPRSSEL </item>
//    <item> SFDITEM_FIELD__USART1_INPUT_CLKPRS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART1_I2SCTRL  -----------------------------
// SVD Line: 40708

unsigned int USART1_I2SCTRL __AT (0x4001045C);



// ------------------------------  Field Item: USART1_I2SCTRL_EN  ---------------------------------
// SVD Line: 40717

//  <item> SFDITEM_FIELD__USART1_I2SCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001045C) Enable I2S Mode </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_I2SCTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_I2SCTRL_MONO  --------------------------------
// SVD Line: 40724

//  <item> SFDITEM_FIELD__USART1_I2SCTRL_MONO
//    <name> MONO </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001045C) Stero or Mono </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_I2SCTRL ) </loc>
//      <o.1..1> MONO
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_I2SCTRL_JUSTIFY  -------------------------------
// SVD Line: 40731

//  <item> SFDITEM_FIELD__USART1_I2SCTRL_JUSTIFY
//    <name> JUSTIFY </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001045C) Justification of I2S Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_I2SCTRL ) </loc>
//      <o.2..2> JUSTIFY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_I2SCTRL_DMASPLIT  ------------------------------
// SVD Line: 40738

//  <item> SFDITEM_FIELD__USART1_I2SCTRL_DMASPLIT
//    <name> DMASPLIT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001045C) Separate DMA Request for Left/Right Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_I2SCTRL ) </loc>
//      <o.3..3> DMASPLIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_I2SCTRL_DELAY  --------------------------------
// SVD Line: 40745

//  <item> SFDITEM_FIELD__USART1_I2SCTRL_DELAY
//    <name> DELAY </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001045C) Delay on I2S Data </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_I2SCTRL ) </loc>
//      <o.4..4> DELAY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_I2SCTRL_FORMAT  -------------------------------
// SVD Line: 40752

//  <item> SFDITEM_FIELD__USART1_I2SCTRL_FORMAT
//    <name> FORMAT </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4001045C) \nI2S Word Format\n0 : W32D32 = 32-bit word, 32-bit data\n1 : W32D24M = 32-bit word, 32-bit data with 8 lsb masked\n2 : W32D24 = 32-bit word, 24-bit data\n3 : W32D16 = 32-bit word, 16-bit data\n4 : W32D8 = 32-bit word, 8-bit data\n5 : W16D16 = 16-bit word, 16-bit data\n6 : W16D8 = 16-bit word, 8-bit data\n7 : W8D8 = 8-bit word, 8-bit data </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_I2SCTRL ) </loc>
//      <o.10..8> FORMAT
//        <0=> 0: W32D32 = 32-bit word, 32-bit data
//        <1=> 1: W32D24M = 32-bit word, 32-bit data with 8 lsb masked
//        <2=> 2: W32D24 = 32-bit word, 24-bit data
//        <3=> 3: W32D16 = 32-bit word, 16-bit data
//        <4=> 4: W32D8 = 32-bit word, 8-bit data
//        <5=> 5: W16D16 = 16-bit word, 16-bit data
//        <6=> 6: W16D8 = 16-bit word, 8-bit data
//        <7=> 7: W8D8 = 8-bit word, 8-bit data
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: USART1_I2SCTRL  ---------------------------------
// SVD Line: 40708

//  <rtree> SFDITEM_REG__USART1_I2SCTRL
//    <name> I2SCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001045C) I2S Control Register </i>
//    <loc> ( (unsigned int)((USART1_I2SCTRL >> 0) & 0xFFFFFFFF), ((USART1_I2SCTRL = (USART1_I2SCTRL & ~(0x71FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x71F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_I2SCTRL_EN </item>
//    <item> SFDITEM_FIELD__USART1_I2SCTRL_MONO </item>
//    <item> SFDITEM_FIELD__USART1_I2SCTRL_JUSTIFY </item>
//    <item> SFDITEM_FIELD__USART1_I2SCTRL_DMASPLIT </item>
//    <item> SFDITEM_FIELD__USART1_I2SCTRL_DELAY </item>
//    <item> SFDITEM_FIELD__USART1_I2SCTRL_FORMAT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: USART1_TIMING  ------------------------------
// SVD Line: 40803

unsigned int USART1_TIMING __AT (0x40010460);



// ----------------------------  Field Item: USART1_TIMING_TXDELAY  -------------------------------
// SVD Line: 40812

//  <item> SFDITEM_FIELD__USART1_TIMING_TXDELAY
//    <name> TXDELAY </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40010460) \nTX Frame Start Delay\n0 : DISABLE = Disable - TXDELAY in USARTn_CTRL can be used for legacy\n1 : ONE = Start of transmission is delayed for 1 baud-times\n2 : TWO = Start of transmission is delayed for 2 baud-times\n3 : THREE = Start of transmission is delayed for 3 baud-times\n4 : SEVEN = Start of transmission is delayed for 7 baud-times\n5 : TCMP0 = Start of transmission is delayed for TCMPVAL0 baud-times\n6 : TCMP1 = Start of transmission is delayed for TCMPVAL1 baud-times\n7 : TCMP2 = Start of transmission is delayed for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMING ) </loc>
//      <o.18..16> TXDELAY
//        <0=> 0: DISABLE = Disable - TXDELAY in USARTn_CTRL can be used for legacy
//        <1=> 1: ONE = Start of transmission is delayed for 1 baud-times
//        <2=> 2: TWO = Start of transmission is delayed for 2 baud-times
//        <3=> 3: THREE = Start of transmission is delayed for 3 baud-times
//        <4=> 4: SEVEN = Start of transmission is delayed for 7 baud-times
//        <5=> 5: TCMP0 = Start of transmission is delayed for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = Start of transmission is delayed for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = Start of transmission is delayed for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART1_TIMING_CSSETUP  -------------------------------
// SVD Line: 40861

//  <item> SFDITEM_FIELD__USART1_TIMING_CSSETUP
//    <name> CSSETUP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40010460) \nChip Select Setup\n0 : ZERO = CS is not asserted before start of transmission\n1 : ONE = CS is asserted for 1 baud-times before start of transmission\n2 : TWO = CS is asserted for 2 baud-times before start of transmission\n3 : THREE = CS is asserted for 3 baud-times before start of transmission\n4 : SEVEN = CS is asserted for 7 baud-times before start of transmission\n5 : TCMP0 = CS is asserted before the start of transmission for TCMPVAL0 baud-times\n6 : TCMP1 = CS is asserted before the start of transmission for TCMPVAL1 baud-times\n7 : TCMP2 = CS is asserted before the start of transmission for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMING ) </loc>
//      <o.22..20> CSSETUP
//        <0=> 0: ZERO = CS is not asserted before start of transmission
//        <1=> 1: ONE = CS is asserted for 1 baud-times before start of transmission
//        <2=> 2: TWO = CS is asserted for 2 baud-times before start of transmission
//        <3=> 3: THREE = CS is asserted for 3 baud-times before start of transmission
//        <4=> 4: SEVEN = CS is asserted for 7 baud-times before start of transmission
//        <5=> 5: TCMP0 = CS is asserted before the start of transmission for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = CS is asserted before the start of transmission for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = CS is asserted before the start of transmission for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: USART1_TIMING_ICS  ---------------------------------
// SVD Line: 40910

//  <item> SFDITEM_FIELD__USART1_TIMING_ICS
//    <name> ICS </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40010460) \nInter-character Spacing\n0 : ZERO = There is no space between charcters\n1 : ONE = Create a space of 1 baud-times before start of transmission\n2 : TWO = Create a space of 2 baud-times before start of transmission\n3 : THREE = Create a space of 3 baud-times before start of transmission\n4 : SEVEN = Create a space of 7 baud-times before start of transmission\n5 : TCMP0 = Create a space of before the start of transmission for TCMPVAL0 baud-times\n6 : TCMP1 = Create a space of before the start of transmission for TCMPVAL1 baud-times\n7 : TCMP2 = Create a space of before the start of transmission for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMING ) </loc>
//      <o.26..24> ICS
//        <0=> 0: ZERO = There is no space between charcters
//        <1=> 1: ONE = Create a space of 1 baud-times before start of transmission
//        <2=> 2: TWO = Create a space of 2 baud-times before start of transmission
//        <3=> 3: THREE = Create a space of 3 baud-times before start of transmission
//        <4=> 4: SEVEN = Create a space of 7 baud-times before start of transmission
//        <5=> 5: TCMP0 = Create a space of before the start of transmission for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = Create a space of before the start of transmission for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = Create a space of before the start of transmission for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART1_TIMING_CSHOLD  --------------------------------
// SVD Line: 40959

//  <item> SFDITEM_FIELD__USART1_TIMING_CSHOLD
//    <name> CSHOLD </name>
//    <rw> 
//    <i> [Bits 30..28] RW (@ 0x40010460) \nChip Select Hold\n0 : ZERO = Disable CS being asserted after the end of transmission\n1 : ONE = CS is asserted for 1 baud-times after the end of transmission\n2 : TWO = CS is asserted for 2 baud-times after the end of transmission\n3 : THREE = CS is asserted for 3 baud-times after the end of transmission\n4 : SEVEN = CS is asserted for 7 baud-times after the end of transmission\n5 : TCMP0 = CS is asserted after the end of transmission for TCMPVAL0 baud-times\n6 : TCMP1 = CS is asserted after the end of transmission for TCMPVAL1 baud-times\n7 : TCMP2 = CS is asserted after the end of transmission for TCMPVAL2 baud-times </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMING ) </loc>
//      <o.30..28> CSHOLD
//        <0=> 0: ZERO = Disable CS being asserted after the end of transmission
//        <1=> 1: ONE = CS is asserted for 1 baud-times after the end of transmission
//        <2=> 2: TWO = CS is asserted for 2 baud-times after the end of transmission
//        <3=> 3: THREE = CS is asserted for 3 baud-times after the end of transmission
//        <4=> 4: SEVEN = CS is asserted for 7 baud-times after the end of transmission
//        <5=> 5: TCMP0 = CS is asserted after the end of transmission for TCMPVAL0 baud-times
//        <6=> 6: TCMP1 = CS is asserted after the end of transmission for TCMPVAL1 baud-times
//        <7=> 7: TCMP2 = CS is asserted after the end of transmission for TCMPVAL2 baud-times
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: USART1_TIMING  ---------------------------------
// SVD Line: 40803

//  <rtree> SFDITEM_REG__USART1_TIMING
//    <name> TIMING </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010460) Timing Register </i>
//    <loc> ( (unsigned int)((USART1_TIMING >> 0) & 0xFFFFFFFF), ((USART1_TIMING = (USART1_TIMING & ~(0x77770000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x77770000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TIMING_TXDELAY </item>
//    <item> SFDITEM_FIELD__USART1_TIMING_CSSETUP </item>
//    <item> SFDITEM_FIELD__USART1_TIMING_ICS </item>
//    <item> SFDITEM_FIELD__USART1_TIMING_CSHOLD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: USART1_CTRLX  ------------------------------
// SVD Line: 41010

unsigned int USART1_CTRLX __AT (0x40010464);



// ----------------------------  Field Item: USART1_CTRLX_DBGHALT  --------------------------------
// SVD Line: 41019

//  <item> SFDITEM_FIELD__USART1_CTRLX_DBGHALT
//    <name> DBGHALT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010464) Debug Halt </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRLX ) </loc>
//      <o.0..0> DBGHALT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRLX_CTSINV  --------------------------------
// SVD Line: 41026

//  <item> SFDITEM_FIELD__USART1_CTRLX_CTSINV
//    <name> CTSINV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010464) CTS Pin Inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRLX ) </loc>
//      <o.1..1> CTSINV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRLX_CTSEN  ---------------------------------
// SVD Line: 41033

//  <item> SFDITEM_FIELD__USART1_CTRLX_CTSEN
//    <name> CTSEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010464) CTS Function Enabled </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRLX ) </loc>
//      <o.2..2> CTSEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: USART1_CTRLX_RTSINV  --------------------------------
// SVD Line: 41040

//  <item> SFDITEM_FIELD__USART1_CTRLX_RTSINV
//    <name> RTSINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010464) RTS Pin Inversion </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_CTRLX ) </loc>
//      <o.3..3> RTSINV
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: USART1_CTRLX  ----------------------------------
// SVD Line: 41010

//  <rtree> SFDITEM_REG__USART1_CTRLX
//    <name> CTRLX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010464) Control Register Extended </i>
//    <loc> ( (unsigned int)((USART1_CTRLX >> 0) & 0xFFFFFFFF), ((USART1_CTRLX = (USART1_CTRLX & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_CTRLX_DBGHALT </item>
//    <item> SFDITEM_FIELD__USART1_CTRLX_CTSINV </item>
//    <item> SFDITEM_FIELD__USART1_CTRLX_CTSEN </item>
//    <item> SFDITEM_FIELD__USART1_CTRLX_RTSINV </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_TIMECMP0  -----------------------------
// SVD Line: 41049

unsigned int USART1_TIMECMP0 __AT (0x40010468);



// ---------------------------  Field Item: USART1_TIMECMP0_TCMPVAL  ------------------------------
// SVD Line: 41058

//  <item> SFDITEM_FIELD__USART1_TIMECMP0_TCMPVAL
//    <name> TCMPVAL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010468) Timer Comparator 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_TIMECMP0 >> 0) & 0xFF), ((USART1_TIMECMP0 = (USART1_TIMECMP0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART1_TIMECMP0_TSTART  -------------------------------
// SVD Line: 41065

//  <item> SFDITEM_FIELD__USART1_TIMECMP0_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40010468) \nTimer Start Source\n0 : DISABLE = Comparator 0 is disabled\n1 : TXEOF = Comparator 0 and timer are started at TX end of frame\n2 : TXC = Comparator 0 and timer are started at TX Complete\n3 : RXACT = Comparator 0 and timer are started at RX going Active (default: low)\n4 : RXEOF = Comparator 0 and timer are started at RX end of frame\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMECMP0 ) </loc>
//      <o.18..16> TSTART
//        <0=> 0: DISABLE = Comparator 0 is disabled
//        <1=> 1: TXEOF = Comparator 0 and timer are started at TX end of frame
//        <2=> 2: TXC = Comparator 0 and timer are started at TX Complete
//        <3=> 3: RXACT = Comparator 0 and timer are started at RX going Active (default: low)
//        <4=> 4: RXEOF = Comparator 0 and timer are started at RX end of frame
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART1_TIMECMP0_TSTOP  -------------------------------
// SVD Line: 41099

//  <item> SFDITEM_FIELD__USART1_TIMECMP0_TSTOP
//    <name> TSTOP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40010468) \nSource Used to Disable Comparator 0\n0 : TCMP0 = Comparator 0 is disabled when the counter equals TCMPVAL and triggers a TCMP0 event\n1 : TXST = Comparator 0 is disabled at the start of transmission\n2 : RXACT = Comparator 0 is disabled on RX going going Active (default: low)\n3 : RXACTN = Comparator 0 is disabled on RX going Inactive\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMECMP0 ) </loc>
//      <o.22..20> TSTOP
//        <0=> 0: TCMP0 = Comparator 0 is disabled when the counter equals TCMPVAL and triggers a TCMP0 event
//        <1=> 1: TXST = Comparator 0 is disabled at the start of transmission
//        <2=> 2: RXACT = Comparator 0 is disabled on RX going going Active (default: low)
//        <3=> 3: RXACTN = Comparator 0 is disabled on RX going Inactive
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: USART1_TIMECMP0_RESTARTEN  -----------------------------
// SVD Line: 41128

//  <item> SFDITEM_FIELD__USART1_TIMECMP0_RESTARTEN
//    <name> RESTARTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40010468) Restart Timer on TCMP0 </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TIMECMP0 ) </loc>
//      <o.24..24> RESTARTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART1_TIMECMP0  --------------------------------
// SVD Line: 41049

//  <rtree> SFDITEM_REG__USART1_TIMECMP0
//    <name> TIMECMP0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010468) Used to Generate Interrupts and Various Delays </i>
//    <loc> ( (unsigned int)((USART1_TIMECMP0 >> 0) & 0xFFFFFFFF), ((USART1_TIMECMP0 = (USART1_TIMECMP0 & ~(0x17700FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17700FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TIMECMP0_TCMPVAL </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP0_TSTART </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP0_TSTOP </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP0_RESTARTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_TIMECMP1  -----------------------------
// SVD Line: 41137

unsigned int USART1_TIMECMP1 __AT (0x4001046C);



// ---------------------------  Field Item: USART1_TIMECMP1_TCMPVAL  ------------------------------
// SVD Line: 41146

//  <item> SFDITEM_FIELD__USART1_TIMECMP1_TCMPVAL
//    <name> TCMPVAL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001046C) Timer Comparator 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_TIMECMP1 >> 0) & 0xFF), ((USART1_TIMECMP1 = (USART1_TIMECMP1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART1_TIMECMP1_TSTART  -------------------------------
// SVD Line: 41153

//  <item> SFDITEM_FIELD__USART1_TIMECMP1_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x4001046C) \nTimer Start Source\n0 : DISABLE = Comparator 1 is disabled\n1 : TXEOF = Comparator 1 and timer are started at TX end of frame\n2 : TXC = Comparator 1 and timer are started at TX Complete\n3 : RXACT = Comparator 1 and timer are started at RX going going Active (default: low)\n4 : RXEOF = Comparator 1 and timer are started at RX end of frame\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMECMP1 ) </loc>
//      <o.18..16> TSTART
//        <0=> 0: DISABLE = Comparator 1 is disabled
//        <1=> 1: TXEOF = Comparator 1 and timer are started at TX end of frame
//        <2=> 2: TXC = Comparator 1 and timer are started at TX Complete
//        <3=> 3: RXACT = Comparator 1 and timer are started at RX going going Active (default: low)
//        <4=> 4: RXEOF = Comparator 1 and timer are started at RX end of frame
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART1_TIMECMP1_TSTOP  -------------------------------
// SVD Line: 41187

//  <item> SFDITEM_FIELD__USART1_TIMECMP1_TSTOP
//    <name> TSTOP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x4001046C) \nSource Used to Disable Comparator 1\n0 : TCMP1 = Comparator 1 is disabled when the counter equals TCMPVAL and triggers a TCMP1 event\n1 : TXST = Comparator 1 is disabled at TX start TX Engine\n2 : RXACT = Comparator 1 is disabled on RX going going Active (default: low)\n3 : RXACTN = Comparator 1 is disabled on RX going Inactive\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMECMP1 ) </loc>
//      <o.22..20> TSTOP
//        <0=> 0: TCMP1 = Comparator 1 is disabled when the counter equals TCMPVAL and triggers a TCMP1 event
//        <1=> 1: TXST = Comparator 1 is disabled at TX start TX Engine
//        <2=> 2: RXACT = Comparator 1 is disabled on RX going going Active (default: low)
//        <3=> 3: RXACTN = Comparator 1 is disabled on RX going Inactive
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: USART1_TIMECMP1_RESTARTEN  -----------------------------
// SVD Line: 41216

//  <item> SFDITEM_FIELD__USART1_TIMECMP1_RESTARTEN
//    <name> RESTARTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4001046C) Restart Timer on TCMP1 </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TIMECMP1 ) </loc>
//      <o.24..24> RESTARTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART1_TIMECMP1  --------------------------------
// SVD Line: 41137

//  <rtree> SFDITEM_REG__USART1_TIMECMP1
//    <name> TIMECMP1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001046C) Used to Generate Interrupts and Various Delays </i>
//    <loc> ( (unsigned int)((USART1_TIMECMP1 >> 0) & 0xFFFFFFFF), ((USART1_TIMECMP1 = (USART1_TIMECMP1 & ~(0x17700FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17700FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TIMECMP1_TCMPVAL </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP1_TSTART </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP1_TSTOP </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP1_RESTARTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_TIMECMP2  -----------------------------
// SVD Line: 41225

unsigned int USART1_TIMECMP2 __AT (0x40010470);



// ---------------------------  Field Item: USART1_TIMECMP2_TCMPVAL  ------------------------------
// SVD Line: 41234

//  <item> SFDITEM_FIELD__USART1_TIMECMP2_TCMPVAL
//    <name> TCMPVAL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010470) Timer Comparator 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((USART1_TIMECMP2 >> 0) & 0xFF), ((USART1_TIMECMP2 = (USART1_TIMECMP2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: USART1_TIMECMP2_TSTART  -------------------------------
// SVD Line: 41241

//  <item> SFDITEM_FIELD__USART1_TIMECMP2_TSTART
//    <name> TSTART </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40010470) \nTimer Start Source\n0 : DISABLE = Comparator 2 is disabled\n1 : TXEOF = Comparator 2 and timer are started at TX end of frame\n2 : TXC = Comparator 2 and timer are started at TX Complete\n3 : RXACT = Comparator 2 and timer are started at RX going going Active (default: low)\n4 : RXEOF = Comparator 2 and timer are started at RX end of frame\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMECMP2 ) </loc>
//      <o.18..16> TSTART
//        <0=> 0: DISABLE = Comparator 2 is disabled
//        <1=> 1: TXEOF = Comparator 2 and timer are started at TX end of frame
//        <2=> 2: TXC = Comparator 2 and timer are started at TX Complete
//        <3=> 3: RXACT = Comparator 2 and timer are started at RX going going Active (default: low)
//        <4=> 4: RXEOF = Comparator 2 and timer are started at RX end of frame
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: USART1_TIMECMP2_TSTOP  -------------------------------
// SVD Line: 41275

//  <item> SFDITEM_FIELD__USART1_TIMECMP2_TSTOP
//    <name> TSTOP </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40010470) \nSource Used to Disable Comparator 2\n0 : TCMP2 = Comparator 2 is disabled when the counter equals TCMPVAL and triggers a TCMP2 event\n1 : TXST = Comparator 2 is disabled at TX start TX Engine\n2 : RXACT = Comparator 2 is disabled on RX going going Active (default: low)\n3 : RXACTN = Comparator 2 is disabled on RX going Inactive\n4 : Reserved - do not use\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_TIMECMP2 ) </loc>
//      <o.22..20> TSTOP
//        <0=> 0: TCMP2 = Comparator 2 is disabled when the counter equals TCMPVAL and triggers a TCMP2 event
//        <1=> 1: TXST = Comparator 2 is disabled at TX start TX Engine
//        <2=> 2: RXACT = Comparator 2 is disabled on RX going going Active (default: low)
//        <3=> 3: RXACTN = Comparator 2 is disabled on RX going Inactive
//        <4=> 4: 
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: USART1_TIMECMP2_RESTARTEN  -----------------------------
// SVD Line: 41304

//  <item> SFDITEM_FIELD__USART1_TIMECMP2_RESTARTEN
//    <name> RESTARTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40010470) Restart Timer on TCMP2 </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_TIMECMP2 ) </loc>
//      <o.24..24> RESTARTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART1_TIMECMP2  --------------------------------
// SVD Line: 41225

//  <rtree> SFDITEM_REG__USART1_TIMECMP2
//    <name> TIMECMP2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010470) Used to Generate Interrupts and Various Delays </i>
//    <loc> ( (unsigned int)((USART1_TIMECMP2 >> 0) & 0xFFFFFFFF), ((USART1_TIMECMP2 = (USART1_TIMECMP2 & ~(0x17700FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x17700FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_TIMECMP2_TCMPVAL </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP2_TSTART </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP2_TSTOP </item>
//    <item> SFDITEM_FIELD__USART1_TIMECMP2_RESTARTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_ROUTEPEN  -----------------------------
// SVD Line: 41313

unsigned int USART1_ROUTEPEN __AT (0x40010474);



// ----------------------------  Field Item: USART1_ROUTEPEN_RXPEN  -------------------------------
// SVD Line: 41322

//  <item> SFDITEM_FIELD__USART1_ROUTEPEN_RXPEN
//    <name> RXPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010474) RX Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ROUTEPEN ) </loc>
//      <o.0..0> RXPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_ROUTEPEN_TXPEN  -------------------------------
// SVD Line: 41329

//  <item> SFDITEM_FIELD__USART1_ROUTEPEN_TXPEN
//    <name> TXPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010474) TX Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ROUTEPEN ) </loc>
//      <o.1..1> TXPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: USART1_ROUTEPEN_CSPEN  -------------------------------
// SVD Line: 41336

//  <item> SFDITEM_FIELD__USART1_ROUTEPEN_CSPEN
//    <name> CSPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010474) CS Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ROUTEPEN ) </loc>
//      <o.2..2> CSPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_ROUTEPEN_CLKPEN  -------------------------------
// SVD Line: 41343

//  <item> SFDITEM_FIELD__USART1_ROUTEPEN_CLKPEN
//    <name> CLKPEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010474) CLK Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ROUTEPEN ) </loc>
//      <o.3..3> CLKPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_ROUTEPEN_CTSPEN  -------------------------------
// SVD Line: 41350

//  <item> SFDITEM_FIELD__USART1_ROUTEPEN_CTSPEN
//    <name> CTSPEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010474) CTS Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ROUTEPEN ) </loc>
//      <o.4..4> CTSPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: USART1_ROUTEPEN_RTSPEN  -------------------------------
// SVD Line: 41357

//  <item> SFDITEM_FIELD__USART1_ROUTEPEN_RTSPEN
//    <name> RTSPEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40010474) RTS Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) USART1_ROUTEPEN ) </loc>
//      <o.5..5> RTSPEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: USART1_ROUTEPEN  --------------------------------
// SVD Line: 41313

//  <rtree> SFDITEM_REG__USART1_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010474) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((USART1_ROUTEPEN >> 0) & 0xFFFFFFFF), ((USART1_ROUTEPEN = (USART1_ROUTEPEN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_ROUTEPEN_RXPEN </item>
//    <item> SFDITEM_FIELD__USART1_ROUTEPEN_TXPEN </item>
//    <item> SFDITEM_FIELD__USART1_ROUTEPEN_CSPEN </item>
//    <item> SFDITEM_FIELD__USART1_ROUTEPEN_CLKPEN </item>
//    <item> SFDITEM_FIELD__USART1_ROUTEPEN_CTSPEN </item>
//    <item> SFDITEM_FIELD__USART1_ROUTEPEN_RTSPEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_ROUTELOC0  ----------------------------
// SVD Line: 41366

unsigned int USART1_ROUTELOC0 __AT (0x40010478);



// ---------------------------  Field Item: USART1_ROUTELOC0_RXLOC  -------------------------------
// SVD Line: 41375

//  <item> SFDITEM_FIELD__USART1_ROUTELOC0_RXLOC
//    <name> RXLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40010478) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_ROUTELOC0 ) </loc>
//      <o.5..0> RXLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART1_ROUTELOC0_TXLOC  -------------------------------
// SVD Line: 41544

//  <item> SFDITEM_FIELD__USART1_ROUTELOC0_TXLOC
//    <name> TXLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40010478) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_ROUTELOC0 ) </loc>
//      <o.13..8> TXLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART1_ROUTELOC0_CSLOC  -------------------------------
// SVD Line: 41713

//  <item> SFDITEM_FIELD__USART1_ROUTELOC0_CSLOC
//    <name> CSLOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40010478) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_ROUTELOC0 ) </loc>
//      <o.21..16> CSLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART1_ROUTELOC0_CLKLOC  ------------------------------
// SVD Line: 41882

//  <item> SFDITEM_FIELD__USART1_ROUTELOC0_CLKLOC
//    <name> CLKLOC </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40010478) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_ROUTELOC0 ) </loc>
//      <o.29..24> CLKLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: USART1_ROUTELOC0  --------------------------------
// SVD Line: 41366

//  <rtree> SFDITEM_REG__USART1_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010478) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((USART1_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((USART1_ROUTELOC0 = (USART1_ROUTELOC0 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_ROUTELOC0_RXLOC </item>
//    <item> SFDITEM_FIELD__USART1_ROUTELOC0_TXLOC </item>
//    <item> SFDITEM_FIELD__USART1_ROUTELOC0_CSLOC </item>
//    <item> SFDITEM_FIELD__USART1_ROUTELOC0_CLKLOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: USART1_ROUTELOC1  ----------------------------
// SVD Line: 42053

unsigned int USART1_ROUTELOC1 __AT (0x4001047C);



// ---------------------------  Field Item: USART1_ROUTELOC1_CTSLOC  ------------------------------
// SVD Line: 42062

//  <item> SFDITEM_FIELD__USART1_ROUTELOC1_CTSLOC
//    <name> CTSLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4001047C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_ROUTELOC1 ) </loc>
//      <o.5..0> CTSLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: USART1_ROUTELOC1_RTSLOC  ------------------------------
// SVD Line: 42231

//  <item> SFDITEM_FIELD__USART1_ROUTELOC1_RTSLOC
//    <name> RTSLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x4001047C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) USART1_ROUTELOC1 ) </loc>
//      <o.13..8> RTSLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: USART1_ROUTELOC1  --------------------------------
// SVD Line: 42053

//  <rtree> SFDITEM_REG__USART1_ROUTELOC1
//    <name> ROUTELOC1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001047C) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((USART1_ROUTELOC1 >> 0) & 0xFFFFFFFF), ((USART1_ROUTELOC1 = (USART1_ROUTELOC1 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__USART1_ROUTELOC1_CTSLOC </item>
//    <item> SFDITEM_FIELD__USART1_ROUTELOC1_RTSLOC </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: USART1  ------------------------------------
// SVD Line: 38744

//  <view> USART1
//    <name> USART1 </name>
//    <item> SFDITEM_REG__USART1_CTRL </item>
//    <item> SFDITEM_REG__USART1_FRAME </item>
//    <item> SFDITEM_REG__USART1_TRIGCTRL </item>
//    <item> SFDITEM_REG__USART1_CMD </item>
//    <item> SFDITEM_REG__USART1_STATUS </item>
//    <item> SFDITEM_REG__USART1_CLKDIV </item>
//    <item> SFDITEM_REG__USART1_RXDATAXP </item>
//    <item> SFDITEM_REG__USART1_RXDOUBLEXP </item>
//    <item> SFDITEM_REG__USART1_TXDATAX </item>
//    <item> SFDITEM_REG__USART1_TXDATA </item>
//    <item> SFDITEM_REG__USART1_TXDOUBLEX </item>
//    <item> SFDITEM_REG__USART1_TXDOUBLE </item>
//    <item> SFDITEM_REG__USART1_IF </item>
//    <item> SFDITEM_REG__USART1_IFS </item>
//    <item> SFDITEM_REG__USART1_IFC </item>
//    <item> SFDITEM_REG__USART1_IEN </item>
//    <item> SFDITEM_REG__USART1_IRCTRL </item>
//    <item> SFDITEM_REG__USART1_INPUT </item>
//    <item> SFDITEM_REG__USART1_I2SCTRL </item>
//    <item> SFDITEM_REG__USART1_TIMING </item>
//    <item> SFDITEM_REG__USART1_CTRLX </item>
//    <item> SFDITEM_REG__USART1_TIMECMP0 </item>
//    <item> SFDITEM_REG__USART1_TIMECMP1 </item>
//    <item> SFDITEM_REG__USART1_TIMECMP2 </item>
//    <item> SFDITEM_REG__USART1_ROUTEPEN </item>
//    <item> SFDITEM_REG__USART1_ROUTELOC0 </item>
//    <item> SFDITEM_REG__USART1_ROUTELOC1 </item>
//  </view>
//  


// ---------------------------  Register Item Address: LEUART0_CTRL  ------------------------------
// SVD Line: 42418

unsigned int LEUART0_CTRL __AT (0x4004A000);



// ----------------------------  Field Item: LEUART0_CTRL_AUTOTRI  --------------------------------
// SVD Line: 42427

//  <item> SFDITEM_FIELD__LEUART0_CTRL_AUTOTRI
//    <name> AUTOTRI </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004A000) Automatic Transmitter Tristate </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.0..0> AUTOTRI
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_CTRL_DATABITS  -------------------------------
// SVD Line: 42434

//  <item> SFDITEM_FIELD__LEUART0_CTRL_DATABITS
//    <name> DATABITS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004A000) Data-Bit Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.1..1> DATABITS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_CTRL_PARITY  --------------------------------
// SVD Line: 42441

//  <item> SFDITEM_FIELD__LEUART0_CTRL_PARITY
//    <name> PARITY </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x4004A000) \nParity-Bit Mode\n0 : NONE = Parity bits are not used\n1 : Reserved - do not use\n2 : EVEN = Even parity are used. Parity bits are automatically generated and checked by hardware.\n3 : ODD = Odd parity is used. Parity bits are automatically generated and checked by hardware. </i>
//    <combo> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.3..2> PARITY
//        <0=> 0: NONE = Parity bits are not used
//        <1=> 1: 
//        <2=> 2: EVEN = Even parity are used. Parity bits are automatically generated and checked by hardware.
//        <3=> 3: ODD = Odd parity is used. Parity bits are automatically generated and checked by hardware.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_CTRL_STOPBITS  -------------------------------
// SVD Line: 42465

//  <item> SFDITEM_FIELD__LEUART0_CTRL_STOPBITS
//    <name> STOPBITS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4004A000) Stop-Bit Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.4..4> STOPBITS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_CTRL_INV  ----------------------------------
// SVD Line: 42472

//  <item> SFDITEM_FIELD__LEUART0_CTRL_INV
//    <name> INV </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4004A000) Invert Input and Output </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.5..5> INV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_CTRL_ERRSDMA  --------------------------------
// SVD Line: 42479

//  <item> SFDITEM_FIELD__LEUART0_CTRL_ERRSDMA
//    <name> ERRSDMA </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4004A000) Clear RX DMA on Error </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.6..6> ERRSDMA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_CTRL_LOOPBK  --------------------------------
// SVD Line: 42486

//  <item> SFDITEM_FIELD__LEUART0_CTRL_LOOPBK
//    <name> LOOPBK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004A000) Loopback Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.7..7> LOOPBK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_CTRL_SFUBRX  --------------------------------
// SVD Line: 42493

//  <item> SFDITEM_FIELD__LEUART0_CTRL_SFUBRX
//    <name> SFUBRX </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4004A000) Start-Frame UnBlock RX </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.8..8> SFUBRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_CTRL_MPM  ----------------------------------
// SVD Line: 42500

//  <item> SFDITEM_FIELD__LEUART0_CTRL_MPM
//    <name> MPM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4004A000) Multi-Processor Mode </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.9..9> MPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_CTRL_MPAB  ---------------------------------
// SVD Line: 42507

//  <item> SFDITEM_FIELD__LEUART0_CTRL_MPAB
//    <name> MPAB </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004A000) Multi-Processor Address-Bit </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.10..10> MPAB
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_CTRL_BIT8DV  --------------------------------
// SVD Line: 42514

//  <item> SFDITEM_FIELD__LEUART0_CTRL_BIT8DV
//    <name> BIT8DV </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4004A000) Bit 8 Default Value </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.11..11> BIT8DV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_CTRL_RXDMAWU  --------------------------------
// SVD Line: 42521

//  <item> SFDITEM_FIELD__LEUART0_CTRL_RXDMAWU
//    <name> RXDMAWU </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004A000) RX DMA Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.12..12> RXDMAWU
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_CTRL_TXDMAWU  --------------------------------
// SVD Line: 42528

//  <item> SFDITEM_FIELD__LEUART0_CTRL_TXDMAWU
//    <name> TXDMAWU </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004A000) TX DMA Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.13..13> TXDMAWU
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_CTRL_TXDELAY  --------------------------------
// SVD Line: 42535

//  <item> SFDITEM_FIELD__LEUART0_CTRL_TXDELAY
//    <name> TXDELAY </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x4004A000) \nTX Delay Transmission\n0 : NONE = Frames are transmitted immediately\n1 : SINGLE = Transmission of new frames are delayed by a single bit period\n2 : DOUBLE = Transmission of new frames are delayed by two bit periods\n3 : TRIPLE = Transmission of new frames are delayed by three bit periods </i>
//    <combo> 
//      <loc> ( (unsigned int) LEUART0_CTRL ) </loc>
//      <o.15..14> TXDELAY
//        <0=> 0: NONE = Frames are transmitted immediately
//        <1=> 1: SINGLE = Transmission of new frames are delayed by a single bit period
//        <2=> 2: DOUBLE = Transmission of new frames are delayed by two bit periods
//        <3=> 3: TRIPLE = Transmission of new frames are delayed by three bit periods
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: LEUART0_CTRL  ----------------------------------
// SVD Line: 42418

//  <rtree> SFDITEM_REG__LEUART0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A000) Control Register </i>
//    <loc> ( (unsigned int)((LEUART0_CTRL >> 0) & 0xFFFFFFFF), ((LEUART0_CTRL = (LEUART0_CTRL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_AUTOTRI </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_DATABITS </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_PARITY </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_STOPBITS </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_INV </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_ERRSDMA </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_LOOPBK </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_SFUBRX </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_MPM </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_MPAB </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_BIT8DV </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_RXDMAWU </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_TXDMAWU </item>
//    <item> SFDITEM_FIELD__LEUART0_CTRL_TXDELAY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LEUART0_CMD  -------------------------------
// SVD Line: 42566

unsigned int LEUART0_CMD __AT (0x4004A004);



// ------------------------------  Field Item: LEUART0_CMD_RXEN  ----------------------------------
// SVD Line: 42575

//  <item> SFDITEM_FIELD__LEUART0_CMD_RXEN
//    <name> RXEN </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004A004) Receiver Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_CMD_RXDIS  ---------------------------------
// SVD Line: 42582

//  <item> SFDITEM_FIELD__LEUART0_CMD_RXDIS
//    <name> RXDIS </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4004A004) Receiver Disable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.1..1> RXDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_CMD_TXEN  ----------------------------------
// SVD Line: 42589

//  <item> SFDITEM_FIELD__LEUART0_CMD_TXEN
//    <name> TXEN </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4004A004) Transmitter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.2..2> TXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_CMD_TXDIS  ---------------------------------
// SVD Line: 42596

//  <item> SFDITEM_FIELD__LEUART0_CMD_TXDIS
//    <name> TXDIS </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4004A004) Transmitter Disable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.3..3> TXDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_CMD_RXBLOCKEN  -------------------------------
// SVD Line: 42603

//  <item> SFDITEM_FIELD__LEUART0_CMD_RXBLOCKEN
//    <name> RXBLOCKEN </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4004A004) Receiver Block Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.4..4> RXBLOCKEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_CMD_RXBLOCKDIS  -------------------------------
// SVD Line: 42610

//  <item> SFDITEM_FIELD__LEUART0_CMD_RXBLOCKDIS
//    <name> RXBLOCKDIS </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4004A004) Receiver Block Disable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.5..5> RXBLOCKDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_CMD_CLEARTX  --------------------------------
// SVD Line: 42617

//  <item> SFDITEM_FIELD__LEUART0_CMD_CLEARTX
//    <name> CLEARTX </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4004A004) Clear TX </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.6..6> CLEARTX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_CMD_CLEARRX  --------------------------------
// SVD Line: 42624

//  <item> SFDITEM_FIELD__LEUART0_CMD_CLEARRX
//    <name> CLEARRX </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4004A004) Clear RX </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_CMD ) </loc>
//      <o.7..7> CLEARRX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LEUART0_CMD  ----------------------------------
// SVD Line: 42566

//  <rtree> SFDITEM_REG__LEUART0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004A004) Command Register </i>
//    <loc> ( (unsigned int)((LEUART0_CMD >> 0) & 0xFFFFFFFF), ((LEUART0_CMD = (LEUART0_CMD & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_CMD_RXEN </item>
//    <item> SFDITEM_FIELD__LEUART0_CMD_RXDIS </item>
//    <item> SFDITEM_FIELD__LEUART0_CMD_TXEN </item>
//    <item> SFDITEM_FIELD__LEUART0_CMD_TXDIS </item>
//    <item> SFDITEM_FIELD__LEUART0_CMD_RXBLOCKEN </item>
//    <item> SFDITEM_FIELD__LEUART0_CMD_RXBLOCKDIS </item>
//    <item> SFDITEM_FIELD__LEUART0_CMD_CLEARTX </item>
//    <item> SFDITEM_FIELD__LEUART0_CMD_CLEARRX </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LEUART0_STATUS  -----------------------------
// SVD Line: 42633

unsigned int LEUART0_STATUS __AT (0x4004A008);



// ----------------------------  Field Item: LEUART0_STATUS_RXENS  --------------------------------
// SVD Line: 42642

//  <item> SFDITEM_FIELD__LEUART0_STATUS_RXENS
//    <name> RXENS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4004A008) Receiver Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_STATUS ) </loc>
//      <o.0..0> RXENS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_STATUS_TXENS  --------------------------------
// SVD Line: 42649

//  <item> SFDITEM_FIELD__LEUART0_STATUS_TXENS
//    <name> TXENS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4004A008) Transmitter Enable Status </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_STATUS ) </loc>
//      <o.1..1> TXENS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_STATUS_RXBLOCK  -------------------------------
// SVD Line: 42656

//  <item> SFDITEM_FIELD__LEUART0_STATUS_RXBLOCK
//    <name> RXBLOCK </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4004A008) Block Incoming Data </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_STATUS ) </loc>
//      <o.2..2> RXBLOCK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_STATUS_TXC  ---------------------------------
// SVD Line: 42663

//  <item> SFDITEM_FIELD__LEUART0_STATUS_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4004A008) TX Complete </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_STATUS ) </loc>
//      <o.3..3> TXC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_STATUS_TXBL  --------------------------------
// SVD Line: 42670

//  <item> SFDITEM_FIELD__LEUART0_STATUS_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4004A008) TX Buffer Level </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_STATUS ) </loc>
//      <o.4..4> TXBL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_STATUS_RXDATAV  -------------------------------
// SVD Line: 42677

//  <item> SFDITEM_FIELD__LEUART0_STATUS_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4004A008) RX Data Valid </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_STATUS ) </loc>
//      <o.5..5> RXDATAV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_STATUS_TXIDLE  -------------------------------
// SVD Line: 42684

//  <item> SFDITEM_FIELD__LEUART0_STATUS_TXIDLE
//    <name> TXIDLE </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4004A008) TX Idle </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_STATUS ) </loc>
//      <o.6..6> TXIDLE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LEUART0_STATUS  ---------------------------------
// SVD Line: 42633

//  <rtree> SFDITEM_REG__LEUART0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004A008) Status Register </i>
//    <loc> ( (unsigned int)((LEUART0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LEUART0_STATUS_RXENS </item>
//    <item> SFDITEM_FIELD__LEUART0_STATUS_TXENS </item>
//    <item> SFDITEM_FIELD__LEUART0_STATUS_RXBLOCK </item>
//    <item> SFDITEM_FIELD__LEUART0_STATUS_TXC </item>
//    <item> SFDITEM_FIELD__LEUART0_STATUS_TXBL </item>
//    <item> SFDITEM_FIELD__LEUART0_STATUS_RXDATAV </item>
//    <item> SFDITEM_FIELD__LEUART0_STATUS_TXIDLE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LEUART0_CLKDIV  -----------------------------
// SVD Line: 42693

unsigned int LEUART0_CLKDIV __AT (0x4004A00C);



// -----------------------------  Field Item: LEUART0_CLKDIV_DIV  ---------------------------------
// SVD Line: 42702

//  <item> SFDITEM_FIELD__LEUART0_CLKDIV_DIV
//    <name> DIV </name>
//    <rw> 
//    <i> [Bits 16..3] RW (@ 0x4004A00C) Fractional Clock Divider </i>
//    <edit> 
//      <loc> ( (unsigned short)((LEUART0_CLKDIV >> 3) & 0x3FFF), ((LEUART0_CLKDIV = (LEUART0_CLKDIV & ~(0x3FFFUL << 3 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FFF) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: LEUART0_CLKDIV  ---------------------------------
// SVD Line: 42693

//  <rtree> SFDITEM_REG__LEUART0_CLKDIV
//    <name> CLKDIV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A00C) Clock Control Register </i>
//    <loc> ( (unsigned int)((LEUART0_CLKDIV >> 0) & 0xFFFFFFFF), ((LEUART0_CLKDIV = (LEUART0_CLKDIV & ~(0x1FFF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_CLKDIV_DIV </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LEUART0_STARTFRAME  ---------------------------
// SVD Line: 42711

unsigned int LEUART0_STARTFRAME __AT (0x4004A010);



// ------------------------  Field Item: LEUART0_STARTFRAME_STARTFRAME  ---------------------------
// SVD Line: 42720

//  <item> SFDITEM_FIELD__LEUART0_STARTFRAME_STARTFRAME
//    <name> STARTFRAME </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x4004A010) Start Frame </i>
//    <edit> 
//      <loc> ( (unsigned short)((LEUART0_STARTFRAME >> 0) & 0x1FF), ((LEUART0_STARTFRAME = (LEUART0_STARTFRAME & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: LEUART0_STARTFRAME  -------------------------------
// SVD Line: 42711

//  <rtree> SFDITEM_REG__LEUART0_STARTFRAME
//    <name> STARTFRAME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A010) Start Frame Register </i>
//    <loc> ( (unsigned int)((LEUART0_STARTFRAME >> 0) & 0xFFFFFFFF), ((LEUART0_STARTFRAME = (LEUART0_STARTFRAME & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_STARTFRAME_STARTFRAME </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LEUART0_SIGFRAME  ----------------------------
// SVD Line: 42729

unsigned int LEUART0_SIGFRAME __AT (0x4004A014);



// --------------------------  Field Item: LEUART0_SIGFRAME_SIGFRAME  -----------------------------
// SVD Line: 42738

//  <item> SFDITEM_FIELD__LEUART0_SIGFRAME_SIGFRAME
//    <name> SIGFRAME </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x4004A014) Signal Frame </i>
//    <edit> 
//      <loc> ( (unsigned short)((LEUART0_SIGFRAME >> 0) & 0x1FF), ((LEUART0_SIGFRAME = (LEUART0_SIGFRAME & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: LEUART0_SIGFRAME  --------------------------------
// SVD Line: 42729

//  <rtree> SFDITEM_REG__LEUART0_SIGFRAME
//    <name> SIGFRAME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A014) Signal Frame Register </i>
//    <loc> ( (unsigned int)((LEUART0_SIGFRAME >> 0) & 0xFFFFFFFF), ((LEUART0_SIGFRAME = (LEUART0_SIGFRAME & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_SIGFRAME_SIGFRAME </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LEUART0_RXDATAXP  ----------------------------
// SVD Line: 42799

unsigned int LEUART0_RXDATAXP __AT (0x4004A020);



// --------------------------  Field Item: LEUART0_RXDATAXP_RXDATAP  ------------------------------
// SVD Line: 42808

//  <item> SFDITEM_FIELD__LEUART0_RXDATAXP_RXDATAP
//    <name> RXDATAP </name>
//    <r> 
//    <i> [Bits 8..0] RO (@ 0x4004A020) RX Data Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((LEUART0_RXDATAXP >> 0) & 0x1FF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_RXDATAXP_PERRP  -------------------------------
// SVD Line: 42815

//  <item> SFDITEM_FIELD__LEUART0_RXDATAXP_PERRP
//    <name> PERRP </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4004A020) Receive Data Parity Error Peek </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_RXDATAXP ) </loc>
//      <o.14..14> PERRP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_RXDATAXP_FERRP  -------------------------------
// SVD Line: 42822

//  <item> SFDITEM_FIELD__LEUART0_RXDATAXP_FERRP
//    <name> FERRP </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4004A020) Receive Data Framing Error Peek </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_RXDATAXP ) </loc>
//      <o.15..15> FERRP
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: LEUART0_RXDATAXP  --------------------------------
// SVD Line: 42799

//  <rtree> SFDITEM_REG__LEUART0_RXDATAXP
//    <name> RXDATAXP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004A020) Receive Buffer Data Extended Peek Register </i>
//    <loc> ( (unsigned int)((LEUART0_RXDATAXP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LEUART0_RXDATAXP_RXDATAP </item>
//    <item> SFDITEM_FIELD__LEUART0_RXDATAXP_PERRP </item>
//    <item> SFDITEM_FIELD__LEUART0_RXDATAXP_FERRP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LEUART0_TXDATAX  -----------------------------
// SVD Line: 42831

unsigned int LEUART0_TXDATAX __AT (0x4004A024);



// ---------------------------  Field Item: LEUART0_TXDATAX_TXDATA  -------------------------------
// SVD Line: 42840

//  <item> SFDITEM_FIELD__LEUART0_TXDATAX_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x4004A024) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((LEUART0_TXDATAX >> 0) & 0x1FF), ((LEUART0_TXDATAX = (LEUART0_TXDATAX & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_TXDATAX_TXBREAK  ------------------------------
// SVD Line: 42847

//  <item> SFDITEM_FIELD__LEUART0_TXDATAX_TXBREAK
//    <name> TXBREAK </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004A024) Transmit Data as Break </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_TXDATAX ) </loc>
//      <o.13..13> TXBREAK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_TXDATAX_TXDISAT  ------------------------------
// SVD Line: 42854

//  <item> SFDITEM_FIELD__LEUART0_TXDATAX_TXDISAT
//    <name> TXDISAT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004A024) Disable TX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_TXDATAX ) </loc>
//      <o.14..14> TXDISAT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_TXDATAX_RXENAT  -------------------------------
// SVD Line: 42861

//  <item> SFDITEM_FIELD__LEUART0_TXDATAX_RXENAT
//    <name> RXENAT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004A024) Enable RX After Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_TXDATAX ) </loc>
//      <o.15..15> RXENAT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LEUART0_TXDATAX  --------------------------------
// SVD Line: 42831

//  <rtree> SFDITEM_REG__LEUART0_TXDATAX
//    <name> TXDATAX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A024) Transmit Buffer Data Extended Register </i>
//    <loc> ( (unsigned int)((LEUART0_TXDATAX >> 0) & 0xFFFFFFFF), ((LEUART0_TXDATAX = (LEUART0_TXDATAX & ~(0xE1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_TXDATAX_TXDATA </item>
//    <item> SFDITEM_FIELD__LEUART0_TXDATAX_TXBREAK </item>
//    <item> SFDITEM_FIELD__LEUART0_TXDATAX_TXDISAT </item>
//    <item> SFDITEM_FIELD__LEUART0_TXDATAX_RXENAT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LEUART0_TXDATA  -----------------------------
// SVD Line: 42870

unsigned int LEUART0_TXDATA __AT (0x4004A028);



// ----------------------------  Field Item: LEUART0_TXDATA_TXDATA  -------------------------------
// SVD Line: 42879

//  <item> SFDITEM_FIELD__LEUART0_TXDATA_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004A028) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((LEUART0_TXDATA >> 0) & 0xFF), ((LEUART0_TXDATA = (LEUART0_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: LEUART0_TXDATA  ---------------------------------
// SVD Line: 42870

//  <rtree> SFDITEM_REG__LEUART0_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A028) Transmit Buffer Data Register </i>
//    <loc> ( (unsigned int)((LEUART0_TXDATA >> 0) & 0xFFFFFFFF), ((LEUART0_TXDATA = (LEUART0_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_TXDATA_TXDATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LEUART0_IF  -------------------------------
// SVD Line: 42888

unsigned int LEUART0_IF __AT (0x4004A02C);



// -------------------------------  Field Item: LEUART0_IF_TXC  -----------------------------------
// SVD Line: 42897

//  <item> SFDITEM_FIELD__LEUART0_IF_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4004A02C) TX Complete Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_TXBL  ----------------------------------
// SVD Line: 42904

//  <item> SFDITEM_FIELD__LEUART0_IF_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4004A02C) TX Buffer Level Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.1..1> TXBL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_IF_RXDATAV  ---------------------------------
// SVD Line: 42911

//  <item> SFDITEM_FIELD__LEUART0_IF_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4004A02C) RX Data Valid Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.2..2> RXDATAV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_RXOF  ----------------------------------
// SVD Line: 42918

//  <item> SFDITEM_FIELD__LEUART0_IF_RXOF
//    <name> RXOF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4004A02C) RX Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_RXUF  ----------------------------------
// SVD Line: 42925

//  <item> SFDITEM_FIELD__LEUART0_IF_RXUF
//    <name> RXUF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4004A02C) RX Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.4..4> RXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_TXOF  ----------------------------------
// SVD Line: 42932

//  <item> SFDITEM_FIELD__LEUART0_IF_TXOF
//    <name> TXOF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4004A02C) TX Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.5..5> TXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_PERR  ----------------------------------
// SVD Line: 42939

//  <item> SFDITEM_FIELD__LEUART0_IF_PERR
//    <name> PERR </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4004A02C) Parity Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.6..6> PERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_FERR  ----------------------------------
// SVD Line: 42946

//  <item> SFDITEM_FIELD__LEUART0_IF_FERR
//    <name> FERR </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4004A02C) Framing Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.7..7> FERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_MPAF  ----------------------------------
// SVD Line: 42953

//  <item> SFDITEM_FIELD__LEUART0_IF_MPAF
//    <name> MPAF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4004A02C) Multi-Processor Address Frame Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.8..8> MPAF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IF_STARTF  ---------------------------------
// SVD Line: 42960

//  <item> SFDITEM_FIELD__LEUART0_IF_STARTF
//    <name> STARTF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4004A02C) Start Frame Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.9..9> STARTF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LEUART0_IF_SIGF  ----------------------------------
// SVD Line: 42967

//  <item> SFDITEM_FIELD__LEUART0_IF_SIGF
//    <name> SIGF </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4004A02C) Signal Frame Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IF ) </loc>
//      <o.10..10> SIGF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LEUART0_IF  -----------------------------------
// SVD Line: 42888

//  <rtree> SFDITEM_REG__LEUART0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004A02C) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((LEUART0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LEUART0_IF_TXC </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_TXBL </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_RXDATAV </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_RXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_RXUF </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_TXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_PERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_FERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_MPAF </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_STARTF </item>
//    <item> SFDITEM_FIELD__LEUART0_IF_SIGF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LEUART0_IFS  -------------------------------
// SVD Line: 42976

unsigned int LEUART0_IFS __AT (0x4004A030);



// -------------------------------  Field Item: LEUART0_IFS_TXC  ----------------------------------
// SVD Line: 42985

//  <item> SFDITEM_FIELD__LEUART0_IFS_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004A030) Set TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFS_RXOF  ----------------------------------
// SVD Line: 42992

//  <item> SFDITEM_FIELD__LEUART0_IFS_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4004A030) Set RXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFS_RXUF  ----------------------------------
// SVD Line: 42999

//  <item> SFDITEM_FIELD__LEUART0_IFS_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4004A030) Set RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.4..4> RXUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFS_TXOF  ----------------------------------
// SVD Line: 43006

//  <item> SFDITEM_FIELD__LEUART0_IFS_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4004A030) Set TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.5..5> TXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFS_PERR  ----------------------------------
// SVD Line: 43013

//  <item> SFDITEM_FIELD__LEUART0_IFS_PERR
//    <name> PERR </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4004A030) Set PERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.6..6> PERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFS_FERR  ----------------------------------
// SVD Line: 43020

//  <item> SFDITEM_FIELD__LEUART0_IFS_FERR
//    <name> FERR </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4004A030) Set FERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.7..7> FERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFS_MPAF  ----------------------------------
// SVD Line: 43027

//  <item> SFDITEM_FIELD__LEUART0_IFS_MPAF
//    <name> MPAF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4004A030) Set MPAF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.8..8> MPAF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_IFS_STARTF  ---------------------------------
// SVD Line: 43034

//  <item> SFDITEM_FIELD__LEUART0_IFS_STARTF
//    <name> STARTF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4004A030) Set STARTF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.9..9> STARTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFS_SIGF  ----------------------------------
// SVD Line: 43041

//  <item> SFDITEM_FIELD__LEUART0_IFS_SIGF
//    <name> SIGF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4004A030) Set SIGF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFS ) </loc>
//      <o.10..10> SIGF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LEUART0_IFS  ----------------------------------
// SVD Line: 42976

//  <rtree> SFDITEM_REG__LEUART0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004A030) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((LEUART0_IFS >> 0) & 0xFFFFFFFF), ((LEUART0_IFS = (LEUART0_IFS & ~(0x7F9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_IFS_TXC </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_RXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_RXUF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_TXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_PERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_FERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_MPAF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_STARTF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFS_SIGF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LEUART0_IFC  -------------------------------
// SVD Line: 43050

unsigned int LEUART0_IFC __AT (0x4004A034);



// -------------------------------  Field Item: LEUART0_IFC_TXC  ----------------------------------
// SVD Line: 43059

//  <item> SFDITEM_FIELD__LEUART0_IFC_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004A034) Clear TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFC_RXOF  ----------------------------------
// SVD Line: 43066

//  <item> SFDITEM_FIELD__LEUART0_IFC_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4004A034) Clear RXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFC_RXUF  ----------------------------------
// SVD Line: 43073

//  <item> SFDITEM_FIELD__LEUART0_IFC_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4004A034) Clear RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.4..4> RXUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFC_TXOF  ----------------------------------
// SVD Line: 43080

//  <item> SFDITEM_FIELD__LEUART0_IFC_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4004A034) Clear TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.5..5> TXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFC_PERR  ----------------------------------
// SVD Line: 43087

//  <item> SFDITEM_FIELD__LEUART0_IFC_PERR
//    <name> PERR </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4004A034) Clear PERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.6..6> PERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFC_FERR  ----------------------------------
// SVD Line: 43094

//  <item> SFDITEM_FIELD__LEUART0_IFC_FERR
//    <name> FERR </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4004A034) Clear FERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.7..7> FERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFC_MPAF  ----------------------------------
// SVD Line: 43101

//  <item> SFDITEM_FIELD__LEUART0_IFC_MPAF
//    <name> MPAF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4004A034) Clear MPAF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.8..8> MPAF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_IFC_STARTF  ---------------------------------
// SVD Line: 43108

//  <item> SFDITEM_FIELD__LEUART0_IFC_STARTF
//    <name> STARTF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4004A034) Clear STARTF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.9..9> STARTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IFC_SIGF  ----------------------------------
// SVD Line: 43115

//  <item> SFDITEM_FIELD__LEUART0_IFC_SIGF
//    <name> SIGF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4004A034) Clear SIGF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IFC ) </loc>
//      <o.10..10> SIGF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LEUART0_IFC  ----------------------------------
// SVD Line: 43050

//  <rtree> SFDITEM_REG__LEUART0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004A034) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((LEUART0_IFC >> 0) & 0xFFFFFFFF), ((LEUART0_IFC = (LEUART0_IFC & ~(0x7F9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_IFC_TXC </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_RXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_RXUF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_TXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_PERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_FERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_MPAF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_STARTF </item>
//    <item> SFDITEM_FIELD__LEUART0_IFC_SIGF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LEUART0_IEN  -------------------------------
// SVD Line: 43124

unsigned int LEUART0_IEN __AT (0x4004A038);



// -------------------------------  Field Item: LEUART0_IEN_TXC  ----------------------------------
// SVD Line: 43133

//  <item> SFDITEM_FIELD__LEUART0_IEN_TXC
//    <name> TXC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004A038) TXC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.0..0> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_TXBL  ----------------------------------
// SVD Line: 43140

//  <item> SFDITEM_FIELD__LEUART0_IEN_TXBL
//    <name> TXBL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004A038) TXBL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.1..1> TXBL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_IEN_RXDATAV  --------------------------------
// SVD Line: 43147

//  <item> SFDITEM_FIELD__LEUART0_IEN_RXDATAV
//    <name> RXDATAV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004A038) RXDATAV Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.2..2> RXDATAV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_RXOF  ----------------------------------
// SVD Line: 43154

//  <item> SFDITEM_FIELD__LEUART0_IEN_RXOF
//    <name> RXOF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4004A038) RXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_RXUF  ----------------------------------
// SVD Line: 43161

//  <item> SFDITEM_FIELD__LEUART0_IEN_RXUF
//    <name> RXUF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4004A038) RXUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.4..4> RXUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_TXOF  ----------------------------------
// SVD Line: 43168

//  <item> SFDITEM_FIELD__LEUART0_IEN_TXOF
//    <name> TXOF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4004A038) TXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.5..5> TXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_PERR  ----------------------------------
// SVD Line: 43175

//  <item> SFDITEM_FIELD__LEUART0_IEN_PERR
//    <name> PERR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4004A038) PERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.6..6> PERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_FERR  ----------------------------------
// SVD Line: 43182

//  <item> SFDITEM_FIELD__LEUART0_IEN_FERR
//    <name> FERR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004A038) FERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.7..7> FERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_MPAF  ----------------------------------
// SVD Line: 43189

//  <item> SFDITEM_FIELD__LEUART0_IEN_MPAF
//    <name> MPAF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4004A038) MPAF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.8..8> MPAF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_IEN_STARTF  ---------------------------------
// SVD Line: 43196

//  <item> SFDITEM_FIELD__LEUART0_IEN_STARTF
//    <name> STARTF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4004A038) STARTF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.9..9> STARTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LEUART0_IEN_SIGF  ----------------------------------
// SVD Line: 43203

//  <item> SFDITEM_FIELD__LEUART0_IEN_SIGF
//    <name> SIGF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004A038) SIGF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_IEN ) </loc>
//      <o.10..10> SIGF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LEUART0_IEN  ----------------------------------
// SVD Line: 43124

//  <rtree> SFDITEM_REG__LEUART0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A038) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((LEUART0_IEN >> 0) & 0xFFFFFFFF), ((LEUART0_IEN = (LEUART0_IEN & ~(0x7FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_IEN_TXC </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_TXBL </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_RXDATAV </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_RXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_RXUF </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_TXOF </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_PERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_FERR </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_MPAF </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_STARTF </item>
//    <item> SFDITEM_FIELD__LEUART0_IEN_SIGF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LEUART0_PULSECTRL  ----------------------------
// SVD Line: 43212

unsigned int LEUART0_PULSECTRL __AT (0x4004A03C);



// --------------------------  Field Item: LEUART0_PULSECTRL_PULSEW  ------------------------------
// SVD Line: 43221

//  <item> SFDITEM_FIELD__LEUART0_PULSECTRL_PULSEW
//    <name> PULSEW </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004A03C) Pulse Width </i>
//    <edit> 
//      <loc> ( (unsigned char)((LEUART0_PULSECTRL >> 0) & 0xF), ((LEUART0_PULSECTRL = (LEUART0_PULSECTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LEUART0_PULSECTRL_PULSEEN  -----------------------------
// SVD Line: 43228

//  <item> SFDITEM_FIELD__LEUART0_PULSECTRL_PULSEEN
//    <name> PULSEEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4004A03C) Pulse Generator/Extender Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_PULSECTRL ) </loc>
//      <o.4..4> PULSEEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LEUART0_PULSECTRL_PULSEFILT  ----------------------------
// SVD Line: 43235

//  <item> SFDITEM_FIELD__LEUART0_PULSECTRL_PULSEFILT
//    <name> PULSEFILT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4004A03C) Pulse Filter </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_PULSECTRL ) </loc>
//      <o.5..5> PULSEFILT
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: LEUART0_PULSECTRL  -------------------------------
// SVD Line: 43212

//  <rtree> SFDITEM_REG__LEUART0_PULSECTRL
//    <name> PULSECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A03C) Pulse Control Register </i>
//    <loc> ( (unsigned int)((LEUART0_PULSECTRL >> 0) & 0xFFFFFFFF), ((LEUART0_PULSECTRL = (LEUART0_PULSECTRL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_PULSECTRL_PULSEW </item>
//    <item> SFDITEM_FIELD__LEUART0_PULSECTRL_PULSEEN </item>
//    <item> SFDITEM_FIELD__LEUART0_PULSECTRL_PULSEFILT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LEUART0_FREEZE  -----------------------------
// SVD Line: 43244

unsigned int LEUART0_FREEZE __AT (0x4004A040);



// --------------------------  Field Item: LEUART0_FREEZE_REGFREEZE  ------------------------------
// SVD Line: 43253

//  <item> SFDITEM_FIELD__LEUART0_FREEZE_REGFREEZE
//    <name> REGFREEZE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004A040) Register Update Freeze </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_FREEZE ) </loc>
//      <o.0..0> REGFREEZE
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LEUART0_FREEZE  ---------------------------------
// SVD Line: 43244

//  <rtree> SFDITEM_REG__LEUART0_FREEZE
//    <name> FREEZE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A040) Freeze Register </i>
//    <loc> ( (unsigned int)((LEUART0_FREEZE >> 0) & 0xFFFFFFFF), ((LEUART0_FREEZE = (LEUART0_FREEZE & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_FREEZE_REGFREEZE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LEUART0_SYNCBUSY  ----------------------------
// SVD Line: 43262

unsigned int LEUART0_SYNCBUSY __AT (0x4004A044);



// ----------------------------  Field Item: LEUART0_SYNCBUSY_CTRL  -------------------------------
// SVD Line: 43271

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_CTRL
//    <name> CTRL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4004A044) CTRL Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.0..0> CTRL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LEUART0_SYNCBUSY_CMD  --------------------------------
// SVD Line: 43278

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_CMD
//    <name> CMD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4004A044) CMD Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.1..1> CMD
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_SYNCBUSY_CLKDIV  ------------------------------
// SVD Line: 43285

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_CLKDIV
//    <name> CLKDIV </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4004A044) CLKDIV Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.2..2> CLKDIV
//    </check>
//  </item>
//  


// -------------------------  Field Item: LEUART0_SYNCBUSY_STARTFRAME  ----------------------------
// SVD Line: 43292

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_STARTFRAME
//    <name> STARTFRAME </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4004A044) STARTFRAME Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.3..3> STARTFRAME
//    </check>
//  </item>
//  


// --------------------------  Field Item: LEUART0_SYNCBUSY_SIGFRAME  -----------------------------
// SVD Line: 43299

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_SIGFRAME
//    <name> SIGFRAME </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4004A044) SIGFRAME Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.4..4> SIGFRAME
//    </check>
//  </item>
//  


// --------------------------  Field Item: LEUART0_SYNCBUSY_TXDATAX  ------------------------------
// SVD Line: 43306

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_TXDATAX
//    <name> TXDATAX </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4004A044) TXDATAX Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.5..5> TXDATAX
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_SYNCBUSY_TXDATA  ------------------------------
// SVD Line: 43313

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_TXDATA
//    <name> TXDATA </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4004A044) TXDATA Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.6..6> TXDATA
//    </check>
//  </item>
//  


// -------------------------  Field Item: LEUART0_SYNCBUSY_PULSECTRL  -----------------------------
// SVD Line: 43320

//  <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_PULSECTRL
//    <name> PULSECTRL </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4004A044) PULSECTRL Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_SYNCBUSY ) </loc>
//      <o.7..7> PULSECTRL
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: LEUART0_SYNCBUSY  --------------------------------
// SVD Line: 43262

//  <rtree> SFDITEM_REG__LEUART0_SYNCBUSY
//    <name> SYNCBUSY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004A044) Synchronization Busy Register </i>
//    <loc> ( (unsigned int)((LEUART0_SYNCBUSY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_CTRL </item>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_CMD </item>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_CLKDIV </item>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_STARTFRAME </item>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_SIGFRAME </item>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_TXDATAX </item>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_TXDATA </item>
//    <item> SFDITEM_FIELD__LEUART0_SYNCBUSY_PULSECTRL </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LEUART0_ROUTEPEN  ----------------------------
// SVD Line: 43329

unsigned int LEUART0_ROUTEPEN __AT (0x4004A054);



// ---------------------------  Field Item: LEUART0_ROUTEPEN_RXPEN  -------------------------------
// SVD Line: 43338

//  <item> SFDITEM_FIELD__LEUART0_ROUTEPEN_RXPEN
//    <name> RXPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004A054) RX Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_ROUTEPEN ) </loc>
//      <o.0..0> RXPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_ROUTEPEN_TXPEN  -------------------------------
// SVD Line: 43345

//  <item> SFDITEM_FIELD__LEUART0_ROUTEPEN_TXPEN
//    <name> TXPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004A054) TX Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_ROUTEPEN ) </loc>
//      <o.1..1> TXPEN
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: LEUART0_ROUTEPEN  --------------------------------
// SVD Line: 43329

//  <rtree> SFDITEM_REG__LEUART0_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A054) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((LEUART0_ROUTEPEN >> 0) & 0xFFFFFFFF), ((LEUART0_ROUTEPEN = (LEUART0_ROUTEPEN & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_ROUTEPEN_RXPEN </item>
//    <item> SFDITEM_FIELD__LEUART0_ROUTEPEN_TXPEN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LEUART0_ROUTELOC0  ----------------------------
// SVD Line: 43354

unsigned int LEUART0_ROUTELOC0 __AT (0x4004A058);



// ---------------------------  Field Item: LEUART0_ROUTELOC0_RXLOC  ------------------------------
// SVD Line: 43363

//  <item> SFDITEM_FIELD__LEUART0_ROUTELOC0_RXLOC
//    <name> RXLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004A058) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LEUART0_ROUTELOC0 ) </loc>
//      <o.5..0> RXLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: LEUART0_ROUTELOC0_TXLOC  ------------------------------
// SVD Line: 43532

//  <item> SFDITEM_FIELD__LEUART0_ROUTELOC0_TXLOC
//    <name> TXLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x4004A058) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LEUART0_ROUTELOC0 ) </loc>
//      <o.13..8> TXLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: LEUART0_ROUTELOC0  -------------------------------
// SVD Line: 43354

//  <rtree> SFDITEM_REG__LEUART0_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A058) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((LEUART0_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((LEUART0_ROUTELOC0 = (LEUART0_ROUTELOC0 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_ROUTELOC0_RXLOC </item>
//    <item> SFDITEM_FIELD__LEUART0_ROUTELOC0_TXLOC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LEUART0_INPUT  ------------------------------
// SVD Line: 43703

unsigned int LEUART0_INPUT __AT (0x4004A064);



// ---------------------------  Field Item: LEUART0_INPUT_RXPRSSEL  -------------------------------
// SVD Line: 43712

//  <item> SFDITEM_FIELD__LEUART0_INPUT_RXPRSSEL
//    <name> RXPRSSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004A064) \nRX PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected\n1 : PRSCH1 = PRS Channel 1 selected\n2 : PRSCH2 = PRS Channel 2 selected\n3 : PRSCH3 = PRS Channel 3 selected\n4 : PRSCH4 = PRS Channel 4 selected\n5 : PRSCH5 = PRS Channel 5 selected\n6 : PRSCH6 = PRS Channel 6 selected\n7 : PRSCH7 = PRS Channel 7 selected\n8 : PRSCH8 = PRS Channel 8 selected\n9 : PRSCH9 = PRS Channel 9 selected\n10 : PRSCH10 = PRS Channel 10 selected\n11 : PRSCH11 = PRS Channel 11 selected\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LEUART0_INPUT ) </loc>
//      <o.3..0> RXPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected
//        <1=> 1: PRSCH1 = PRS Channel 1 selected
//        <2=> 2: PRSCH2 = PRS Channel 2 selected
//        <3=> 3: PRSCH3 = PRS Channel 3 selected
//        <4=> 4: PRSCH4 = PRS Channel 4 selected
//        <5=> 5: PRSCH5 = PRS Channel 5 selected
//        <6=> 6: PRSCH6 = PRS Channel 6 selected
//        <7=> 7: PRSCH7 = PRS Channel 7 selected
//        <8=> 8: PRSCH8 = PRS Channel 8 selected
//        <9=> 9: PRSCH9 = PRS Channel 9 selected
//        <10=> 10: PRSCH10 = PRS Channel 10 selected
//        <11=> 11: PRSCH11 = PRS Channel 11 selected
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LEUART0_INPUT_RXPRS  --------------------------------
// SVD Line: 43781

//  <item> SFDITEM_FIELD__LEUART0_INPUT_RXPRS
//    <name> RXPRS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4004A064) PRS RX Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LEUART0_INPUT ) </loc>
//      <o.5..5> RXPRS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LEUART0_INPUT  ---------------------------------
// SVD Line: 43703

//  <rtree> SFDITEM_REG__LEUART0_INPUT
//    <name> INPUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004A064) LEUART Input Register </i>
//    <loc> ( (unsigned int)((LEUART0_INPUT >> 0) & 0xFFFFFFFF), ((LEUART0_INPUT = (LEUART0_INPUT & ~(0x2FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LEUART0_INPUT_RXPRSSEL </item>
//    <item> SFDITEM_FIELD__LEUART0_INPUT_RXPRS </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: LEUART0  ------------------------------------
// SVD Line: 42404

//  <view> LEUART0
//    <name> LEUART0 </name>
//    <item> SFDITEM_REG__LEUART0_CTRL </item>
//    <item> SFDITEM_REG__LEUART0_CMD </item>
//    <item> SFDITEM_REG__LEUART0_STATUS </item>
//    <item> SFDITEM_REG__LEUART0_CLKDIV </item>
//    <item> SFDITEM_REG__LEUART0_STARTFRAME </item>
//    <item> SFDITEM_REG__LEUART0_SIGFRAME </item>
//    <item> SFDITEM_REG__LEUART0_RXDATAXP </item>
//    <item> SFDITEM_REG__LEUART0_TXDATAX </item>
//    <item> SFDITEM_REG__LEUART0_TXDATA </item>
//    <item> SFDITEM_REG__LEUART0_IF </item>
//    <item> SFDITEM_REG__LEUART0_IFS </item>
//    <item> SFDITEM_REG__LEUART0_IFC </item>
//    <item> SFDITEM_REG__LEUART0_IEN </item>
//    <item> SFDITEM_REG__LEUART0_PULSECTRL </item>
//    <item> SFDITEM_REG__LEUART0_FREEZE </item>
//    <item> SFDITEM_REG__LEUART0_SYNCBUSY </item>
//    <item> SFDITEM_REG__LEUART0_ROUTEPEN </item>
//    <item> SFDITEM_REG__LEUART0_ROUTELOC0 </item>
//    <item> SFDITEM_REG__LEUART0_INPUT </item>
//  </view>
//  


// --------------------------  Register Item Address: LETIMER0_CTRL  ------------------------------
// SVD Line: 43806

unsigned int LETIMER0_CTRL __AT (0x40046000);



// ----------------------------  Field Item: LETIMER0_CTRL_REPMODE  -------------------------------
// SVD Line: 43815

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_REPMODE
//    <name> REPMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40046000) \nRepeat Mode\n0 : FREE = When started, the LETIMER counts down until it is stopped by software\n1 : ONESHOT = The counter counts REP0 times. When REP0 reaches zero, the counter stops\n2 : BUFFERED = The counter counts REP0 times. If REP1 has been written, it is loaded into REP0 when REP0 reaches zero, otherwise the counter stops\n3 : DOUBLE = Both REP0 and REP1 are decremented when the LETIMER wraps around. The LETIMER counts until both REP0 and REP1 are zero </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.1..0> REPMODE
//        <0=> 0: FREE = When started, the LETIMER counts down until it is stopped by software
//        <1=> 1: ONESHOT = The counter counts REP0 times. When REP0 reaches zero, the counter stops
//        <2=> 2: BUFFERED = The counter counts REP0 times. If REP1 has been written, it is loaded into REP0 when REP0 reaches zero, otherwise the counter stops
//        <3=> 3: DOUBLE = Both REP0 and REP1 are decremented when the LETIMER wraps around. The LETIMER counts until both REP0 and REP1 are zero
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_CTRL_UFOA0  --------------------------------
// SVD Line: 43844

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_UFOA0
//    <name> UFOA0 </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40046000) \nUnderflow Output Action 0\n0 : NONE = LETn_O0 is held at its idle value as defined by OPOL0\n1 : TOGGLE = LETn_O0 is toggled on CNT underflow\n2 : PULSE = LETn_O0 is held active for one LFACLKLETIMER0 clock cycle on CNT underflow. The output then returns to its idle value as defined by OPOL0\n3 : PWM = LETn_O0 is set idle on CNT underflow, and active on compare match with COMP1 </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.3..2> UFOA0
//        <0=> 0: NONE = LETn_O0 is held at its idle value as defined by OPOL0
//        <1=> 1: TOGGLE = LETn_O0 is toggled on CNT underflow
//        <2=> 2: PULSE = LETn_O0 is held active for one LFACLKLETIMER0 clock cycle on CNT underflow. The output then returns to its idle value as defined by OPOL0
//        <3=> 3: PWM = LETn_O0 is set idle on CNT underflow, and active on compare match with COMP1
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_CTRL_UFOA1  --------------------------------
// SVD Line: 43873

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_UFOA1
//    <name> UFOA1 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40046000) \nUnderflow Output Action 1\n0 : NONE = LETn_O1 is held at its idle value as defined by OPOL1\n1 : TOGGLE = LETn_O1 is toggled on CNT underflow\n2 : PULSE = LETn_O1 is held active for one LFACLKLETIMER0 clock cycle on CNT underflow. The output then returns to its idle value as defined by OPOL1\n3 : PWM = LETn_O1 is set idle on CNT underflow, and active on compare match with COMP1 </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.5..4> UFOA1
//        <0=> 0: NONE = LETn_O1 is held at its idle value as defined by OPOL1
//        <1=> 1: TOGGLE = LETn_O1 is toggled on CNT underflow
//        <2=> 2: PULSE = LETn_O1 is held active for one LFACLKLETIMER0 clock cycle on CNT underflow. The output then returns to its idle value as defined by OPOL1
//        <3=> 3: PWM = LETn_O1 is set idle on CNT underflow, and active on compare match with COMP1
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_CTRL_OPOL0  --------------------------------
// SVD Line: 43902

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_OPOL0
//    <name> OPOL0 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40046000) Output 0 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.6..6> OPOL0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_CTRL_OPOL1  --------------------------------
// SVD Line: 43909

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_OPOL1
//    <name> OPOL1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40046000) Output 1 Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.7..7> OPOL1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LETIMER0_CTRL_BUFTOP  --------------------------------
// SVD Line: 43916

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_BUFTOP
//    <name> BUFTOP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40046000) Buffered Top </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.8..8> BUFTOP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LETIMER0_CTRL_COMP0TOP  -------------------------------
// SVD Line: 43923

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_COMP0TOP
//    <name> COMP0TOP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40046000) Compare Value 0 is Top Value </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.9..9> COMP0TOP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LETIMER0_CTRL_DEBUGRUN  -------------------------------
// SVD Line: 43930

//  <item> SFDITEM_FIELD__LETIMER0_CTRL_DEBUGRUN
//    <name> DEBUGRUN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40046000) Debug Mode Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CTRL ) </loc>
//      <o.12..12> DEBUGRUN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_CTRL  ---------------------------------
// SVD Line: 43806

//  <rtree> SFDITEM_REG__LETIMER0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40046000) Control Register </i>
//    <loc> ( (unsigned int)((LETIMER0_CTRL >> 0) & 0xFFFFFFFF), ((LETIMER0_CTRL = (LETIMER0_CTRL & ~(0x13FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x13FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_REPMODE </item>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_UFOA0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_UFOA1 </item>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_OPOL0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_OPOL1 </item>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_BUFTOP </item>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_COMP0TOP </item>
//    <item> SFDITEM_FIELD__LETIMER0_CTRL_DEBUGRUN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LETIMER0_CMD  ------------------------------
// SVD Line: 43939

unsigned int LETIMER0_CMD __AT (0x40046004);



// -----------------------------  Field Item: LETIMER0_CMD_START  ---------------------------------
// SVD Line: 43948

//  <item> SFDITEM_FIELD__LETIMER0_CMD_START
//    <name> START </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40046004) Start LETIMER </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CMD ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_CMD_STOP  ---------------------------------
// SVD Line: 43955

//  <item> SFDITEM_FIELD__LETIMER0_CMD_STOP
//    <name> STOP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40046004) Stop LETIMER </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CMD ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_CMD_CLEAR  ---------------------------------
// SVD Line: 43962

//  <item> SFDITEM_FIELD__LETIMER0_CMD_CLEAR
//    <name> CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40046004) Clear LETIMER </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CMD ) </loc>
//      <o.2..2> CLEAR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_CMD_CTO0  ---------------------------------
// SVD Line: 43969

//  <item> SFDITEM_FIELD__LETIMER0_CMD_CTO0
//    <name> CTO0 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40046004) Clear Toggle Output 0 </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CMD ) </loc>
//      <o.3..3> CTO0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_CMD_CTO1  ---------------------------------
// SVD Line: 43976

//  <item> SFDITEM_FIELD__LETIMER0_CMD_CTO1
//    <name> CTO1 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40046004) Clear Toggle Output 1 </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_CMD ) </loc>
//      <o.4..4> CTO1
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_CMD  ----------------------------------
// SVD Line: 43939

//  <rtree> SFDITEM_REG__LETIMER0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40046004) Command Register </i>
//    <loc> ( (unsigned int)((LETIMER0_CMD >> 0) & 0xFFFFFFFF), ((LETIMER0_CMD = (LETIMER0_CMD & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_CMD_START </item>
//    <item> SFDITEM_FIELD__LETIMER0_CMD_STOP </item>
//    <item> SFDITEM_FIELD__LETIMER0_CMD_CLEAR </item>
//    <item> SFDITEM_FIELD__LETIMER0_CMD_CTO0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_CMD_CTO1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LETIMER0_STATUS  -----------------------------
// SVD Line: 43985

unsigned int LETIMER0_STATUS __AT (0x40046008);



// ---------------------------  Field Item: LETIMER0_STATUS_RUNNING  ------------------------------
// SVD Line: 43994

//  <item> SFDITEM_FIELD__LETIMER0_STATUS_RUNNING
//    <name> RUNNING </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40046008) LETIMER Running </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_STATUS ) </loc>
//      <o.0..0> RUNNING
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LETIMER0_STATUS  --------------------------------
// SVD Line: 43985

//  <rtree> SFDITEM_REG__LETIMER0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40046008) Status Register </i>
//    <loc> ( (unsigned int)((LETIMER0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_STATUS_RUNNING </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LETIMER0_CNT  ------------------------------
// SVD Line: 44003

unsigned int LETIMER0_CNT __AT (0x4004600C);



// ------------------------------  Field Item: LETIMER0_CNT_CNT  ----------------------------------
// SVD Line: 44012

//  <item> SFDITEM_FIELD__LETIMER0_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004600C) Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LETIMER0_CNT >> 0) & 0xFFFF), ((LETIMER0_CNT = (LETIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_CNT  ----------------------------------
// SVD Line: 44003

//  <rtree> SFDITEM_REG__LETIMER0_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004600C) Counter Value Register </i>
//    <loc> ( (unsigned int)((LETIMER0_CNT >> 0) & 0xFFFFFFFF), ((LETIMER0_CNT = (LETIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_CNT_CNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LETIMER0_COMP0  -----------------------------
// SVD Line: 44021

unsigned int LETIMER0_COMP0 __AT (0x40046010);



// ----------------------------  Field Item: LETIMER0_COMP0_COMP0  --------------------------------
// SVD Line: 44030

//  <item> SFDITEM_FIELD__LETIMER0_COMP0_COMP0
//    <name> COMP0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40046010) Compare Value 0 </i>
//    <edit> 
//      <loc> ( (unsigned short)((LETIMER0_COMP0 >> 0) & 0xFFFF), ((LETIMER0_COMP0 = (LETIMER0_COMP0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: LETIMER0_COMP0  ---------------------------------
// SVD Line: 44021

//  <rtree> SFDITEM_REG__LETIMER0_COMP0
//    <name> COMP0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40046010) Compare Value Register 0 </i>
//    <loc> ( (unsigned int)((LETIMER0_COMP0 >> 0) & 0xFFFFFFFF), ((LETIMER0_COMP0 = (LETIMER0_COMP0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_COMP0_COMP0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LETIMER0_COMP1  -----------------------------
// SVD Line: 44039

unsigned int LETIMER0_COMP1 __AT (0x40046014);



// ----------------------------  Field Item: LETIMER0_COMP1_COMP1  --------------------------------
// SVD Line: 44048

//  <item> SFDITEM_FIELD__LETIMER0_COMP1_COMP1
//    <name> COMP1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40046014) Compare Value 1 </i>
//    <edit> 
//      <loc> ( (unsigned short)((LETIMER0_COMP1 >> 0) & 0xFFFF), ((LETIMER0_COMP1 = (LETIMER0_COMP1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: LETIMER0_COMP1  ---------------------------------
// SVD Line: 44039

//  <rtree> SFDITEM_REG__LETIMER0_COMP1
//    <name> COMP1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40046014) Compare Value Register 1 </i>
//    <loc> ( (unsigned int)((LETIMER0_COMP1 >> 0) & 0xFFFFFFFF), ((LETIMER0_COMP1 = (LETIMER0_COMP1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_COMP1_COMP1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LETIMER0_REP0  ------------------------------
// SVD Line: 44057

unsigned int LETIMER0_REP0 __AT (0x40046018);



// -----------------------------  Field Item: LETIMER0_REP0_REP0  ---------------------------------
// SVD Line: 44066

//  <item> SFDITEM_FIELD__LETIMER0_REP0_REP0
//    <name> REP0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40046018) Repeat Counter 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LETIMER0_REP0 >> 0) & 0xFF), ((LETIMER0_REP0 = (LETIMER0_REP0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_REP0  ---------------------------------
// SVD Line: 44057

//  <rtree> SFDITEM_REG__LETIMER0_REP0
//    <name> REP0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40046018) Repeat Counter Register 0 </i>
//    <loc> ( (unsigned int)((LETIMER0_REP0 >> 0) & 0xFFFFFFFF), ((LETIMER0_REP0 = (LETIMER0_REP0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_REP0_REP0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LETIMER0_REP1  ------------------------------
// SVD Line: 44075

unsigned int LETIMER0_REP1 __AT (0x4004601C);



// -----------------------------  Field Item: LETIMER0_REP1_REP1  ---------------------------------
// SVD Line: 44084

//  <item> SFDITEM_FIELD__LETIMER0_REP1_REP1
//    <name> REP1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004601C) Repeat Counter 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LETIMER0_REP1 >> 0) & 0xFF), ((LETIMER0_REP1 = (LETIMER0_REP1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_REP1  ---------------------------------
// SVD Line: 44075

//  <rtree> SFDITEM_REG__LETIMER0_REP1
//    <name> REP1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004601C) Repeat Counter Register 1 </i>
//    <loc> ( (unsigned int)((LETIMER0_REP1 >> 0) & 0xFFFFFFFF), ((LETIMER0_REP1 = (LETIMER0_REP1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_REP1_REP1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LETIMER0_IF  -------------------------------
// SVD Line: 44093

unsigned int LETIMER0_IF __AT (0x40046020);



// ------------------------------  Field Item: LETIMER0_IF_COMP0  ---------------------------------
// SVD Line: 44102

//  <item> SFDITEM_FIELD__LETIMER0_IF_COMP0
//    <name> COMP0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40046020) Compare Match 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IF ) </loc>
//      <o.0..0> COMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IF_COMP1  ---------------------------------
// SVD Line: 44109

//  <item> SFDITEM_FIELD__LETIMER0_IF_COMP1
//    <name> COMP1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40046020) Compare Match 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IF ) </loc>
//      <o.1..1> COMP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LETIMER0_IF_UF  -----------------------------------
// SVD Line: 44116

//  <item> SFDITEM_FIELD__LETIMER0_IF_UF
//    <name> UF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40046020) Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IF ) </loc>
//      <o.2..2> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IF_REP0  ----------------------------------
// SVD Line: 44123

//  <item> SFDITEM_FIELD__LETIMER0_IF_REP0
//    <name> REP0 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40046020) Repeat Counter 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IF ) </loc>
//      <o.3..3> REP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IF_REP1  ----------------------------------
// SVD Line: 44130

//  <item> SFDITEM_FIELD__LETIMER0_IF_REP1
//    <name> REP1 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40046020) Repeat Counter 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IF ) </loc>
//      <o.4..4> REP1
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LETIMER0_IF  ----------------------------------
// SVD Line: 44093

//  <rtree> SFDITEM_REG__LETIMER0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40046020) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((LETIMER0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_IF_COMP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IF_COMP1 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IF_UF </item>
//    <item> SFDITEM_FIELD__LETIMER0_IF_REP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IF_REP1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LETIMER0_IFS  ------------------------------
// SVD Line: 44139

unsigned int LETIMER0_IFS __AT (0x40046024);



// -----------------------------  Field Item: LETIMER0_IFS_COMP0  ---------------------------------
// SVD Line: 44148

//  <item> SFDITEM_FIELD__LETIMER0_IFS_COMP0
//    <name> COMP0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40046024) Set COMP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFS ) </loc>
//      <o.0..0> COMP0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_IFS_COMP1  ---------------------------------
// SVD Line: 44155

//  <item> SFDITEM_FIELD__LETIMER0_IFS_COMP1
//    <name> COMP1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40046024) Set COMP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFS ) </loc>
//      <o.1..1> COMP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LETIMER0_IFS_UF  ----------------------------------
// SVD Line: 44162

//  <item> SFDITEM_FIELD__LETIMER0_IFS_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40046024) Set UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFS ) </loc>
//      <o.2..2> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IFS_REP0  ---------------------------------
// SVD Line: 44169

//  <item> SFDITEM_FIELD__LETIMER0_IFS_REP0
//    <name> REP0 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40046024) Set REP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFS ) </loc>
//      <o.3..3> REP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IFS_REP1  ---------------------------------
// SVD Line: 44176

//  <item> SFDITEM_FIELD__LETIMER0_IFS_REP1
//    <name> REP1 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40046024) Set REP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFS ) </loc>
//      <o.4..4> REP1
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_IFS  ----------------------------------
// SVD Line: 44139

//  <rtree> SFDITEM_REG__LETIMER0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40046024) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((LETIMER0_IFS >> 0) & 0xFFFFFFFF), ((LETIMER0_IFS = (LETIMER0_IFS & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_IFS_COMP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFS_COMP1 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFS_UF </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFS_REP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFS_REP1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LETIMER0_IFC  ------------------------------
// SVD Line: 44185

unsigned int LETIMER0_IFC __AT (0x40046028);



// -----------------------------  Field Item: LETIMER0_IFC_COMP0  ---------------------------------
// SVD Line: 44194

//  <item> SFDITEM_FIELD__LETIMER0_IFC_COMP0
//    <name> COMP0 </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40046028) Clear COMP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFC ) </loc>
//      <o.0..0> COMP0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_IFC_COMP1  ---------------------------------
// SVD Line: 44201

//  <item> SFDITEM_FIELD__LETIMER0_IFC_COMP1
//    <name> COMP1 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40046028) Clear COMP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFC ) </loc>
//      <o.1..1> COMP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LETIMER0_IFC_UF  ----------------------------------
// SVD Line: 44208

//  <item> SFDITEM_FIELD__LETIMER0_IFC_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40046028) Clear UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFC ) </loc>
//      <o.2..2> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IFC_REP0  ---------------------------------
// SVD Line: 44215

//  <item> SFDITEM_FIELD__LETIMER0_IFC_REP0
//    <name> REP0 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40046028) Clear REP0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFC ) </loc>
//      <o.3..3> REP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IFC_REP1  ---------------------------------
// SVD Line: 44222

//  <item> SFDITEM_FIELD__LETIMER0_IFC_REP1
//    <name> REP1 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40046028) Clear REP1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IFC ) </loc>
//      <o.4..4> REP1
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_IFC  ----------------------------------
// SVD Line: 44185

//  <rtree> SFDITEM_REG__LETIMER0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40046028) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((LETIMER0_IFC >> 0) & 0xFFFFFFFF), ((LETIMER0_IFC = (LETIMER0_IFC & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_IFC_COMP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFC_COMP1 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFC_UF </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFC_REP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IFC_REP1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LETIMER0_IEN  ------------------------------
// SVD Line: 44231

unsigned int LETIMER0_IEN __AT (0x4004602C);



// -----------------------------  Field Item: LETIMER0_IEN_COMP0  ---------------------------------
// SVD Line: 44240

//  <item> SFDITEM_FIELD__LETIMER0_IEN_COMP0
//    <name> COMP0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004602C) COMP0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IEN ) </loc>
//      <o.0..0> COMP0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LETIMER0_IEN_COMP1  ---------------------------------
// SVD Line: 44247

//  <item> SFDITEM_FIELD__LETIMER0_IEN_COMP1
//    <name> COMP1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004602C) COMP1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IEN ) </loc>
//      <o.1..1> COMP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LETIMER0_IEN_UF  ----------------------------------
// SVD Line: 44254

//  <item> SFDITEM_FIELD__LETIMER0_IEN_UF
//    <name> UF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004602C) UF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IEN ) </loc>
//      <o.2..2> UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IEN_REP0  ---------------------------------
// SVD Line: 44261

//  <item> SFDITEM_FIELD__LETIMER0_IEN_REP0
//    <name> REP0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4004602C) REP0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IEN ) </loc>
//      <o.3..3> REP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LETIMER0_IEN_REP1  ---------------------------------
// SVD Line: 44268

//  <item> SFDITEM_FIELD__LETIMER0_IEN_REP1
//    <name> REP1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4004602C) REP1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_IEN ) </loc>
//      <o.4..4> REP1
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LETIMER0_IEN  ----------------------------------
// SVD Line: 44231

//  <rtree> SFDITEM_REG__LETIMER0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004602C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((LETIMER0_IEN >> 0) & 0xFFFFFFFF), ((LETIMER0_IEN = (LETIMER0_IEN & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_IEN_COMP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IEN_COMP1 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IEN_UF </item>
//    <item> SFDITEM_FIELD__LETIMER0_IEN_REP0 </item>
//    <item> SFDITEM_FIELD__LETIMER0_IEN_REP1 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LETIMER0_SYNCBUSY  ----------------------------
// SVD Line: 44277

unsigned int LETIMER0_SYNCBUSY __AT (0x40046034);



// ----------------------------  Field Item: LETIMER0_SYNCBUSY_CMD  -------------------------------
// SVD Line: 44286

//  <item> SFDITEM_FIELD__LETIMER0_SYNCBUSY_CMD
//    <name> CMD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40046034) CMD Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_SYNCBUSY ) </loc>
//      <o.1..1> CMD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: LETIMER0_SYNCBUSY  -------------------------------
// SVD Line: 44277

//  <rtree> SFDITEM_REG__LETIMER0_SYNCBUSY
//    <name> SYNCBUSY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40046034) Synchronization Busy Register </i>
//    <loc> ( (unsigned int)((LETIMER0_SYNCBUSY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_SYNCBUSY_CMD </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LETIMER0_ROUTEPEN  ----------------------------
// SVD Line: 44295

unsigned int LETIMER0_ROUTEPEN __AT (0x40046040);



// --------------------------  Field Item: LETIMER0_ROUTEPEN_OUT0PEN  -----------------------------
// SVD Line: 44304

//  <item> SFDITEM_FIELD__LETIMER0_ROUTEPEN_OUT0PEN
//    <name> OUT0PEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40046040) Output 0 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_ROUTEPEN ) </loc>
//      <o.0..0> OUT0PEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: LETIMER0_ROUTEPEN_OUT1PEN  -----------------------------
// SVD Line: 44311

//  <item> SFDITEM_FIELD__LETIMER0_ROUTEPEN_OUT1PEN
//    <name> OUT1PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40046040) Output 1 Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LETIMER0_ROUTEPEN ) </loc>
//      <o.1..1> OUT1PEN
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: LETIMER0_ROUTEPEN  -------------------------------
// SVD Line: 44295

//  <rtree> SFDITEM_REG__LETIMER0_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40046040) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((LETIMER0_ROUTEPEN >> 0) & 0xFFFFFFFF), ((LETIMER0_ROUTEPEN = (LETIMER0_ROUTEPEN & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_ROUTEPEN_OUT0PEN </item>
//    <item> SFDITEM_FIELD__LETIMER0_ROUTEPEN_OUT1PEN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LETIMER0_ROUTELOC0  ---------------------------
// SVD Line: 44320

unsigned int LETIMER0_ROUTELOC0 __AT (0x40046044);



// -------------------------  Field Item: LETIMER0_ROUTELOC0_OUT0LOC  -----------------------------
// SVD Line: 44329

//  <item> SFDITEM_FIELD__LETIMER0_ROUTELOC0_OUT0LOC
//    <name> OUT0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40046044) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_ROUTELOC0 ) </loc>
//      <o.5..0> OUT0LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -------------------------  Field Item: LETIMER0_ROUTELOC0_OUT1LOC  -----------------------------
// SVD Line: 44498

//  <item> SFDITEM_FIELD__LETIMER0_ROUTELOC0_OUT1LOC
//    <name> OUT1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40046044) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_ROUTELOC0 ) </loc>
//      <o.13..8> OUT1LOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Register RTree: LETIMER0_ROUTELOC0  -------------------------------
// SVD Line: 44320

//  <rtree> SFDITEM_REG__LETIMER0_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40046044) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((LETIMER0_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((LETIMER0_ROUTELOC0 = (LETIMER0_ROUTELOC0 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_ROUTELOC0_OUT0LOC </item>
//    <item> SFDITEM_FIELD__LETIMER0_ROUTELOC0_OUT1LOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LETIMER0_PRSSEL  -----------------------------
// SVD Line: 44669

unsigned int LETIMER0_PRSSEL __AT (0x40046050);



// -------------------------  Field Item: LETIMER0_PRSSEL_PRSSTARTSEL  ----------------------------
// SVD Line: 44678

//  <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTARTSEL
//    <name> PRSSTARTSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40046050) \nPRS Start Select\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_PRSSEL ) </loc>
//      <o.3..0> PRSSTARTSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------  Field Item: LETIMER0_PRSSEL_PRSSTOPSEL  -----------------------------
// SVD Line: 44747

//  <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTOPSEL
//    <name> PRSSTOPSEL </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x40046050) \nPRS Stop Select\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_PRSSEL ) </loc>
//      <o.9..6> PRSSTOPSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------  Field Item: LETIMER0_PRSSEL_PRSCLEARSEL  ----------------------------
// SVD Line: 44816

//  <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSCLEARSEL
//    <name> PRSCLEARSEL </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40046050) \nPRS Clear Select\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_PRSSEL ) </loc>
//      <o.15..12> PRSCLEARSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------  Field Item: LETIMER0_PRSSEL_PRSSTARTMODE  ----------------------------
// SVD Line: 44885

//  <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTARTMODE
//    <name> PRSSTARTMODE </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40046050) \nPRS Start Mode\n0 : NONE = PRS cannot start the LETIMER\n1 : RISING = Rising edge of selected PRS input can start the LETIMER\n2 : FALLING = Falling edge of selected PRS input can start the LETIMER\n3 : BOTH = Both the rising or falling edge of the selected PRS input can start the LETIMER </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_PRSSEL ) </loc>
//      <o.19..18> PRSSTARTMODE
//        <0=> 0: NONE = PRS cannot start the LETIMER
//        <1=> 1: RISING = Rising edge of selected PRS input can start the LETIMER
//        <2=> 2: FALLING = Falling edge of selected PRS input can start the LETIMER
//        <3=> 3: BOTH = Both the rising or falling edge of the selected PRS input can start the LETIMER
//    </combo>
//  </item>
//  


// -------------------------  Field Item: LETIMER0_PRSSEL_PRSSTOPMODE  ----------------------------
// SVD Line: 44914

//  <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTOPMODE
//    <name> PRSSTOPMODE </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x40046050) \nPRS Stop Mode\n0 : NONE = PRS cannot stop the LETIMER\n1 : RISING = Rising edge of selected PRS input can stop the LETIMER\n2 : FALLING = Falling edge of selected PRS input can stop the LETIMER\n3 : BOTH = Both the rising or falling edge of the selected PRS input can stop the LETIMER </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_PRSSEL ) </loc>
//      <o.23..22> PRSSTOPMODE
//        <0=> 0: NONE = PRS cannot stop the LETIMER
//        <1=> 1: RISING = Rising edge of selected PRS input can stop the LETIMER
//        <2=> 2: FALLING = Falling edge of selected PRS input can stop the LETIMER
//        <3=> 3: BOTH = Both the rising or falling edge of the selected PRS input can stop the LETIMER
//    </combo>
//  </item>
//  


// ------------------------  Field Item: LETIMER0_PRSSEL_PRSCLEARMODE  ----------------------------
// SVD Line: 44943

//  <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSCLEARMODE
//    <name> PRSCLEARMODE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40046050) \nPRS Clear Mode\n0 : NONE = PRS cannot clear the LETIMER\n1 : RISING = Rising edge of selected PRS input can clear the LETIMER\n2 : FALLING = Falling edge of selected PRS input can clear the LETIMER\n3 : BOTH = Both the rising or falling edge of the selected PRS input can clear the LETIMER </i>
//    <combo> 
//      <loc> ( (unsigned int) LETIMER0_PRSSEL ) </loc>
//      <o.27..26> PRSCLEARMODE
//        <0=> 0: NONE = PRS cannot clear the LETIMER
//        <1=> 1: RISING = Rising edge of selected PRS input can clear the LETIMER
//        <2=> 2: FALLING = Falling edge of selected PRS input can clear the LETIMER
//        <3=> 3: BOTH = Both the rising or falling edge of the selected PRS input can clear the LETIMER
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: LETIMER0_PRSSEL  --------------------------------
// SVD Line: 44669

//  <rtree> SFDITEM_REG__LETIMER0_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40046050) PRS Input Select Register </i>
//    <loc> ( (unsigned int)((LETIMER0_PRSSEL >> 0) & 0xFFFFFFFF), ((LETIMER0_PRSSEL = (LETIMER0_PRSSEL & ~(0xCCCF3CFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xCCCF3CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTARTSEL </item>
//    <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTOPSEL </item>
//    <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSCLEARSEL </item>
//    <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTARTMODE </item>
//    <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSSTOPMODE </item>
//    <item> SFDITEM_FIELD__LETIMER0_PRSSEL_PRSCLEARMODE </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: LETIMER0  -----------------------------------
// SVD Line: 43792

//  <view> LETIMER0
//    <name> LETIMER0 </name>
//    <item> SFDITEM_REG__LETIMER0_CTRL </item>
//    <item> SFDITEM_REG__LETIMER0_CMD </item>
//    <item> SFDITEM_REG__LETIMER0_STATUS </item>
//    <item> SFDITEM_REG__LETIMER0_CNT </item>
//    <item> SFDITEM_REG__LETIMER0_COMP0 </item>
//    <item> SFDITEM_REG__LETIMER0_COMP1 </item>
//    <item> SFDITEM_REG__LETIMER0_REP0 </item>
//    <item> SFDITEM_REG__LETIMER0_REP1 </item>
//    <item> SFDITEM_REG__LETIMER0_IF </item>
//    <item> SFDITEM_REG__LETIMER0_IFS </item>
//    <item> SFDITEM_REG__LETIMER0_IFC </item>
//    <item> SFDITEM_REG__LETIMER0_IEN </item>
//    <item> SFDITEM_REG__LETIMER0_SYNCBUSY </item>
//    <item> SFDITEM_REG__LETIMER0_ROUTEPEN </item>
//    <item> SFDITEM_REG__LETIMER0_ROUTELOC0 </item>
//    <item> SFDITEM_REG__LETIMER0_PRSSEL </item>
//  </view>
//  


// --------------------------  Register Item Address: CRYOTIMER_CTRL  -----------------------------
// SVD Line: 44990

unsigned int CRYOTIMER_CTRL __AT (0x4001E000);



// ------------------------------  Field Item: CRYOTIMER_CTRL_EN  ---------------------------------
// SVD Line: 44999

//  <item> SFDITEM_FIELD__CRYOTIMER_CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E000) Enable CRYOTIMER </i>
//    <check> 
//      <loc> ( (unsigned int) CRYOTIMER_CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: CRYOTIMER_CTRL_DEBUGRUN  ------------------------------
// SVD Line: 45006

//  <item> SFDITEM_FIELD__CRYOTIMER_CTRL_DEBUGRUN
//    <name> DEBUGRUN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E000) Debug Mode Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CRYOTIMER_CTRL ) </loc>
//      <o.1..1> DEBUGRUN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CRYOTIMER_CTRL_OSCSEL  -------------------------------
// SVD Line: 45013

//  <item> SFDITEM_FIELD__CRYOTIMER_CTRL_OSCSEL
//    <name> OSCSEL </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x4001E000) \nSelect Low Frequency Oscillator\n0 : LFRCO = Select Low Frequency RC Oscillator\n1 : LFXO = Select Low Frequency Crystal Oscillator\n2 : ULFRCO = Select Ultra Low Frequency RC Oscillator\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYOTIMER_CTRL ) </loc>
//      <o.3..2> OSCSEL
//        <0=> 0: LFRCO = Select Low Frequency RC Oscillator
//        <1=> 1: LFXO = Select Low Frequency Crystal Oscillator
//        <2=> 2: ULFRCO = Select Ultra Low Frequency RC Oscillator
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: CRYOTIMER_CTRL_PRESC  --------------------------------
// SVD Line: 45037

//  <item> SFDITEM_FIELD__CRYOTIMER_CTRL_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x4001E000) \nPrescaler Setting\n0 : DIV1 = LF Oscillator frequency undivided\n1 : DIV2 = LF Oscillator frequency divided by 2\n2 : DIV4 = LF Oscillator frequency divided by 4\n3 : DIV8 = LF Oscillator frequency divided by 8\n4 : DIV16 = LF Oscillator frequency divided by 16\n5 : DIV32 = LF Oscillator frequency divided by 32\n6 : DIV64 = LF Oscillator frequency divided by 64\n7 : DIV128 = LF Oscillator frequency divided by 128 </i>
//    <combo> 
//      <loc> ( (unsigned int) CRYOTIMER_CTRL ) </loc>
//      <o.7..5> PRESC
//        <0=> 0: DIV1 = LF Oscillator frequency undivided
//        <1=> 1: DIV2 = LF Oscillator frequency divided by 2
//        <2=> 2: DIV4 = LF Oscillator frequency divided by 4
//        <3=> 3: DIV8 = LF Oscillator frequency divided by 8
//        <4=> 4: DIV16 = LF Oscillator frequency divided by 16
//        <5=> 5: DIV32 = LF Oscillator frequency divided by 32
//        <6=> 6: DIV64 = LF Oscillator frequency divided by 64
//        <7=> 7: DIV128 = LF Oscillator frequency divided by 128
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: CRYOTIMER_CTRL  ---------------------------------
// SVD Line: 44990

//  <rtree> SFDITEM_REG__CRYOTIMER_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E000) Control Register </i>
//    <loc> ( (unsigned int)((CRYOTIMER_CTRL >> 0) & 0xFFFFFFFF), ((CRYOTIMER_CTRL = (CRYOTIMER_CTRL & ~(0xEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_CTRL_EN </item>
//    <item> SFDITEM_FIELD__CRYOTIMER_CTRL_DEBUGRUN </item>
//    <item> SFDITEM_FIELD__CRYOTIMER_CTRL_OSCSEL </item>
//    <item> SFDITEM_FIELD__CRYOTIMER_CTRL_PRESC </item>
//  </rtree>
//  


// -----------------------  Register Item Address: CRYOTIMER_PERIODSEL  ---------------------------
// SVD Line: 45088

unsigned int CRYOTIMER_PERIODSEL __AT (0x4001E004);



// ------------------------  Field Item: CRYOTIMER_PERIODSEL_PERIODSEL  ---------------------------
// SVD Line: 45097

//  <item> SFDITEM_FIELD__CRYOTIMER_PERIODSEL_PERIODSEL
//    <name> PERIODSEL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4001E004) Interrupts/Wakeup Events Period Setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRYOTIMER_PERIODSEL >> 0) & 0x3F), ((CRYOTIMER_PERIODSEL = (CRYOTIMER_PERIODSEL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: CRYOTIMER_PERIODSEL  ------------------------------
// SVD Line: 45088

//  <rtree> SFDITEM_REG__CRYOTIMER_PERIODSEL
//    <name> PERIODSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E004) Interrupt Duration </i>
//    <loc> ( (unsigned int)((CRYOTIMER_PERIODSEL >> 0) & 0xFFFFFFFF), ((CRYOTIMER_PERIODSEL = (CRYOTIMER_PERIODSEL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_PERIODSEL_PERIODSEL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYOTIMER_CNT  ------------------------------
// SVD Line: 45106

unsigned int CRYOTIMER_CNT __AT (0x4001E008);



// ------------------------------  Field Item: CRYOTIMER_CNT_CNT  ---------------------------------
// SVD Line: 45115

//  <item> SFDITEM_FIELD__CRYOTIMER_CNT_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E008) Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRYOTIMER_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: CRYOTIMER_CNT  ---------------------------------
// SVD Line: 45106

//  <rtree> SFDITEM_REG__CRYOTIMER_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E008) Counter Value </i>
//    <loc> ( (unsigned int)((CRYOTIMER_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_CNT_CNT </item>
//  </rtree>
//  


// ------------------------  Register Item Address: CRYOTIMER_EM4WUEN  ----------------------------
// SVD Line: 45124

unsigned int CRYOTIMER_EM4WUEN __AT (0x4001E00C);



// ---------------------------  Field Item: CRYOTIMER_EM4WUEN_EM4WU  ------------------------------
// SVD Line: 45133

//  <item> SFDITEM_FIELD__CRYOTIMER_EM4WUEN_EM4WU
//    <name> EM4WU </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E00C) EM4 Wake-up Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CRYOTIMER_EM4WUEN ) </loc>
//      <o.0..0> EM4WU
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: CRYOTIMER_EM4WUEN  -------------------------------
// SVD Line: 45124

//  <rtree> SFDITEM_REG__CRYOTIMER_EM4WUEN
//    <name> EM4WUEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E00C) Wake Up Enable </i>
//    <loc> ( (unsigned int)((CRYOTIMER_EM4WUEN >> 0) & 0xFFFFFFFF), ((CRYOTIMER_EM4WUEN = (CRYOTIMER_EM4WUEN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_EM4WUEN_EM4WU </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CRYOTIMER_IF  ------------------------------
// SVD Line: 45142

unsigned int CRYOTIMER_IF __AT (0x4001E010);



// -----------------------------  Field Item: CRYOTIMER_IF_PERIOD  --------------------------------
// SVD Line: 45151

//  <item> SFDITEM_FIELD__CRYOTIMER_IF_PERIOD
//    <name> PERIOD </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001E010) Wakeup Event/Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) CRYOTIMER_IF ) </loc>
//      <o.0..0> PERIOD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CRYOTIMER_IF  ----------------------------------
// SVD Line: 45142

//  <rtree> SFDITEM_REG__CRYOTIMER_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E010) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((CRYOTIMER_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_IF_PERIOD </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYOTIMER_IFS  ------------------------------
// SVD Line: 45160

unsigned int CRYOTIMER_IFS __AT (0x4001E014);



// ----------------------------  Field Item: CRYOTIMER_IFS_PERIOD  --------------------------------
// SVD Line: 45169

//  <item> SFDITEM_FIELD__CRYOTIMER_IFS_PERIOD
//    <name> PERIOD </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001E014) Set PERIOD Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CRYOTIMER_IFS ) </loc>
//      <o.0..0> PERIOD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CRYOTIMER_IFS  ---------------------------------
// SVD Line: 45160

//  <rtree> SFDITEM_REG__CRYOTIMER_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001E014) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((CRYOTIMER_IFS >> 0) & 0xFFFFFFFF), ((CRYOTIMER_IFS = (CRYOTIMER_IFS & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_IFS_PERIOD </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYOTIMER_IFC  ------------------------------
// SVD Line: 45178

unsigned int CRYOTIMER_IFC __AT (0x4001E018);



// ----------------------------  Field Item: CRYOTIMER_IFC_PERIOD  --------------------------------
// SVD Line: 45187

//  <item> SFDITEM_FIELD__CRYOTIMER_IFC_PERIOD
//    <name> PERIOD </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001E018) Clear PERIOD Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CRYOTIMER_IFC ) </loc>
//      <o.0..0> PERIOD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CRYOTIMER_IFC  ---------------------------------
// SVD Line: 45178

//  <rtree> SFDITEM_REG__CRYOTIMER_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001E018) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((CRYOTIMER_IFC >> 0) & 0xFFFFFFFF), ((CRYOTIMER_IFC = (CRYOTIMER_IFC & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_IFC_PERIOD </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRYOTIMER_IEN  ------------------------------
// SVD Line: 45196

unsigned int CRYOTIMER_IEN __AT (0x4001E01C);



// ----------------------------  Field Item: CRYOTIMER_IEN_PERIOD  --------------------------------
// SVD Line: 45205

//  <item> SFDITEM_FIELD__CRYOTIMER_IEN_PERIOD
//    <name> PERIOD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E01C) PERIOD Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CRYOTIMER_IEN ) </loc>
//      <o.0..0> PERIOD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CRYOTIMER_IEN  ---------------------------------
// SVD Line: 45196

//  <rtree> SFDITEM_REG__CRYOTIMER_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E01C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((CRYOTIMER_IEN >> 0) & 0xFFFFFFFF), ((CRYOTIMER_IEN = (CRYOTIMER_IEN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRYOTIMER_IEN_PERIOD </item>
//  </rtree>
//  


// -------------------------------  Peripheral View: CRYOTIMER  -----------------------------------
// SVD Line: 44976

//  <view> CRYOTIMER
//    <name> CRYOTIMER </name>
//    <item> SFDITEM_REG__CRYOTIMER_CTRL </item>
//    <item> SFDITEM_REG__CRYOTIMER_PERIODSEL </item>
//    <item> SFDITEM_REG__CRYOTIMER_CNT </item>
//    <item> SFDITEM_REG__CRYOTIMER_EM4WUEN </item>
//    <item> SFDITEM_REG__CRYOTIMER_IF </item>
//    <item> SFDITEM_REG__CRYOTIMER_IFS </item>
//    <item> SFDITEM_REG__CRYOTIMER_IFC </item>
//    <item> SFDITEM_REG__CRYOTIMER_IEN </item>
//  </view>
//  


// ----------------------------  Register Item Address: PCNT0_CTRL  -------------------------------
// SVD Line: 45230

unsigned int PCNT0_CTRL __AT (0x4004E000);



// -------------------------------  Field Item: PCNT0_CTRL_MODE  ----------------------------------
// SVD Line: 45239

//  <item> SFDITEM_FIELD__PCNT0_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4004E000) \nMode Select\n0 : DISABLE = The module is disabled.\n1 : OVSSINGLE = Single input LFACLK oversampling mode (available in EM0-EM3).\n2 : EXTCLKSINGLE = Externally clocked single input counter mode (available in EM0-EM3).\n3 : EXTCLKQUAD = Externally clocked quadrature decoder mode (available in EM0-EM3).\n4 : OVSQUAD1X = LFACLK oversampling quadrature decoder 1X mode (available in EM0-EM3).\n5 : OVSQUAD2X = LFACLK oversampling quadrature decoder 2X mode (available in EM0-EM3).\n6 : OVSQUAD4X = LFACLK oversampling quadrature decoder 4X mode (available in EM0-EM3).\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.2..0> MODE
//        <0=> 0: DISABLE = The module is disabled.
//        <1=> 1: OVSSINGLE = Single input LFACLK oversampling mode (available in EM0-EM3).
//        <2=> 2: EXTCLKSINGLE = Externally clocked single input counter mode (available in EM0-EM3).
//        <3=> 3: EXTCLKQUAD = Externally clocked quadrature decoder mode (available in EM0-EM3).
//        <4=> 4: OVSQUAD1X = LFACLK oversampling quadrature decoder 1X mode (available in EM0-EM3).
//        <5=> 5: OVSQUAD2X = LFACLK oversampling quadrature decoder 2X mode (available in EM0-EM3).
//        <6=> 6: OVSQUAD4X = LFACLK oversampling quadrature decoder 4X mode (available in EM0-EM3).
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_CTRL_FILT  ----------------------------------
// SVD Line: 45283

//  <item> SFDITEM_FIELD__PCNT0_CTRL_FILT
//    <name> FILT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4004E000) Enable Digital Pulse Width Filter </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.3..3> FILT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_CTRL_RSTEN  ----------------------------------
// SVD Line: 45290

//  <item> SFDITEM_FIELD__PCNT0_CTRL_RSTEN
//    <name> RSTEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4004E000) Enable PCNT Clock Domain Reset </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.4..4> RSTEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_CTRL_CNTRSTEN  --------------------------------
// SVD Line: 45297

//  <item> SFDITEM_FIELD__PCNT0_CTRL_CNTRSTEN
//    <name> CNTRSTEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4004E000) Enable CNT Reset </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.5..5> CNTRSTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PCNT0_CTRL_AUXCNTRSTEN  -------------------------------
// SVD Line: 45304

//  <item> SFDITEM_FIELD__PCNT0_CTRL_AUXCNTRSTEN
//    <name> AUXCNTRSTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4004E000) Enable AUXCNT Reset </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.6..6> AUXCNTRSTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PCNT0_CTRL_DEBUGHALT  --------------------------------
// SVD Line: 45311

//  <item> SFDITEM_FIELD__PCNT0_CTRL_DEBUGHALT
//    <name> DEBUGHALT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004E000) Debug Mode Halt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.7..7> DEBUGHALT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_CTRL_HYST  ----------------------------------
// SVD Line: 45318

//  <item> SFDITEM_FIELD__PCNT0_CTRL_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4004E000) Enable Hysteresis </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.8..8> HYST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_CTRL_S1CDIR  ---------------------------------
// SVD Line: 45325

//  <item> SFDITEM_FIELD__PCNT0_CTRL_S1CDIR
//    <name> S1CDIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4004E000) Count Direction Determined By S1 </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.9..9> S1CDIR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_CTRL_CNTEV  ----------------------------------
// SVD Line: 45332

//  <item> SFDITEM_FIELD__PCNT0_CTRL_CNTEV
//    <name> CNTEV </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x4004E000) \nControls When the Counter Counts\n0 : BOTH = Counts up on up-count and down on down-count events.\n1 : UP = Only counts up on up-count events.\n2 : DOWN = Only counts down on down-count events.\n3 : NONE = Never counts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.11..10> CNTEV
//        <0=> 0: BOTH = Counts up on up-count and down on down-count events.
//        <1=> 1: UP = Only counts up on up-count events.
//        <2=> 2: DOWN = Only counts down on down-count events.
//        <3=> 3: NONE = Never counts.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_CTRL_AUXCNTEV  --------------------------------
// SVD Line: 45361

//  <item> SFDITEM_FIELD__PCNT0_CTRL_AUXCNTEV
//    <name> AUXCNTEV </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4004E000) \nControls When the Auxiliary Counter Counts\n0 : NONE = Never counts.\n1 : UP = Counts up on up-count events.\n2 : DOWN = Counts up on down-count events.\n3 : BOTH = Counts up on both up-count and down-count events. </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.13..12> AUXCNTEV
//        <0=> 0: NONE = Never counts.
//        <1=> 1: UP = Counts up on up-count events.
//        <2=> 2: DOWN = Counts up on down-count events.
//        <3=> 3: BOTH = Counts up on both up-count and down-count events.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_CTRL_CNTDIR  ---------------------------------
// SVD Line: 45390

//  <item> SFDITEM_FIELD__PCNT0_CTRL_CNTDIR
//    <name> CNTDIR </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004E000) Non-Quadrature Mode Counter Direction Control </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.14..14> CNTDIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_CTRL_EDGE  ----------------------------------
// SVD Line: 45397

//  <item> SFDITEM_FIELD__PCNT0_CTRL_EDGE
//    <name> EDGE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004E000) Edge Select </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.15..15> EDGE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_CTRL_TCCMODE  ---------------------------------
// SVD Line: 45404

//  <item> SFDITEM_FIELD__PCNT0_CTRL_TCCMODE
//    <name> TCCMODE </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x4004E000) \nSets the Mode for Triggered Compare and Clear\n0 : DISABLED = Triggered compare and clear not enabled.\n1 : LFA = Compare and clear performed on each (optionally prescaled) LFA clock cycle.\n2 : PRS = Compare and clear performed on positive PRS edges.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.17..16> TCCMODE
//        <0=> 0: DISABLED = Triggered compare and clear not enabled.
//        <1=> 1: LFA = Compare and clear performed on each (optionally prescaled) LFA clock cycle.
//        <2=> 2: PRS = Compare and clear performed on positive PRS edges.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_CTRL_TCCPRESC  --------------------------------
// SVD Line: 45428

//  <item> SFDITEM_FIELD__PCNT0_CTRL_TCCPRESC
//    <name> TCCPRESC </name>
//    <rw> 
//    <i> [Bits 20..19] RW (@ 0x4004E000) \nSet the LFA Prescaler for Triggered Compare and Clear\n0 : DIV1 = Compare and clear event each LFA cycle.\n1 : DIV2 = Compare and clear performed on every other LFA cycle.\n2 : DIV4 = Compare and clear performed on every 4th LFA cycle.\n3 : DIV8 = Compare and clear performed on every 8th LFA cycle. </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.20..19> TCCPRESC
//        <0=> 0: DIV1 = Compare and clear event each LFA cycle.
//        <1=> 1: DIV2 = Compare and clear performed on every other LFA cycle.
//        <2=> 2: DIV4 = Compare and clear performed on every 4th LFA cycle.
//        <3=> 3: DIV8 = Compare and clear performed on every 8th LFA cycle.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_CTRL_TCCCOMP  ---------------------------------
// SVD Line: 45457

//  <item> SFDITEM_FIELD__PCNT0_CTRL_TCCCOMP
//    <name> TCCCOMP </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x4004E000) \nTriggered Compare and Clear Compare Mode\n0 : LTOE = Compare match if PCNT_CNT is less than, or equal to PCNT_TOP.\n1 : GTOE = Compare match if PCNT_CNT is greater than or equal to PCNT_TOP.\n2 : RANGE = Compare match if PCNT_CNT is less than, or equal to PCNT_TOP[15:8]], and greater than, or equal to PCNT_TOP[7:0].\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.23..22> TCCCOMP
//        <0=> 0: LTOE = Compare match if PCNT_CNT is less than, or equal to PCNT_TOP.
//        <1=> 1: GTOE = Compare match if PCNT_CNT is greater than or equal to PCNT_TOP.
//        <2=> 2: RANGE = Compare match if PCNT_CNT is less than, or equal to PCNT_TOP[15:8]], and greater than, or equal to PCNT_TOP[7:0].
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PCNT0_CTRL_PRSGATEEN  --------------------------------
// SVD Line: 45481

//  <item> SFDITEM_FIELD__PCNT0_CTRL_PRSGATEEN
//    <name> PRSGATEEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4004E000) PRS Gate Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.24..24> PRSGATEEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PCNT0_CTRL_TCCPRSPOL  --------------------------------
// SVD Line: 45488

//  <item> SFDITEM_FIELD__PCNT0_CTRL_TCCPRSPOL
//    <name> TCCPRSPOL </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4004E000) TCC PRS Polarity Select </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.25..25> TCCPRSPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PCNT0_CTRL_TCCPRSSEL  --------------------------------
// SVD Line: 45495

//  <item> SFDITEM_FIELD__PCNT0_CTRL_TCCPRSSEL
//    <name> TCCPRSSEL </name>
//    <rw> 
//    <i> [Bits 29..26] RW (@ 0x4004E000) \nTCC PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected.\n1 : PRSCH1 = PRS Channel 1 selected.\n2 : PRSCH2 = PRS Channel 2 selected.\n3 : PRSCH3 = PRS Channel 3 selected.\n4 : PRSCH4 = PRS Channel 4 selected.\n5 : PRSCH5 = PRS Channel 5 selected.\n6 : PRSCH6 = PRS Channel 6 selected.\n7 : PRSCH7 = PRS Channel 7 selected.\n8 : PRSCH8 = PRS Channel 8 selected.\n9 : PRSCH9 = PRS Channel 9 selected.\n10 : PRSCH10 = PRS Channel 10 selected.\n11 : PRSCH11 = PRS Channel 11 selected.\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.29..26> TCCPRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected.
//        <1=> 1: PRSCH1 = PRS Channel 1 selected.
//        <2=> 2: PRSCH2 = PRS Channel 2 selected.
//        <3=> 3: PRSCH3 = PRS Channel 3 selected.
//        <4=> 4: PRSCH4 = PRS Channel 4 selected.
//        <5=> 5: PRSCH5 = PRS Channel 5 selected.
//        <6=> 6: PRSCH6 = PRS Channel 6 selected.
//        <7=> 7: PRSCH7 = PRS Channel 7 selected.
//        <8=> 8: PRSCH8 = PRS Channel 8 selected.
//        <9=> 9: PRSCH9 = PRS Channel 9 selected.
//        <10=> 10: PRSCH10 = PRS Channel 10 selected.
//        <11=> 11: PRSCH11 = PRS Channel 11 selected.
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PCNT0_CTRL_TOPBHFSEL  --------------------------------
// SVD Line: 45564

//  <item> SFDITEM_FIELD__PCNT0_CTRL_TOPBHFSEL
//    <name> TOPBHFSEL </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4004E000) TOPB High Frequency Value Select </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CTRL ) </loc>
//      <o.31..31> TOPBHFSEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PCNT0_CTRL  -----------------------------------
// SVD Line: 45230

//  <rtree> SFDITEM_REG__PCNT0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004E000) Control Register </i>
//    <loc> ( (unsigned int)((PCNT0_CTRL >> 0) & 0xFFFFFFFF), ((PCNT0_CTRL = (PCNT0_CTRL & ~(0xBFDBFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBFDBFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_FILT </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_RSTEN </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_CNTRSTEN </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_AUXCNTRSTEN </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_DEBUGHALT </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_HYST </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_S1CDIR </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_CNTEV </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_AUXCNTEV </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_CNTDIR </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_EDGE </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_TCCMODE </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_TCCPRESC </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_TCCCOMP </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_PRSGATEEN </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_TCCPRSPOL </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_TCCPRSSEL </item>
//    <item> SFDITEM_FIELD__PCNT0_CTRL_TOPBHFSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCNT0_CMD  --------------------------------
// SVD Line: 45573

unsigned int PCNT0_CMD __AT (0x4004E004);



// ------------------------------  Field Item: PCNT0_CMD_LCNTIM  ----------------------------------
// SVD Line: 45582

//  <item> SFDITEM_FIELD__PCNT0_CMD_LCNTIM
//    <name> LCNTIM </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004E004) Load CNT Immediately </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CMD ) </loc>
//      <o.0..0> LCNTIM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_CMD_LTOPBIM  ---------------------------------
// SVD Line: 45589

//  <item> SFDITEM_FIELD__PCNT0_CMD_LTOPBIM
//    <name> LTOPBIM </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4004E004) Load TOPB Immediately </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_CMD ) </loc>
//      <o.1..1> LTOPBIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCNT0_CMD  -----------------------------------
// SVD Line: 45573

//  <rtree> SFDITEM_REG__PCNT0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004E004) Command Register </i>
//    <loc> ( (unsigned int)((PCNT0_CMD >> 0) & 0xFFFFFFFF), ((PCNT0_CMD = (PCNT0_CMD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_CMD_LCNTIM </item>
//    <item> SFDITEM_FIELD__PCNT0_CMD_LTOPBIM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PCNT0_STATUS  ------------------------------
// SVD Line: 45598

unsigned int PCNT0_STATUS __AT (0x4004E008);



// ------------------------------  Field Item: PCNT0_STATUS_DIR  ----------------------------------
// SVD Line: 45607

//  <item> SFDITEM_FIELD__PCNT0_STATUS_DIR
//    <name> DIR </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4004E008) Current Counter Direction </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_STATUS ) </loc>
//      <o.0..0> DIR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PCNT0_STATUS  ----------------------------------
// SVD Line: 45598

//  <rtree> SFDITEM_REG__PCNT0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004E008) Status Register </i>
//    <loc> ( (unsigned int)((PCNT0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PCNT0_STATUS_DIR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCNT0_CNT  --------------------------------
// SVD Line: 45616

unsigned int PCNT0_CNT __AT (0x4004E00C);



// --------------------------------  Field Item: PCNT0_CNT_CNT  -----------------------------------
// SVD Line: 45625

//  <item> SFDITEM_FIELD__PCNT0_CNT_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4004E00C) Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PCNT0_CNT >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PCNT0_CNT  -----------------------------------
// SVD Line: 45616

//  <rtree> SFDITEM_REG__PCNT0_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004E00C) Counter Value Register </i>
//    <loc> ( (unsigned int)((PCNT0_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PCNT0_CNT_CNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCNT0_TOP  --------------------------------
// SVD Line: 45634

unsigned int PCNT0_TOP __AT (0x4004E010);



// --------------------------------  Field Item: PCNT0_TOP_TOP  -----------------------------------
// SVD Line: 45643

//  <item> SFDITEM_FIELD__PCNT0_TOP_TOP
//    <name> TOP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4004E010) Counter Top Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PCNT0_TOP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PCNT0_TOP  -----------------------------------
// SVD Line: 45634

//  <rtree> SFDITEM_REG__PCNT0_TOP
//    <name> TOP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004E010) Top Value Register </i>
//    <loc> ( (unsigned int)((PCNT0_TOP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PCNT0_TOP_TOP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCNT0_TOPB  -------------------------------
// SVD Line: 45652

unsigned int PCNT0_TOPB __AT (0x4004E014);



// -------------------------------  Field Item: PCNT0_TOPB_TOPB  ----------------------------------
// SVD Line: 45661

//  <item> SFDITEM_FIELD__PCNT0_TOPB_TOPB
//    <name> TOPB </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004E014) Counter Top Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((PCNT0_TOPB >> 0) & 0xFFFF), ((PCNT0_TOPB = (PCNT0_TOPB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PCNT0_TOPB  -----------------------------------
// SVD Line: 45652

//  <rtree> SFDITEM_REG__PCNT0_TOPB
//    <name> TOPB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004E014) Top Value Buffer Register </i>
//    <loc> ( (unsigned int)((PCNT0_TOPB >> 0) & 0xFFFFFFFF), ((PCNT0_TOPB = (PCNT0_TOPB & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_TOPB_TOPB </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PCNT0_IF  --------------------------------
// SVD Line: 45670

unsigned int PCNT0_IF __AT (0x4004E018);



// ---------------------------------  Field Item: PCNT0_IF_UF  ------------------------------------
// SVD Line: 45679

//  <item> SFDITEM_FIELD__PCNT0_IF_UF
//    <name> UF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4004E018) Underflow Interrupt Read Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IF ) </loc>
//      <o.0..0> UF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: PCNT0_IF_OF  ------------------------------------
// SVD Line: 45686

//  <item> SFDITEM_FIELD__PCNT0_IF_OF
//    <name> OF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4004E018) Overflow Interrupt Read Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IF ) </loc>
//      <o.1..1> OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_IF_DIRCNG  ----------------------------------
// SVD Line: 45693

//  <item> SFDITEM_FIELD__PCNT0_IF_DIRCNG
//    <name> DIRCNG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4004E018) Direction Change Detect Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IF ) </loc>
//      <o.2..2> DIRCNG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_IF_AUXOF  -----------------------------------
// SVD Line: 45700

//  <item> SFDITEM_FIELD__PCNT0_IF_AUXOF
//    <name> AUXOF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4004E018) Auxiliary Overflow Interrupt Read Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IF ) </loc>
//      <o.3..3> AUXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PCNT0_IF_TCC  ------------------------------------
// SVD Line: 45707

//  <item> SFDITEM_FIELD__PCNT0_IF_TCC
//    <name> TCC </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4004E018) Triggered Compare Interrupt Read Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IF ) </loc>
//      <o.4..4> TCC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_IF_OQSTERR  ----------------------------------
// SVD Line: 45714

//  <item> SFDITEM_FIELD__PCNT0_IF_OQSTERR
//    <name> OQSTERR </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4004E018) Oversampling Quadrature State Error Interrupt </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IF ) </loc>
//      <o.5..5> OQSTERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCNT0_IF  ------------------------------------
// SVD Line: 45670

//  <rtree> SFDITEM_REG__PCNT0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004E018) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((PCNT0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PCNT0_IF_UF </item>
//    <item> SFDITEM_FIELD__PCNT0_IF_OF </item>
//    <item> SFDITEM_FIELD__PCNT0_IF_DIRCNG </item>
//    <item> SFDITEM_FIELD__PCNT0_IF_AUXOF </item>
//    <item> SFDITEM_FIELD__PCNT0_IF_TCC </item>
//    <item> SFDITEM_FIELD__PCNT0_IF_OQSTERR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCNT0_IFS  --------------------------------
// SVD Line: 45723

unsigned int PCNT0_IFS __AT (0x4004E01C);



// --------------------------------  Field Item: PCNT0_IFS_UF  ------------------------------------
// SVD Line: 45732

//  <item> SFDITEM_FIELD__PCNT0_IFS_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004E01C) Set UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFS ) </loc>
//      <o.0..0> UF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PCNT0_IFS_OF  ------------------------------------
// SVD Line: 45739

//  <item> SFDITEM_FIELD__PCNT0_IFS_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4004E01C) Set OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFS ) </loc>
//      <o.1..1> OF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_IFS_DIRCNG  ----------------------------------
// SVD Line: 45746

//  <item> SFDITEM_FIELD__PCNT0_IFS_DIRCNG
//    <name> DIRCNG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4004E01C) Set DIRCNG Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFS ) </loc>
//      <o.2..2> DIRCNG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_IFS_AUXOF  ----------------------------------
// SVD Line: 45753

//  <item> SFDITEM_FIELD__PCNT0_IFS_AUXOF
//    <name> AUXOF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4004E01C) Set AUXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFS ) </loc>
//      <o.3..3> AUXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PCNT0_IFS_TCC  -----------------------------------
// SVD Line: 45760

//  <item> SFDITEM_FIELD__PCNT0_IFS_TCC
//    <name> TCC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4004E01C) Set TCC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFS ) </loc>
//      <o.4..4> TCC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_IFS_OQSTERR  ---------------------------------
// SVD Line: 45767

//  <item> SFDITEM_FIELD__PCNT0_IFS_OQSTERR
//    <name> OQSTERR </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4004E01C) Set OQSTERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFS ) </loc>
//      <o.5..5> OQSTERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCNT0_IFS  -----------------------------------
// SVD Line: 45723

//  <rtree> SFDITEM_REG__PCNT0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004E01C) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((PCNT0_IFS >> 0) & 0xFFFFFFFF), ((PCNT0_IFS = (PCNT0_IFS & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_IFS_UF </item>
//    <item> SFDITEM_FIELD__PCNT0_IFS_OF </item>
//    <item> SFDITEM_FIELD__PCNT0_IFS_DIRCNG </item>
//    <item> SFDITEM_FIELD__PCNT0_IFS_AUXOF </item>
//    <item> SFDITEM_FIELD__PCNT0_IFS_TCC </item>
//    <item> SFDITEM_FIELD__PCNT0_IFS_OQSTERR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCNT0_IFC  --------------------------------
// SVD Line: 45776

unsigned int PCNT0_IFC __AT (0x4004E020);



// --------------------------------  Field Item: PCNT0_IFC_UF  ------------------------------------
// SVD Line: 45785

//  <item> SFDITEM_FIELD__PCNT0_IFC_UF
//    <name> UF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004E020) Clear UF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFC ) </loc>
//      <o.0..0> UF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PCNT0_IFC_OF  ------------------------------------
// SVD Line: 45792

//  <item> SFDITEM_FIELD__PCNT0_IFC_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4004E020) Clear OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFC ) </loc>
//      <o.1..1> OF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_IFC_DIRCNG  ----------------------------------
// SVD Line: 45799

//  <item> SFDITEM_FIELD__PCNT0_IFC_DIRCNG
//    <name> DIRCNG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4004E020) Clear DIRCNG Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFC ) </loc>
//      <o.2..2> DIRCNG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_IFC_AUXOF  ----------------------------------
// SVD Line: 45806

//  <item> SFDITEM_FIELD__PCNT0_IFC_AUXOF
//    <name> AUXOF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4004E020) Clear AUXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFC ) </loc>
//      <o.3..3> AUXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PCNT0_IFC_TCC  -----------------------------------
// SVD Line: 45813

//  <item> SFDITEM_FIELD__PCNT0_IFC_TCC
//    <name> TCC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4004E020) Clear TCC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFC ) </loc>
//      <o.4..4> TCC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_IFC_OQSTERR  ---------------------------------
// SVD Line: 45820

//  <item> SFDITEM_FIELD__PCNT0_IFC_OQSTERR
//    <name> OQSTERR </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4004E020) Clear OQSTERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IFC ) </loc>
//      <o.5..5> OQSTERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCNT0_IFC  -----------------------------------
// SVD Line: 45776

//  <rtree> SFDITEM_REG__PCNT0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004E020) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((PCNT0_IFC >> 0) & 0xFFFFFFFF), ((PCNT0_IFC = (PCNT0_IFC & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_IFC_UF </item>
//    <item> SFDITEM_FIELD__PCNT0_IFC_OF </item>
//    <item> SFDITEM_FIELD__PCNT0_IFC_DIRCNG </item>
//    <item> SFDITEM_FIELD__PCNT0_IFC_AUXOF </item>
//    <item> SFDITEM_FIELD__PCNT0_IFC_TCC </item>
//    <item> SFDITEM_FIELD__PCNT0_IFC_OQSTERR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCNT0_IEN  --------------------------------
// SVD Line: 45829

unsigned int PCNT0_IEN __AT (0x4004E024);



// --------------------------------  Field Item: PCNT0_IEN_UF  ------------------------------------
// SVD Line: 45838

//  <item> SFDITEM_FIELD__PCNT0_IEN_UF
//    <name> UF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004E024) UF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IEN ) </loc>
//      <o.0..0> UF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PCNT0_IEN_OF  ------------------------------------
// SVD Line: 45845

//  <item> SFDITEM_FIELD__PCNT0_IEN_OF
//    <name> OF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004E024) OF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IEN ) </loc>
//      <o.1..1> OF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_IEN_DIRCNG  ----------------------------------
// SVD Line: 45852

//  <item> SFDITEM_FIELD__PCNT0_IEN_DIRCNG
//    <name> DIRCNG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004E024) DIRCNG Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IEN ) </loc>
//      <o.2..2> DIRCNG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCNT0_IEN_AUXOF  ----------------------------------
// SVD Line: 45859

//  <item> SFDITEM_FIELD__PCNT0_IEN_AUXOF
//    <name> AUXOF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4004E024) AUXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IEN ) </loc>
//      <o.3..3> AUXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: PCNT0_IEN_TCC  -----------------------------------
// SVD Line: 45866

//  <item> SFDITEM_FIELD__PCNT0_IEN_TCC
//    <name> TCC </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4004E024) TCC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IEN ) </loc>
//      <o.4..4> TCC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PCNT0_IEN_OQSTERR  ---------------------------------
// SVD Line: 45873

//  <item> SFDITEM_FIELD__PCNT0_IEN_OQSTERR
//    <name> OQSTERR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4004E024) OQSTERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_IEN ) </loc>
//      <o.5..5> OQSTERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCNT0_IEN  -----------------------------------
// SVD Line: 45829

//  <rtree> SFDITEM_REG__PCNT0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004E024) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((PCNT0_IEN >> 0) & 0xFFFFFFFF), ((PCNT0_IEN = (PCNT0_IEN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_IEN_UF </item>
//    <item> SFDITEM_FIELD__PCNT0_IEN_OF </item>
//    <item> SFDITEM_FIELD__PCNT0_IEN_DIRCNG </item>
//    <item> SFDITEM_FIELD__PCNT0_IEN_AUXOF </item>
//    <item> SFDITEM_FIELD__PCNT0_IEN_TCC </item>
//    <item> SFDITEM_FIELD__PCNT0_IEN_OQSTERR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PCNT0_ROUTELOC0  -----------------------------
// SVD Line: 45882

unsigned int PCNT0_ROUTELOC0 __AT (0x4004E02C);



// ---------------------------  Field Item: PCNT0_ROUTELOC0_S0INLOC  ------------------------------
// SVD Line: 45891

//  <item> SFDITEM_FIELD__PCNT0_ROUTELOC0_S0INLOC
//    <name> S0INLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004E02C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_ROUTELOC0 ) </loc>
//      <o.5..0> S0INLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PCNT0_ROUTELOC0_S1INLOC  ------------------------------
// SVD Line: 46060

//  <item> SFDITEM_FIELD__PCNT0_ROUTELOC0_S1INLOC
//    <name> S1INLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x4004E02C) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_ROUTELOC0 ) </loc>
//      <o.13..8> S1INLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PCNT0_ROUTELOC0  --------------------------------
// SVD Line: 45882

//  <rtree> SFDITEM_REG__PCNT0_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004E02C) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((PCNT0_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((PCNT0_ROUTELOC0 = (PCNT0_ROUTELOC0 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_ROUTELOC0_S0INLOC </item>
//    <item> SFDITEM_FIELD__PCNT0_ROUTELOC0_S1INLOC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PCNT0_FREEZE  ------------------------------
// SVD Line: 46231

unsigned int PCNT0_FREEZE __AT (0x4004E040);



// ---------------------------  Field Item: PCNT0_FREEZE_REGFREEZE  -------------------------------
// SVD Line: 46240

//  <item> SFDITEM_FIELD__PCNT0_FREEZE_REGFREEZE
//    <name> REGFREEZE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004E040) Register Update Freeze </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_FREEZE ) </loc>
//      <o.0..0> REGFREEZE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PCNT0_FREEZE  ----------------------------------
// SVD Line: 46231

//  <rtree> SFDITEM_REG__PCNT0_FREEZE
//    <name> FREEZE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004E040) Freeze Register </i>
//    <loc> ( (unsigned int)((PCNT0_FREEZE >> 0) & 0xFFFFFFFF), ((PCNT0_FREEZE = (PCNT0_FREEZE & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_FREEZE_REGFREEZE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PCNT0_SYNCBUSY  -----------------------------
// SVD Line: 46249

unsigned int PCNT0_SYNCBUSY __AT (0x4004E044);



// -----------------------------  Field Item: PCNT0_SYNCBUSY_CTRL  --------------------------------
// SVD Line: 46258

//  <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_CTRL
//    <name> CTRL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4004E044) CTRL Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_SYNCBUSY ) </loc>
//      <o.0..0> CTRL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_SYNCBUSY_CMD  ---------------------------------
// SVD Line: 46265

//  <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_CMD
//    <name> CMD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4004E044) CMD Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_SYNCBUSY ) </loc>
//      <o.1..1> CMD
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_SYNCBUSY_TOPB  --------------------------------
// SVD Line: 46272

//  <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_TOPB
//    <name> TOPB </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4004E044) TOPB Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_SYNCBUSY ) </loc>
//      <o.2..2> TOPB
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PCNT0_SYNCBUSY_OVSCFG  -------------------------------
// SVD Line: 46279

//  <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_OVSCFG
//    <name> OVSCFG </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4004E044) OVSCFG Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_SYNCBUSY ) </loc>
//      <o.3..3> OVSCFG
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: PCNT0_SYNCBUSY  ---------------------------------
// SVD Line: 46249

//  <rtree> SFDITEM_REG__PCNT0_SYNCBUSY
//    <name> SYNCBUSY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004E044) Synchronization Busy Register </i>
//    <loc> ( (unsigned int)((PCNT0_SYNCBUSY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_CTRL </item>
//    <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_CMD </item>
//    <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_TOPB </item>
//    <item> SFDITEM_FIELD__PCNT0_SYNCBUSY_OVSCFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PCNT0_AUXCNT  ------------------------------
// SVD Line: 46288

unsigned int PCNT0_AUXCNT __AT (0x4004E064);



// -----------------------------  Field Item: PCNT0_AUXCNT_AUXCNT  --------------------------------
// SVD Line: 46297

//  <item> SFDITEM_FIELD__PCNT0_AUXCNT_AUXCNT
//    <name> AUXCNT </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4004E064) Auxiliary Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PCNT0_AUXCNT >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: PCNT0_AUXCNT  ----------------------------------
// SVD Line: 46288

//  <rtree> SFDITEM_REG__PCNT0_AUXCNT
//    <name> AUXCNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004E064) Auxiliary Counter Value Register </i>
//    <loc> ( (unsigned int)((PCNT0_AUXCNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PCNT0_AUXCNT_AUXCNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PCNT0_INPUT  -------------------------------
// SVD Line: 46306

unsigned int PCNT0_INPUT __AT (0x4004E068);



// ----------------------------  Field Item: PCNT0_INPUT_S0PRSSEL  --------------------------------
// SVD Line: 46315

//  <item> SFDITEM_FIELD__PCNT0_INPUT_S0PRSSEL
//    <name> S0PRSSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004E068) \nS0IN PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected.\n1 : PRSCH1 = PRS Channel 1 selected.\n2 : PRSCH2 = PRS Channel 2 selected.\n3 : PRSCH3 = PRS Channel 3 selected.\n4 : PRSCH4 = PRS Channel 4 selected.\n5 : PRSCH5 = PRS Channel 5 selected.\n6 : PRSCH6 = PRS Channel 6 selected.\n7 : PRSCH7 = PRS Channel 7 selected.\n8 : PRSCH8 = PRS Channel 8 selected.\n9 : PRSCH9 = PRS Channel 9 selected.\n10 : PRSCH10 = PRS Channel 10 selected.\n11 : PRSCH11 = PRS Channel 11 selected.\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_INPUT ) </loc>
//      <o.3..0> S0PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected.
//        <1=> 1: PRSCH1 = PRS Channel 1 selected.
//        <2=> 2: PRSCH2 = PRS Channel 2 selected.
//        <3=> 3: PRSCH3 = PRS Channel 3 selected.
//        <4=> 4: PRSCH4 = PRS Channel 4 selected.
//        <5=> 5: PRSCH5 = PRS Channel 5 selected.
//        <6=> 6: PRSCH6 = PRS Channel 6 selected.
//        <7=> 7: PRSCH7 = PRS Channel 7 selected.
//        <8=> 8: PRSCH8 = PRS Channel 8 selected.
//        <9=> 9: PRSCH9 = PRS Channel 9 selected.
//        <10=> 10: PRSCH10 = PRS Channel 10 selected.
//        <11=> 11: PRSCH11 = PRS Channel 11 selected.
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_INPUT_S0PRSEN  --------------------------------
// SVD Line: 46384

//  <item> SFDITEM_FIELD__PCNT0_INPUT_S0PRSEN
//    <name> S0PRSEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4004E068) S0IN PRS Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_INPUT ) </loc>
//      <o.5..5> S0PRSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PCNT0_INPUT_S1PRSSEL  --------------------------------
// SVD Line: 46391

//  <item> SFDITEM_FIELD__PCNT0_INPUT_S1PRSSEL
//    <name> S1PRSSEL </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x4004E068) \nS1IN PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected.\n1 : PRSCH1 = PRS Channel 1 selected.\n2 : PRSCH2 = PRS Channel 2 selected.\n3 : PRSCH3 = PRS Channel 3 selected.\n4 : PRSCH4 = PRS Channel 4 selected.\n5 : PRSCH5 = PRS Channel 5 selected.\n6 : PRSCH6 = PRS Channel 6 selected.\n7 : PRSCH7 = PRS Channel 7 selected.\n8 : PRSCH8 = PRS Channel 8 selected.\n9 : PRSCH9 = PRS Channel 9 selected.\n10 : PRSCH10 = PRS Channel 10 selected.\n11 : PRSCH11 = PRS Channel 11 selected.\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PCNT0_INPUT ) </loc>
//      <o.9..6> S1PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected.
//        <1=> 1: PRSCH1 = PRS Channel 1 selected.
//        <2=> 2: PRSCH2 = PRS Channel 2 selected.
//        <3=> 3: PRSCH3 = PRS Channel 3 selected.
//        <4=> 4: PRSCH4 = PRS Channel 4 selected.
//        <5=> 5: PRSCH5 = PRS Channel 5 selected.
//        <6=> 6: PRSCH6 = PRS Channel 6 selected.
//        <7=> 7: PRSCH7 = PRS Channel 7 selected.
//        <8=> 8: PRSCH8 = PRS Channel 8 selected.
//        <9=> 9: PRSCH9 = PRS Channel 9 selected.
//        <10=> 10: PRSCH10 = PRS Channel 10 selected.
//        <11=> 11: PRSCH11 = PRS Channel 11 selected.
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PCNT0_INPUT_S1PRSEN  --------------------------------
// SVD Line: 46460

//  <item> SFDITEM_FIELD__PCNT0_INPUT_S1PRSEN
//    <name> S1PRSEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4004E068) S1IN PRS Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_INPUT ) </loc>
//      <o.11..11> S1PRSEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PCNT0_INPUT  ----------------------------------
// SVD Line: 46306

//  <rtree> SFDITEM_REG__PCNT0_INPUT
//    <name> INPUT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004E068) PCNT Input Register </i>
//    <loc> ( (unsigned int)((PCNT0_INPUT >> 0) & 0xFFFFFFFF), ((PCNT0_INPUT = (PCNT0_INPUT & ~(0xBEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_INPUT_S0PRSSEL </item>
//    <item> SFDITEM_FIELD__PCNT0_INPUT_S0PRSEN </item>
//    <item> SFDITEM_FIELD__PCNT0_INPUT_S1PRSSEL </item>
//    <item> SFDITEM_FIELD__PCNT0_INPUT_S1PRSEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PCNT0_OVSCFG  ------------------------------
// SVD Line: 46469

unsigned int PCNT0_OVSCFG __AT (0x4004E06C);



// ----------------------------  Field Item: PCNT0_OVSCFG_FILTLEN  --------------------------------
// SVD Line: 46478

//  <item> SFDITEM_FIELD__PCNT0_OVSCFG_FILTLEN
//    <name> FILTLEN </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004E06C) Configure Filter Length for Inputs S0IN and S1IN </i>
//    <edit> 
//      <loc> ( (unsigned char)((PCNT0_OVSCFG >> 0) & 0xFF), ((PCNT0_OVSCFG = (PCNT0_OVSCFG & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PCNT0_OVSCFG_FLUTTERRM  -------------------------------
// SVD Line: 46485

//  <item> SFDITEM_FIELD__PCNT0_OVSCFG_FLUTTERRM
//    <name> FLUTTERRM </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004E06C) Flutter Remove </i>
//    <check> 
//      <loc> ( (unsigned int) PCNT0_OVSCFG ) </loc>
//      <o.12..12> FLUTTERRM
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PCNT0_OVSCFG  ----------------------------------
// SVD Line: 46469

//  <rtree> SFDITEM_REG__PCNT0_OVSCFG
//    <name> OVSCFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004E06C) Oversampling Config Register </i>
//    <loc> ( (unsigned int)((PCNT0_OVSCFG >> 0) & 0xFFFFFFFF), ((PCNT0_OVSCFG = (PCNT0_OVSCFG & ~(0x10FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCNT0_OVSCFG_FILTLEN </item>
//    <item> SFDITEM_FIELD__PCNT0_OVSCFG_FLUTTERRM </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: PCNT0  -------------------------------------
// SVD Line: 45216

//  <view> PCNT0
//    <name> PCNT0 </name>
//    <item> SFDITEM_REG__PCNT0_CTRL </item>
//    <item> SFDITEM_REG__PCNT0_CMD </item>
//    <item> SFDITEM_REG__PCNT0_STATUS </item>
//    <item> SFDITEM_REG__PCNT0_CNT </item>
//    <item> SFDITEM_REG__PCNT0_TOP </item>
//    <item> SFDITEM_REG__PCNT0_TOPB </item>
//    <item> SFDITEM_REG__PCNT0_IF </item>
//    <item> SFDITEM_REG__PCNT0_IFS </item>
//    <item> SFDITEM_REG__PCNT0_IFC </item>
//    <item> SFDITEM_REG__PCNT0_IEN </item>
//    <item> SFDITEM_REG__PCNT0_ROUTELOC0 </item>
//    <item> SFDITEM_REG__PCNT0_FREEZE </item>
//    <item> SFDITEM_REG__PCNT0_SYNCBUSY </item>
//    <item> SFDITEM_REG__PCNT0_AUXCNT </item>
//    <item> SFDITEM_REG__PCNT0_INPUT </item>
//    <item> SFDITEM_REG__PCNT0_OVSCFG </item>
//  </view>
//  


// ----------------------------  Register Item Address: I2C0_CTRL  --------------------------------
// SVD Line: 46510

unsigned int I2C0_CTRL __AT (0x4000C000);



// --------------------------------  Field Item: I2C0_CTRL_EN  ------------------------------------
// SVD Line: 46519

//  <item> SFDITEM_FIELD__I2C0_CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000C000) I2C Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CTRL_SLAVE  ----------------------------------
// SVD Line: 46526

//  <item> SFDITEM_FIELD__I2C0_CTRL_SLAVE
//    <name> SLAVE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000C000) Addressable as Slave </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.1..1> SLAVE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CTRL_AUTOACK  ---------------------------------
// SVD Line: 46533

//  <item> SFDITEM_FIELD__I2C0_CTRL_AUTOACK
//    <name> AUTOACK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000C000) Automatic Acknowledge </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.2..2> AUTOACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CTRL_AUTOSE  ----------------------------------
// SVD Line: 46540

//  <item> SFDITEM_FIELD__I2C0_CTRL_AUTOSE
//    <name> AUTOSE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000C000) Automatic STOP When Empty </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.3..3> AUTOSE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CTRL_AUTOSN  ----------------------------------
// SVD Line: 46547

//  <item> SFDITEM_FIELD__I2C0_CTRL_AUTOSN
//    <name> AUTOSN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000C000) Automatic STOP on NACK </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.4..4> AUTOSN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CTRL_ARBDIS  ----------------------------------
// SVD Line: 46554

//  <item> SFDITEM_FIELD__I2C0_CTRL_ARBDIS
//    <name> ARBDIS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000C000) Arbitration Disable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.5..5> ARBDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CTRL_GCAMEN  ----------------------------------
// SVD Line: 46561

//  <item> SFDITEM_FIELD__I2C0_CTRL_GCAMEN
//    <name> GCAMEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000C000) General Call Address Match Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.6..6> GCAMEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CTRL_TXBIL  ----------------------------------
// SVD Line: 46568

//  <item> SFDITEM_FIELD__I2C0_CTRL_TXBIL
//    <name> TXBIL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000C000) TX Buffer Interrupt Level </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.7..7> TXBIL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CTRL_CLHR  -----------------------------------
// SVD Line: 46575

//  <item> SFDITEM_FIELD__I2C0_CTRL_CLHR
//    <name> CLHR </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000C000) \nClock Low High Ratio\n0 : STANDARD = The ratio between low period and high period counters (Nlow:Nhigh) is 4:4\n1 : ASYMMETRIC = The ratio between low period and high period counters (Nlow:Nhigh) is 6:3\n2 : FAST = The ratio between low period and high period counters (Nlow:Nhigh) is 11:6\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.9..8> CLHR
//        <0=> 0: STANDARD = The ratio between low period and high period counters (Nlow:Nhigh) is 4:4
//        <1=> 1: ASYMMETRIC = The ratio between low period and high period counters (Nlow:Nhigh) is 6:3
//        <2=> 2: FAST = The ratio between low period and high period counters (Nlow:Nhigh) is 11:6
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CTRL_BITO  -----------------------------------
// SVD Line: 46599

//  <item> SFDITEM_FIELD__I2C0_CTRL_BITO
//    <name> BITO </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4000C000) \nBus Idle Timeout\n0 : OFF = Timeout disabled\n1 : 40PCC = Timeout after 40 prescaled clock cycles. In standard mode at 100 kHz, this results in a 50us timeout.\n2 : 80PCC = Timeout after 80 prescaled clock cycles. In standard mode at 100 kHz, this results in a 100us timeout.\n3 : 160PCC = Timeout after 160 prescaled clock cycles. In standard mode at 100 kHz, this results in a 200us timeout. </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.13..12> BITO
//        <0=> 0: OFF = Timeout disabled
//        <1=> 1: 40PCC = Timeout after 40 prescaled clock cycles. In standard mode at 100 kHz, this results in a 50us timeout.
//        <2=> 2: 80PCC = Timeout after 80 prescaled clock cycles. In standard mode at 100 kHz, this results in a 100us timeout.
//        <3=> 3: 160PCC = Timeout after 160 prescaled clock cycles. In standard mode at 100 kHz, this results in a 200us timeout.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CTRL_GIBITO  ----------------------------------
// SVD Line: 46628

//  <item> SFDITEM_FIELD__I2C0_CTRL_GIBITO
//    <name> GIBITO </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000C000) Go Idle on Bus Idle Timeout </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.15..15> GIBITO
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CTRL_CLTO  -----------------------------------
// SVD Line: 46635

//  <item> SFDITEM_FIELD__I2C0_CTRL_CLTO
//    <name> CLTO </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x4000C000) \nClock Low Timeout\n0 : OFF = Timeout disabled\n1 : 40PCC = Timeout after 40 prescaled clock cycles. In standard mode at 100 kHz, this results in a 50us timeout.\n2 : 80PCC = Timeout after 80 prescaled clock cycles. In standard mode at 100 kHz, this results in a 100us timeout.\n3 : 160PCC = Timeout after 160 prescaled clock cycles. In standard mode at 100 kHz, this results in a 200us timeout.\n4 : 320PCC = Timeout after 320 prescaled clock cycles. In standard mode at 100 kHz, this results in a 400us timeout.\n5 : 1024PCC = Timeout after 1024 prescaled clock cycles. In standard mode at 100 kHz, this results in a 1280us timeout.\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C0_CTRL ) </loc>
//      <o.18..16> CLTO
//        <0=> 0: OFF = Timeout disabled
//        <1=> 1: 40PCC = Timeout after 40 prescaled clock cycles. In standard mode at 100 kHz, this results in a 50us timeout.
//        <2=> 2: 80PCC = Timeout after 80 prescaled clock cycles. In standard mode at 100 kHz, this results in a 100us timeout.
//        <3=> 3: 160PCC = Timeout after 160 prescaled clock cycles. In standard mode at 100 kHz, this results in a 200us timeout.
//        <4=> 4: 320PCC = Timeout after 320 prescaled clock cycles. In standard mode at 100 kHz, this results in a 400us timeout.
//        <5=> 5: 1024PCC = Timeout after 1024 prescaled clock cycles. In standard mode at 100 kHz, this results in a 1280us timeout.
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_CTRL  -----------------------------------
// SVD Line: 46510

//  <rtree> SFDITEM_REG__I2C0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C000) Control Register </i>
//    <loc> ( (unsigned int)((I2C0_CTRL >> 0) & 0xFFFFFFFF), ((I2C0_CTRL = (I2C0_CTRL & ~(0x7B3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7B3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CTRL_EN </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_SLAVE </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_AUTOACK </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_AUTOSE </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_AUTOSN </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_ARBDIS </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_GCAMEN </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_TXBIL </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_CLHR </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_BITO </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_GIBITO </item>
//    <item> SFDITEM_FIELD__I2C0_CTRL_CLTO </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_CMD  --------------------------------
// SVD Line: 46676

unsigned int I2C0_CMD __AT (0x4000C004);



// -------------------------------  Field Item: I2C0_CMD_START  -----------------------------------
// SVD Line: 46685

//  <item> SFDITEM_FIELD__I2C0_CMD_START
//    <name> START </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000C004) Send Start Condition </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CMD_STOP  -----------------------------------
// SVD Line: 46692

//  <item> SFDITEM_FIELD__I2C0_CMD_STOP
//    <name> STOP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000C004) Send Stop Condition </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CMD_ACK  ------------------------------------
// SVD Line: 46699

//  <item> SFDITEM_FIELD__I2C0_CMD_ACK
//    <name> ACK </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4000C004) Send ACK </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.2..2> ACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CMD_NACK  -----------------------------------
// SVD Line: 46706

//  <item> SFDITEM_FIELD__I2C0_CMD_NACK
//    <name> NACK </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000C004) Send NACK </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.3..3> NACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CMD_CONT  -----------------------------------
// SVD Line: 46713

//  <item> SFDITEM_FIELD__I2C0_CMD_CONT
//    <name> CONT </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4000C004) Continue Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.4..4> CONT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CMD_ABORT  -----------------------------------
// SVD Line: 46720

//  <item> SFDITEM_FIELD__I2C0_CMD_ABORT
//    <name> ABORT </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4000C004) Abort Transmission </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.5..5> ABORT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CMD_CLEARTX  ----------------------------------
// SVD Line: 46727

//  <item> SFDITEM_FIELD__I2C0_CMD_CLEARTX
//    <name> CLEARTX </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4000C004) Clear TX </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.6..6> CLEARTX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CMD_CLEARPC  ----------------------------------
// SVD Line: 46734

//  <item> SFDITEM_FIELD__I2C0_CMD_CLEARPC
//    <name> CLEARPC </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4000C004) Clear Pending Commands </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CMD ) </loc>
//      <o.7..7> CLEARPC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_CMD  ------------------------------------
// SVD Line: 46676

//  <rtree> SFDITEM_REG__I2C0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000C004) Command Register </i>
//    <loc> ( (unsigned int)((I2C0_CMD >> 0) & 0xFFFFFFFF), ((I2C0_CMD = (I2C0_CMD & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CMD_START </item>
//    <item> SFDITEM_FIELD__I2C0_CMD_STOP </item>
//    <item> SFDITEM_FIELD__I2C0_CMD_ACK </item>
//    <item> SFDITEM_FIELD__I2C0_CMD_NACK </item>
//    <item> SFDITEM_FIELD__I2C0_CMD_CONT </item>
//    <item> SFDITEM_FIELD__I2C0_CMD_ABORT </item>
//    <item> SFDITEM_FIELD__I2C0_CMD_CLEARTX </item>
//    <item> SFDITEM_FIELD__I2C0_CMD_CLEARPC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C0_STATE  -------------------------------
// SVD Line: 46743

unsigned int I2C0_STATE __AT (0x4000C008);



// -------------------------------  Field Item: I2C0_STATE_BUSY  ----------------------------------
// SVD Line: 46752

//  <item> SFDITEM_FIELD__I2C0_STATE_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000C008) Bus Busy </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATE ) </loc>
//      <o.0..0> BUSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATE_MASTER  ---------------------------------
// SVD Line: 46759

//  <item> SFDITEM_FIELD__I2C0_STATE_MASTER
//    <name> MASTER </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000C008) Master </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATE ) </loc>
//      <o.1..1> MASTER
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2C0_STATE_TRANSMITTER  -------------------------------
// SVD Line: 46766

//  <item> SFDITEM_FIELD__I2C0_STATE_TRANSMITTER
//    <name> TRANSMITTER </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000C008) Transmitter </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATE ) </loc>
//      <o.2..2> TRANSMITTER
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATE_NACKED  ---------------------------------
// SVD Line: 46773

//  <item> SFDITEM_FIELD__I2C0_STATE_NACKED
//    <name> NACKED </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000C008) Nack Received </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATE ) </loc>
//      <o.3..3> NACKED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C0_STATE_BUSHOLD  ---------------------------------
// SVD Line: 46780

//  <item> SFDITEM_FIELD__I2C0_STATE_BUSHOLD
//    <name> BUSHOLD </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000C008) Bus Held </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATE ) </loc>
//      <o.4..4> BUSHOLD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATE_STATE  ----------------------------------
// SVD Line: 46787

//  <item> SFDITEM_FIELD__I2C0_STATE_STATE
//    <name> STATE </name>
//    <r> 
//    <i> [Bits 7..5] RO (@ 0x4000C008) \nTransmission State\n0 : IDLE = No transmission is being performed.\n1 : WAIT = Waiting for idle. Will send a start condition as soon as the bus is idle.\n2 : START = Start transmitted or received\n3 : ADDR = Address transmitted or received\n4 : ADDRACK = Address ack/nack transmitted or received\n5 : DATA = Data transmitted or received\n6 : DATAACK = Data ack/nack transmitted or received\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C0_STATE ) </loc>
//      <o.7..5> STATE
//        <0=> 0: IDLE = No transmission is being performed.
//        <1=> 1: WAIT = Waiting for idle. Will send a start condition as soon as the bus is idle.
//        <2=> 2: START = Start transmitted or received
//        <3=> 3: ADDR = Address transmitted or received
//        <4=> 4: ADDRACK = Address ack/nack transmitted or received
//        <5=> 5: DATA = Data transmitted or received
//        <6=> 6: DATAACK = Data ack/nack transmitted or received
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: I2C0_STATE  -----------------------------------
// SVD Line: 46743

//  <rtree> SFDITEM_REG__I2C0_STATE
//    <name> STATE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000C008) State Register </i>
//    <loc> ( (unsigned int)((I2C0_STATE >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_STATE_BUSY </item>
//    <item> SFDITEM_FIELD__I2C0_STATE_MASTER </item>
//    <item> SFDITEM_FIELD__I2C0_STATE_TRANSMITTER </item>
//    <item> SFDITEM_FIELD__I2C0_STATE_NACKED </item>
//    <item> SFDITEM_FIELD__I2C0_STATE_BUSHOLD </item>
//    <item> SFDITEM_FIELD__I2C0_STATE_STATE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C0_STATUS  -------------------------------
// SVD Line: 46833

unsigned int I2C0_STATUS __AT (0x4000C00C);



// -----------------------------  Field Item: I2C0_STATUS_PSTART  ---------------------------------
// SVD Line: 46842

//  <item> SFDITEM_FIELD__I2C0_STATUS_PSTART
//    <name> PSTART </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000C00C) Pending START </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.0..0> PSTART
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATUS_PSTOP  ---------------------------------
// SVD Line: 46849

//  <item> SFDITEM_FIELD__I2C0_STATUS_PSTOP
//    <name> PSTOP </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000C00C) Pending STOP </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.1..1> PSTOP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATUS_PACK  ----------------------------------
// SVD Line: 46856

//  <item> SFDITEM_FIELD__I2C0_STATUS_PACK
//    <name> PACK </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000C00C) Pending ACK </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.2..2> PACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATUS_PNACK  ---------------------------------
// SVD Line: 46863

//  <item> SFDITEM_FIELD__I2C0_STATUS_PNACK
//    <name> PNACK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000C00C) Pending NACK </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.3..3> PNACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATUS_PCONT  ---------------------------------
// SVD Line: 46870

//  <item> SFDITEM_FIELD__I2C0_STATUS_PCONT
//    <name> PCONT </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000C00C) Pending Continue </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.4..4> PCONT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C0_STATUS_PABORT  ---------------------------------
// SVD Line: 46877

//  <item> SFDITEM_FIELD__I2C0_STATUS_PABORT
//    <name> PABORT </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000C00C) Pending Abort </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.5..5> PABORT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_STATUS_TXC  ----------------------------------
// SVD Line: 46884

//  <item> SFDITEM_FIELD__I2C0_STATUS_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000C00C) TX Complete </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.6..6> TXC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_STATUS_TXBL  ----------------------------------
// SVD Line: 46891

//  <item> SFDITEM_FIELD__I2C0_STATUS_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000C00C) TX Buffer Level </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.7..7> TXBL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C0_STATUS_RXDATAV  --------------------------------
// SVD Line: 46898

//  <item> SFDITEM_FIELD__I2C0_STATUS_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000C00C) RX Data Valid </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.8..8> RXDATAV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C0_STATUS_RXFULL  ---------------------------------
// SVD Line: 46905

//  <item> SFDITEM_FIELD__I2C0_STATUS_RXFULL
//    <name> RXFULL </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000C00C) RX FIFO Full </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_STATUS ) </loc>
//      <o.9..9> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: I2C0_STATUS  ----------------------------------
// SVD Line: 46833

//  <rtree> SFDITEM_REG__I2C0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000C00C) Status Register </i>
//    <loc> ( (unsigned int)((I2C0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_STATUS_PSTART </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_PSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_PACK </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_PNACK </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_PCONT </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_PABORT </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_TXC </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_TXBL </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_RXDATAV </item>
//    <item> SFDITEM_FIELD__I2C0_STATUS_RXFULL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C0_CLKDIV  -------------------------------
// SVD Line: 46914

unsigned int I2C0_CLKDIV __AT (0x4000C010);



// -------------------------------  Field Item: I2C0_CLKDIV_DIV  ----------------------------------
// SVD Line: 46923

//  <item> SFDITEM_FIELD__I2C0_CLKDIV_DIV
//    <name> DIV </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x4000C010) Clock Divider </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C0_CLKDIV >> 0) & 0x1FF), ((I2C0_CLKDIV = (I2C0_CLKDIV & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C0_CLKDIV  ----------------------------------
// SVD Line: 46914

//  <rtree> SFDITEM_REG__I2C0_CLKDIV
//    <name> CLKDIV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C010) Clock Division Register </i>
//    <loc> ( (unsigned int)((I2C0_CLKDIV >> 0) & 0xFFFFFFFF), ((I2C0_CLKDIV = (I2C0_CLKDIV & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CLKDIV_DIV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C0_SADDR  -------------------------------
// SVD Line: 46932

unsigned int I2C0_SADDR __AT (0x4000C014);



// -------------------------------  Field Item: I2C0_SADDR_ADDR  ----------------------------------
// SVD Line: 46941

//  <item> SFDITEM_FIELD__I2C0_SADDR_ADDR
//    <name> ADDR </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x4000C014) Slave Address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_SADDR >> 1) & 0x7F), ((I2C0_SADDR = (I2C0_SADDR & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C0_SADDR  -----------------------------------
// SVD Line: 46932

//  <rtree> SFDITEM_REG__I2C0_SADDR
//    <name> SADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C014) Slave Address Register </i>
//    <loc> ( (unsigned int)((I2C0_SADDR >> 0) & 0xFFFFFFFF), ((I2C0_SADDR = (I2C0_SADDR & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_SADDR_ADDR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_SADDRMASK  -----------------------------
// SVD Line: 46950

unsigned int I2C0_SADDRMASK __AT (0x4000C018);



// -----------------------------  Field Item: I2C0_SADDRMASK_MASK  --------------------------------
// SVD Line: 46959

//  <item> SFDITEM_FIELD__I2C0_SADDRMASK_MASK
//    <name> MASK </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x4000C018) Slave Address Mask </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_SADDRMASK >> 1) & 0x7F), ((I2C0_SADDRMASK = (I2C0_SADDRMASK & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C0_SADDRMASK  ---------------------------------
// SVD Line: 46950

//  <rtree> SFDITEM_REG__I2C0_SADDRMASK
//    <name> SADDRMASK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C018) Slave Address Mask Register </i>
//    <loc> ( (unsigned int)((I2C0_SADDRMASK >> 0) & 0xFFFFFFFF), ((I2C0_SADDRMASK = (I2C0_SADDRMASK & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_SADDRMASK_MASK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C0_RXDATAP  ------------------------------
// SVD Line: 47013

unsigned int I2C0_RXDATAP __AT (0x4000C024);



// ----------------------------  Field Item: I2C0_RXDATAP_RXDATAP  --------------------------------
// SVD Line: 47022

//  <item> SFDITEM_FIELD__I2C0_RXDATAP_RXDATAP
//    <name> RXDATAP </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000C024) RX Data Peek </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RXDATAP >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_RXDATAP  ----------------------------------
// SVD Line: 47013

//  <rtree> SFDITEM_REG__I2C0_RXDATAP
//    <name> RXDATAP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000C024) Receive Buffer Data Peek Register </i>
//    <loc> ( (unsigned int)((I2C0_RXDATAP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_RXDATAP_RXDATAP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_RXDOUBLEP  -----------------------------
// SVD Line: 47031

unsigned int I2C0_RXDOUBLEP __AT (0x4000C028);



// ---------------------------  Field Item: I2C0_RXDOUBLEP_RXDATAP0  ------------------------------
// SVD Line: 47040

//  <item> SFDITEM_FIELD__I2C0_RXDOUBLEP_RXDATAP0
//    <name> RXDATAP0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000C028) RX Data 0 Peek </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RXDOUBLEP >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: I2C0_RXDOUBLEP_RXDATAP1  ------------------------------
// SVD Line: 47047

//  <item> SFDITEM_FIELD__I2C0_RXDOUBLEP_RXDATAP1
//    <name> RXDATAP1 </name>
//    <r> 
//    <i> [Bits 15..8] RO (@ 0x4000C028) RX Data 1 Peek </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RXDOUBLEP >> 8) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C0_RXDOUBLEP  ---------------------------------
// SVD Line: 47031

//  <rtree> SFDITEM_REG__I2C0_RXDOUBLEP
//    <name> RXDOUBLEP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000C028) Receive Buffer Double Data Peek Register </i>
//    <loc> ( (unsigned int)((I2C0_RXDOUBLEP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_RXDOUBLEP_RXDATAP0 </item>
//    <item> SFDITEM_FIELD__I2C0_RXDOUBLEP_RXDATAP1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C0_TXDATA  -------------------------------
// SVD Line: 47056

unsigned int I2C0_TXDATA __AT (0x4000C02C);



// -----------------------------  Field Item: I2C0_TXDATA_TXDATA  ---------------------------------
// SVD Line: 47065

//  <item> SFDITEM_FIELD__I2C0_TXDATA_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000C02C) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_TXDATA >> 0) & 0xFF), ((I2C0_TXDATA = (I2C0_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C0_TXDATA  ----------------------------------
// SVD Line: 47056

//  <rtree> SFDITEM_REG__I2C0_TXDATA
//    <name> TXDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C02C) Transmit Buffer Data Register </i>
//    <loc> ( (unsigned int)((I2C0_TXDATA >> 0) & 0xFFFFFFFF), ((I2C0_TXDATA = (I2C0_TXDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_TXDATA_TXDATA </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_TXDOUBLE  ------------------------------
// SVD Line: 47074

unsigned int I2C0_TXDOUBLE __AT (0x4000C030);



// ----------------------------  Field Item: I2C0_TXDOUBLE_TXDATA0  -------------------------------
// SVD Line: 47083

//  <item> SFDITEM_FIELD__I2C0_TXDOUBLE_TXDATA0
//    <name> TXDATA0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000C030) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_TXDOUBLE >> 0) & 0xFF), ((I2C0_TXDOUBLE = (I2C0_TXDOUBLE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: I2C0_TXDOUBLE_TXDATA1  -------------------------------
// SVD Line: 47090

//  <item> SFDITEM_FIELD__I2C0_TXDOUBLE_TXDATA1
//    <name> TXDATA1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4000C030) TX Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_TXDOUBLE >> 8) & 0xFF), ((I2C0_TXDOUBLE = (I2C0_TXDOUBLE & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_TXDOUBLE  ---------------------------------
// SVD Line: 47074

//  <rtree> SFDITEM_REG__I2C0_TXDOUBLE
//    <name> TXDOUBLE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C030) Transmit Buffer Double Data Register </i>
//    <loc> ( (unsigned int)((I2C0_TXDOUBLE >> 0) & 0xFFFFFFFF), ((I2C0_TXDOUBLE = (I2C0_TXDOUBLE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_TXDOUBLE_TXDATA0 </item>
//    <item> SFDITEM_FIELD__I2C0_TXDOUBLE_TXDATA1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_IF  ---------------------------------
// SVD Line: 47099

unsigned int I2C0_IF __AT (0x4000C034);



// --------------------------------  Field Item: I2C0_IF_START  -----------------------------------
// SVD Line: 47108

//  <item> SFDITEM_FIELD__I2C0_IF_START
//    <name> START </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000C034) START Condition Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IF_RSTART  -----------------------------------
// SVD Line: 47115

//  <item> SFDITEM_FIELD__I2C0_IF_RSTART
//    <name> RSTART </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000C034) Repeated START Condition Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.1..1> RSTART
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_ADDR  ------------------------------------
// SVD Line: 47122

//  <item> SFDITEM_FIELD__I2C0_IF_ADDR
//    <name> ADDR </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000C034) Address Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.2..2> ADDR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_IF_TXC  ------------------------------------
// SVD Line: 47129

//  <item> SFDITEM_FIELD__I2C0_IF_TXC
//    <name> TXC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000C034) Transfer Completed Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.3..3> TXC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_TXBL  ------------------------------------
// SVD Line: 47136

//  <item> SFDITEM_FIELD__I2C0_IF_TXBL
//    <name> TXBL </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000C034) Transmit Buffer Level Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.4..4> TXBL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IF_RXDATAV  ----------------------------------
// SVD Line: 47143

//  <item> SFDITEM_FIELD__I2C0_IF_RXDATAV
//    <name> RXDATAV </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000C034) Receive Data Valid Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.5..5> RXDATAV
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_IF_ACK  ------------------------------------
// SVD Line: 47150

//  <item> SFDITEM_FIELD__I2C0_IF_ACK
//    <name> ACK </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000C034) Acknowledge Received Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.6..6> ACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_NACK  ------------------------------------
// SVD Line: 47157

//  <item> SFDITEM_FIELD__I2C0_IF_NACK
//    <name> NACK </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000C034) Not Acknowledge Received Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.7..7> NACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_MSTOP  -----------------------------------
// SVD Line: 47164

//  <item> SFDITEM_FIELD__I2C0_IF_MSTOP
//    <name> MSTOP </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000C034) Master STOP Condition Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.8..8> MSTOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IF_ARBLOST  ----------------------------------
// SVD Line: 47171

//  <item> SFDITEM_FIELD__I2C0_IF_ARBLOST
//    <name> ARBLOST </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000C034) Arbitration Lost Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.9..9> ARBLOST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IF_BUSERR  -----------------------------------
// SVD Line: 47178

//  <item> SFDITEM_FIELD__I2C0_IF_BUSERR
//    <name> BUSERR </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000C034) Bus Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.10..10> BUSERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IF_BUSHOLD  ----------------------------------
// SVD Line: 47185

//  <item> SFDITEM_FIELD__I2C0_IF_BUSHOLD
//    <name> BUSHOLD </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4000C034) Bus Held Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.11..11> BUSHOLD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_TXOF  ------------------------------------
// SVD Line: 47192

//  <item> SFDITEM_FIELD__I2C0_IF_TXOF
//    <name> TXOF </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4000C034) Transmit Buffer Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.12..12> TXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_RXUF  ------------------------------------
// SVD Line: 47199

//  <item> SFDITEM_FIELD__I2C0_IF_RXUF
//    <name> RXUF </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x4000C034) Receive Buffer Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.13..13> RXUF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_BITO  ------------------------------------
// SVD Line: 47206

//  <item> SFDITEM_FIELD__I2C0_IF_BITO
//    <name> BITO </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4000C034) Bus Idle Timeout Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.14..14> BITO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_CLTO  ------------------------------------
// SVD Line: 47213

//  <item> SFDITEM_FIELD__I2C0_IF_CLTO
//    <name> CLTO </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4000C034) Clock Low Timeout Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.15..15> CLTO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_SSTOP  -----------------------------------
// SVD Line: 47220

//  <item> SFDITEM_FIELD__I2C0_IF_SSTOP
//    <name> SSTOP </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000C034) Slave STOP Condition Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.16..16> SSTOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IF_RXFULL  -----------------------------------
// SVD Line: 47227

//  <item> SFDITEM_FIELD__I2C0_IF_RXFULL
//    <name> RXFULL </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4000C034) Receive Buffer Full Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.17..17> RXFULL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IF_CLERR  -----------------------------------
// SVD Line: 47234

//  <item> SFDITEM_FIELD__I2C0_IF_CLERR
//    <name> CLERR </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4000C034) Clock Low Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IF ) </loc>
//      <o.18..18> CLERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2C0_IF  ------------------------------------
// SVD Line: 47099

//  <rtree> SFDITEM_REG__I2C0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000C034) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((I2C0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_IF_START </item>
//    <item> SFDITEM_FIELD__I2C0_IF_RSTART </item>
//    <item> SFDITEM_FIELD__I2C0_IF_ADDR </item>
//    <item> SFDITEM_FIELD__I2C0_IF_TXC </item>
//    <item> SFDITEM_FIELD__I2C0_IF_TXBL </item>
//    <item> SFDITEM_FIELD__I2C0_IF_RXDATAV </item>
//    <item> SFDITEM_FIELD__I2C0_IF_ACK </item>
//    <item> SFDITEM_FIELD__I2C0_IF_NACK </item>
//    <item> SFDITEM_FIELD__I2C0_IF_MSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IF_ARBLOST </item>
//    <item> SFDITEM_FIELD__I2C0_IF_BUSERR </item>
//    <item> SFDITEM_FIELD__I2C0_IF_BUSHOLD </item>
//    <item> SFDITEM_FIELD__I2C0_IF_TXOF </item>
//    <item> SFDITEM_FIELD__I2C0_IF_RXUF </item>
//    <item> SFDITEM_FIELD__I2C0_IF_BITO </item>
//    <item> SFDITEM_FIELD__I2C0_IF_CLTO </item>
//    <item> SFDITEM_FIELD__I2C0_IF_SSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IF_RXFULL </item>
//    <item> SFDITEM_FIELD__I2C0_IF_CLERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_IFS  --------------------------------
// SVD Line: 47243

unsigned int I2C0_IFS __AT (0x4000C038);



// -------------------------------  Field Item: I2C0_IFS_START  -----------------------------------
// SVD Line: 47252

//  <item> SFDITEM_FIELD__I2C0_IFS_START
//    <name> START </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000C038) Set START Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFS_RSTART  ----------------------------------
// SVD Line: 47259

//  <item> SFDITEM_FIELD__I2C0_IFS_RSTART
//    <name> RSTART </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000C038) Set RSTART Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.1..1> RSTART
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_ADDR  -----------------------------------
// SVD Line: 47266

//  <item> SFDITEM_FIELD__I2C0_IFS_ADDR
//    <name> ADDR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4000C038) Set ADDR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.2..2> ADDR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_TXC  ------------------------------------
// SVD Line: 47273

//  <item> SFDITEM_FIELD__I2C0_IFS_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000C038) Set TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.3..3> TXC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_ACK  ------------------------------------
// SVD Line: 47280

//  <item> SFDITEM_FIELD__I2C0_IFS_ACK
//    <name> ACK </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4000C038) Set ACK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.6..6> ACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_NACK  -----------------------------------
// SVD Line: 47287

//  <item> SFDITEM_FIELD__I2C0_IFS_NACK
//    <name> NACK </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4000C038) Set NACK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.7..7> NACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFS_MSTOP  -----------------------------------
// SVD Line: 47294

//  <item> SFDITEM_FIELD__I2C0_IFS_MSTOP
//    <name> MSTOP </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4000C038) Set MSTOP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.8..8> MSTOP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_IFS_ARBLOST  ----------------------------------
// SVD Line: 47301

//  <item> SFDITEM_FIELD__I2C0_IFS_ARBLOST
//    <name> ARBLOST </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4000C038) Set ARBLOST Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.9..9> ARBLOST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFS_BUSERR  ----------------------------------
// SVD Line: 47308

//  <item> SFDITEM_FIELD__I2C0_IFS_BUSERR
//    <name> BUSERR </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4000C038) Set BUSERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.10..10> BUSERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_IFS_BUSHOLD  ----------------------------------
// SVD Line: 47315

//  <item> SFDITEM_FIELD__I2C0_IFS_BUSHOLD
//    <name> BUSHOLD </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x4000C038) Set BUSHOLD Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.11..11> BUSHOLD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_TXOF  -----------------------------------
// SVD Line: 47322

//  <item> SFDITEM_FIELD__I2C0_IFS_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x4000C038) Set TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.12..12> TXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_RXUF  -----------------------------------
// SVD Line: 47329

//  <item> SFDITEM_FIELD__I2C0_IFS_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x4000C038) Set RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.13..13> RXUF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_BITO  -----------------------------------
// SVD Line: 47336

//  <item> SFDITEM_FIELD__I2C0_IFS_BITO
//    <name> BITO </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x4000C038) Set BITO Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.14..14> BITO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFS_CLTO  -----------------------------------
// SVD Line: 47343

//  <item> SFDITEM_FIELD__I2C0_IFS_CLTO
//    <name> CLTO </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x4000C038) Set CLTO Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.15..15> CLTO
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFS_SSTOP  -----------------------------------
// SVD Line: 47350

//  <item> SFDITEM_FIELD__I2C0_IFS_SSTOP
//    <name> SSTOP </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x4000C038) Set SSTOP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.16..16> SSTOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFS_RXFULL  ----------------------------------
// SVD Line: 47357

//  <item> SFDITEM_FIELD__I2C0_IFS_RXFULL
//    <name> RXFULL </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x4000C038) Set RXFULL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.17..17> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFS_CLERR  -----------------------------------
// SVD Line: 47364

//  <item> SFDITEM_FIELD__I2C0_IFS_CLERR
//    <name> CLERR </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x4000C038) Set CLERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFS ) </loc>
//      <o.18..18> CLERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_IFS  ------------------------------------
// SVD Line: 47243

//  <rtree> SFDITEM_REG__I2C0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000C038) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((I2C0_IFS >> 0) & 0xFFFFFFFF), ((I2C0_IFS = (I2C0_IFS & ~(0x7FFCFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_IFS_START </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_RSTART </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_ADDR </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_TXC </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_ACK </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_NACK </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_MSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_ARBLOST </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_BUSERR </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_BUSHOLD </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_TXOF </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_RXUF </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_BITO </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_CLTO </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_SSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_RXFULL </item>
//    <item> SFDITEM_FIELD__I2C0_IFS_CLERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_IFC  --------------------------------
// SVD Line: 47373

unsigned int I2C0_IFC __AT (0x4000C03C);



// -------------------------------  Field Item: I2C0_IFC_START  -----------------------------------
// SVD Line: 47382

//  <item> SFDITEM_FIELD__I2C0_IFC_START
//    <name> START </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000C03C) Clear START Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFC_RSTART  ----------------------------------
// SVD Line: 47389

//  <item> SFDITEM_FIELD__I2C0_IFC_RSTART
//    <name> RSTART </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000C03C) Clear RSTART Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.1..1> RSTART
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_ADDR  -----------------------------------
// SVD Line: 47396

//  <item> SFDITEM_FIELD__I2C0_IFC_ADDR
//    <name> ADDR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4000C03C) Clear ADDR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.2..2> ADDR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_TXC  ------------------------------------
// SVD Line: 47403

//  <item> SFDITEM_FIELD__I2C0_IFC_TXC
//    <name> TXC </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000C03C) Clear TXC Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.3..3> TXC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_ACK  ------------------------------------
// SVD Line: 47410

//  <item> SFDITEM_FIELD__I2C0_IFC_ACK
//    <name> ACK </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4000C03C) Clear ACK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.6..6> ACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_NACK  -----------------------------------
// SVD Line: 47417

//  <item> SFDITEM_FIELD__I2C0_IFC_NACK
//    <name> NACK </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4000C03C) Clear NACK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.7..7> NACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFC_MSTOP  -----------------------------------
// SVD Line: 47424

//  <item> SFDITEM_FIELD__I2C0_IFC_MSTOP
//    <name> MSTOP </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4000C03C) Clear MSTOP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.8..8> MSTOP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_IFC_ARBLOST  ----------------------------------
// SVD Line: 47431

//  <item> SFDITEM_FIELD__I2C0_IFC_ARBLOST
//    <name> ARBLOST </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4000C03C) Clear ARBLOST Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.9..9> ARBLOST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFC_BUSERR  ----------------------------------
// SVD Line: 47438

//  <item> SFDITEM_FIELD__I2C0_IFC_BUSERR
//    <name> BUSERR </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4000C03C) Clear BUSERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.10..10> BUSERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_IFC_BUSHOLD  ----------------------------------
// SVD Line: 47445

//  <item> SFDITEM_FIELD__I2C0_IFC_BUSHOLD
//    <name> BUSHOLD </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x4000C03C) Clear BUSHOLD Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.11..11> BUSHOLD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_TXOF  -----------------------------------
// SVD Line: 47452

//  <item> SFDITEM_FIELD__I2C0_IFC_TXOF
//    <name> TXOF </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x4000C03C) Clear TXOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.12..12> TXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_RXUF  -----------------------------------
// SVD Line: 47459

//  <item> SFDITEM_FIELD__I2C0_IFC_RXUF
//    <name> RXUF </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x4000C03C) Clear RXUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.13..13> RXUF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_BITO  -----------------------------------
// SVD Line: 47466

//  <item> SFDITEM_FIELD__I2C0_IFC_BITO
//    <name> BITO </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x4000C03C) Clear BITO Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.14..14> BITO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IFC_CLTO  -----------------------------------
// SVD Line: 47473

//  <item> SFDITEM_FIELD__I2C0_IFC_CLTO
//    <name> CLTO </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x4000C03C) Clear CLTO Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.15..15> CLTO
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFC_SSTOP  -----------------------------------
// SVD Line: 47480

//  <item> SFDITEM_FIELD__I2C0_IFC_SSTOP
//    <name> SSTOP </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x4000C03C) Clear SSTOP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.16..16> SSTOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFC_RXFULL  ----------------------------------
// SVD Line: 47487

//  <item> SFDITEM_FIELD__I2C0_IFC_RXFULL
//    <name> RXFULL </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x4000C03C) Clear RXFULL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.17..17> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IFC_CLERR  -----------------------------------
// SVD Line: 47494

//  <item> SFDITEM_FIELD__I2C0_IFC_CLERR
//    <name> CLERR </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x4000C03C) Clear CLERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IFC ) </loc>
//      <o.18..18> CLERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_IFC  ------------------------------------
// SVD Line: 47373

//  <rtree> SFDITEM_REG__I2C0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000C03C) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((I2C0_IFC >> 0) & 0xFFFFFFFF), ((I2C0_IFC = (I2C0_IFC & ~(0x7FFCFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_IFC_START </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_RSTART </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_ADDR </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_TXC </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_ACK </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_NACK </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_MSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_ARBLOST </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_BUSERR </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_BUSHOLD </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_TXOF </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_RXUF </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_BITO </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_CLTO </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_SSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_RXFULL </item>
//    <item> SFDITEM_FIELD__I2C0_IFC_CLERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_IEN  --------------------------------
// SVD Line: 47503

unsigned int I2C0_IEN __AT (0x4000C040);



// -------------------------------  Field Item: I2C0_IEN_START  -----------------------------------
// SVD Line: 47512

//  <item> SFDITEM_FIELD__I2C0_IEN_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000C040) START Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IEN_RSTART  ----------------------------------
// SVD Line: 47519

//  <item> SFDITEM_FIELD__I2C0_IEN_RSTART
//    <name> RSTART </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000C040) RSTART Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.1..1> RSTART
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_ADDR  -----------------------------------
// SVD Line: 47526

//  <item> SFDITEM_FIELD__I2C0_IEN_ADDR
//    <name> ADDR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000C040) ADDR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.2..2> ADDR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_TXC  ------------------------------------
// SVD Line: 47533

//  <item> SFDITEM_FIELD__I2C0_IEN_TXC
//    <name> TXC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000C040) TXC Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.3..3> TXC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_TXBL  -----------------------------------
// SVD Line: 47540

//  <item> SFDITEM_FIELD__I2C0_IEN_TXBL
//    <name> TXBL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000C040) TXBL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.4..4> TXBL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_IEN_RXDATAV  ----------------------------------
// SVD Line: 47547

//  <item> SFDITEM_FIELD__I2C0_IEN_RXDATAV
//    <name> RXDATAV </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000C040) RXDATAV Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.5..5> RXDATAV
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_ACK  ------------------------------------
// SVD Line: 47554

//  <item> SFDITEM_FIELD__I2C0_IEN_ACK
//    <name> ACK </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000C040) ACK Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.6..6> ACK
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_NACK  -----------------------------------
// SVD Line: 47561

//  <item> SFDITEM_FIELD__I2C0_IEN_NACK
//    <name> NACK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000C040) NACK Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.7..7> NACK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IEN_MSTOP  -----------------------------------
// SVD Line: 47568

//  <item> SFDITEM_FIELD__I2C0_IEN_MSTOP
//    <name> MSTOP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000C040) MSTOP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.8..8> MSTOP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_IEN_ARBLOST  ----------------------------------
// SVD Line: 47575

//  <item> SFDITEM_FIELD__I2C0_IEN_ARBLOST
//    <name> ARBLOST </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000C040) ARBLOST Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.9..9> ARBLOST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IEN_BUSERR  ----------------------------------
// SVD Line: 47582

//  <item> SFDITEM_FIELD__I2C0_IEN_BUSERR
//    <name> BUSERR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000C040) BUSERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.10..10> BUSERR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_IEN_BUSHOLD  ----------------------------------
// SVD Line: 47589

//  <item> SFDITEM_FIELD__I2C0_IEN_BUSHOLD
//    <name> BUSHOLD </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000C040) BUSHOLD Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.11..11> BUSHOLD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_TXOF  -----------------------------------
// SVD Line: 47596

//  <item> SFDITEM_FIELD__I2C0_IEN_TXOF
//    <name> TXOF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000C040) TXOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.12..12> TXOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_RXUF  -----------------------------------
// SVD Line: 47603

//  <item> SFDITEM_FIELD__I2C0_IEN_RXUF
//    <name> RXUF </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000C040) RXUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.13..13> RXUF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_BITO  -----------------------------------
// SVD Line: 47610

//  <item> SFDITEM_FIELD__I2C0_IEN_BITO
//    <name> BITO </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000C040) BITO Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.14..14> BITO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_IEN_CLTO  -----------------------------------
// SVD Line: 47617

//  <item> SFDITEM_FIELD__I2C0_IEN_CLTO
//    <name> CLTO </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000C040) CLTO Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.15..15> CLTO
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IEN_SSTOP  -----------------------------------
// SVD Line: 47624

//  <item> SFDITEM_FIELD__I2C0_IEN_SSTOP
//    <name> SSTOP </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000C040) SSTOP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.16..16> SSTOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IEN_RXFULL  ----------------------------------
// SVD Line: 47631

//  <item> SFDITEM_FIELD__I2C0_IEN_RXFULL
//    <name> RXFULL </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000C040) RXFULL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.17..17> RXFULL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_IEN_CLERR  -----------------------------------
// SVD Line: 47638

//  <item> SFDITEM_FIELD__I2C0_IEN_CLERR
//    <name> CLERR </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000C040) CLERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_IEN ) </loc>
//      <o.18..18> CLERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_IEN  ------------------------------------
// SVD Line: 47503

//  <rtree> SFDITEM_REG__I2C0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C040) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((I2C0_IEN >> 0) & 0xFFFFFFFF), ((I2C0_IEN = (I2C0_IEN & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_IEN_START </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_RSTART </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_ADDR </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_TXC </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_TXBL </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_RXDATAV </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_ACK </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_NACK </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_MSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_ARBLOST </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_BUSERR </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_BUSHOLD </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_TXOF </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_RXUF </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_BITO </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_CLTO </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_SSTOP </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_RXFULL </item>
//    <item> SFDITEM_FIELD__I2C0_IEN_CLERR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_ROUTEPEN  ------------------------------
// SVD Line: 47647

unsigned int I2C0_ROUTEPEN __AT (0x4000C044);



// ----------------------------  Field Item: I2C0_ROUTEPEN_SDAPEN  --------------------------------
// SVD Line: 47656

//  <item> SFDITEM_FIELD__I2C0_ROUTEPEN_SDAPEN
//    <name> SDAPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000C044) SDA Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_ROUTEPEN ) </loc>
//      <o.0..0> SDAPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C0_ROUTEPEN_SCLPEN  --------------------------------
// SVD Line: 47663

//  <item> SFDITEM_FIELD__I2C0_ROUTEPEN_SCLPEN
//    <name> SCLPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000C044) SCL Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_ROUTEPEN ) </loc>
//      <o.1..1> SCLPEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_ROUTEPEN  ---------------------------------
// SVD Line: 47647

//  <rtree> SFDITEM_REG__I2C0_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C044) I/O Routing Pin Enable Register </i>
//    <loc> ( (unsigned int)((I2C0_ROUTEPEN >> 0) & 0xFFFFFFFF), ((I2C0_ROUTEPEN = (I2C0_ROUTEPEN & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_ROUTEPEN_SDAPEN </item>
//    <item> SFDITEM_FIELD__I2C0_ROUTEPEN_SCLPEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_ROUTELOC0  -----------------------------
// SVD Line: 47672

unsigned int I2C0_ROUTELOC0 __AT (0x4000C048);



// ----------------------------  Field Item: I2C0_ROUTELOC0_SDALOC  -------------------------------
// SVD Line: 47681

//  <item> SFDITEM_FIELD__I2C0_ROUTELOC0_SDALOC
//    <name> SDALOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000C048) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C0_ROUTELOC0 ) </loc>
//      <o.5..0> SDALOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: I2C0_ROUTELOC0_SCLLOC  -------------------------------
// SVD Line: 47850

//  <item> SFDITEM_FIELD__I2C0_ROUTELOC0_SCLLOC
//    <name> SCLLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x4000C048) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C0_ROUTELOC0 ) </loc>
//      <o.13..8> SCLLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: I2C0_ROUTELOC0  ---------------------------------
// SVD Line: 47672

//  <rtree> SFDITEM_REG__I2C0_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C048) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((I2C0_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((I2C0_ROUTELOC0 = (I2C0_ROUTELOC0 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_ROUTELOC0_SDALOC </item>
//    <item> SFDITEM_FIELD__I2C0_ROUTELOC0_SCLLOC </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C0  -------------------------------------
// SVD Line: 46496

//  <view> I2C0
//    <name> I2C0 </name>
//    <item> SFDITEM_REG__I2C0_CTRL </item>
//    <item> SFDITEM_REG__I2C0_CMD </item>
//    <item> SFDITEM_REG__I2C0_STATE </item>
//    <item> SFDITEM_REG__I2C0_STATUS </item>
//    <item> SFDITEM_REG__I2C0_CLKDIV </item>
//    <item> SFDITEM_REG__I2C0_SADDR </item>
//    <item> SFDITEM_REG__I2C0_SADDRMASK </item>
//    <item> SFDITEM_REG__I2C0_RXDATAP </item>
//    <item> SFDITEM_REG__I2C0_RXDOUBLEP </item>
//    <item> SFDITEM_REG__I2C0_TXDATA </item>
//    <item> SFDITEM_REG__I2C0_TXDOUBLE </item>
//    <item> SFDITEM_REG__I2C0_IF </item>
//    <item> SFDITEM_REG__I2C0_IFS </item>
//    <item> SFDITEM_REG__I2C0_IFC </item>
//    <item> SFDITEM_REG__I2C0_IEN </item>
//    <item> SFDITEM_REG__I2C0_ROUTEPEN </item>
//    <item> SFDITEM_REG__I2C0_ROUTELOC0 </item>
//  </view>
//  


// ----------------------------  Register Item Address: ADC0_CTRL  --------------------------------
// SVD Line: 48037

unsigned int ADC0_CTRL __AT (0x40002000);



// ----------------------------  Field Item: ADC0_CTRL_WARMUPMODE  --------------------------------
// SVD Line: 48046

//  <item> SFDITEM_FIELD__ADC0_CTRL_WARMUPMODE
//    <name> WARMUPMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40002000) \nWarm-up Mode\n0 : NORMAL = ADC is shut down after each conversion. 5us warmup time is used before each conversion.\n1 : KEEPINSTANDBY = ADC is kept in standby mode between conversions. 1us warmup time is used before each conversion.\n2 : KEEPINSLOWACC = ADC is kept in slow acquisition mode between conversions. 1us warmup time is used before each conversion.\n3 : KEEPADCWARM = ADC is kept on after conversions, allowing for continuous conversion. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.1..0> WARMUPMODE
//        <0=> 0: NORMAL = ADC is shut down after each conversion. 5us warmup time is used before each conversion.
//        <1=> 1: KEEPINSTANDBY = ADC is kept in standby mode between conversions. 1us warmup time is used before each conversion.
//        <2=> 2: KEEPINSLOWACC = ADC is kept in slow acquisition mode between conversions. 1us warmup time is used before each conversion.
//        <3=> 3: KEEPADCWARM = ADC is kept on after conversions, allowing for continuous conversion.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC0_CTRL_SINGLEDMAWU  -------------------------------
// SVD Line: 48075

//  <item> SFDITEM_FIELD__ADC0_CTRL_SINGLEDMAWU
//    <name> SINGLEDMAWU </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002000) SINGLEFIFO DMA Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.2..2> SINGLEDMAWU
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CTRL_SCANDMAWU  --------------------------------
// SVD Line: 48082

//  <item> SFDITEM_FIELD__ADC0_CTRL_SCANDMAWU
//    <name> SCANDMAWU </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002000) SCANFIFO DMA Wakeup </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.3..3> SCANDMAWU
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CTRL_TAILGATE  ---------------------------------
// SVD Line: 48089

//  <item> SFDITEM_FIELD__ADC0_CTRL_TAILGATE
//    <name> TAILGATE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40002000) Conversion Tailgating </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.4..4> TAILGATE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ADC0_CTRL_ASYNCCLKEN  --------------------------------
// SVD Line: 48096

//  <item> SFDITEM_FIELD__ADC0_CTRL_ASYNCCLKEN
//    <name> ASYNCCLKEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40002000) Selects ASYNC CLK Enable Mode When ADCCLKMODE=1 </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.6..6> ASYNCCLKEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ADC0_CTRL_ADCCLKMODE  --------------------------------
// SVD Line: 48103

//  <item> SFDITEM_FIELD__ADC0_CTRL_ADCCLKMODE
//    <name> ADCCLKMODE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002000) ADC Clock Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.7..7> ADCCLKMODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_CTRL_PRESC  ----------------------------------
// SVD Line: 48110

//  <item> SFDITEM_FIELD__ADC0_CTRL_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x40002000) Prescalar Setting for ADC Sample and Conversion Clock </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CTRL >> 8) & 0x7F), ((ADC0_CTRL = (ADC0_CTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CTRL_TIMEBASE  ---------------------------------
// SVD Line: 48123

//  <item> SFDITEM_FIELD__ADC0_CTRL_TIMEBASE
//    <name> TIMEBASE </name>
//    <rw> 
//    <i> [Bits 22..16] RW (@ 0x40002000) 1us Time Base </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CTRL >> 16) & 0x7F), ((ADC0_CTRL = (ADC0_CTRL & ~(0x7FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: ADC0_CTRL_OVSRSEL  ---------------------------------
// SVD Line: 48130

//  <item> SFDITEM_FIELD__ADC0_CTRL_OVSRSEL
//    <name> OVSRSEL </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40002000) \nOversample Rate Select\n0 : X2 = 2 samples for each conversion result\n1 : X4 = 4 samples for each conversion result\n2 : X8 = 8 samples for each conversion result\n3 : X16 = 16 samples for each conversion result\n4 : X32 = 32 samples for each conversion result\n5 : X64 = 64 samples for each conversion result\n6 : X128 = 128 samples for each conversion result\n7 : X256 = 256 samples for each conversion result\n8 : X512 = 512 samples for each conversion result\n9 : X1024 = 1024 samples for each conversion result\n10 : X2048 = 2048 samples for each conversion result\n11 : X4096 = 4096 samples for each conversion result\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.27..24> OVSRSEL
//        <0=> 0: X2 = 2 samples for each conversion result
//        <1=> 1: X4 = 4 samples for each conversion result
//        <2=> 2: X8 = 8 samples for each conversion result
//        <3=> 3: X16 = 16 samples for each conversion result
//        <4=> 4: X32 = 32 samples for each conversion result
//        <5=> 5: X64 = 64 samples for each conversion result
//        <6=> 6: X128 = 128 samples for each conversion result
//        <7=> 7: X256 = 256 samples for each conversion result
//        <8=> 8: X512 = 512 samples for each conversion result
//        <9=> 9: X1024 = 1024 samples for each conversion result
//        <10=> 10: X2048 = 2048 samples for each conversion result
//        <11=> 11: X4096 = 4096 samples for each conversion result
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CTRL_CHCONMODE  --------------------------------
// SVD Line: 48199

//  <item> SFDITEM_FIELD__ADC0_CTRL_CHCONMODE
//    <name> CHCONMODE </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40002000) Channel Connect </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CTRL ) </loc>
//      <o.29..29> CHCONMODE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC0_CTRL  -----------------------------------
// SVD Line: 48037

//  <rtree> SFDITEM_REG__ADC0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002000) Control Register </i>
//    <loc> ( (unsigned int)((ADC0_CTRL >> 0) & 0xFFFFFFFF), ((ADC0_CTRL = (ADC0_CTRL & ~(0x2F7F7FDFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2F7F7FDF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_CTRL_WARMUPMODE </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_SINGLEDMAWU </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_SCANDMAWU </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_TAILGATE </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_ASYNCCLKEN </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_ADCCLKMODE </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_PRESC </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_TIMEBASE </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_OVSRSEL </item>
//    <item> SFDITEM_FIELD__ADC0_CTRL_CHCONMODE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC0_CMD  --------------------------------
// SVD Line: 48208

unsigned int ADC0_CMD __AT (0x40002008);



// ----------------------------  Field Item: ADC0_CMD_SINGLESTART  --------------------------------
// SVD Line: 48217

//  <item> SFDITEM_FIELD__ADC0_CMD_SINGLESTART
//    <name> SINGLESTART </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40002008) Single Channel Conversion Start </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CMD ) </loc>
//      <o.0..0> SINGLESTART
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CMD_SINGLESTOP  --------------------------------
// SVD Line: 48224

//  <item> SFDITEM_FIELD__ADC0_CMD_SINGLESTOP
//    <name> SINGLESTOP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40002008) Single Channel Conversion Stop </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CMD ) </loc>
//      <o.1..1> SINGLESTOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CMD_SCANSTART  ---------------------------------
// SVD Line: 48231

//  <item> SFDITEM_FIELD__ADC0_CMD_SCANSTART
//    <name> SCANSTART </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40002008) Scan Sequence Start </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CMD ) </loc>
//      <o.2..2> SCANSTART
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_CMD_SCANSTOP  ---------------------------------
// SVD Line: 48238

//  <item> SFDITEM_FIELD__ADC0_CMD_SCANSTOP
//    <name> SCANSTOP </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40002008) Scan Sequence Stop </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CMD ) </loc>
//      <o.3..3> SCANSTOP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC0_CMD  ------------------------------------
// SVD Line: 48208

//  <rtree> SFDITEM_REG__ADC0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002008) Command Register </i>
//    <loc> ( (unsigned int)((ADC0_CMD >> 0) & 0xFFFFFFFF), ((ADC0_CMD = (ADC0_CMD & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_CMD_SINGLESTART </item>
//    <item> SFDITEM_FIELD__ADC0_CMD_SINGLESTOP </item>
//    <item> SFDITEM_FIELD__ADC0_CMD_SCANSTART </item>
//    <item> SFDITEM_FIELD__ADC0_CMD_SCANSTOP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ADC0_STATUS  -------------------------------
// SVD Line: 48247

unsigned int ADC0_STATUS __AT (0x4000200C);



// ----------------------------  Field Item: ADC0_STATUS_SINGLEACT  -------------------------------
// SVD Line: 48256

//  <item> SFDITEM_FIELD__ADC0_STATUS_SINGLEACT
//    <name> SINGLEACT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000200C) Single Channel Conversion Active </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.0..0> SINGLEACT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_STATUS_SCANACT  --------------------------------
// SVD Line: 48263

//  <item> SFDITEM_FIELD__ADC0_STATUS_SCANACT
//    <name> SCANACT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000200C) Scan Conversion Active </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.1..1> SCANACT
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_STATUS_SINGLEREFWARM  -----------------------------
// SVD Line: 48270

//  <item> SFDITEM_FIELD__ADC0_STATUS_SINGLEREFWARM
//    <name> SINGLEREFWARM </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000200C) Single Channel Reference Warmed Up </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.8..8> SINGLEREFWARM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ADC0_STATUS_SCANREFWARM  ------------------------------
// SVD Line: 48277

//  <item> SFDITEM_FIELD__ADC0_STATUS_SCANREFWARM
//    <name> SCANREFWARM </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000200C) Scan Reference Warmed Up </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.9..9> SCANREFWARM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_STATUS_PROGERR  --------------------------------
// SVD Line: 48284

//  <item> SFDITEM_FIELD__ADC0_STATUS_PROGERR
//    <name> PROGERR </name>
//    <r> 
//    <i> [Bits 11..10] RO (@ 0x4000200C) \nProgramming Error Status\n0 : Reserved - do not use\n1 : BUSCONF = BUSCONF\n2 : NEGSELCONF = NEGSELCONF\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.11..10> PROGERR
//        <0=> 0: 
//        <1=> 1: BUSCONF = BUSCONF
//        <2=> 2: NEGSELCONF = NEGSELCONF
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC0_STATUS_WARM  ----------------------------------
// SVD Line: 48301

//  <item> SFDITEM_FIELD__ADC0_STATUS_WARM
//    <name> WARM </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4000200C) ADC Warmed Up </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.12..12> WARM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ADC0_STATUS_SINGLEDV  --------------------------------
// SVD Line: 48308

//  <item> SFDITEM_FIELD__ADC0_STATUS_SINGLEDV
//    <name> SINGLEDV </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000200C) Single Channel Data Valid </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.16..16> SINGLEDV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_STATUS_SCANDV  ---------------------------------
// SVD Line: 48315

//  <item> SFDITEM_FIELD__ADC0_STATUS_SCANDV
//    <name> SCANDV </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4000200C) Scan Data Valid </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_STATUS ) </loc>
//      <o.17..17> SCANDV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: ADC0_STATUS  ----------------------------------
// SVD Line: 48247

//  <rtree> SFDITEM_REG__ADC0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000200C) Status Register </i>
//    <loc> ( (unsigned int)((ADC0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_STATUS_SINGLEACT </item>
//    <item> SFDITEM_FIELD__ADC0_STATUS_SCANACT </item>
//    <item> SFDITEM_FIELD__ADC0_STATUS_SINGLEREFWARM </item>
//    <item> SFDITEM_FIELD__ADC0_STATUS_SCANREFWARM </item>
//    <item> SFDITEM_FIELD__ADC0_STATUS_PROGERR </item>
//    <item> SFDITEM_FIELD__ADC0_STATUS_WARM </item>
//    <item> SFDITEM_FIELD__ADC0_STATUS_SINGLEDV </item>
//    <item> SFDITEM_FIELD__ADC0_STATUS_SCANDV </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC0_SINGLECTRL  -----------------------------
// SVD Line: 48324

unsigned int ADC0_SINGLECTRL __AT (0x40002010);



// -----------------------------  Field Item: ADC0_SINGLECTRL_REP  --------------------------------
// SVD Line: 48333

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_REP
//    <name> REP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002010) Single Channel Repetitive Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.0..0> REP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ADC0_SINGLECTRL_DIFF  --------------------------------
// SVD Line: 48340

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_DIFF
//    <name> DIFF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002010) Single Channel Differential Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.1..1> DIFF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SINGLECTRL_ADJ  --------------------------------
// SVD Line: 48347

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_ADJ
//    <name> ADJ </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002010) Single Channel Result Adjustment </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.2..2> ADJ
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SINGLECTRL_RES  --------------------------------
// SVD Line: 48354

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_RES
//    <name> RES </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40002010) \nSingle Channel Resolution Select\n0 : 12BIT = 12-bit resolution.\n1 : 8BIT = 8-bit resolution.\n2 : 6BIT = 6-bit resolution.\n3 : OVS = Oversampling enabled. Oversampling rate is set in OVSRSEL. </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.4..3> RES
//        <0=> 0: 12BIT = 12-bit resolution.
//        <1=> 1: 8BIT = 8-bit resolution.
//        <2=> 2: 6BIT = 6-bit resolution.
//        <3=> 3: OVS = Oversampling enabled. Oversampling rate is set in OVSRSEL.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SINGLECTRL_REF  --------------------------------
// SVD Line: 48383

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_REF
//    <name> REF </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40002010) \nSingle Channel Reference Selection\n0 : 1V25 = VFS = 1.25V with internal VBGR reference\n1 : 2V5 = VFS = 2.5V with internal VBGR reference\n2 : VDD = VFS = AVDD with AVDD as reference source\n3 : 5V = VFS = 5V with internal VBGR reference\n4 : EXTSINGLE = Single ended external reference\n5 : 2XEXTDIFF = Differential external reference, 2x\n6 : 2XVDD = VFS = 2xAVDD with AVDD as the reference source\n7 : CONF = Use SINGLECTRLX to configure reference </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.7..5> REF
//        <0=> 0: 1V25 = VFS = 1.25V with internal VBGR reference
//        <1=> 1: 2V5 = VFS = 2.5V with internal VBGR reference
//        <2=> 2: VDD = VFS = AVDD with AVDD as reference source
//        <3=> 3: 5V = VFS = 5V with internal VBGR reference
//        <4=> 4: EXTSINGLE = Single ended external reference
//        <5=> 5: 2XEXTDIFF = Differential external reference, 2x
//        <6=> 6: 2XVDD = VFS = 2xAVDD with AVDD as the reference source
//        <7=> 7: CONF = Use SINGLECTRLX to configure reference
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC0_SINGLECTRL_POSSEL  -------------------------------
// SVD Line: 48432

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_POSSEL
//    <name> POSSEL </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40002010) Single Channel Positive Input Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SINGLECTRL >> 8) & 0xFF), ((ADC0_SINGLECTRL = (ADC0_SINGLECTRL & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC0_SINGLECTRL_NEGSEL  -------------------------------
// SVD Line: 48439

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_NEGSEL
//    <name> NEGSEL </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40002010) Single Channel Negative Input Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SINGLECTRL >> 16) & 0xFF), ((ADC0_SINGLECTRL = (ADC0_SINGLECTRL & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SINGLECTRL_AT  ---------------------------------
// SVD Line: 48446

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_AT
//    <name> AT </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40002010) \nSingle Channel Acquisition Time\n0 : 1CYCLE = 1 conversion clock cycle acquisition time for single channel\n1 : 2CYCLES = 2 conversion clock cycles acquisition time for single channel\n2 : 3CYCLES = 3 conversion clock cycles acquisition time for single channel\n3 : 4CYCLES = 4 conversion clock cycles acquisition time for single channel\n4 : 8CYCLES = 8 conversion clock cycles acquisition time for single channel\n5 : 16CYCLES = 16 conversion clock cycles acquisition time for single channel\n6 : 32CYCLES = 32 conversion clock cycles acquisition time for single channel\n7 : 64CYCLES = 64 conversion clock cycles acquisition time for single channel\n8 : 128CYCLES = 128 conversion clock cycles acquisition time for single channel\n9 : 256CYCLES = 256 conversion clock cycles acquisition time for single channel\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.27..24> AT
//        <0=> 0: 1CYCLE = 1 conversion clock cycle acquisition time for single channel
//        <1=> 1: 2CYCLES = 2 conversion clock cycles acquisition time for single channel
//        <2=> 2: 3CYCLES = 3 conversion clock cycles acquisition time for single channel
//        <3=> 3: 4CYCLES = 4 conversion clock cycles acquisition time for single channel
//        <4=> 4: 8CYCLES = 8 conversion clock cycles acquisition time for single channel
//        <5=> 5: 16CYCLES = 16 conversion clock cycles acquisition time for single channel
//        <6=> 6: 32CYCLES = 32 conversion clock cycles acquisition time for single channel
//        <7=> 7: 64CYCLES = 64 conversion clock cycles acquisition time for single channel
//        <8=> 8: 128CYCLES = 128 conversion clock cycles acquisition time for single channel
//        <9=> 9: 256CYCLES = 256 conversion clock cycles acquisition time for single channel
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ADC0_SINGLECTRL_PRSEN  -------------------------------
// SVD Line: 48505

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_PRSEN
//    <name> PRSEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40002010) Single Channel PRS Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.29..29> PRSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ADC0_SINGLECTRL_CMPEN  -------------------------------
// SVD Line: 48512

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRL_CMPEN
//    <name> CMPEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40002010) Compare Logic Enable for Single Channel </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRL ) </loc>
//      <o.31..31> CMPEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ADC0_SINGLECTRL  --------------------------------
// SVD Line: 48324

//  <rtree> SFDITEM_REG__ADC0_SINGLECTRL
//    <name> SINGLECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002010) Single Channel Control Register </i>
//    <loc> ( (unsigned int)((ADC0_SINGLECTRL >> 0) & 0xFFFFFFFF), ((ADC0_SINGLECTRL = (ADC0_SINGLECTRL & ~(0xAFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xAFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_REP </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_DIFF </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_ADJ </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_RES </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_REF </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_POSSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_AT </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_PRSEN </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRL_CMPEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC0_SINGLECTRLX  ----------------------------
// SVD Line: 48521

unsigned int ADC0_SINGLECTRLX __AT (0x40002014);



// --------------------------  Field Item: ADC0_SINGLECTRLX_VREFSEL  ------------------------------
// SVD Line: 48530

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VREFSEL
//    <name> VREFSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40002014) \nSingle Channel Reference Selection\n0 : VBGR = Internal 0.83V Bandgap reference\n1 : VDDXWATT = Scaled AVDD: AVDD*(the VREF attenuation factor)\n2 : VREFPWATT = Scaled singled ended external Vref: ADCn_EXTP*(the VREF attenuation factor)\n3 : VREFP = Raw single ended external Vref: ADCn_EXTP\n4 : VENTROPY = Special mode used to generate ENTROPY.\n5 : VREFPNWATT = Scaled differential external Vref from : (ADCn_EXTP-ADCn_EXTN)*(the VREF attenuation factor)\n6 : VREFPN = Raw differential external Vref from : (ADCn_EXTP-ADCn_EXTN)\n7 : VBGRLOW = Internal Bandgap reference at low setting 0.78V </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRLX ) </loc>
//      <o.2..0> VREFSEL
//        <0=> 0: VBGR = Internal 0.83V Bandgap reference
//        <1=> 1: VDDXWATT = Scaled AVDD: AVDD*(the VREF attenuation factor)
//        <2=> 2: VREFPWATT = Scaled singled ended external Vref: ADCn_EXTP*(the VREF attenuation factor)
//        <3=> 3: VREFP = Raw single ended external Vref: ADCn_EXTP
//        <4=> 4: VENTROPY = Special mode used to generate ENTROPY.
//        <5=> 5: VREFPNWATT = Scaled differential external Vref from : (ADCn_EXTP-ADCn_EXTN)*(the VREF attenuation factor)
//        <6=> 6: VREFPN = Raw differential external Vref from : (ADCn_EXTP-ADCn_EXTN)
//        <7=> 7: VBGRLOW = Internal Bandgap reference at low setting 0.78V
//    </combo>
//  </item>
//  


// -------------------------  Field Item: ADC0_SINGLECTRLX_VREFATTFIX  ----------------------------
// SVD Line: 48579

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VREFATTFIX
//    <name> VREFATTFIX </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002014) Enable Fixed Scaling on VREF </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRLX ) </loc>
//      <o.3..3> VREFATTFIX
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_SINGLECTRLX_VREFATT  ------------------------------
// SVD Line: 48586

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VREFATT
//    <name> VREFATT </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40002014) Code for VREF Attenuation Factor When VREFSEL is 1, 2 or 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SINGLECTRLX >> 4) & 0xF), ((ADC0_SINGLECTRLX = (ADC0_SINGLECTRLX & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC0_SINGLECTRLX_VINATT  ------------------------------
// SVD Line: 48593

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VINATT
//    <name> VINATT </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40002014) Code for VIN Attenuation Factor </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SINGLECTRLX >> 8) & 0xF), ((ADC0_SINGLECTRLX = (ADC0_SINGLECTRLX & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: ADC0_SINGLECTRLX_DVL  --------------------------------
// SVD Line: 48600

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_DVL
//    <name> DVL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40002014) Single Channel DV Level Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SINGLECTRLX >> 12) & 0x3), ((ADC0_SINGLECTRLX = (ADC0_SINGLECTRLX & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: ADC0_SINGLECTRLX_FIFOOFACT  -----------------------------
// SVD Line: 48607

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_FIFOOFACT
//    <name> FIFOOFACT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40002014) Single Channel FIFO Overflow Action </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRLX ) </loc>
//      <o.14..14> FIFOOFACT
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_SINGLECTRLX_PRSMODE  ------------------------------
// SVD Line: 48614

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_PRSMODE
//    <name> PRSMODE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40002014) Single Channel PRS Trigger Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRLX ) </loc>
//      <o.16..16> PRSMODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ADC0_SINGLECTRLX_PRSSEL  ------------------------------
// SVD Line: 48621

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 20..17] RW (@ 0x40002014) \nSingle Channel PRS Trigger Select\n0 : PRSCH0 = PRS ch 0 triggers single channel\n1 : PRSCH1 = PRS ch 1 triggers single channel\n2 : PRSCH2 = PRS ch 2 triggers single channel\n3 : PRSCH3 = PRS ch 3 triggers single channel\n4 : PRSCH4 = PRS ch 4 triggers single channel\n5 : PRSCH5 = PRS ch 5 triggers single channel\n6 : PRSCH6 = PRS ch 6 triggers single channel\n7 : PRSCH7 = PRS ch 7 triggers single channel\n8 : PRSCH8 = PRS ch 8 triggers single channel\n9 : PRSCH9 = PRS ch 9 triggers single channel\n10 : PRSCH10 = PRS ch 10 triggers single channel\n11 : PRSCH11 = PRS ch 11 triggers single channel\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRLX ) </loc>
//      <o.20..17> PRSSEL
//        <0=> 0: PRSCH0 = PRS ch 0 triggers single channel
//        <1=> 1: PRSCH1 = PRS ch 1 triggers single channel
//        <2=> 2: PRSCH2 = PRS ch 2 triggers single channel
//        <3=> 3: PRSCH3 = PRS ch 3 triggers single channel
//        <4=> 4: PRSCH4 = PRS ch 4 triggers single channel
//        <5=> 5: PRSCH5 = PRS ch 5 triggers single channel
//        <6=> 6: PRSCH6 = PRS ch 6 triggers single channel
//        <7=> 7: PRSCH7 = PRS ch 7 triggers single channel
//        <8=> 8: PRSCH8 = PRS ch 8 triggers single channel
//        <9=> 9: PRSCH9 = PRS ch 9 triggers single channel
//        <10=> 10: PRSCH10 = PRS ch 10 triggers single channel
//        <11=> 11: PRSCH11 = PRS ch 11 triggers single channel
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------  Field Item: ADC0_SINGLECTRLX_CONVSTARTDELAY  --------------------------
// SVD Line: 48690

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_CONVSTARTDELAY
//    <name> CONVSTARTDELAY </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40002014) Delay Value for Next Conversion Start If CONVSTARTDELAYEN is Set </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SINGLECTRLX >> 24) & 0x7), ((ADC0_SINGLECTRLX = (ADC0_SINGLECTRLX & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: ADC0_SINGLECTRLX_CONVSTARTDELAYEN  -------------------------
// SVD Line: 48697

//  <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_CONVSTARTDELAYEN
//    <name> CONVSTARTDELAYEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40002014) Enable Delaying Next Conversion Start </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLECTRLX ) </loc>
//      <o.27..27> CONVSTARTDELAYEN
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: ADC0_SINGLECTRLX  --------------------------------
// SVD Line: 48521

//  <rtree> SFDITEM_REG__ADC0_SINGLECTRLX
//    <name> SINGLECTRLX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002014) Single Channel Control Register Continued </i>
//    <loc> ( (unsigned int)((ADC0_SINGLECTRLX >> 0) & 0xFFFFFFFF), ((ADC0_SINGLECTRLX = (ADC0_SINGLECTRLX & ~(0xF1F7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF1F7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VREFSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VREFATTFIX </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VREFATT </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_VINATT </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_DVL </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_FIFOOFACT </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_PRSMODE </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_PRSSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_CONVSTARTDELAY </item>
//    <item> SFDITEM_FIELD__ADC0_SINGLECTRLX_CONVSTARTDELAYEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC0_SCANCTRL  ------------------------------
// SVD Line: 48706

unsigned int ADC0_SCANCTRL __AT (0x40002018);



// ------------------------------  Field Item: ADC0_SCANCTRL_REP  ---------------------------------
// SVD Line: 48715

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_REP
//    <name> REP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002018) Scan Sequence Repetitive Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.0..0> REP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SCANCTRL_DIFF  ---------------------------------
// SVD Line: 48722

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_DIFF
//    <name> DIFF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002018) Scan Sequence Differential Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.1..1> DIFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_SCANCTRL_ADJ  ---------------------------------
// SVD Line: 48729

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_ADJ
//    <name> ADJ </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002018) Scan Sequence Result Adjustment </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.2..2> ADJ
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_SCANCTRL_RES  ---------------------------------
// SVD Line: 48736

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_RES
//    <name> RES </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40002018) \nScan Sequence Resolution Select\n0 : 12BIT = 12-bit resolution\n1 : 8BIT = 8-bit resolution\n2 : 6BIT = 6-bit resolution\n3 : OVS = Oversampling enabled. Oversampling rate is set in OVSRSEL </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.4..3> RES
//        <0=> 0: 12BIT = 12-bit resolution
//        <1=> 1: 8BIT = 8-bit resolution
//        <2=> 2: 6BIT = 6-bit resolution
//        <3=> 3: OVS = Oversampling enabled. Oversampling rate is set in OVSRSEL
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC0_SCANCTRL_REF  ---------------------------------
// SVD Line: 48765

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_REF
//    <name> REF </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40002018) \nScan Sequence Reference Selection\n0 : 1V25 = VFS = 1.25V with internal VBGR reference\n1 : 2V5 = VFS = 2.5V with internal VBGR reference\n2 : VDD = VFS = AVDD with AVDD as reference source\n3 : 5V = VFS = 5V with internal VBGR reference\n4 : EXTSINGLE = Single ended external reference\n5 : 2XEXTDIFF = Differential external reference, 2x\n6 : 2XVDD = VFS=2xAVDD with AVDD as the reference source\n7 : CONF = Use SCANCTRLX to configure reference </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.7..5> REF
//        <0=> 0: 1V25 = VFS = 1.25V with internal VBGR reference
//        <1=> 1: 2V5 = VFS = 2.5V with internal VBGR reference
//        <2=> 2: VDD = VFS = AVDD with AVDD as reference source
//        <3=> 3: 5V = VFS = 5V with internal VBGR reference
//        <4=> 4: EXTSINGLE = Single ended external reference
//        <5=> 5: 2XEXTDIFF = Differential external reference, 2x
//        <6=> 6: 2XVDD = VFS=2xAVDD with AVDD as the reference source
//        <7=> 7: CONF = Use SCANCTRLX to configure reference
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC0_SCANCTRL_AT  ----------------------------------
// SVD Line: 48814

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_AT
//    <name> AT </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40002018) \nScan Acquisition Time\n0 : 1CYCLE = 1 conversion clock cycle acquisition time for scan\n1 : 2CYCLES = 2 conversion clock cycles acquisition time for scan\n2 : 3CYCLES = 3 conversion clock cycles acquisition time for scan\n3 : 4CYCLES = 4 conversion clock cycles acquisition time for scan\n4 : 8CYCLES = 8 conversion clock cycles acquisition time for scan\n5 : 16CYCLES = 16 conversion clock cycles acquisition time for scan\n6 : 32CYCLES = 32 conversion clock cycles acquisition time for scan\n7 : 64CYCLES = 64 conversion clock cycles acquisition time for scan\n8 : 128CYCLES = 128 conversion clock cycles acquisition time for scan\n9 : 256CYCLES = 256 conversion clock cycles acquisition time for scan\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.27..24> AT
//        <0=> 0: 1CYCLE = 1 conversion clock cycle acquisition time for scan
//        <1=> 1: 2CYCLES = 2 conversion clock cycles acquisition time for scan
//        <2=> 2: 3CYCLES = 3 conversion clock cycles acquisition time for scan
//        <3=> 3: 4CYCLES = 4 conversion clock cycles acquisition time for scan
//        <4=> 4: 8CYCLES = 8 conversion clock cycles acquisition time for scan
//        <5=> 5: 16CYCLES = 16 conversion clock cycles acquisition time for scan
//        <6=> 6: 32CYCLES = 32 conversion clock cycles acquisition time for scan
//        <7=> 7: 64CYCLES = 64 conversion clock cycles acquisition time for scan
//        <8=> 8: 128CYCLES = 128 conversion clock cycles acquisition time for scan
//        <9=> 9: 256CYCLES = 256 conversion clock cycles acquisition time for scan
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SCANCTRL_PRSEN  --------------------------------
// SVD Line: 48873

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_PRSEN
//    <name> PRSEN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40002018) Scan Sequence PRS Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.29..29> PRSEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SCANCTRL_CMPEN  --------------------------------
// SVD Line: 48880

//  <item> SFDITEM_FIELD__ADC0_SCANCTRL_CMPEN
//    <name> CMPEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40002018) Compare Logic Enable for Scan </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRL ) </loc>
//      <o.31..31> CMPEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: ADC0_SCANCTRL  ---------------------------------
// SVD Line: 48706

//  <rtree> SFDITEM_REG__ADC0_SCANCTRL
//    <name> SCANCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002018) Scan Control Register </i>
//    <loc> ( (unsigned int)((ADC0_SCANCTRL >> 0) & 0xFFFFFFFF), ((ADC0_SCANCTRL = (ADC0_SCANCTRL & ~(0xAF0000FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xAF0000FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_REP </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_DIFF </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_ADJ </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_RES </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_REF </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_AT </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_PRSEN </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRL_CMPEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC0_SCANCTRLX  -----------------------------
// SVD Line: 48889

unsigned int ADC0_SCANCTRLX __AT (0x4000201C);



// ---------------------------  Field Item: ADC0_SCANCTRLX_VREFSEL  -------------------------------
// SVD Line: 48898

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VREFSEL
//    <name> VREFSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000201C) \nScan Channel Reference Selection\n0 : VBGR = Internal 0.83V Bandgap reference\n1 : VDDXWATT = Scaled AVDD: AVDD*(the VREF attenuation factor)\n2 : VREFPWATT = Scaled singled ended external Vref: ADCn_EXTP*(the VREF attenuation factor)\n3 : VREFP = Raw single ended external Vref: ADCn_EXTP\n4 : Reserved - do not use\n5 : VREFPNWATT = Scaled differential external Vref from : (ADCn_EXTP-ADCn_EXTN)*(the VREF attenuation factor)\n6 : VREFPN = Raw differential external Vref from : (ADCn_EXTP-ADCn_EXTN)\n7 : VBGRLOW = Internal Bandgap reference at low setting 0.78V </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANCTRLX ) </loc>
//      <o.2..0> VREFSEL
//        <0=> 0: VBGR = Internal 0.83V Bandgap reference
//        <1=> 1: VDDXWATT = Scaled AVDD: AVDD*(the VREF attenuation factor)
//        <2=> 2: VREFPWATT = Scaled singled ended external Vref: ADCn_EXTP*(the VREF attenuation factor)
//        <3=> 3: VREFP = Raw single ended external Vref: ADCn_EXTP
//        <4=> 4: 
//        <5=> 5: VREFPNWATT = Scaled differential external Vref from : (ADCn_EXTP-ADCn_EXTN)*(the VREF attenuation factor)
//        <6=> 6: VREFPN = Raw differential external Vref from : (ADCn_EXTP-ADCn_EXTN)
//        <7=> 7: VBGRLOW = Internal Bandgap reference at low setting 0.78V
//    </combo>
//  </item>
//  


// --------------------------  Field Item: ADC0_SCANCTRLX_VREFATTFIX  -----------------------------
// SVD Line: 48942

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VREFATTFIX
//    <name> VREFATTFIX </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000201C) Enable Fixed Scaling on VREF </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRLX ) </loc>
//      <o.3..3> VREFATTFIX
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ADC0_SCANCTRLX_VREFATT  -------------------------------
// SVD Line: 48949

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VREFATT
//    <name> VREFATT </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4000201C) Code for VREF Attenuation Factor When VREFSEL is 1, 2 or 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SCANCTRLX >> 4) & 0xF), ((ADC0_SCANCTRLX = (ADC0_SCANCTRLX & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: ADC0_SCANCTRLX_VINATT  -------------------------------
// SVD Line: 48956

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VINATT
//    <name> VINATT </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000201C) Code for VIN Attenuation Factor </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SCANCTRLX >> 8) & 0xF), ((ADC0_SCANCTRLX = (ADC0_SCANCTRLX & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC0_SCANCTRLX_DVL  ---------------------------------
// SVD Line: 48963

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_DVL
//    <name> DVL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4000201C) Scan DV Level Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SCANCTRLX >> 12) & 0x3), ((ADC0_SCANCTRLX = (ADC0_SCANCTRLX & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: ADC0_SCANCTRLX_FIFOOFACT  ------------------------------
// SVD Line: 48970

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_FIFOOFACT
//    <name> FIFOOFACT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000201C) Scan FIFO Overflow Action </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRLX ) </loc>
//      <o.14..14> FIFOOFACT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ADC0_SCANCTRLX_PRSMODE  -------------------------------
// SVD Line: 48977

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_PRSMODE
//    <name> PRSMODE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000201C) Scan PRS Trigger Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRLX ) </loc>
//      <o.16..16> PRSMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ADC0_SCANCTRLX_PRSSEL  -------------------------------
// SVD Line: 48984

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 20..17] RW (@ 0x4000201C) \nScan Sequence PRS Trigger Select\n0 : PRSCH0 = PRS ch 0 triggers scan sequence\n1 : PRSCH1 = PRS ch 1 triggers scan sequence\n2 : PRSCH2 = PRS ch 2 triggers scan sequence\n3 : PRSCH3 = PRS ch 3 triggers scan sequence\n4 : PRSCH4 = PRS ch 4 triggers scan sequence\n5 : PRSCH5 = PRS ch 5 triggers scan sequence\n6 : PRSCH6 = PRS ch 6 triggers scan sequence\n7 : PRSCH7 = PRS ch 7 triggers scan sequence\n8 : PRSCH8 = PRS ch 8 triggers scan sequence\n9 : PRSCH9 = PRS ch 9 triggers scan sequence\n10 : PRSCH10 = PRS ch 10 triggers scan sequence\n11 : PRSCH11 = PRS ch 11 triggers scan sequence\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANCTRLX ) </loc>
//      <o.20..17> PRSSEL
//        <0=> 0: PRSCH0 = PRS ch 0 triggers scan sequence
//        <1=> 1: PRSCH1 = PRS ch 1 triggers scan sequence
//        <2=> 2: PRSCH2 = PRS ch 2 triggers scan sequence
//        <3=> 3: PRSCH3 = PRS ch 3 triggers scan sequence
//        <4=> 4: PRSCH4 = PRS ch 4 triggers scan sequence
//        <5=> 5: PRSCH5 = PRS ch 5 triggers scan sequence
//        <6=> 6: PRSCH6 = PRS ch 6 triggers scan sequence
//        <7=> 7: PRSCH7 = PRS ch 7 triggers scan sequence
//        <8=> 8: PRSCH8 = PRS ch 8 triggers scan sequence
//        <9=> 9: PRSCH9 = PRS ch 9 triggers scan sequence
//        <10=> 10: PRSCH10 = PRS ch 10 triggers scan sequence
//        <11=> 11: PRSCH11 = PRS ch 11 triggers scan sequence
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANCTRLX_CONVSTARTDELAY  ---------------------------
// SVD Line: 49053

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_CONVSTARTDELAY
//    <name> CONVSTARTDELAY </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x4000201C) Delay Next Conversion Start If CONVSTARTDELAYEN is Set </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SCANCTRLX >> 24) & 0x7), ((ADC0_SCANCTRLX = (ADC0_SCANCTRLX & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: ADC0_SCANCTRLX_CONVSTARTDELAYEN  --------------------------
// SVD Line: 49060

//  <item> SFDITEM_FIELD__ADC0_SCANCTRLX_CONVSTARTDELAYEN
//    <name> CONVSTARTDELAYEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4000201C) Enable Delaying Next Conversion Start </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANCTRLX ) </loc>
//      <o.27..27> CONVSTARTDELAYEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ADC0_SCANCTRLX  ---------------------------------
// SVD Line: 48889

//  <rtree> SFDITEM_REG__ADC0_SCANCTRLX
//    <name> SCANCTRLX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000201C) Scan Control Register Continued </i>
//    <loc> ( (unsigned int)((ADC0_SCANCTRLX >> 0) & 0xFFFFFFFF), ((ADC0_SCANCTRLX = (ADC0_SCANCTRLX & ~(0xF1F7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF1F7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VREFSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VREFATTFIX </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VREFATT </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_VINATT </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_DVL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_FIFOOFACT </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_PRSMODE </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_PRSSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_CONVSTARTDELAY </item>
//    <item> SFDITEM_FIELD__ADC0_SCANCTRLX_CONVSTARTDELAYEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC0_SCANMASK  ------------------------------
// SVD Line: 49069

unsigned int ADC0_SCANMASK __AT (0x40002020);



// --------------------------  Field Item: ADC0_SCANMASK_SCANINPUTEN  -----------------------------
// SVD Line: 49078

//  <item> SFDITEM_FIELD__ADC0_SCANMASK_SCANINPUTEN
//    <name> SCANINPUTEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002020) Scan Sequence Input Mask </i>
//    <edit> 
//      <loc> ( (unsigned int)((ADC0_SCANMASK >> 0) & 0xFFFFFFFF), ((ADC0_SCANMASK = (ADC0_SCANMASK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: ADC0_SCANMASK  ---------------------------------
// SVD Line: 49069

//  <rtree> SFDITEM_REG__ADC0_SCANMASK
//    <name> SCANMASK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002020) Scan Sequence Input Mask Register </i>
//    <loc> ( (unsigned int)((ADC0_SCANMASK >> 0) & 0xFFFFFFFF), ((ADC0_SCANMASK = (ADC0_SCANMASK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANMASK_SCANINPUTEN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ADC0_SCANINPUTSEL  ----------------------------
// SVD Line: 49087

unsigned int ADC0_SCANINPUTSEL __AT (0x40002024);



// -----------------------  Field Item: ADC0_SCANINPUTSEL_INPUT0TO7SEL  ---------------------------
// SVD Line: 49096

//  <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT0TO7SEL
//    <name> INPUT0TO7SEL </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40002024) \nInputs Chosen for ADCn_INPUT7-ADCn_INPUT0 as Referred in SCANMASK\n0 : APORT0CH0TO7 = APORT0CH0TO7\n1 : APORT0CH8TO15 = APORT0CH8TO15\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : APORT1CH0TO7 = APORT1CH0TO7\n5 : APORT1CH8TO15 = APORT1CH8TO15\n6 : APORT1CH16TO23 = APORT1CH16TO23\n7 : APORT1CH24TO31 = APORT1CH24TO31\n8 : APORT2CH0TO7 = APORT2CH0TO7\n9 : APORT2CH8TO15 = APORT2CH8TO15\n10 : APORT2CH16TO23 = APORT2CH16TO23\n11 : APORT2CH24TO31 = APORT2CH24TO31\n12 : APORT3CH0TO7 = APORT3CH0TO7\n13 : APORT3CH8TO15 = APORT3CH8TO15\n14 : APORT3CH16TO23 = APORT3CH16TO23\n15 : APORT3CH24TO31 = APORT3CH24TO31\n16 : APORT4CH0TO7 = APORT4CH0TO7\n17 : APORT4CH8TO15 = APORT4CH8TO15\n18 : APORT4CH16TO23 = APORT4CH16TO23\n19 : APORT4CH24TO31 = APORT4CH24TO31\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANINPUTSEL ) </loc>
//      <o.4..0> INPUT0TO7SEL
//        <0=> 0: APORT0CH0TO7 = APORT0CH0TO7
//        <1=> 1: APORT0CH8TO15 = APORT0CH8TO15
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: APORT1CH0TO7 = APORT1CH0TO7
//        <5=> 5: APORT1CH8TO15 = APORT1CH8TO15
//        <6=> 6: APORT1CH16TO23 = APORT1CH16TO23
//        <7=> 7: APORT1CH24TO31 = APORT1CH24TO31
//        <8=> 8: APORT2CH0TO7 = APORT2CH0TO7
//        <9=> 9: APORT2CH8TO15 = APORT2CH8TO15
//        <10=> 10: APORT2CH16TO23 = APORT2CH16TO23
//        <11=> 11: APORT2CH24TO31 = APORT2CH24TO31
//        <12=> 12: APORT3CH0TO7 = APORT3CH0TO7
//        <13=> 13: APORT3CH8TO15 = APORT3CH8TO15
//        <14=> 14: APORT3CH16TO23 = APORT3CH16TO23
//        <15=> 15: APORT3CH24TO31 = APORT3CH24TO31
//        <16=> 16: APORT4CH0TO7 = APORT4CH0TO7
//        <17=> 17: APORT4CH8TO15 = APORT4CH8TO15
//        <18=> 18: APORT4CH16TO23 = APORT4CH16TO23
//        <19=> 19: APORT4CH24TO31 = APORT4CH24TO31
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// -----------------------  Field Item: ADC0_SCANINPUTSEL_INPUT8TO15SEL  --------------------------
// SVD Line: 49177

//  <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT8TO15SEL
//    <name> INPUT8TO15SEL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40002024) \nInputs Chosen for ADCn_INPUT8-ADCn_INPUT15 as Referred in SCANMASK\n0 : APORT0CH0TO7 = APORT0CH0TO7\n1 : APORT0CH8TO15 = APORT0CH8TO15\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : APORT1CH0TO7 = APORT1CH0TO7\n5 : APORT1CH8TO15 = APORT1CH8TO15\n6 : APORT1CH16TO23 = APORT1CH16TO23\n7 : APORT1CH24TO31 = APORT1CH24TO31\n8 : APORT2CH0TO7 = APORT2CH0TO7\n9 : APORT2CH8TO15 = APORT2CH8TO15\n10 : APORT2CH16TO23 = APORT2CH16TO23\n11 : APORT2CH24TO31 = APORT2CH24TO31\n12 : APORT3CH0TO7 = APORT3CH0TO7\n13 : APORT3CH8TO15 = APORT3CH8TO15\n14 : APORT3CH16TO23 = APORT3CH16TO23\n15 : APORT3CH24TO31 = APORT3CH24TO31\n16 : APORT4CH0TO7 = APORT4CH0TO7\n17 : APORT4CH8TO15 = APORT4CH8TO15\n18 : APORT4CH16TO23 = APORT4CH16TO23\n19 : APORT4CH24TO31 = APORT4CH24TO31\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANINPUTSEL ) </loc>
//      <o.12..8> INPUT8TO15SEL
//        <0=> 0: APORT0CH0TO7 = APORT0CH0TO7
//        <1=> 1: APORT0CH8TO15 = APORT0CH8TO15
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: APORT1CH0TO7 = APORT1CH0TO7
//        <5=> 5: APORT1CH8TO15 = APORT1CH8TO15
//        <6=> 6: APORT1CH16TO23 = APORT1CH16TO23
//        <7=> 7: APORT1CH24TO31 = APORT1CH24TO31
//        <8=> 8: APORT2CH0TO7 = APORT2CH0TO7
//        <9=> 9: APORT2CH8TO15 = APORT2CH8TO15
//        <10=> 10: APORT2CH16TO23 = APORT2CH16TO23
//        <11=> 11: APORT2CH24TO31 = APORT2CH24TO31
//        <12=> 12: APORT3CH0TO7 = APORT3CH0TO7
//        <13=> 13: APORT3CH8TO15 = APORT3CH8TO15
//        <14=> 14: APORT3CH16TO23 = APORT3CH16TO23
//        <15=> 15: APORT3CH24TO31 = APORT3CH24TO31
//        <16=> 16: APORT4CH0TO7 = APORT4CH0TO7
//        <17=> 17: APORT4CH8TO15 = APORT4CH8TO15
//        <18=> 18: APORT4CH16TO23 = APORT4CH16TO23
//        <19=> 19: APORT4CH24TO31 = APORT4CH24TO31
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// ----------------------  Field Item: ADC0_SCANINPUTSEL_INPUT16TO23SEL  --------------------------
// SVD Line: 49258

//  <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT16TO23SEL
//    <name> INPUT16TO23SEL </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40002024) \nInputs Chosen for ADCn_INPUT16-ADCn_INPUT23 as Referred in SCANMASK\n0 : APORT0CH0TO7 = APORT0CH0TO7\n1 : APORT0CH8TO15 = APORT0CH8TO15\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : APORT1CH0TO7 = APORT1CH0TO7\n5 : APORT1CH8TO15 = APORT1CH8TO15\n6 : APORT1CH16TO23 = APORT1CH16TO23\n7 : APORT1CH24TO31 = APORT1CH24TO31\n8 : APORT2CH0TO7 = APORT2CH0TO7\n9 : APORT2CH8TO15 = APORT2CH8TO15\n10 : APORT2CH16TO23 = APORT2CH16TO23\n11 : APORT2CH24TO31 = APORT2CH24TO31\n12 : APORT3CH0TO7 = APORT3CH0TO7\n13 : APORT3CH8TO15 = APORT3CH8TO15\n14 : APORT3CH16TO23 = APORT3CH16TO23\n15 : APORT3CH24TO31 = APORT3CH24TO31\n16 : APORT4CH0TO7 = APORT4CH0TO7\n17 : APORT4CH8TO15 = APORT4CH8TO15\n18 : APORT4CH16TO23 = APORT4CH16TO23\n19 : APORT4CH24TO31 = APORT4CH24TO31\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANINPUTSEL ) </loc>
//      <o.20..16> INPUT16TO23SEL
//        <0=> 0: APORT0CH0TO7 = APORT0CH0TO7
//        <1=> 1: APORT0CH8TO15 = APORT0CH8TO15
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: APORT1CH0TO7 = APORT1CH0TO7
//        <5=> 5: APORT1CH8TO15 = APORT1CH8TO15
//        <6=> 6: APORT1CH16TO23 = APORT1CH16TO23
//        <7=> 7: APORT1CH24TO31 = APORT1CH24TO31
//        <8=> 8: APORT2CH0TO7 = APORT2CH0TO7
//        <9=> 9: APORT2CH8TO15 = APORT2CH8TO15
//        <10=> 10: APORT2CH16TO23 = APORT2CH16TO23
//        <11=> 11: APORT2CH24TO31 = APORT2CH24TO31
//        <12=> 12: APORT3CH0TO7 = APORT3CH0TO7
//        <13=> 13: APORT3CH8TO15 = APORT3CH8TO15
//        <14=> 14: APORT3CH16TO23 = APORT3CH16TO23
//        <15=> 15: APORT3CH24TO31 = APORT3CH24TO31
//        <16=> 16: APORT4CH0TO7 = APORT4CH0TO7
//        <17=> 17: APORT4CH8TO15 = APORT4CH8TO15
//        <18=> 18: APORT4CH16TO23 = APORT4CH16TO23
//        <19=> 19: APORT4CH24TO31 = APORT4CH24TO31
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// ----------------------  Field Item: ADC0_SCANINPUTSEL_INPUT24TO31SEL  --------------------------
// SVD Line: 49339

//  <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT24TO31SEL
//    <name> INPUT24TO31SEL </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40002024) \nInputs Chosen for ADCn_INPUT24-ADCn_INPUT31 as Referred in SCANMASK\n0 : APORT0CH0TO7 = APORT0CH0TO7\n1 : APORT0CH8TO15 = APORT0CH8TO15\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : APORT1CH0TO7 = APORT1CH0TO7\n5 : APORT1CH8TO15 = APORT1CH8TO15\n6 : APORT1CH16TO23 = APORT1CH16TO23\n7 : APORT1CH24TO31 = APORT1CH24TO31\n8 : APORT2CH0TO7 = APORT2CH0TO7\n9 : APORT2CH8TO15 = APORT2CH8TO15\n10 : APORT2CH16TO23 = APORT2CH16TO23\n11 : APORT2CH24TO31 = APORT2CH24TO31\n12 : APORT3CH0TO7 = APORT3CH0TO7\n13 : APORT3CH8TO15 = APORT3CH8TO15\n14 : APORT3CH16TO23 = APORT3CH16TO23\n15 : APORT3CH24TO31 = APORT3CH24TO31\n16 : APORT4CH0TO7 = APORT4CH0TO7\n17 : APORT4CH8TO15 = APORT4CH8TO15\n18 : APORT4CH16TO23 = APORT4CH16TO23\n19 : APORT4CH24TO31 = APORT4CH24TO31\n20 : Reserved - do not use\n21 : Reserved - do not use\n22 : Reserved - do not use\n23 : Reserved - do not use\n24 : Reserved - do not use\n25 : Reserved - do not use\n26 : Reserved - do not use\n27 : Reserved - do not use\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANINPUTSEL ) </loc>
//      <o.28..24> INPUT24TO31SEL
//        <0=> 0: APORT0CH0TO7 = APORT0CH0TO7
//        <1=> 1: APORT0CH8TO15 = APORT0CH8TO15
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: APORT1CH0TO7 = APORT1CH0TO7
//        <5=> 5: APORT1CH8TO15 = APORT1CH8TO15
//        <6=> 6: APORT1CH16TO23 = APORT1CH16TO23
//        <7=> 7: APORT1CH24TO31 = APORT1CH24TO31
//        <8=> 8: APORT2CH0TO7 = APORT2CH0TO7
//        <9=> 9: APORT2CH8TO15 = APORT2CH8TO15
//        <10=> 10: APORT2CH16TO23 = APORT2CH16TO23
//        <11=> 11: APORT2CH24TO31 = APORT2CH24TO31
//        <12=> 12: APORT3CH0TO7 = APORT3CH0TO7
//        <13=> 13: APORT3CH8TO15 = APORT3CH8TO15
//        <14=> 14: APORT3CH16TO23 = APORT3CH16TO23
//        <15=> 15: APORT3CH24TO31 = APORT3CH24TO31
//        <16=> 16: APORT4CH0TO7 = APORT4CH0TO7
//        <17=> 17: APORT4CH8TO15 = APORT4CH8TO15
//        <18=> 18: APORT4CH16TO23 = APORT4CH16TO23
//        <19=> 19: APORT4CH24TO31 = APORT4CH24TO31
//        <20=> 20: 
//        <21=> 21: 
//        <22=> 22: 
//        <23=> 23: 
//        <24=> 24: 
//        <25=> 25: 
//        <26=> 26: 
//        <27=> 27: 
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: ADC0_SCANINPUTSEL  -------------------------------
// SVD Line: 49087

//  <rtree> SFDITEM_REG__ADC0_SCANINPUTSEL
//    <name> SCANINPUTSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002024) Input Selection Register for Scan Mode </i>
//    <loc> ( (unsigned int)((ADC0_SCANINPUTSEL >> 0) & 0xFFFFFFFF), ((ADC0_SCANINPUTSEL = (ADC0_SCANINPUTSEL & ~(0x1F1F1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT0TO7SEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT8TO15SEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT16TO23SEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANINPUTSEL_INPUT24TO31SEL </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC0_SCANNEGSEL  -----------------------------
// SVD Line: 49422

unsigned int ADC0_SCANNEGSEL __AT (0x40002028);



// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT0NEGSEL  ----------------------------
// SVD Line: 49431

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT0NEGSEL
//    <name> INPUT0NEGSEL </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT0 in Differential Scan Mode\n0 : INPUT1 = Selects ADCn_INPUT1 as negative channel input\n1 : INPUT3 = Selects ADCn_INPUT3 as negative channel input\n2 : INPUT5 = Selects ADCn_INPUT5 as negative channel input\n3 : INPUT7 = Selects ADCn_INPUT7 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.1..0> INPUT0NEGSEL
//        <0=> 0: INPUT1 = Selects ADCn_INPUT1 as negative channel input
//        <1=> 1: INPUT3 = Selects ADCn_INPUT3 as negative channel input
//        <2=> 2: INPUT5 = Selects ADCn_INPUT5 as negative channel input
//        <3=> 3: INPUT7 = Selects ADCn_INPUT7 as negative channel input
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT2NEGSEL  ----------------------------
// SVD Line: 49460

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT2NEGSEL
//    <name> INPUT2NEGSEL </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT2 in Differential Scan Mode\n0 : INPUT1 = Selects ADCn_INPUT1 as negative channel input\n1 : INPUT3 = Selects ADCn_INPUT3 as negative channel input\n2 : INPUT5 = Selects ADCn_INPUT5 as negative channel input\n3 : INPUT7 = Selects ADCn_INPUT7 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.3..2> INPUT2NEGSEL
//        <0=> 0: INPUT1 = Selects ADCn_INPUT1 as negative channel input
//        <1=> 1: INPUT3 = Selects ADCn_INPUT3 as negative channel input
//        <2=> 2: INPUT5 = Selects ADCn_INPUT5 as negative channel input
//        <3=> 3: INPUT7 = Selects ADCn_INPUT7 as negative channel input
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT4NEGSEL  ----------------------------
// SVD Line: 49489

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT4NEGSEL
//    <name> INPUT4NEGSEL </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT4 in Differential Scan Mode\n0 : INPUT1 = Selects ADCn_INPUT1 as negative channel input\n1 : INPUT3 = Selects ADCn_INPUT3 as negative channel input\n2 : INPUT5 = Selects ADCn_INPUT5 as negative channel input\n3 : INPUT7 = Selects ADCn_INPUT7 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.5..4> INPUT4NEGSEL
//        <0=> 0: INPUT1 = Selects ADCn_INPUT1 as negative channel input
//        <1=> 1: INPUT3 = Selects ADCn_INPUT3 as negative channel input
//        <2=> 2: INPUT5 = Selects ADCn_INPUT5 as negative channel input
//        <3=> 3: INPUT7 = Selects ADCn_INPUT7 as negative channel input
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT6NEGSEL  ----------------------------
// SVD Line: 49518

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT6NEGSEL
//    <name> INPUT6NEGSEL </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT1 in Differential Scan Mode\n0 : INPUT1 = Selects ADCn_INPUT1 as negative channel input\n1 : INPUT3 = Selects ADCn_INPUT3 as negative channel input\n2 : INPUT5 = Selects ADCn_INPUT5 as negative channel input\n3 : INPUT7 = Selects ADCn_INPUT7 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.7..6> INPUT6NEGSEL
//        <0=> 0: INPUT1 = Selects ADCn_INPUT1 as negative channel input
//        <1=> 1: INPUT3 = Selects ADCn_INPUT3 as negative channel input
//        <2=> 2: INPUT5 = Selects ADCn_INPUT5 as negative channel input
//        <3=> 3: INPUT7 = Selects ADCn_INPUT7 as negative channel input
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT9NEGSEL  ----------------------------
// SVD Line: 49547

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT9NEGSEL
//    <name> INPUT9NEGSEL </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT9 in Differential Scan Mode\n0 : INPUT8 = Selects ADCn_INPUT8 as negative channel input\n1 : INPUT10 = Selects ADCn_INPUT10 as negative channel input\n2 : INPUT12 = Selects ADCn_INPUT12 as negative channel input\n3 : INPUT14 = Selects ADCn_INPUT14 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.9..8> INPUT9NEGSEL
//        <0=> 0: INPUT8 = Selects ADCn_INPUT8 as negative channel input
//        <1=> 1: INPUT10 = Selects ADCn_INPUT10 as negative channel input
//        <2=> 2: INPUT12 = Selects ADCn_INPUT12 as negative channel input
//        <3=> 3: INPUT14 = Selects ADCn_INPUT14 as negative channel input
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT11NEGSEL  ---------------------------
// SVD Line: 49576

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT11NEGSEL
//    <name> INPUT11NEGSEL </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT11 in Differential Scan Mode\n0 : INPUT8 = Selects ADCn_INPUT8 as negative channel input\n1 : INPUT10 = Selects ADCn_INPUT10 as negative channel input\n2 : INPUT12 = Selects ADCn_INPUT12 as negative channel input\n3 : INPUT14 = Selects ADCn_INPUT14 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.11..10> INPUT11NEGSEL
//        <0=> 0: INPUT8 = Selects ADCn_INPUT8 as negative channel input
//        <1=> 1: INPUT10 = Selects ADCn_INPUT10 as negative channel input
//        <2=> 2: INPUT12 = Selects ADCn_INPUT12 as negative channel input
//        <3=> 3: INPUT14 = Selects ADCn_INPUT14 as negative channel input
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT13NEGSEL  ---------------------------
// SVD Line: 49605

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT13NEGSEL
//    <name> INPUT13NEGSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT13 in Differential Scan Mode\n0 : INPUT8 = Selects ADCn_INPUT8 as negative channel input\n1 : INPUT10 = Selects ADCn_INPUT10 as negative channel input\n2 : INPUT12 = Selects ADCn_INPUT12 as negative channel input\n3 : INPUT14 = Selects ADCn_INPUT14 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.13..12> INPUT13NEGSEL
//        <0=> 0: INPUT8 = Selects ADCn_INPUT8 as negative channel input
//        <1=> 1: INPUT10 = Selects ADCn_INPUT10 as negative channel input
//        <2=> 2: INPUT12 = Selects ADCn_INPUT12 as negative channel input
//        <3=> 3: INPUT14 = Selects ADCn_INPUT14 as negative channel input
//    </combo>
//  </item>
//  


// ------------------------  Field Item: ADC0_SCANNEGSEL_INPUT15NEGSEL  ---------------------------
// SVD Line: 49634

//  <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT15NEGSEL
//    <name> INPUT15NEGSEL </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40002028) \nNegative Input Select Register for ADCn_INPUT15 in Differential Scan Mode\n0 : INPUT8 = Selects ADCn_INPUT8 as negative channel input\n1 : INPUT10 = Selects ADCn_INPUT10 as negative channel input\n2 : INPUT12 = Selects ADCn_INPUT12 as negative channel input\n3 : INPUT14 = Selects ADCn_INPUT14 as negative channel input </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_SCANNEGSEL ) </loc>
//      <o.15..14> INPUT15NEGSEL
//        <0=> 0: INPUT8 = Selects ADCn_INPUT8 as negative channel input
//        <1=> 1: INPUT10 = Selects ADCn_INPUT10 as negative channel input
//        <2=> 2: INPUT12 = Selects ADCn_INPUT12 as negative channel input
//        <3=> 3: INPUT14 = Selects ADCn_INPUT14 as negative channel input
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: ADC0_SCANNEGSEL  --------------------------------
// SVD Line: 49422

//  <rtree> SFDITEM_REG__ADC0_SCANNEGSEL
//    <name> SCANNEGSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002028) Negative Input Select Register for Scan </i>
//    <loc> ( (unsigned int)((ADC0_SCANNEGSEL >> 0) & 0xFFFFFFFF), ((ADC0_SCANNEGSEL = (ADC0_SCANNEGSEL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT0NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT2NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT4NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT6NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT9NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT11NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT13NEGSEL </item>
//    <item> SFDITEM_FIELD__ADC0_SCANNEGSEL_INPUT15NEGSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ADC0_CMPTHR  -------------------------------
// SVD Line: 49665

unsigned int ADC0_CMPTHR __AT (0x4000202C);



// ------------------------------  Field Item: ADC0_CMPTHR_ADLT  ----------------------------------
// SVD Line: 49674

//  <item> SFDITEM_FIELD__ADC0_CMPTHR_ADLT
//    <name> ADLT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000202C) Less Than Compare Threshold </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC0_CMPTHR >> 0) & 0xFFFF), ((ADC0_CMPTHR = (ADC0_CMPTHR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: ADC0_CMPTHR_ADGT  ----------------------------------
// SVD Line: 49681

//  <item> SFDITEM_FIELD__ADC0_CMPTHR_ADGT
//    <name> ADGT </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4000202C) Greater Than Compare Threshold </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC0_CMPTHR >> 16) & 0xFFFF), ((ADC0_CMPTHR = (ADC0_CMPTHR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: ADC0_CMPTHR  ----------------------------------
// SVD Line: 49665

//  <rtree> SFDITEM_REG__ADC0_CMPTHR
//    <name> CMPTHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000202C) Compare Threshold Register </i>
//    <loc> ( (unsigned int)((ADC0_CMPTHR >> 0) & 0xFFFFFFFF), ((ADC0_CMPTHR = (ADC0_CMPTHR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_CMPTHR_ADLT </item>
//    <item> SFDITEM_FIELD__ADC0_CMPTHR_ADGT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC0_BIASPROG  ------------------------------
// SVD Line: 49690

unsigned int ADC0_BIASPROG __AT (0x40002030);



// --------------------------  Field Item: ADC0_BIASPROG_ADCBIASPROG  -----------------------------
// SVD Line: 49699

//  <item> SFDITEM_FIELD__ADC0_BIASPROG_ADCBIASPROG
//    <name> ADCBIASPROG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002030) \nBias Programming Value of Analog ADC Block\n0 : NORMAL = Normal power (use for 1Msps operation)\n1 : Reserved - do not use\n2 : Reserved - do not use\n3 : Reserved - do not use\n4 : SCALE2 = Scaling bias to 1/2\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use\n8 : SCALE4 = Scaling bias to 1/4\n9 : Reserved - do not use\n10 : Reserved - do not use\n11 : Reserved - do not use\n12 : SCALE8 = Scaling bias to 1/8\n13 : Reserved - do not use\n14 : SCALE16 = Scaling bias to 1/16\n15 : SCALE32 = Scaling bias to 1/32 </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC0_BIASPROG ) </loc>
//      <o.3..0> ADCBIASPROG
//        <0=> 0: NORMAL = Normal power (use for 1Msps operation)
//        <1=> 1: 
//        <2=> 2: 
//        <3=> 3: 
//        <4=> 4: SCALE2 = Scaling bias to 1/2
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//        <8=> 8: SCALE4 = Scaling bias to 1/4
//        <9=> 9: 
//        <10=> 10: 
//        <11=> 11: 
//        <12=> 12: SCALE8 = Scaling bias to 1/8
//        <13=> 13: 
//        <14=> 14: SCALE16 = Scaling bias to 1/16
//        <15=> 15: SCALE32 = Scaling bias to 1/32
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ADC0_BIASPROG_VFAULTCLR  ------------------------------
// SVD Line: 49738

//  <item> SFDITEM_FIELD__ADC0_BIASPROG_VFAULTCLR
//    <name> VFAULTCLR </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40002030) Clear VREFOF Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_BIASPROG ) </loc>
//      <o.12..12> VFAULTCLR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ADC0_BIASPROG_GPBIASACC  ------------------------------
// SVD Line: 49745

//  <item> SFDITEM_FIELD__ADC0_BIASPROG_GPBIASACC
//    <name> GPBIASACC </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40002030) Accuracy Setting for the System Bias During ADC Operation </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_BIASPROG ) </loc>
//      <o.16..16> GPBIASACC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: ADC0_BIASPROG  ---------------------------------
// SVD Line: 49690

//  <rtree> SFDITEM_REG__ADC0_BIASPROG
//    <name> BIASPROG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002030) Bias Programming Register for Various Analog Blocks Used in ADC Operation </i>
//    <loc> ( (unsigned int)((ADC0_BIASPROG >> 0) & 0xFFFFFFFF), ((ADC0_BIASPROG = (ADC0_BIASPROG & ~(0x1100FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1100F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_BIASPROG_ADCBIASPROG </item>
//    <item> SFDITEM_FIELD__ADC0_BIASPROG_VFAULTCLR </item>
//    <item> SFDITEM_FIELD__ADC0_BIASPROG_GPBIASACC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC0_CAL  --------------------------------
// SVD Line: 49754

unsigned int ADC0_CAL __AT (0x40002034);



// ----------------------------  Field Item: ADC0_CAL_SINGLEOFFSET  -------------------------------
// SVD Line: 49763

//  <item> SFDITEM_FIELD__ADC0_CAL_SINGLEOFFSET
//    <name> SINGLEOFFSET </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40002034) Single Mode Offset Calibration Value for Differential or Positive Single-ended Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CAL >> 0) & 0xF), ((ADC0_CAL = (ADC0_CAL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: ADC0_CAL_SINGLEOFFSETINV  ------------------------------
// SVD Line: 49770

//  <item> SFDITEM_FIELD__ADC0_CAL_SINGLEOFFSETINV
//    <name> SINGLEOFFSETINV </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40002034) Single Mode Offset Calibration Value for Negative Single-ended Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CAL >> 4) & 0xF), ((ADC0_CAL = (ADC0_CAL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CAL_SINGLEGAIN  --------------------------------
// SVD Line: 49777

//  <item> SFDITEM_FIELD__ADC0_CAL_SINGLEGAIN
//    <name> SINGLEGAIN </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x40002034) Single Mode Gain Calibration Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CAL >> 8) & 0x7F), ((ADC0_CAL = (ADC0_CAL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC0_CAL_OFFSETINVMODE  -------------------------------
// SVD Line: 49784

//  <item> SFDITEM_FIELD__ADC0_CAL_OFFSETINVMODE
//    <name> OFFSETINVMODE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40002034) Negative Single-ended Offset Calibration is Enabled </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CAL ) </loc>
//      <o.15..15> OFFSETINVMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_CAL_SCANOFFSET  --------------------------------
// SVD Line: 49791

//  <item> SFDITEM_FIELD__ADC0_CAL_SCANOFFSET
//    <name> SCANOFFSET </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40002034) Scan Mode Offset Calibration Value for Differential or Positive Single-ended Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CAL >> 16) & 0xF), ((ADC0_CAL = (ADC0_CAL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ADC0_CAL_SCANOFFSETINV  -------------------------------
// SVD Line: 49798

//  <item> SFDITEM_FIELD__ADC0_CAL_SCANOFFSETINV
//    <name> SCANOFFSETINV </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40002034) Scan Mode Offset Calibration Value for Negative Single-ended Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CAL >> 20) & 0xF), ((ADC0_CAL = (ADC0_CAL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: ADC0_CAL_SCANGAIN  ---------------------------------
// SVD Line: 49805

//  <item> SFDITEM_FIELD__ADC0_CAL_SCANGAIN
//    <name> SCANGAIN </name>
//    <rw> 
//    <i> [Bits 30..24] RW (@ 0x40002034) Scan Mode Gain Calibration Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_CAL >> 24) & 0x7F), ((ADC0_CAL = (ADC0_CAL & ~(0x7FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC0_CAL_CALEN  -----------------------------------
// SVD Line: 49812

//  <item> SFDITEM_FIELD__ADC0_CAL_CALEN
//    <name> CALEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40002034) Calibration Mode is Enabled </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_CAL ) </loc>
//      <o.31..31> CALEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC0_CAL  ------------------------------------
// SVD Line: 49754

//  <rtree> SFDITEM_REG__ADC0_CAL
//    <name> CAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002034) Calibration Register </i>
//    <loc> ( (unsigned int)((ADC0_CAL >> 0) & 0xFFFFFFFF), ((ADC0_CAL = (ADC0_CAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_CAL_SINGLEOFFSET </item>
//    <item> SFDITEM_FIELD__ADC0_CAL_SINGLEOFFSETINV </item>
//    <item> SFDITEM_FIELD__ADC0_CAL_SINGLEGAIN </item>
//    <item> SFDITEM_FIELD__ADC0_CAL_OFFSETINVMODE </item>
//    <item> SFDITEM_FIELD__ADC0_CAL_SCANOFFSET </item>
//    <item> SFDITEM_FIELD__ADC0_CAL_SCANOFFSETINV </item>
//    <item> SFDITEM_FIELD__ADC0_CAL_SCANGAIN </item>
//    <item> SFDITEM_FIELD__ADC0_CAL_CALEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC0_IF  ---------------------------------
// SVD Line: 49821

unsigned int ADC0_IF __AT (0x40002038);



// -------------------------------  Field Item: ADC0_IF_SINGLE  -----------------------------------
// SVD Line: 49830

//  <item> SFDITEM_FIELD__ADC0_IF_SINGLE
//    <name> SINGLE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002038) Single Conversion Complete Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.0..0> SINGLE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: ADC0_IF_SCAN  ------------------------------------
// SVD Line: 49837

//  <item> SFDITEM_FIELD__ADC0_IF_SCAN
//    <name> SCAN </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40002038) Scan Conversion Complete Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.1..1> SCAN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IF_SINGLEOF  ----------------------------------
// SVD Line: 49844

//  <item> SFDITEM_FIELD__ADC0_IF_SINGLEOF
//    <name> SINGLEOF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40002038) Single FIFO Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.8..8> SINGLEOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IF_SCANOF  -----------------------------------
// SVD Line: 49851

//  <item> SFDITEM_FIELD__ADC0_IF_SCANOF
//    <name> SCANOF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40002038) Scan FIFO Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.9..9> SCANOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IF_SINGLEUF  ----------------------------------
// SVD Line: 49858

//  <item> SFDITEM_FIELD__ADC0_IF_SINGLEUF
//    <name> SINGLEUF </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40002038) Single FIFO Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.10..10> SINGLEUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IF_SCANUF  -----------------------------------
// SVD Line: 49865

//  <item> SFDITEM_FIELD__ADC0_IF_SCANUF
//    <name> SCANUF </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40002038) Scan FIFO Underflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.11..11> SCANUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IF_SINGLECMP  ---------------------------------
// SVD Line: 49872

//  <item> SFDITEM_FIELD__ADC0_IF_SINGLECMP
//    <name> SINGLECMP </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40002038) Single Result Compare Match Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.16..16> SINGLECMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IF_SCANCMP  ----------------------------------
// SVD Line: 49879

//  <item> SFDITEM_FIELD__ADC0_IF_SCANCMP
//    <name> SCANCMP </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x40002038) Scan Result Compare Match Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.17..17> SCANCMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IF_VREFOV  -----------------------------------
// SVD Line: 49886

//  <item> SFDITEM_FIELD__ADC0_IF_VREFOV
//    <name> VREFOV </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40002038) VREF Over Voltage Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.24..24> VREFOV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IF_PROGERR  ----------------------------------
// SVD Line: 49893

//  <item> SFDITEM_FIELD__ADC0_IF_PROGERR
//    <name> PROGERR </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40002038) Programming Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IF ) </loc>
//      <o.25..25> PROGERR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: ADC0_IF  ------------------------------------
// SVD Line: 49821

//  <rtree> SFDITEM_REG__ADC0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002038) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((ADC0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_IF_SINGLE </item>
//    <item> SFDITEM_FIELD__ADC0_IF_SCAN </item>
//    <item> SFDITEM_FIELD__ADC0_IF_SINGLEOF </item>
//    <item> SFDITEM_FIELD__ADC0_IF_SCANOF </item>
//    <item> SFDITEM_FIELD__ADC0_IF_SINGLEUF </item>
//    <item> SFDITEM_FIELD__ADC0_IF_SCANUF </item>
//    <item> SFDITEM_FIELD__ADC0_IF_SINGLECMP </item>
//    <item> SFDITEM_FIELD__ADC0_IF_SCANCMP </item>
//    <item> SFDITEM_FIELD__ADC0_IF_VREFOV </item>
//    <item> SFDITEM_FIELD__ADC0_IF_PROGERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC0_IFS  --------------------------------
// SVD Line: 49902

unsigned int ADC0_IFS __AT (0x4000203C);



// ------------------------------  Field Item: ADC0_IFS_SINGLEOF  ---------------------------------
// SVD Line: 49911

//  <item> SFDITEM_FIELD__ADC0_IFS_SINGLEOF
//    <name> SINGLEOF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4000203C) Set SINGLEOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.8..8> SINGLEOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IFS_SCANOF  ----------------------------------
// SVD Line: 49918

//  <item> SFDITEM_FIELD__ADC0_IFS_SCANOF
//    <name> SCANOF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4000203C) Set SCANOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.9..9> SCANOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IFS_SINGLEUF  ---------------------------------
// SVD Line: 49925

//  <item> SFDITEM_FIELD__ADC0_IFS_SINGLEUF
//    <name> SINGLEUF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4000203C) Set SINGLEUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.10..10> SINGLEUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IFS_SCANUF  ----------------------------------
// SVD Line: 49932

//  <item> SFDITEM_FIELD__ADC0_IFS_SCANUF
//    <name> SCANUF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x4000203C) Set SCANUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.11..11> SCANUF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_IFS_SINGLECMP  ---------------------------------
// SVD Line: 49939

//  <item> SFDITEM_FIELD__ADC0_IFS_SINGLECMP
//    <name> SINGLECMP </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x4000203C) Set SINGLECMP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.16..16> SINGLECMP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IFS_SCANCMP  ----------------------------------
// SVD Line: 49946

//  <item> SFDITEM_FIELD__ADC0_IFS_SCANCMP
//    <name> SCANCMP </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x4000203C) Set SCANCMP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.17..17> SCANCMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IFS_VREFOV  ----------------------------------
// SVD Line: 49953

//  <item> SFDITEM_FIELD__ADC0_IFS_VREFOV
//    <name> VREFOV </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x4000203C) Set VREFOV Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.24..24> VREFOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IFS_PROGERR  ----------------------------------
// SVD Line: 49960

//  <item> SFDITEM_FIELD__ADC0_IFS_PROGERR
//    <name> PROGERR </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x4000203C) Set PROGERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFS ) </loc>
//      <o.25..25> PROGERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC0_IFS  ------------------------------------
// SVD Line: 49902

//  <rtree> SFDITEM_REG__ADC0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000203C) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((ADC0_IFS >> 0) & 0xFFFFFFFF), ((ADC0_IFS = (ADC0_IFS & ~(0x3030F00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3030F00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_IFS_SINGLEOF </item>
//    <item> SFDITEM_FIELD__ADC0_IFS_SCANOF </item>
//    <item> SFDITEM_FIELD__ADC0_IFS_SINGLEUF </item>
//    <item> SFDITEM_FIELD__ADC0_IFS_SCANUF </item>
//    <item> SFDITEM_FIELD__ADC0_IFS_SINGLECMP </item>
//    <item> SFDITEM_FIELD__ADC0_IFS_SCANCMP </item>
//    <item> SFDITEM_FIELD__ADC0_IFS_VREFOV </item>
//    <item> SFDITEM_FIELD__ADC0_IFS_PROGERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC0_IFC  --------------------------------
// SVD Line: 49969

unsigned int ADC0_IFC __AT (0x40002040);



// ------------------------------  Field Item: ADC0_IFC_SINGLEOF  ---------------------------------
// SVD Line: 49978

//  <item> SFDITEM_FIELD__ADC0_IFC_SINGLEOF
//    <name> SINGLEOF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40002040) Clear SINGLEOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.8..8> SINGLEOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IFC_SCANOF  ----------------------------------
// SVD Line: 49985

//  <item> SFDITEM_FIELD__ADC0_IFC_SCANOF
//    <name> SCANOF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40002040) Clear SCANOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.9..9> SCANOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IFC_SINGLEUF  ---------------------------------
// SVD Line: 49992

//  <item> SFDITEM_FIELD__ADC0_IFC_SINGLEUF
//    <name> SINGLEUF </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40002040) Clear SINGLEUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.10..10> SINGLEUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IFC_SCANUF  ----------------------------------
// SVD Line: 49999

//  <item> SFDITEM_FIELD__ADC0_IFC_SCANUF
//    <name> SCANUF </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40002040) Clear SCANUF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.11..11> SCANUF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_IFC_SINGLECMP  ---------------------------------
// SVD Line: 50006

//  <item> SFDITEM_FIELD__ADC0_IFC_SINGLECMP
//    <name> SINGLECMP </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40002040) Clear SINGLECMP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.16..16> SINGLECMP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IFC_SCANCMP  ----------------------------------
// SVD Line: 50013

//  <item> SFDITEM_FIELD__ADC0_IFC_SCANCMP
//    <name> SCANCMP </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40002040) Clear SCANCMP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.17..17> SCANCMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IFC_VREFOV  ----------------------------------
// SVD Line: 50020

//  <item> SFDITEM_FIELD__ADC0_IFC_VREFOV
//    <name> VREFOV </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x40002040) Clear VREFOV Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.24..24> VREFOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IFC_PROGERR  ----------------------------------
// SVD Line: 50027

//  <item> SFDITEM_FIELD__ADC0_IFC_PROGERR
//    <name> PROGERR </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x40002040) Clear PROGERR Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IFC ) </loc>
//      <o.25..25> PROGERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC0_IFC  ------------------------------------
// SVD Line: 49969

//  <rtree> SFDITEM_REG__ADC0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002040) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((ADC0_IFC >> 0) & 0xFFFFFFFF), ((ADC0_IFC = (ADC0_IFC & ~(0x3030F00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3030F00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_IFC_SINGLEOF </item>
//    <item> SFDITEM_FIELD__ADC0_IFC_SCANOF </item>
//    <item> SFDITEM_FIELD__ADC0_IFC_SINGLEUF </item>
//    <item> SFDITEM_FIELD__ADC0_IFC_SCANUF </item>
//    <item> SFDITEM_FIELD__ADC0_IFC_SINGLECMP </item>
//    <item> SFDITEM_FIELD__ADC0_IFC_SCANCMP </item>
//    <item> SFDITEM_FIELD__ADC0_IFC_VREFOV </item>
//    <item> SFDITEM_FIELD__ADC0_IFC_PROGERR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC0_IEN  --------------------------------
// SVD Line: 50036

unsigned int ADC0_IEN __AT (0x40002044);



// -------------------------------  Field Item: ADC0_IEN_SINGLE  ----------------------------------
// SVD Line: 50045

//  <item> SFDITEM_FIELD__ADC0_IEN_SINGLE
//    <name> SINGLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002044) SINGLE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.0..0> SINGLE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: ADC0_IEN_SCAN  -----------------------------------
// SVD Line: 50052

//  <item> SFDITEM_FIELD__ADC0_IEN_SCAN
//    <name> SCAN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002044) SCAN Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.1..1> SCAN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IEN_SINGLEOF  ---------------------------------
// SVD Line: 50059

//  <item> SFDITEM_FIELD__ADC0_IEN_SINGLEOF
//    <name> SINGLEOF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40002044) SINGLEOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.8..8> SINGLEOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IEN_SCANOF  ----------------------------------
// SVD Line: 50066

//  <item> SFDITEM_FIELD__ADC0_IEN_SCANOF
//    <name> SCANOF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40002044) SCANOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.9..9> SCANOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IEN_SINGLEUF  ---------------------------------
// SVD Line: 50073

//  <item> SFDITEM_FIELD__ADC0_IEN_SINGLEUF
//    <name> SINGLEUF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40002044) SINGLEUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.10..10> SINGLEUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IEN_SCANUF  ----------------------------------
// SVD Line: 50080

//  <item> SFDITEM_FIELD__ADC0_IEN_SCANUF
//    <name> SCANUF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40002044) SCANUF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.11..11> SCANUF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC0_IEN_SINGLECMP  ---------------------------------
// SVD Line: 50087

//  <item> SFDITEM_FIELD__ADC0_IEN_SINGLECMP
//    <name> SINGLECMP </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40002044) SINGLECMP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.16..16> SINGLECMP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IEN_SCANCMP  ----------------------------------
// SVD Line: 50094

//  <item> SFDITEM_FIELD__ADC0_IEN_SCANCMP
//    <name> SCANCMP </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40002044) SCANCMP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.17..17> SCANCMP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC0_IEN_VREFOV  ----------------------------------
// SVD Line: 50101

//  <item> SFDITEM_FIELD__ADC0_IEN_VREFOV
//    <name> VREFOV </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40002044) VREFOV Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.24..24> VREFOV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC0_IEN_PROGERR  ----------------------------------
// SVD Line: 50108

//  <item> SFDITEM_FIELD__ADC0_IEN_PROGERR
//    <name> PROGERR </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40002044) PROGERR Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_IEN ) </loc>
//      <o.25..25> PROGERR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC0_IEN  ------------------------------------
// SVD Line: 50036

//  <rtree> SFDITEM_REG__ADC0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002044) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((ADC0_IEN >> 0) & 0xFFFFFFFF), ((ADC0_IEN = (ADC0_IEN & ~(0x3030F03UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3030F03) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_IEN_SINGLE </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_SCAN </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_SINGLEOF </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_SCANOF </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_SINGLEUF </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_SCANUF </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_SINGLECMP </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_SCANCMP </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_VREFOV </item>
//    <item> SFDITEM_FIELD__ADC0_IEN_PROGERR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC0_SINGLEDATAP  ----------------------------
// SVD Line: 50155

unsigned int ADC0_SINGLEDATAP __AT (0x40002050);



// ---------------------------  Field Item: ADC0_SINGLEDATAP_DATAP  -------------------------------
// SVD Line: 50164

//  <item> SFDITEM_FIELD__ADC0_SINGLEDATAP_DATAP
//    <name> DATAP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002050) Single Conversion Result Data Peek </i>
//    <edit> 
//      <loc> ( (unsigned int)((ADC0_SINGLEDATAP >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ADC0_SINGLEDATAP  --------------------------------
// SVD Line: 50155

//  <rtree> SFDITEM_REG__ADC0_SINGLEDATAP
//    <name> SINGLEDATAP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002050) Single Conversion Result Data Peek Register </i>
//    <loc> ( (unsigned int)((ADC0_SINGLEDATAP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_SINGLEDATAP_DATAP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC0_SCANDATAP  -----------------------------
// SVD Line: 50173

unsigned int ADC0_SCANDATAP __AT (0x40002054);



// ----------------------------  Field Item: ADC0_SCANDATAP_DATAP  --------------------------------
// SVD Line: 50182

//  <item> SFDITEM_FIELD__ADC0_SCANDATAP_DATAP
//    <name> DATAP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002054) Scan Conversion Result Data Peek </i>
//    <edit> 
//      <loc> ( (unsigned int)((ADC0_SCANDATAP >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ADC0_SCANDATAP  ---------------------------------
// SVD Line: 50173

//  <rtree> SFDITEM_REG__ADC0_SCANDATAP
//    <name> SCANDATAP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002054) Scan Sequence Result Data Peek Register </i>
//    <loc> ( (unsigned int)((ADC0_SCANDATAP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANDATAP_DATAP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC0_SCANDATAXP  -----------------------------
// SVD Line: 50217

unsigned int ADC0_SCANDATAXP __AT (0x4000206C);



// ----------------------------  Field Item: ADC0_SCANDATAXP_DATAP  -------------------------------
// SVD Line: 50226

//  <item> SFDITEM_FIELD__ADC0_SCANDATAXP_DATAP
//    <name> DATAP </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4000206C) Scan Conversion Result Data Peek </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC0_SCANDATAXP >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: ADC0_SCANDATAXP_SCANINPUTIDPEEK  --------------------------
// SVD Line: 50233

//  <item> SFDITEM_FIELD__ADC0_SCANDATAXP_SCANINPUTIDPEEK
//    <name> SCANINPUTIDPEEK </name>
//    <r> 
//    <i> [Bits 20..16] RO (@ 0x4000206C) Scan Conversion Data Source Peek </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SCANDATAXP >> 16) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: ADC0_SCANDATAXP  --------------------------------
// SVD Line: 50217

//  <rtree> SFDITEM_REG__ADC0_SCANDATAXP
//    <name> SCANDATAXP </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000206C) Scan Sequence Result Data + Data Source Peek Register </i>
//    <loc> ( (unsigned int)((ADC0_SCANDATAXP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANDATAXP_DATAP </item>
//    <item> SFDITEM_FIELD__ADC0_SCANDATAXP_SCANINPUTIDPEEK </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC0_APORTREQ  ------------------------------
// SVD Line: 50242

unsigned int ADC0_APORTREQ __AT (0x4000207C);



// --------------------------  Field Item: ADC0_APORTREQ_APORT0XREQ  ------------------------------
// SVD Line: 50251

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT0XREQ
//    <name> APORT0XREQ </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000207C) 1 If the Bus Connected to APORT0X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.0..0> APORT0XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT0YREQ  ------------------------------
// SVD Line: 50258

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT0YREQ
//    <name> APORT0YREQ </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000207C) 1 If the Bus Connected to APORT0Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.1..1> APORT0YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT1XREQ  ------------------------------
// SVD Line: 50265

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT1XREQ
//    <name> APORT1XREQ </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000207C) 1 If the Bus Connected to APORT1X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.2..2> APORT1XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT1YREQ  ------------------------------
// SVD Line: 50272

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT1YREQ
//    <name> APORT1YREQ </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000207C) 1 If the Bus Connected to APORT1Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.3..3> APORT1YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT2XREQ  ------------------------------
// SVD Line: 50279

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT2XREQ
//    <name> APORT2XREQ </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000207C) 1 If the Bus Connected to APORT2X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.4..4> APORT2XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT2YREQ  ------------------------------
// SVD Line: 50286

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT2YREQ
//    <name> APORT2YREQ </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000207C) 1 If the Bus Connected to APORT2Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.5..5> APORT2YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT3XREQ  ------------------------------
// SVD Line: 50293

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT3XREQ
//    <name> APORT3XREQ </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000207C) 1 If the Bus Connected to APORT3X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.6..6> APORT3XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT3YREQ  ------------------------------
// SVD Line: 50300

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT3YREQ
//    <name> APORT3YREQ </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000207C) 1 If the Bus Connected to APORT3Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.7..7> APORT3YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT4XREQ  ------------------------------
// SVD Line: 50307

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT4XREQ
//    <name> APORT4XREQ </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000207C) 1 If the Bus Connected to APORT4X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.8..8> APORT4XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ADC0_APORTREQ_APORT4YREQ  ------------------------------
// SVD Line: 50314

//  <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT4YREQ
//    <name> APORT4YREQ </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000207C) 1 If the Bus Connected to APORT4Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTREQ ) </loc>
//      <o.9..9> APORT4YREQ
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: ADC0_APORTREQ  ---------------------------------
// SVD Line: 50242

//  <rtree> SFDITEM_REG__ADC0_APORTREQ
//    <name> APORTREQ </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000207C) APORT Request Status Register </i>
//    <loc> ( (unsigned int)((ADC0_APORTREQ >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT0XREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT0YREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT1XREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT1YREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT2XREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT2YREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT3XREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT3YREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT4XREQ </item>
//    <item> SFDITEM_FIELD__ADC0_APORTREQ_APORT4YREQ </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ADC0_APORTCONFLICT  ---------------------------
// SVD Line: 50323

unsigned int ADC0_APORTCONFLICT __AT (0x40002080);



// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT0XCONFLICT  -------------------------
// SVD Line: 50332

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT0XCONFLICT
//    <name> APORT0XCONFLICT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40002080) 1 If the Bus Connected to APORT0X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.0..0> APORT0XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT0YCONFLICT  -------------------------
// SVD Line: 50339

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT0YCONFLICT
//    <name> APORT0YCONFLICT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40002080) 1 If the Bus Connected to APORT0Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.1..1> APORT0YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT1XCONFLICT  -------------------------
// SVD Line: 50346

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT1XCONFLICT
//    <name> APORT1XCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40002080) 1 If the Bus Connected to APORT1X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.2..2> APORT1XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT1YCONFLICT  -------------------------
// SVD Line: 50353

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT1YCONFLICT
//    <name> APORT1YCONFLICT </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40002080) 1 If the Bus Connected to APORT1Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.3..3> APORT1YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT2XCONFLICT  -------------------------
// SVD Line: 50360

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT2XCONFLICT
//    <name> APORT2XCONFLICT </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40002080) 1 If the Bus Connected to APORT2X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.4..4> APORT2XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT2YCONFLICT  -------------------------
// SVD Line: 50367

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT2YCONFLICT
//    <name> APORT2YCONFLICT </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40002080) 1 If the Bus Connected to APORT2Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.5..5> APORT2YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT3XCONFLICT  -------------------------
// SVD Line: 50374

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT3XCONFLICT
//    <name> APORT3XCONFLICT </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40002080) 1 If the Bus Connected to APORT3X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.6..6> APORT3XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT3YCONFLICT  -------------------------
// SVD Line: 50381

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT3YCONFLICT
//    <name> APORT3YCONFLICT </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40002080) 1 If the Bus Connected to APORT3Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.7..7> APORT3YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT4XCONFLICT  -------------------------
// SVD Line: 50388

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT4XCONFLICT
//    <name> APORT4XCONFLICT </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40002080) 1 If the Bus Connected to APORT4X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.8..8> APORT4XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ADC0_APORTCONFLICT_APORT4YCONFLICT  -------------------------
// SVD Line: 50395

//  <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT4YCONFLICT
//    <name> APORT4YCONFLICT </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40002080) 1 If the Bus Connected to APORT4Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTCONFLICT ) </loc>
//      <o.9..9> APORT4YCONFLICT
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ADC0_APORTCONFLICT  -------------------------------
// SVD Line: 50323

//  <rtree> SFDITEM_REG__ADC0_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002080) APORT Conflict Status Register </i>
//    <loc> ( (unsigned int)((ADC0_APORTCONFLICT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT0XCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT0YCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT1XCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT1YCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT2XCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT2YCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT3XCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT3YCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT4XCONFLICT </item>
//    <item> SFDITEM_FIELD__ADC0_APORTCONFLICT_APORT4YCONFLICT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ADC0_SINGLEFIFOCOUNT  --------------------------
// SVD Line: 50404

unsigned int ADC0_SINGLEFIFOCOUNT __AT (0x40002084);



// ------------------------  Field Item: ADC0_SINGLEFIFOCOUNT_SINGLEDC  ---------------------------
// SVD Line: 50413

//  <item> SFDITEM_FIELD__ADC0_SINGLEFIFOCOUNT_SINGLEDC
//    <name> SINGLEDC </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x40002084) Single Data Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SINGLEFIFOCOUNT >> 0) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: ADC0_SINGLEFIFOCOUNT  ------------------------------
// SVD Line: 50404

//  <rtree> SFDITEM_REG__ADC0_SINGLEFIFOCOUNT
//    <name> SINGLEFIFOCOUNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002084) Single FIFO Count Register </i>
//    <loc> ( (unsigned int)((ADC0_SINGLEFIFOCOUNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_SINGLEFIFOCOUNT_SINGLEDC </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ADC0_SCANFIFOCOUNT  ---------------------------
// SVD Line: 50422

unsigned int ADC0_SCANFIFOCOUNT __AT (0x40002088);



// --------------------------  Field Item: ADC0_SCANFIFOCOUNT_SCANDC  -----------------------------
// SVD Line: 50431

//  <item> SFDITEM_FIELD__ADC0_SCANFIFOCOUNT_SCANDC
//    <name> SCANDC </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x40002088) Scan Data Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC0_SCANFIFOCOUNT >> 0) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: ADC0_SCANFIFOCOUNT  -------------------------------
// SVD Line: 50422

//  <rtree> SFDITEM_REG__ADC0_SCANFIFOCOUNT
//    <name> SCANFIFOCOUNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002088) Scan FIFO Count Register </i>
//    <loc> ( (unsigned int)((ADC0_SCANFIFOCOUNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANFIFOCOUNT_SCANDC </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ADC0_SINGLEFIFOCLEAR  --------------------------
// SVD Line: 50440

unsigned int ADC0_SINGLEFIFOCLEAR __AT (0x4000208C);



// --------------------  Field Item: ADC0_SINGLEFIFOCLEAR_SINGLEFIFOCLEAR  ------------------------
// SVD Line: 50449

//  <item> SFDITEM_FIELD__ADC0_SINGLEFIFOCLEAR_SINGLEFIFOCLEAR
//    <name> SINGLEFIFOCLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000208C) Clear Single FIFO Content </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SINGLEFIFOCLEAR ) </loc>
//      <o.0..0> SINGLEFIFOCLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: ADC0_SINGLEFIFOCLEAR  ------------------------------
// SVD Line: 50440

//  <rtree> SFDITEM_REG__ADC0_SINGLEFIFOCLEAR
//    <name> SINGLEFIFOCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000208C) Single FIFO Clear Register </i>
//    <loc> ( (unsigned int)((ADC0_SINGLEFIFOCLEAR >> 0) & 0xFFFFFFFF), ((ADC0_SINGLEFIFOCLEAR = (ADC0_SINGLEFIFOCLEAR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SINGLEFIFOCLEAR_SINGLEFIFOCLEAR </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ADC0_SCANFIFOCLEAR  ---------------------------
// SVD Line: 50458

unsigned int ADC0_SCANFIFOCLEAR __AT (0x40002090);



// ----------------------  Field Item: ADC0_SCANFIFOCLEAR_SCANFIFOCLEAR  --------------------------
// SVD Line: 50467

//  <item> SFDITEM_FIELD__ADC0_SCANFIFOCLEAR_SCANFIFOCLEAR
//    <name> SCANFIFOCLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40002090) Clear Scan FIFO Content </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_SCANFIFOCLEAR ) </loc>
//      <o.0..0> SCANFIFOCLEAR
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ADC0_SCANFIFOCLEAR  -------------------------------
// SVD Line: 50458

//  <rtree> SFDITEM_REG__ADC0_SCANFIFOCLEAR
//    <name> SCANFIFOCLEAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002090) Scan FIFO Clear Register </i>
//    <loc> ( (unsigned int)((ADC0_SCANFIFOCLEAR >> 0) & 0xFFFFFFFF), ((ADC0_SCANFIFOCLEAR = (ADC0_SCANFIFOCLEAR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_SCANFIFOCLEAR_SCANFIFOCLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ADC0_APORTMASTERDIS  ---------------------------
// SVD Line: 50476

unsigned int ADC0_APORTMASTERDIS __AT (0x40002094);



// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT1XMASTERDIS  ------------------------
// SVD Line: 50485

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT1XMASTERDIS
//    <name> APORT1XMASTERDIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002094) APORT1X Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.2..2> APORT1XMASTERDIS
//    </check>
//  </item>
//  


// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT1YMASTERDIS  ------------------------
// SVD Line: 50492

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT1YMASTERDIS
//    <name> APORT1YMASTERDIS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002094) APORT1Y Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.3..3> APORT1YMASTERDIS
//    </check>
//  </item>
//  


// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT2XMASTERDIS  ------------------------
// SVD Line: 50499

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT2XMASTERDIS
//    <name> APORT2XMASTERDIS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40002094) APORT2X Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.4..4> APORT2XMASTERDIS
//    </check>
//  </item>
//  


// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT2YMASTERDIS  ------------------------
// SVD Line: 50506

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT2YMASTERDIS
//    <name> APORT2YMASTERDIS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40002094) APORT2Y Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.5..5> APORT2YMASTERDIS
//    </check>
//  </item>
//  


// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT3XMASTERDIS  ------------------------
// SVD Line: 50513

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT3XMASTERDIS
//    <name> APORT3XMASTERDIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40002094) APORT3X Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.6..6> APORT3XMASTERDIS
//    </check>
//  </item>
//  


// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT3YMASTERDIS  ------------------------
// SVD Line: 50520

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT3YMASTERDIS
//    <name> APORT3YMASTERDIS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40002094) APORT3Y Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.7..7> APORT3YMASTERDIS
//    </check>
//  </item>
//  


// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT4XMASTERDIS  ------------------------
// SVD Line: 50527

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT4XMASTERDIS
//    <name> APORT4XMASTERDIS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40002094) APORT4X Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.8..8> APORT4XMASTERDIS
//    </check>
//  </item>
//  


// --------------------  Field Item: ADC0_APORTMASTERDIS_APORT4YMASTERDIS  ------------------------
// SVD Line: 50534

//  <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT4YMASTERDIS
//    <name> APORT4YMASTERDIS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40002094) APORT4Y Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC0_APORTMASTERDIS ) </loc>
//      <o.9..9> APORT4YMASTERDIS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ADC0_APORTMASTERDIS  ------------------------------
// SVD Line: 50476

//  <rtree> SFDITEM_REG__ADC0_APORTMASTERDIS
//    <name> APORTMASTERDIS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002094) APORT Bus Master Disable Register </i>
//    <loc> ( (unsigned int)((ADC0_APORTMASTERDIS >> 0) & 0xFFFFFFFF), ((ADC0_APORTMASTERDIS = (ADC0_APORTMASTERDIS & ~(0x3FCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT1XMASTERDIS </item>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT1YMASTERDIS </item>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT2XMASTERDIS </item>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT2YMASTERDIS </item>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT3XMASTERDIS </item>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT3YMASTERDIS </item>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT4XMASTERDIS </item>
//    <item> SFDITEM_FIELD__ADC0_APORTMASTERDIS_APORT4YMASTERDIS </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: ADC0  -------------------------------------
// SVD Line: 48023

//  <view> ADC0
//    <name> ADC0 </name>
//    <item> SFDITEM_REG__ADC0_CTRL </item>
//    <item> SFDITEM_REG__ADC0_CMD </item>
//    <item> SFDITEM_REG__ADC0_STATUS </item>
//    <item> SFDITEM_REG__ADC0_SINGLECTRL </item>
//    <item> SFDITEM_REG__ADC0_SINGLECTRLX </item>
//    <item> SFDITEM_REG__ADC0_SCANCTRL </item>
//    <item> SFDITEM_REG__ADC0_SCANCTRLX </item>
//    <item> SFDITEM_REG__ADC0_SCANMASK </item>
//    <item> SFDITEM_REG__ADC0_SCANINPUTSEL </item>
//    <item> SFDITEM_REG__ADC0_SCANNEGSEL </item>
//    <item> SFDITEM_REG__ADC0_CMPTHR </item>
//    <item> SFDITEM_REG__ADC0_BIASPROG </item>
//    <item> SFDITEM_REG__ADC0_CAL </item>
//    <item> SFDITEM_REG__ADC0_IF </item>
//    <item> SFDITEM_REG__ADC0_IFS </item>
//    <item> SFDITEM_REG__ADC0_IFC </item>
//    <item> SFDITEM_REG__ADC0_IEN </item>
//    <item> SFDITEM_REG__ADC0_SINGLEDATAP </item>
//    <item> SFDITEM_REG__ADC0_SCANDATAP </item>
//    <item> SFDITEM_REG__ADC0_SCANDATAXP </item>
//    <item> SFDITEM_REG__ADC0_APORTREQ </item>
//    <item> SFDITEM_REG__ADC0_APORTCONFLICT </item>
//    <item> SFDITEM_REG__ADC0_SINGLEFIFOCOUNT </item>
//    <item> SFDITEM_REG__ADC0_SCANFIFOCOUNT </item>
//    <item> SFDITEM_REG__ADC0_SINGLEFIFOCLEAR </item>
//    <item> SFDITEM_REG__ADC0_SCANFIFOCLEAR </item>
//    <item> SFDITEM_REG__ADC0_APORTMASTERDIS </item>
//  </view>
//  


// ----------------------------  Register Item Address: ACMP0_CTRL  -------------------------------
// SVD Line: 50559

unsigned int ACMP0_CTRL __AT (0x40000000);



// --------------------------------  Field Item: ACMP0_CTRL_EN  -----------------------------------
// SVD Line: 50568

//  <item> SFDITEM_FIELD__ACMP0_CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000000) Analog Comparator Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ACMP0_CTRL_INACTVAL  --------------------------------
// SVD Line: 50575

//  <item> SFDITEM_FIELD__ACMP0_CTRL_INACTVAL
//    <name> INACTVAL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000000) Inactive Value </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.2..2> INACTVAL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ACMP0_CTRL_GPIOINV  ---------------------------------
// SVD Line: 50582

//  <item> SFDITEM_FIELD__ACMP0_CTRL_GPIOINV
//    <name> GPIOINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000000) Comparator GPIO Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.3..3> GPIOINV
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP0_CTRL_APORTXMASTERDIS  -----------------------------
// SVD Line: 50589

//  <item> SFDITEM_FIELD__ACMP0_CTRL_APORTXMASTERDIS
//    <name> APORTXMASTERDIS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40000000) APORT Bus X Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.8..8> APORTXMASTERDIS
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP0_CTRL_APORTYMASTERDIS  -----------------------------
// SVD Line: 50596

//  <item> SFDITEM_FIELD__ACMP0_CTRL_APORTYMASTERDIS
//    <name> APORTYMASTERDIS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000000) APORT Bus Y Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.9..9> APORTYMASTERDIS
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP0_CTRL_APORTVMASTERDIS  -----------------------------
// SVD Line: 50603

//  <item> SFDITEM_FIELD__ACMP0_CTRL_APORTVMASTERDIS
//    <name> APORTVMASTERDIS </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000000) APORT Bus Master Disable for Bus Selected By VASEL </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.10..10> APORTVMASTERDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP0_CTRL_PWRSEL  ---------------------------------
// SVD Line: 50610

//  <item> SFDITEM_FIELD__ACMP0_CTRL_PWRSEL
//    <name> PWRSEL </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40000000) \nPower Select\n0 : AVDD = AVDD supply\n1 : DVDD = DVDD supply\n2 : IOVDD0 = IOVDD/IOVDD0 supply\n3 : Reserved - do not use\n4 : IOVDD1 = IOVDD1 supply (if part has two I/O voltages)\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.14..12> PWRSEL
//        <0=> 0: AVDD = AVDD supply
//        <1=> 1: DVDD = DVDD supply
//        <2=> 2: IOVDD0 = IOVDD/IOVDD0 supply
//        <3=> 3: 
//        <4=> 4: IOVDD1 = IOVDD1 supply (if part has two I/O voltages)
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ACMP0_CTRL_ACCURACY  --------------------------------
// SVD Line: 50639

//  <item> SFDITEM_FIELD__ACMP0_CTRL_ACCURACY
//    <name> ACCURACY </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000000) ACMP Accuracy Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.15..15> ACCURACY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ACMP0_CTRL_INPUTRANGE  -------------------------------
// SVD Line: 50646

//  <item> SFDITEM_FIELD__ACMP0_CTRL_INPUTRANGE
//    <name> INPUTRANGE </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40000000) \nInput Range\n0 : FULL = Setting when the input can be from 0 to ACMPVDD.\n1 : GTVDDDIV2 = Setting when the input will always be greater than ACMPVDD/2.\n2 : LTVDDDIV2 = Setting when the input will always be less than ACMPVDD/2.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.19..18> INPUTRANGE
//        <0=> 0: FULL = Setting when the input can be from 0 to ACMPVDD.
//        <1=> 1: GTVDDDIV2 = Setting when the input will always be greater than ACMPVDD/2.
//        <2=> 2: LTVDDDIV2 = Setting when the input will always be less than ACMPVDD/2.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ACMP0_CTRL_IRISE  ----------------------------------
// SVD Line: 50670

//  <item> SFDITEM_FIELD__ACMP0_CTRL_IRISE
//    <name> IRISE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40000000) Rising Edge Interrupt Sense </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.20..20> IRISE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP0_CTRL_IFALL  ----------------------------------
// SVD Line: 50677

//  <item> SFDITEM_FIELD__ACMP0_CTRL_IFALL
//    <name> IFALL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40000000) Falling Edge Interrupt Sense </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.21..21> IFALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ACMP0_CTRL_BIASPROG  --------------------------------
// SVD Line: 50684

//  <item> SFDITEM_FIELD__ACMP0_CTRL_BIASPROG
//    <name> BIASPROG </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40000000) Bias Configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_CTRL >> 24) & 0x3F), ((ACMP0_CTRL = (ACMP0_CTRL & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ACMP0_CTRL_FULLBIAS  --------------------------------
// SVD Line: 50691

//  <item> SFDITEM_FIELD__ACMP0_CTRL_FULLBIAS
//    <name> FULLBIAS </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40000000) Full Bias Current </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_CTRL ) </loc>
//      <o.31..31> FULLBIAS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: ACMP0_CTRL  -----------------------------------
// SVD Line: 50559

//  <rtree> SFDITEM_REG__ACMP0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000000) Control Register </i>
//    <loc> ( (unsigned int)((ACMP0_CTRL >> 0) & 0xFFFFFFFF), ((ACMP0_CTRL = (ACMP0_CTRL & ~(0xBF3CF70DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBF3CF70D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_EN </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_INACTVAL </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_GPIOINV </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_APORTXMASTERDIS </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_APORTYMASTERDIS </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_APORTVMASTERDIS </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_PWRSEL </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_ACCURACY </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_INPUTRANGE </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_IRISE </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_IFALL </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_BIASPROG </item>
//    <item> SFDITEM_FIELD__ACMP0_CTRL_FULLBIAS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ACMP0_INPUTSEL  -----------------------------
// SVD Line: 50700

unsigned int ACMP0_INPUTSEL __AT (0x40000004);



// ----------------------------  Field Item: ACMP0_INPUTSEL_POSSEL  -------------------------------
// SVD Line: 50709

//  <item> SFDITEM_FIELD__ACMP0_INPUTSEL_POSSEL
//    <name> POSSEL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40000004) Positive Input Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_INPUTSEL >> 0) & 0xFF), ((ACMP0_INPUTSEL = (ACMP0_INPUTSEL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: ACMP0_INPUTSEL_NEGSEL  -------------------------------
// SVD Line: 50716

//  <item> SFDITEM_FIELD__ACMP0_INPUTSEL_NEGSEL
//    <name> NEGSEL </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40000004) Negative Input Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_INPUTSEL >> 8) & 0xFF), ((ACMP0_INPUTSEL = (ACMP0_INPUTSEL & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: ACMP0_INPUTSEL_VASEL  --------------------------------
// SVD Line: 50723

//  <item> SFDITEM_FIELD__ACMP0_INPUTSEL_VASEL
//    <name> VASEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40000004) \nVA Selection\n0 : VDD = ACMPVDD\n1 : APORT2YCH0 = APORT2Y Channel 0\n2 : Reserved - do not use\n3 : APORT2YCH2 = APORT2Y Channel 2\n4 : Reserved - do not use\n5 : APORT2YCH4 = APORT2Y Channel 4\n6 : Reserved - do not use\n7 : APORT2YCH6 = APORT2Y Channel 6\n8 : Reserved - do not use\n9 : APORT2YCH8 = APORT2Y Channel 8\n10 : Reserved - do not use\n11 : APORT2YCH10 = APORT2Y Channel 10\n12 : Reserved - do not use\n13 : APORT2YCH12 = APORT2Y Channel 12\n14 : Reserved - do not use\n15 : APORT2YCH14 = APORT2Y Channel 14\n16 : Reserved - do not use\n17 : APORT2YCH16 = APORT2Y Channel 16\n18 : Reserved - do not use\n19 : APORT2YCH18 = APORT2Y Channel 18\n20 : Reserved - do not use\n21 : APORT2YCH20 = APORT2Y Channel 20\n22 : Reserved - do not use\n23 : APORT2YCH22 = APORT2Y Channel 22\n24 : Reserved - do not use\n25 : APORT2YCH24 = APORT2Y Channel 24\n26 : Reserved - do not use\n27 : APORT2YCH26 = APORT2Y Channel 26\n28 : Reserved - do not use\n29 : APORT2YCH28 = APORT2Y Channel 28\n30 : Reserved - do not use\n31 : APORT2YCH30 = APORT2Y Channel 30\n32 : APORT1XCH0 = APORT1X Channel 0\n33 : APORT1YCH1 = APORT1Y Channel 1\n34 : APORT1XCH2 = APORT1X Channel 2\n35 : APORT1YCH3 = APORT1Y Channel 3\n36 : APORT1XCH4 = APORT1X Channel 4\n37 : APORT1YCH5 = APORT1Y Channel 5\n38 : APORT1XCH6 = APORT1X Channel 6\n39 : APORT1YCH7 = APORT1Y Channel 7\n40 : APORT1XCH8 = APORT1X Channel 8\n41 : APORT1YCH9 = APORT1Y Channel 9\n42 : APORT1XCH10 = APORT1X Channel 10\n43 : APORT1YCH11 = APORT1Y Channel 11\n44 : APORT1XCH12 = APORT1X Channel 12\n45 : APORT1YCH13 = APORT1Y Channel 13\n46 : APORT1XCH14 = APORT1X Channel 14\n47 : APORT1YCH15 = APORT1Y Channel 15\n48 : APORT1XCH16 = APORT1X Channel 16\n49 : APORT1YCH17 = APORT1Y Channel 17\n50 : APORT1XCH18 = APORT1X Channel 18\n51 : APORT1YCH19 = APORT1Y Channel 19\n52 : APORT1XCH20 = APORT1X Channel 20\n53 : APORT1YCH21 = APORT1Y Channel 21\n54 : APORT1XCH22 = APORT1X Channel 22\n55 : APORT1YCH23 = APORT1Y Channel 23\n56 : APORT1XCH24 = APORT1X Channel 24\n57 : APORT1YCH25 = APORT1Y Channel 25\n58 : APORT1XCH26 = APORT1X Channel 26\n59 : APORT1YCH27 = APORT1Y Channel 27\n60 : APORT1XCH28 = APORT1X Channel 28\n61 : APORT1YCH29 = APORT1Y Channel 29\n62 : APORT1XCH30 = APORT1X Channel 30\n63 : APORT1YCH31 = APORT1Y Channel 31 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_INPUTSEL ) </loc>
//      <o.21..16> VASEL
//        <0=> 0: VDD = ACMPVDD
//        <1=> 1: APORT2YCH0 = APORT2Y Channel 0
//        <2=> 2: 
//        <3=> 3: APORT2YCH2 = APORT2Y Channel 2
//        <4=> 4: 
//        <5=> 5: APORT2YCH4 = APORT2Y Channel 4
//        <6=> 6: 
//        <7=> 7: APORT2YCH6 = APORT2Y Channel 6
//        <8=> 8: 
//        <9=> 9: APORT2YCH8 = APORT2Y Channel 8
//        <10=> 10: 
//        <11=> 11: APORT2YCH10 = APORT2Y Channel 10
//        <12=> 12: 
//        <13=> 13: APORT2YCH12 = APORT2Y Channel 12
//        <14=> 14: 
//        <15=> 15: APORT2YCH14 = APORT2Y Channel 14
//        <16=> 16: 
//        <17=> 17: APORT2YCH16 = APORT2Y Channel 16
//        <18=> 18: 
//        <19=> 19: APORT2YCH18 = APORT2Y Channel 18
//        <20=> 20: 
//        <21=> 21: APORT2YCH20 = APORT2Y Channel 20
//        <22=> 22: 
//        <23=> 23: APORT2YCH22 = APORT2Y Channel 22
//        <24=> 24: 
//        <25=> 25: APORT2YCH24 = APORT2Y Channel 24
//        <26=> 26: 
//        <27=> 27: APORT2YCH26 = APORT2Y Channel 26
//        <28=> 28: 
//        <29=> 29: APORT2YCH28 = APORT2Y Channel 28
//        <30=> 30: 
//        <31=> 31: APORT2YCH30 = APORT2Y Channel 30
//        <32=> 32: APORT1XCH0 = APORT1X Channel 0
//        <33=> 33: APORT1YCH1 = APORT1Y Channel 1
//        <34=> 34: APORT1XCH2 = APORT1X Channel 2
//        <35=> 35: APORT1YCH3 = APORT1Y Channel 3
//        <36=> 36: APORT1XCH4 = APORT1X Channel 4
//        <37=> 37: APORT1YCH5 = APORT1Y Channel 5
//        <38=> 38: APORT1XCH6 = APORT1X Channel 6
//        <39=> 39: APORT1YCH7 = APORT1Y Channel 7
//        <40=> 40: APORT1XCH8 = APORT1X Channel 8
//        <41=> 41: APORT1YCH9 = APORT1Y Channel 9
//        <42=> 42: APORT1XCH10 = APORT1X Channel 10
//        <43=> 43: APORT1YCH11 = APORT1Y Channel 11
//        <44=> 44: APORT1XCH12 = APORT1X Channel 12
//        <45=> 45: APORT1YCH13 = APORT1Y Channel 13
//        <46=> 46: APORT1XCH14 = APORT1X Channel 14
//        <47=> 47: APORT1YCH15 = APORT1Y Channel 15
//        <48=> 48: APORT1XCH16 = APORT1X Channel 16
//        <49=> 49: APORT1YCH17 = APORT1Y Channel 17
//        <50=> 50: APORT1XCH18 = APORT1X Channel 18
//        <51=> 51: APORT1YCH19 = APORT1Y Channel 19
//        <52=> 52: APORT1XCH20 = APORT1X Channel 20
//        <53=> 53: APORT1YCH21 = APORT1Y Channel 21
//        <54=> 54: APORT1XCH22 = APORT1X Channel 22
//        <55=> 55: APORT1YCH23 = APORT1Y Channel 23
//        <56=> 56: APORT1XCH24 = APORT1X Channel 24
//        <57=> 57: APORT1YCH25 = APORT1Y Channel 25
//        <58=> 58: APORT1XCH26 = APORT1X Channel 26
//        <59=> 59: APORT1YCH27 = APORT1Y Channel 27
//        <60=> 60: APORT1XCH28 = APORT1X Channel 28
//        <61=> 61: APORT1YCH29 = APORT1Y Channel 29
//        <62=> 62: APORT1XCH30 = APORT1X Channel 30
//        <63=> 63: APORT1YCH31 = APORT1Y Channel 31
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ACMP0_INPUTSEL_VBSEL  --------------------------------
// SVD Line: 50977

//  <item> SFDITEM_FIELD__ACMP0_INPUTSEL_VBSEL
//    <name> VBSEL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40000004) VB Selection </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_INPUTSEL ) </loc>
//      <o.22..22> VBSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ACMP0_INPUTSEL_VLPSEL  -------------------------------
// SVD Line: 50984

//  <item> SFDITEM_FIELD__ACMP0_INPUTSEL_VLPSEL
//    <name> VLPSEL </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40000004) Low-Power Sampled Voltage Selection </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_INPUTSEL ) </loc>
//      <o.24..24> VLPSEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_INPUTSEL_CSRESEN  -------------------------------
// SVD Line: 50991

//  <item> SFDITEM_FIELD__ACMP0_INPUTSEL_CSRESEN
//    <name> CSRESEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40000004) Capacitive Sense Mode Internal Resistor Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_INPUTSEL ) </loc>
//      <o.26..26> CSRESEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_INPUTSEL_CSRESSEL  ------------------------------
// SVD Line: 50998

//  <item> SFDITEM_FIELD__ACMP0_INPUTSEL_CSRESSEL
//    <name> CSRESSEL </name>
//    <rw> 
//    <i> [Bits 30..28] RW (@ 0x40000004) \nCapacitive Sense Mode Internal Resistor Select\n0 : RES0 = Internal capacitive sense resistor value 0\n1 : RES1 = Internal capacitive sense resistor value 1\n2 : RES2 = Internal capacitive sense resistor value 2\n3 : RES3 = Internal capacitive sense resistor value 3\n4 : RES4 = Internal capacitive sense resistor value 4\n5 : RES5 = Internal capacitive sense resistor value 5\n6 : RES6 = Internal capacitive sense resistor value 6\n7 : RES7 = Internal capacitive sense resistor value 7 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_INPUTSEL ) </loc>
//      <o.30..28> CSRESSEL
//        <0=> 0: RES0 = Internal capacitive sense resistor value 0
//        <1=> 1: RES1 = Internal capacitive sense resistor value 1
//        <2=> 2: RES2 = Internal capacitive sense resistor value 2
//        <3=> 3: RES3 = Internal capacitive sense resistor value 3
//        <4=> 4: RES4 = Internal capacitive sense resistor value 4
//        <5=> 5: RES5 = Internal capacitive sense resistor value 5
//        <6=> 6: RES6 = Internal capacitive sense resistor value 6
//        <7=> 7: RES7 = Internal capacitive sense resistor value 7
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: ACMP0_INPUTSEL  ---------------------------------
// SVD Line: 50700

//  <rtree> SFDITEM_REG__ACMP0_INPUTSEL
//    <name> INPUTSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000004) Input Selection Register </i>
//    <loc> ( (unsigned int)((ACMP0_INPUTSEL >> 0) & 0xFFFFFFFF), ((ACMP0_INPUTSEL = (ACMP0_INPUTSEL & ~(0x757FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x757FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_INPUTSEL_POSSEL </item>
//    <item> SFDITEM_FIELD__ACMP0_INPUTSEL_NEGSEL </item>
//    <item> SFDITEM_FIELD__ACMP0_INPUTSEL_VASEL </item>
//    <item> SFDITEM_FIELD__ACMP0_INPUTSEL_VBSEL </item>
//    <item> SFDITEM_FIELD__ACMP0_INPUTSEL_VLPSEL </item>
//    <item> SFDITEM_FIELD__ACMP0_INPUTSEL_CSRESEN </item>
//    <item> SFDITEM_FIELD__ACMP0_INPUTSEL_CSRESSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ACMP0_STATUS  ------------------------------
// SVD Line: 51049

unsigned int ACMP0_STATUS __AT (0x40000008);



// ----------------------------  Field Item: ACMP0_STATUS_ACMPACT  --------------------------------
// SVD Line: 51058

//  <item> SFDITEM_FIELD__ACMP0_STATUS_ACMPACT
//    <name> ACMPACT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40000008) Analog Comparator Active </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_STATUS ) </loc>
//      <o.0..0> ACMPACT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ACMP0_STATUS_ACMPOUT  --------------------------------
// SVD Line: 51065

//  <item> SFDITEM_FIELD__ACMP0_STATUS_ACMPOUT
//    <name> ACMPOUT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40000008) Analog Comparator Output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_STATUS ) </loc>
//      <o.1..1> ACMPOUT
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP0_STATUS_APORTCONFLICT  -----------------------------
// SVD Line: 51072

//  <item> SFDITEM_FIELD__ACMP0_STATUS_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40000008) APORT Conflict Output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_STATUS ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: ACMP0_STATUS  ----------------------------------
// SVD Line: 51049

//  <rtree> SFDITEM_REG__ACMP0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40000008) Status Register </i>
//    <loc> ( (unsigned int)((ACMP0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP0_STATUS_ACMPACT </item>
//    <item> SFDITEM_FIELD__ACMP0_STATUS_ACMPOUT </item>
//    <item> SFDITEM_FIELD__ACMP0_STATUS_APORTCONFLICT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ACMP0_IF  --------------------------------
// SVD Line: 51081

unsigned int ACMP0_IF __AT (0x4000000C);



// --------------------------------  Field Item: ACMP0_IF_EDGE  -----------------------------------
// SVD Line: 51090

//  <item> SFDITEM_FIELD__ACMP0_IF_EDGE
//    <name> EDGE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000000C) Edge Triggered Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IF ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ACMP0_IF_WARMUP  ----------------------------------
// SVD Line: 51097

//  <item> SFDITEM_FIELD__ACMP0_IF_WARMUP
//    <name> WARMUP </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000000C) Warm-up Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IF ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_IF_APORTCONFLICT  -------------------------------
// SVD Line: 51104

//  <item> SFDITEM_FIELD__ACMP0_IF_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000000C) APORT Conflict Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IF ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_IF  ------------------------------------
// SVD Line: 51081

//  <rtree> SFDITEM_REG__ACMP0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000000C) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((ACMP0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP0_IF_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP0_IF_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP0_IF_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_IFS  --------------------------------
// SVD Line: 51113

unsigned int ACMP0_IFS __AT (0x40000010);



// -------------------------------  Field Item: ACMP0_IFS_EDGE  -----------------------------------
// SVD Line: 51122

//  <item> SFDITEM_FIELD__ACMP0_IFS_EDGE
//    <name> EDGE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40000010) Set EDGE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IFS ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP0_IFS_WARMUP  ----------------------------------
// SVD Line: 51129

//  <item> SFDITEM_FIELD__ACMP0_IFS_WARMUP
//    <name> WARMUP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40000010) Set WARMUP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IFS ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_IFS_APORTCONFLICT  ------------------------------
// SVD Line: 51136

//  <item> SFDITEM_FIELD__ACMP0_IFS_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40000010) Set APORTCONFLICT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IFS ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_IFS  -----------------------------------
// SVD Line: 51113

//  <rtree> SFDITEM_REG__ACMP0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40000010) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((ACMP0_IFS >> 0) & 0xFFFFFFFF), ((ACMP0_IFS = (ACMP0_IFS & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_IFS_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP0_IFS_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP0_IFS_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_IFC  --------------------------------
// SVD Line: 51145

unsigned int ACMP0_IFC __AT (0x40000014);



// -------------------------------  Field Item: ACMP0_IFC_EDGE  -----------------------------------
// SVD Line: 51154

//  <item> SFDITEM_FIELD__ACMP0_IFC_EDGE
//    <name> EDGE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40000014) Clear EDGE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IFC ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP0_IFC_WARMUP  ----------------------------------
// SVD Line: 51161

//  <item> SFDITEM_FIELD__ACMP0_IFC_WARMUP
//    <name> WARMUP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40000014) Clear WARMUP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IFC ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_IFC_APORTCONFLICT  ------------------------------
// SVD Line: 51168

//  <item> SFDITEM_FIELD__ACMP0_IFC_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40000014) Clear APORTCONFLICT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IFC ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_IFC  -----------------------------------
// SVD Line: 51145

//  <rtree> SFDITEM_REG__ACMP0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40000014) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((ACMP0_IFC >> 0) & 0xFFFFFFFF), ((ACMP0_IFC = (ACMP0_IFC & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_IFC_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP0_IFC_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP0_IFC_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_IEN  --------------------------------
// SVD Line: 51177

unsigned int ACMP0_IEN __AT (0x40000018);



// -------------------------------  Field Item: ACMP0_IEN_EDGE  -----------------------------------
// SVD Line: 51186

//  <item> SFDITEM_FIELD__ACMP0_IEN_EDGE
//    <name> EDGE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000018) EDGE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IEN ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP0_IEN_WARMUP  ----------------------------------
// SVD Line: 51193

//  <item> SFDITEM_FIELD__ACMP0_IEN_WARMUP
//    <name> WARMUP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000018) WARMUP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IEN ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_IEN_APORTCONFLICT  ------------------------------
// SVD Line: 51200

//  <item> SFDITEM_FIELD__ACMP0_IEN_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000018) APORTCONFLICT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_IEN ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_IEN  -----------------------------------
// SVD Line: 51177

//  <rtree> SFDITEM_REG__ACMP0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000018) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((ACMP0_IEN >> 0) & 0xFFFFFFFF), ((ACMP0_IEN = (ACMP0_IEN & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_IEN_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP0_IEN_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP0_IEN_APORTCONFLICT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ACMP0_APORTREQ  -----------------------------
// SVD Line: 51209

unsigned int ACMP0_APORTREQ __AT (0x40000020);



// --------------------------  Field Item: ACMP0_APORTREQ_APORT0XREQ  -----------------------------
// SVD Line: 51218

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT0XREQ
//    <name> APORT0XREQ </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40000020) 1 If the Bus Connected to APORT0X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.0..0> APORT0XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT0YREQ  -----------------------------
// SVD Line: 51225

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT0YREQ
//    <name> APORT0YREQ </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40000020) 1 If the Bus Connected to APORT0Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.1..1> APORT0YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT1XREQ  -----------------------------
// SVD Line: 51232

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT1XREQ
//    <name> APORT1XREQ </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40000020) 1 If the Bus Connected to APORT2X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.2..2> APORT1XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT1YREQ  -----------------------------
// SVD Line: 51239

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT1YREQ
//    <name> APORT1YREQ </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40000020) 1 If the Bus Connected to APORT1X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.3..3> APORT1YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT2XREQ  -----------------------------
// SVD Line: 51246

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT2XREQ
//    <name> APORT2XREQ </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40000020) 1 If the Bus Connected to APORT2X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.4..4> APORT2XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT2YREQ  -----------------------------
// SVD Line: 51253

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT2YREQ
//    <name> APORT2YREQ </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40000020) 1 If the Bus Connected to APORT2Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.5..5> APORT2YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT3XREQ  -----------------------------
// SVD Line: 51260

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT3XREQ
//    <name> APORT3XREQ </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40000020) 1 If the Bus Connected to APORT3X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.6..6> APORT3XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT3YREQ  -----------------------------
// SVD Line: 51267

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT3YREQ
//    <name> APORT3YREQ </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40000020) 1 If the Bus Connected to APORT3Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.7..7> APORT3YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT4XREQ  -----------------------------
// SVD Line: 51274

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT4XREQ
//    <name> APORT4XREQ </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40000020) 1 If the Bus Connected to APORT4X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.8..8> APORT4XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP0_APORTREQ_APORT4YREQ  -----------------------------
// SVD Line: 51281

//  <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT4YREQ
//    <name> APORT4YREQ </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40000020) 1 If the Bus Connected to APORT4Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTREQ ) </loc>
//      <o.9..9> APORT4YREQ
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ACMP0_APORTREQ  ---------------------------------
// SVD Line: 51209

//  <rtree> SFDITEM_REG__ACMP0_APORTREQ
//    <name> APORTREQ </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40000020) APORT Request Status Register </i>
//    <loc> ( (unsigned int)((ACMP0_APORTREQ >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT0XREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT0YREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT1XREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT1YREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT2XREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT2YREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT3XREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT3YREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT4XREQ </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTREQ_APORT4YREQ </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ACMP0_APORTCONFLICT  ---------------------------
// SVD Line: 51290

unsigned int ACMP0_APORTCONFLICT __AT (0x40000024);



// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT0XCONFLICT  ------------------------
// SVD Line: 51299

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT0XCONFLICT
//    <name> APORT0XCONFLICT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40000024) 1 If the Bus Connected to APORT0X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.0..0> APORT0XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT0YCONFLICT  ------------------------
// SVD Line: 51306

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT0YCONFLICT
//    <name> APORT0YCONFLICT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40000024) 1 If the Bus Connected to APORT0Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.1..1> APORT0YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT1XCONFLICT  ------------------------
// SVD Line: 51313

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT1XCONFLICT
//    <name> APORT1XCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40000024) 1 If the Bus Connected to APORT1X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.2..2> APORT1XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT1YCONFLICT  ------------------------
// SVD Line: 51320

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT1YCONFLICT
//    <name> APORT1YCONFLICT </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40000024) 1 If the Bus Connected to APORT1X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.3..3> APORT1YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT2XCONFLICT  ------------------------
// SVD Line: 51327

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT2XCONFLICT
//    <name> APORT2XCONFLICT </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40000024) 1 If the Bus Connected to APORT2X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.4..4> APORT2XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT2YCONFLICT  ------------------------
// SVD Line: 51334

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT2YCONFLICT
//    <name> APORT2YCONFLICT </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40000024) 1 If the Bus Connected to APORT2Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.5..5> APORT2YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT3XCONFLICT  ------------------------
// SVD Line: 51341

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT3XCONFLICT
//    <name> APORT3XCONFLICT </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40000024) 1 If the Bus Connected to APORT3X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.6..6> APORT3XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT3YCONFLICT  ------------------------
// SVD Line: 51348

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT3YCONFLICT
//    <name> APORT3YCONFLICT </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40000024) 1 If the Bus Connected to APORT3Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.7..7> APORT3YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT4XCONFLICT  ------------------------
// SVD Line: 51355

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT4XCONFLICT
//    <name> APORT4XCONFLICT </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40000024) 1 If the Bus Connected to APORT4X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.8..8> APORT4XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP0_APORTCONFLICT_APORT4YCONFLICT  ------------------------
// SVD Line: 51362

//  <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT4YCONFLICT
//    <name> APORT4YCONFLICT </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40000024) 1 If the Bus Connected to APORT4Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_APORTCONFLICT ) </loc>
//      <o.9..9> APORT4YCONFLICT
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ACMP0_APORTCONFLICT  ------------------------------
// SVD Line: 51290

//  <rtree> SFDITEM_REG__ACMP0_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40000024) APORT Conflict Status Register </i>
//    <loc> ( (unsigned int)((ACMP0_APORTCONFLICT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT0XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT0YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT1XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT1YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT2XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT2YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT3XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT3YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT4XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP0_APORTCONFLICT_APORT4YCONFLICT </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ACMP0_HYSTERESIS0  ----------------------------
// SVD Line: 51371

unsigned int ACMP0_HYSTERESIS0 __AT (0x40000028);



// ---------------------------  Field Item: ACMP0_HYSTERESIS0_HYST  -------------------------------
// SVD Line: 51380

//  <item> SFDITEM_FIELD__ACMP0_HYSTERESIS0_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40000028) \nHysteresis Select When ACMPOUT=0\n0 : HYST0 = No hysteresis\n1 : HYST1 = 14 mV hysteresis\n2 : HYST2 = 25 mV hysteresis\n3 : HYST3 = 30 mV hysteresis\n4 : HYST4 = 35 mV hysteresis\n5 : HYST5 = 39 mV hysteresis\n6 : HYST6 = 42 mV hysteresis\n7 : HYST7 = 45 mV hysteresis\n8 : HYST8 = No hysteresis\n9 : HYST9 = -14 mV hysteresis\n10 : HYST10 = -25 mV hysteresis\n11 : HYST11 = -30 mV hysteresis\n12 : HYST12 = -35 mV hysteresis\n13 : HYST13 = -39 mV hysteresis\n14 : HYST14 = -42 mV hysteresis\n15 : HYST15 = -45 mV hysteresis </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_HYSTERESIS0 ) </loc>
//      <o.3..0> HYST
//        <0=> 0: HYST0 = No hysteresis
//        <1=> 1: HYST1 = 14 mV hysteresis
//        <2=> 2: HYST2 = 25 mV hysteresis
//        <3=> 3: HYST3 = 30 mV hysteresis
//        <4=> 4: HYST4 = 35 mV hysteresis
//        <5=> 5: HYST5 = 39 mV hysteresis
//        <6=> 6: HYST6 = 42 mV hysteresis
//        <7=> 7: HYST7 = 45 mV hysteresis
//        <8=> 8: HYST8 = No hysteresis
//        <9=> 9: HYST9 = -14 mV hysteresis
//        <10=> 10: HYST10 = -25 mV hysteresis
//        <11=> 11: HYST11 = -30 mV hysteresis
//        <12=> 12: HYST12 = -35 mV hysteresis
//        <13=> 13: HYST13 = -39 mV hysteresis
//        <14=> 14: HYST14 = -42 mV hysteresis
//        <15=> 15: HYST15 = -45 mV hysteresis
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_HYSTERESIS0_DIVVA  ------------------------------
// SVD Line: 51469

//  <item> SFDITEM_FIELD__ACMP0_HYSTERESIS0_DIVVA
//    <name> DIVVA </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40000028) Divider for VA Voltage When ACMPOUT=0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_HYSTERESIS0 >> 16) & 0x3F), ((ACMP0_HYSTERESIS0 = (ACMP0_HYSTERESIS0 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_HYSTERESIS0_DIVVB  ------------------------------
// SVD Line: 51476

//  <item> SFDITEM_FIELD__ACMP0_HYSTERESIS0_DIVVB
//    <name> DIVVB </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40000028) Divider for VB Voltage When ACMPOUT=0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_HYSTERESIS0 >> 24) & 0x3F), ((ACMP0_HYSTERESIS0 = (ACMP0_HYSTERESIS0 & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ACMP0_HYSTERESIS0  -------------------------------
// SVD Line: 51371

//  <rtree> SFDITEM_REG__ACMP0_HYSTERESIS0
//    <name> HYSTERESIS0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000028) Hysteresis 0 Register </i>
//    <loc> ( (unsigned int)((ACMP0_HYSTERESIS0 >> 0) & 0xFFFFFFFF), ((ACMP0_HYSTERESIS0 = (ACMP0_HYSTERESIS0 & ~(0x3F3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_HYSTERESIS0_HYST </item>
//    <item> SFDITEM_FIELD__ACMP0_HYSTERESIS0_DIVVA </item>
//    <item> SFDITEM_FIELD__ACMP0_HYSTERESIS0_DIVVB </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ACMP0_HYSTERESIS1  ----------------------------
// SVD Line: 51485

unsigned int ACMP0_HYSTERESIS1 __AT (0x4000002C);



// ---------------------------  Field Item: ACMP0_HYSTERESIS1_HYST  -------------------------------
// SVD Line: 51494

//  <item> SFDITEM_FIELD__ACMP0_HYSTERESIS1_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000002C) \nHysteresis Select When ACMPOUT=1\n0 : HYST0 = No hysteresis\n1 : HYST1 = 14 mV hysteresis\n2 : HYST2 = 25 mV hysteresis\n3 : HYST3 = 30 mV hysteresis\n4 : HYST4 = 35 mV hysteresis\n5 : HYST5 = 39 mV hysteresis\n6 : HYST6 = 42 mV hysteresis\n7 : HYST7 = 45 mV hysteresis\n8 : HYST8 = No hysteresis\n9 : HYST9 = -14 mV hysteresis\n10 : HYST10 = -25 mV hysteresis\n11 : HYST11 = -30 mV hysteresis\n12 : HYST12 = -35 mV hysteresis\n13 : HYST13 = -39 mV hysteresis\n14 : HYST14 = -42 mV hysteresis\n15 : HYST15 = -45 mV hysteresis </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_HYSTERESIS1 ) </loc>
//      <o.3..0> HYST
//        <0=> 0: HYST0 = No hysteresis
//        <1=> 1: HYST1 = 14 mV hysteresis
//        <2=> 2: HYST2 = 25 mV hysteresis
//        <3=> 3: HYST3 = 30 mV hysteresis
//        <4=> 4: HYST4 = 35 mV hysteresis
//        <5=> 5: HYST5 = 39 mV hysteresis
//        <6=> 6: HYST6 = 42 mV hysteresis
//        <7=> 7: HYST7 = 45 mV hysteresis
//        <8=> 8: HYST8 = No hysteresis
//        <9=> 9: HYST9 = -14 mV hysteresis
//        <10=> 10: HYST10 = -25 mV hysteresis
//        <11=> 11: HYST11 = -30 mV hysteresis
//        <12=> 12: HYST12 = -35 mV hysteresis
//        <13=> 13: HYST13 = -39 mV hysteresis
//        <14=> 14: HYST14 = -42 mV hysteresis
//        <15=> 15: HYST15 = -45 mV hysteresis
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_HYSTERESIS1_DIVVA  ------------------------------
// SVD Line: 51583

//  <item> SFDITEM_FIELD__ACMP0_HYSTERESIS1_DIVVA
//    <name> DIVVA </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x4000002C) Divider for VA Voltage When ACMPOUT=1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_HYSTERESIS1 >> 16) & 0x3F), ((ACMP0_HYSTERESIS1 = (ACMP0_HYSTERESIS1 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ACMP0_HYSTERESIS1_DIVVB  ------------------------------
// SVD Line: 51590

//  <item> SFDITEM_FIELD__ACMP0_HYSTERESIS1_DIVVB
//    <name> DIVVB </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x4000002C) Divider for VB Voltage When ACMPOUT=1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_HYSTERESIS1 >> 24) & 0x3F), ((ACMP0_HYSTERESIS1 = (ACMP0_HYSTERESIS1 & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ACMP0_HYSTERESIS1  -------------------------------
// SVD Line: 51485

//  <rtree> SFDITEM_REG__ACMP0_HYSTERESIS1
//    <name> HYSTERESIS1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000002C) Hysteresis 1 Register </i>
//    <loc> ( (unsigned int)((ACMP0_HYSTERESIS1 >> 0) & 0xFFFFFFFF), ((ACMP0_HYSTERESIS1 = (ACMP0_HYSTERESIS1 & ~(0x3F3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_HYSTERESIS1_HYST </item>
//    <item> SFDITEM_FIELD__ACMP0_HYSTERESIS1_DIVVA </item>
//    <item> SFDITEM_FIELD__ACMP0_HYSTERESIS1_DIVVB </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ACMP0_ROUTEPEN  -----------------------------
// SVD Line: 51599

unsigned int ACMP0_ROUTEPEN __AT (0x40000040);



// ----------------------------  Field Item: ACMP0_ROUTEPEN_OUTPEN  -------------------------------
// SVD Line: 51608

//  <item> SFDITEM_FIELD__ACMP0_ROUTEPEN_OUTPEN
//    <name> OUTPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000040) ACMP Output Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_ROUTEPEN ) </loc>
//      <o.0..0> OUTPEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ACMP0_ROUTEPEN  ---------------------------------
// SVD Line: 51599

//  <rtree> SFDITEM_REG__ACMP0_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000040) I/O Routing Pine Enable Register </i>
//    <loc> ( (unsigned int)((ACMP0_ROUTEPEN >> 0) & 0xFFFFFFFF), ((ACMP0_ROUTEPEN = (ACMP0_ROUTEPEN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_ROUTEPEN_OUTPEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ACMP0_ROUTELOC0  -----------------------------
// SVD Line: 51617

unsigned int ACMP0_ROUTELOC0 __AT (0x40000044);



// ---------------------------  Field Item: ACMP0_ROUTELOC0_OUTLOC  -------------------------------
// SVD Line: 51626

//  <item> SFDITEM_FIELD__ACMP0_ROUTELOC0_OUTLOC
//    <name> OUTLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40000044) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_ROUTELOC0 ) </loc>
//      <o.5..0> OUTLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: ACMP0_ROUTELOC0  --------------------------------
// SVD Line: 51617

//  <rtree> SFDITEM_REG__ACMP0_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000044) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((ACMP0_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((ACMP0_ROUTELOC0 = (ACMP0_ROUTELOC0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_ROUTELOC0_OUTLOC </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: ACMP0  -------------------------------------
// SVD Line: 50545

//  <view> ACMP0
//    <name> ACMP0 </name>
//    <item> SFDITEM_REG__ACMP0_CTRL </item>
//    <item> SFDITEM_REG__ACMP0_INPUTSEL </item>
//    <item> SFDITEM_REG__ACMP0_STATUS </item>
//    <item> SFDITEM_REG__ACMP0_IF </item>
//    <item> SFDITEM_REG__ACMP0_IFS </item>
//    <item> SFDITEM_REG__ACMP0_IFC </item>
//    <item> SFDITEM_REG__ACMP0_IEN </item>
//    <item> SFDITEM_REG__ACMP0_APORTREQ </item>
//    <item> SFDITEM_REG__ACMP0_APORTCONFLICT </item>
//    <item> SFDITEM_REG__ACMP0_HYSTERESIS0 </item>
//    <item> SFDITEM_REG__ACMP0_HYSTERESIS1 </item>
//    <item> SFDITEM_REG__ACMP0_ROUTEPEN </item>
//    <item> SFDITEM_REG__ACMP0_ROUTELOC0 </item>
//  </view>
//  


// ----------------------------  Register Item Address: ACMP1_CTRL  -------------------------------
// SVD Line: 51813

unsigned int ACMP1_CTRL __AT (0x40000400);



// --------------------------------  Field Item: ACMP1_CTRL_EN  -----------------------------------
// SVD Line: 51822

//  <item> SFDITEM_FIELD__ACMP1_CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000400) Analog Comparator Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ACMP1_CTRL_INACTVAL  --------------------------------
// SVD Line: 51829

//  <item> SFDITEM_FIELD__ACMP1_CTRL_INACTVAL
//    <name> INACTVAL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000400) Inactive Value </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.2..2> INACTVAL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ACMP1_CTRL_GPIOINV  ---------------------------------
// SVD Line: 51836

//  <item> SFDITEM_FIELD__ACMP1_CTRL_GPIOINV
//    <name> GPIOINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000400) Comparator GPIO Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.3..3> GPIOINV
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP1_CTRL_APORTXMASTERDIS  -----------------------------
// SVD Line: 51843

//  <item> SFDITEM_FIELD__ACMP1_CTRL_APORTXMASTERDIS
//    <name> APORTXMASTERDIS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40000400) APORT Bus X Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.8..8> APORTXMASTERDIS
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP1_CTRL_APORTYMASTERDIS  -----------------------------
// SVD Line: 51850

//  <item> SFDITEM_FIELD__ACMP1_CTRL_APORTYMASTERDIS
//    <name> APORTYMASTERDIS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000400) APORT Bus Y Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.9..9> APORTYMASTERDIS
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP1_CTRL_APORTVMASTERDIS  -----------------------------
// SVD Line: 51857

//  <item> SFDITEM_FIELD__ACMP1_CTRL_APORTVMASTERDIS
//    <name> APORTVMASTERDIS </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000400) APORT Bus Master Disable for Bus Selected By VASEL </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.10..10> APORTVMASTERDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP1_CTRL_PWRSEL  ---------------------------------
// SVD Line: 51864

//  <item> SFDITEM_FIELD__ACMP1_CTRL_PWRSEL
//    <name> PWRSEL </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40000400) \nPower Select\n0 : AVDD = AVDD supply\n1 : DVDD = DVDD supply\n2 : IOVDD0 = IOVDD/IOVDD0 supply\n3 : Reserved - do not use\n4 : IOVDD1 = IOVDD1 supply (if part has two I/O voltages)\n5 : Reserved - do not use\n6 : Reserved - do not use\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.14..12> PWRSEL
//        <0=> 0: AVDD = AVDD supply
//        <1=> 1: DVDD = DVDD supply
//        <2=> 2: IOVDD0 = IOVDD/IOVDD0 supply
//        <3=> 3: 
//        <4=> 4: IOVDD1 = IOVDD1 supply (if part has two I/O voltages)
//        <5=> 5: 
//        <6=> 6: 
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ACMP1_CTRL_ACCURACY  --------------------------------
// SVD Line: 51893

//  <item> SFDITEM_FIELD__ACMP1_CTRL_ACCURACY
//    <name> ACCURACY </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000400) ACMP Accuracy Mode </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.15..15> ACCURACY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ACMP1_CTRL_INPUTRANGE  -------------------------------
// SVD Line: 51900

//  <item> SFDITEM_FIELD__ACMP1_CTRL_INPUTRANGE
//    <name> INPUTRANGE </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40000400) \nInput Range\n0 : FULL = Setting when the input can be from 0 to ACMPVDD.\n1 : GTVDDDIV2 = Setting when the input will always be greater than ACMPVDD/2.\n2 : LTVDDDIV2 = Setting when the input will always be less than ACMPVDD/2.\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.19..18> INPUTRANGE
//        <0=> 0: FULL = Setting when the input can be from 0 to ACMPVDD.
//        <1=> 1: GTVDDDIV2 = Setting when the input will always be greater than ACMPVDD/2.
//        <2=> 2: LTVDDDIV2 = Setting when the input will always be less than ACMPVDD/2.
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ACMP1_CTRL_IRISE  ----------------------------------
// SVD Line: 51924

//  <item> SFDITEM_FIELD__ACMP1_CTRL_IRISE
//    <name> IRISE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40000400) Rising Edge Interrupt Sense </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.20..20> IRISE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP1_CTRL_IFALL  ----------------------------------
// SVD Line: 51931

//  <item> SFDITEM_FIELD__ACMP1_CTRL_IFALL
//    <name> IFALL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40000400) Falling Edge Interrupt Sense </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.21..21> IFALL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ACMP1_CTRL_BIASPROG  --------------------------------
// SVD Line: 51938

//  <item> SFDITEM_FIELD__ACMP1_CTRL_BIASPROG
//    <name> BIASPROG </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40000400) Bias Configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_CTRL >> 24) & 0x3F), ((ACMP1_CTRL = (ACMP1_CTRL & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ACMP1_CTRL_FULLBIAS  --------------------------------
// SVD Line: 51945

//  <item> SFDITEM_FIELD__ACMP1_CTRL_FULLBIAS
//    <name> FULLBIAS </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40000400) Full Bias Current </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_CTRL ) </loc>
//      <o.31..31> FULLBIAS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: ACMP1_CTRL  -----------------------------------
// SVD Line: 51813

//  <rtree> SFDITEM_REG__ACMP1_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000400) Control Register </i>
//    <loc> ( (unsigned int)((ACMP1_CTRL >> 0) & 0xFFFFFFFF), ((ACMP1_CTRL = (ACMP1_CTRL & ~(0xBF3CF70DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBF3CF70D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_EN </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_INACTVAL </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_GPIOINV </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_APORTXMASTERDIS </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_APORTYMASTERDIS </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_APORTVMASTERDIS </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_PWRSEL </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_ACCURACY </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_INPUTRANGE </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_IRISE </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_IFALL </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_BIASPROG </item>
//    <item> SFDITEM_FIELD__ACMP1_CTRL_FULLBIAS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ACMP1_INPUTSEL  -----------------------------
// SVD Line: 51954

unsigned int ACMP1_INPUTSEL __AT (0x40000404);



// ----------------------------  Field Item: ACMP1_INPUTSEL_POSSEL  -------------------------------
// SVD Line: 51963

//  <item> SFDITEM_FIELD__ACMP1_INPUTSEL_POSSEL
//    <name> POSSEL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40000404) Positive Input Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_INPUTSEL >> 0) & 0xFF), ((ACMP1_INPUTSEL = (ACMP1_INPUTSEL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: ACMP1_INPUTSEL_NEGSEL  -------------------------------
// SVD Line: 51970

//  <item> SFDITEM_FIELD__ACMP1_INPUTSEL_NEGSEL
//    <name> NEGSEL </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40000404) Negative Input Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_INPUTSEL >> 8) & 0xFF), ((ACMP1_INPUTSEL = (ACMP1_INPUTSEL & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: ACMP1_INPUTSEL_VASEL  --------------------------------
// SVD Line: 51977

//  <item> SFDITEM_FIELD__ACMP1_INPUTSEL_VASEL
//    <name> VASEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40000404) \nVA Selection\n0 : VDD = ACMPVDD\n1 : APORT2YCH0 = APORT2Y Channel 0\n2 : Reserved - do not use\n3 : APORT2YCH2 = APORT2Y Channel 2\n4 : Reserved - do not use\n5 : APORT2YCH4 = APORT2Y Channel 4\n6 : Reserved - do not use\n7 : APORT2YCH6 = APORT2Y Channel 6\n8 : Reserved - do not use\n9 : APORT2YCH8 = APORT2Y Channel 8\n10 : Reserved - do not use\n11 : APORT2YCH10 = APORT2Y Channel 10\n12 : Reserved - do not use\n13 : APORT2YCH12 = APORT2Y Channel 12\n14 : Reserved - do not use\n15 : APORT2YCH14 = APORT2Y Channel 14\n16 : Reserved - do not use\n17 : APORT2YCH16 = APORT2Y Channel 16\n18 : Reserved - do not use\n19 : APORT2YCH18 = APORT2Y Channel 18\n20 : Reserved - do not use\n21 : APORT2YCH20 = APORT2Y Channel 20\n22 : Reserved - do not use\n23 : APORT2YCH22 = APORT2Y Channel 22\n24 : Reserved - do not use\n25 : APORT2YCH24 = APORT2Y Channel 24\n26 : Reserved - do not use\n27 : APORT2YCH26 = APORT2Y Channel 26\n28 : Reserved - do not use\n29 : APORT2YCH28 = APORT2Y Channel 28\n30 : Reserved - do not use\n31 : APORT2YCH30 = APORT2Y Channel 30\n32 : APORT1XCH0 = APORT1X Channel 0\n33 : APORT1YCH1 = APORT1Y Channel 1\n34 : APORT1XCH2 = APORT1X Channel 2\n35 : APORT1YCH3 = APORT1Y Channel 3\n36 : APORT1XCH4 = APORT1X Channel 4\n37 : APORT1YCH5 = APORT1Y Channel 5\n38 : APORT1XCH6 = APORT1X Channel 6\n39 : APORT1YCH7 = APORT1Y Channel 7\n40 : APORT1XCH8 = APORT1X Channel 8\n41 : APORT1YCH9 = APORT1Y Channel 9\n42 : APORT1XCH10 = APORT1X Channel 10\n43 : APORT1YCH11 = APORT1Y Channel 11\n44 : APORT1XCH12 = APORT1X Channel 12\n45 : APORT1YCH13 = APORT1Y Channel 13\n46 : APORT1XCH14 = APORT1X Channel 14\n47 : APORT1YCH15 = APORT1Y Channel 15\n48 : APORT1XCH16 = APORT1X Channel 16\n49 : APORT1YCH17 = APORT1Y Channel 17\n50 : APORT1XCH18 = APORT1X Channel 18\n51 : APORT1YCH19 = APORT1Y Channel 19\n52 : APORT1XCH20 = APORT1X Channel 20\n53 : APORT1YCH21 = APORT1Y Channel 21\n54 : APORT1XCH22 = APORT1X Channel 22\n55 : APORT1YCH23 = APORT1Y Channel 23\n56 : APORT1XCH24 = APORT1X Channel 24\n57 : APORT1YCH25 = APORT1Y Channel 25\n58 : APORT1XCH26 = APORT1X Channel 26\n59 : APORT1YCH27 = APORT1Y Channel 27\n60 : APORT1XCH28 = APORT1X Channel 28\n61 : APORT1YCH29 = APORT1Y Channel 29\n62 : APORT1XCH30 = APORT1X Channel 30\n63 : APORT1YCH31 = APORT1Y Channel 31 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_INPUTSEL ) </loc>
//      <o.21..16> VASEL
//        <0=> 0: VDD = ACMPVDD
//        <1=> 1: APORT2YCH0 = APORT2Y Channel 0
//        <2=> 2: 
//        <3=> 3: APORT2YCH2 = APORT2Y Channel 2
//        <4=> 4: 
//        <5=> 5: APORT2YCH4 = APORT2Y Channel 4
//        <6=> 6: 
//        <7=> 7: APORT2YCH6 = APORT2Y Channel 6
//        <8=> 8: 
//        <9=> 9: APORT2YCH8 = APORT2Y Channel 8
//        <10=> 10: 
//        <11=> 11: APORT2YCH10 = APORT2Y Channel 10
//        <12=> 12: 
//        <13=> 13: APORT2YCH12 = APORT2Y Channel 12
//        <14=> 14: 
//        <15=> 15: APORT2YCH14 = APORT2Y Channel 14
//        <16=> 16: 
//        <17=> 17: APORT2YCH16 = APORT2Y Channel 16
//        <18=> 18: 
//        <19=> 19: APORT2YCH18 = APORT2Y Channel 18
//        <20=> 20: 
//        <21=> 21: APORT2YCH20 = APORT2Y Channel 20
//        <22=> 22: 
//        <23=> 23: APORT2YCH22 = APORT2Y Channel 22
//        <24=> 24: 
//        <25=> 25: APORT2YCH24 = APORT2Y Channel 24
//        <26=> 26: 
//        <27=> 27: APORT2YCH26 = APORT2Y Channel 26
//        <28=> 28: 
//        <29=> 29: APORT2YCH28 = APORT2Y Channel 28
//        <30=> 30: 
//        <31=> 31: APORT2YCH30 = APORT2Y Channel 30
//        <32=> 32: APORT1XCH0 = APORT1X Channel 0
//        <33=> 33: APORT1YCH1 = APORT1Y Channel 1
//        <34=> 34: APORT1XCH2 = APORT1X Channel 2
//        <35=> 35: APORT1YCH3 = APORT1Y Channel 3
//        <36=> 36: APORT1XCH4 = APORT1X Channel 4
//        <37=> 37: APORT1YCH5 = APORT1Y Channel 5
//        <38=> 38: APORT1XCH6 = APORT1X Channel 6
//        <39=> 39: APORT1YCH7 = APORT1Y Channel 7
//        <40=> 40: APORT1XCH8 = APORT1X Channel 8
//        <41=> 41: APORT1YCH9 = APORT1Y Channel 9
//        <42=> 42: APORT1XCH10 = APORT1X Channel 10
//        <43=> 43: APORT1YCH11 = APORT1Y Channel 11
//        <44=> 44: APORT1XCH12 = APORT1X Channel 12
//        <45=> 45: APORT1YCH13 = APORT1Y Channel 13
//        <46=> 46: APORT1XCH14 = APORT1X Channel 14
//        <47=> 47: APORT1YCH15 = APORT1Y Channel 15
//        <48=> 48: APORT1XCH16 = APORT1X Channel 16
//        <49=> 49: APORT1YCH17 = APORT1Y Channel 17
//        <50=> 50: APORT1XCH18 = APORT1X Channel 18
//        <51=> 51: APORT1YCH19 = APORT1Y Channel 19
//        <52=> 52: APORT1XCH20 = APORT1X Channel 20
//        <53=> 53: APORT1YCH21 = APORT1Y Channel 21
//        <54=> 54: APORT1XCH22 = APORT1X Channel 22
//        <55=> 55: APORT1YCH23 = APORT1Y Channel 23
//        <56=> 56: APORT1XCH24 = APORT1X Channel 24
//        <57=> 57: APORT1YCH25 = APORT1Y Channel 25
//        <58=> 58: APORT1XCH26 = APORT1X Channel 26
//        <59=> 59: APORT1YCH27 = APORT1Y Channel 27
//        <60=> 60: APORT1XCH28 = APORT1X Channel 28
//        <61=> 61: APORT1YCH29 = APORT1Y Channel 29
//        <62=> 62: APORT1XCH30 = APORT1X Channel 30
//        <63=> 63: APORT1YCH31 = APORT1Y Channel 31
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: ACMP1_INPUTSEL_VBSEL  --------------------------------
// SVD Line: 52231

//  <item> SFDITEM_FIELD__ACMP1_INPUTSEL_VBSEL
//    <name> VBSEL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40000404) VB Selection </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_INPUTSEL ) </loc>
//      <o.22..22> VBSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ACMP1_INPUTSEL_VLPSEL  -------------------------------
// SVD Line: 52238

//  <item> SFDITEM_FIELD__ACMP1_INPUTSEL_VLPSEL
//    <name> VLPSEL </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40000404) Low-Power Sampled Voltage Selection </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_INPUTSEL ) </loc>
//      <o.24..24> VLPSEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_INPUTSEL_CSRESEN  -------------------------------
// SVD Line: 52245

//  <item> SFDITEM_FIELD__ACMP1_INPUTSEL_CSRESEN
//    <name> CSRESEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40000404) Capacitive Sense Mode Internal Resistor Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_INPUTSEL ) </loc>
//      <o.26..26> CSRESEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_INPUTSEL_CSRESSEL  ------------------------------
// SVD Line: 52252

//  <item> SFDITEM_FIELD__ACMP1_INPUTSEL_CSRESSEL
//    <name> CSRESSEL </name>
//    <rw> 
//    <i> [Bits 30..28] RW (@ 0x40000404) \nCapacitive Sense Mode Internal Resistor Select\n0 : RES0 = Internal capacitive sense resistor value 0\n1 : RES1 = Internal capacitive sense resistor value 1\n2 : RES2 = Internal capacitive sense resistor value 2\n3 : RES3 = Internal capacitive sense resistor value 3\n4 : RES4 = Internal capacitive sense resistor value 4\n5 : RES5 = Internal capacitive sense resistor value 5\n6 : RES6 = Internal capacitive sense resistor value 6\n7 : RES7 = Internal capacitive sense resistor value 7 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_INPUTSEL ) </loc>
//      <o.30..28> CSRESSEL
//        <0=> 0: RES0 = Internal capacitive sense resistor value 0
//        <1=> 1: RES1 = Internal capacitive sense resistor value 1
//        <2=> 2: RES2 = Internal capacitive sense resistor value 2
//        <3=> 3: RES3 = Internal capacitive sense resistor value 3
//        <4=> 4: RES4 = Internal capacitive sense resistor value 4
//        <5=> 5: RES5 = Internal capacitive sense resistor value 5
//        <6=> 6: RES6 = Internal capacitive sense resistor value 6
//        <7=> 7: RES7 = Internal capacitive sense resistor value 7
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: ACMP1_INPUTSEL  ---------------------------------
// SVD Line: 51954

//  <rtree> SFDITEM_REG__ACMP1_INPUTSEL
//    <name> INPUTSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000404) Input Selection Register </i>
//    <loc> ( (unsigned int)((ACMP1_INPUTSEL >> 0) & 0xFFFFFFFF), ((ACMP1_INPUTSEL = (ACMP1_INPUTSEL & ~(0x757FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x757FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_INPUTSEL_POSSEL </item>
//    <item> SFDITEM_FIELD__ACMP1_INPUTSEL_NEGSEL </item>
//    <item> SFDITEM_FIELD__ACMP1_INPUTSEL_VASEL </item>
//    <item> SFDITEM_FIELD__ACMP1_INPUTSEL_VBSEL </item>
//    <item> SFDITEM_FIELD__ACMP1_INPUTSEL_VLPSEL </item>
//    <item> SFDITEM_FIELD__ACMP1_INPUTSEL_CSRESEN </item>
//    <item> SFDITEM_FIELD__ACMP1_INPUTSEL_CSRESSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ACMP1_STATUS  ------------------------------
// SVD Line: 52303

unsigned int ACMP1_STATUS __AT (0x40000408);



// ----------------------------  Field Item: ACMP1_STATUS_ACMPACT  --------------------------------
// SVD Line: 52312

//  <item> SFDITEM_FIELD__ACMP1_STATUS_ACMPACT
//    <name> ACMPACT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40000408) Analog Comparator Active </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_STATUS ) </loc>
//      <o.0..0> ACMPACT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ACMP1_STATUS_ACMPOUT  --------------------------------
// SVD Line: 52319

//  <item> SFDITEM_FIELD__ACMP1_STATUS_ACMPOUT
//    <name> ACMPOUT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40000408) Analog Comparator Output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_STATUS ) </loc>
//      <o.1..1> ACMPOUT
//    </check>
//  </item>
//  


// -------------------------  Field Item: ACMP1_STATUS_APORTCONFLICT  -----------------------------
// SVD Line: 52326

//  <item> SFDITEM_FIELD__ACMP1_STATUS_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40000408) APORT Conflict Output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_STATUS ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: ACMP1_STATUS  ----------------------------------
// SVD Line: 52303

//  <rtree> SFDITEM_REG__ACMP1_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40000408) Status Register </i>
//    <loc> ( (unsigned int)((ACMP1_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP1_STATUS_ACMPACT </item>
//    <item> SFDITEM_FIELD__ACMP1_STATUS_ACMPOUT </item>
//    <item> SFDITEM_FIELD__ACMP1_STATUS_APORTCONFLICT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ACMP1_IF  --------------------------------
// SVD Line: 52335

unsigned int ACMP1_IF __AT (0x4000040C);



// --------------------------------  Field Item: ACMP1_IF_EDGE  -----------------------------------
// SVD Line: 52344

//  <item> SFDITEM_FIELD__ACMP1_IF_EDGE
//    <name> EDGE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000040C) Edge Triggered Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IF ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ACMP1_IF_WARMUP  ----------------------------------
// SVD Line: 52351

//  <item> SFDITEM_FIELD__ACMP1_IF_WARMUP
//    <name> WARMUP </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000040C) Warm-up Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IF ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_IF_APORTCONFLICT  -------------------------------
// SVD Line: 52358

//  <item> SFDITEM_FIELD__ACMP1_IF_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000040C) APORT Conflict Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IF ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_IF  ------------------------------------
// SVD Line: 52335

//  <rtree> SFDITEM_REG__ACMP1_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000040C) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((ACMP1_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP1_IF_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP1_IF_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP1_IF_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP1_IFS  --------------------------------
// SVD Line: 52367

unsigned int ACMP1_IFS __AT (0x40000410);



// -------------------------------  Field Item: ACMP1_IFS_EDGE  -----------------------------------
// SVD Line: 52376

//  <item> SFDITEM_FIELD__ACMP1_IFS_EDGE
//    <name> EDGE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40000410) Set EDGE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IFS ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP1_IFS_WARMUP  ----------------------------------
// SVD Line: 52383

//  <item> SFDITEM_FIELD__ACMP1_IFS_WARMUP
//    <name> WARMUP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40000410) Set WARMUP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IFS ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_IFS_APORTCONFLICT  ------------------------------
// SVD Line: 52390

//  <item> SFDITEM_FIELD__ACMP1_IFS_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40000410) Set APORTCONFLICT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IFS ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_IFS  -----------------------------------
// SVD Line: 52367

//  <rtree> SFDITEM_REG__ACMP1_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40000410) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((ACMP1_IFS >> 0) & 0xFFFFFFFF), ((ACMP1_IFS = (ACMP1_IFS & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_IFS_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP1_IFS_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP1_IFS_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP1_IFC  --------------------------------
// SVD Line: 52399

unsigned int ACMP1_IFC __AT (0x40000414);



// -------------------------------  Field Item: ACMP1_IFC_EDGE  -----------------------------------
// SVD Line: 52408

//  <item> SFDITEM_FIELD__ACMP1_IFC_EDGE
//    <name> EDGE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40000414) Clear EDGE Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IFC ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP1_IFC_WARMUP  ----------------------------------
// SVD Line: 52415

//  <item> SFDITEM_FIELD__ACMP1_IFC_WARMUP
//    <name> WARMUP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40000414) Clear WARMUP Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IFC ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_IFC_APORTCONFLICT  ------------------------------
// SVD Line: 52422

//  <item> SFDITEM_FIELD__ACMP1_IFC_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40000414) Clear APORTCONFLICT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IFC ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_IFC  -----------------------------------
// SVD Line: 52399

//  <rtree> SFDITEM_REG__ACMP1_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40000414) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((ACMP1_IFC >> 0) & 0xFFFFFFFF), ((ACMP1_IFC = (ACMP1_IFC & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_IFC_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP1_IFC_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP1_IFC_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP1_IEN  --------------------------------
// SVD Line: 52431

unsigned int ACMP1_IEN __AT (0x40000418);



// -------------------------------  Field Item: ACMP1_IEN_EDGE  -----------------------------------
// SVD Line: 52440

//  <item> SFDITEM_FIELD__ACMP1_IEN_EDGE
//    <name> EDGE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000418) EDGE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IEN ) </loc>
//      <o.0..0> EDGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ACMP1_IEN_WARMUP  ----------------------------------
// SVD Line: 52447

//  <item> SFDITEM_FIELD__ACMP1_IEN_WARMUP
//    <name> WARMUP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000418) WARMUP Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IEN ) </loc>
//      <o.1..1> WARMUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_IEN_APORTCONFLICT  ------------------------------
// SVD Line: 52454

//  <item> SFDITEM_FIELD__ACMP1_IEN_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000418) APORTCONFLICT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_IEN ) </loc>
//      <o.2..2> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_IEN  -----------------------------------
// SVD Line: 52431

//  <rtree> SFDITEM_REG__ACMP1_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000418) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((ACMP1_IEN >> 0) & 0xFFFFFFFF), ((ACMP1_IEN = (ACMP1_IEN & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_IEN_EDGE </item>
//    <item> SFDITEM_FIELD__ACMP1_IEN_WARMUP </item>
//    <item> SFDITEM_FIELD__ACMP1_IEN_APORTCONFLICT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ACMP1_APORTREQ  -----------------------------
// SVD Line: 52463

unsigned int ACMP1_APORTREQ __AT (0x40000420);



// --------------------------  Field Item: ACMP1_APORTREQ_APORT0XREQ  -----------------------------
// SVD Line: 52472

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT0XREQ
//    <name> APORT0XREQ </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40000420) 1 If the Bus Connected to APORT0X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.0..0> APORT0XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT0YREQ  -----------------------------
// SVD Line: 52479

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT0YREQ
//    <name> APORT0YREQ </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40000420) 1 If the Bus Connected to APORT0Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.1..1> APORT0YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT1XREQ  -----------------------------
// SVD Line: 52486

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT1XREQ
//    <name> APORT1XREQ </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40000420) 1 If the Bus Connected to APORT2X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.2..2> APORT1XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT1YREQ  -----------------------------
// SVD Line: 52493

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT1YREQ
//    <name> APORT1YREQ </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40000420) 1 If the Bus Connected to APORT1X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.3..3> APORT1YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT2XREQ  -----------------------------
// SVD Line: 52500

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT2XREQ
//    <name> APORT2XREQ </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40000420) 1 If the Bus Connected to APORT2X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.4..4> APORT2XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT2YREQ  -----------------------------
// SVD Line: 52507

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT2YREQ
//    <name> APORT2YREQ </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40000420) 1 If the Bus Connected to APORT2Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.5..5> APORT2YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT3XREQ  -----------------------------
// SVD Line: 52514

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT3XREQ
//    <name> APORT3XREQ </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40000420) 1 If the Bus Connected to APORT3X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.6..6> APORT3XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT3YREQ  -----------------------------
// SVD Line: 52521

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT3YREQ
//    <name> APORT3YREQ </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40000420) 1 If the Bus Connected to APORT3Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.7..7> APORT3YREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT4XREQ  -----------------------------
// SVD Line: 52528

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT4XREQ
//    <name> APORT4XREQ </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40000420) 1 If the Bus Connected to APORT4X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.8..8> APORT4XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: ACMP1_APORTREQ_APORT4YREQ  -----------------------------
// SVD Line: 52535

//  <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT4YREQ
//    <name> APORT4YREQ </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40000420) 1 If the Bus Connected to APORT4Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTREQ ) </loc>
//      <o.9..9> APORT4YREQ
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ACMP1_APORTREQ  ---------------------------------
// SVD Line: 52463

//  <rtree> SFDITEM_REG__ACMP1_APORTREQ
//    <name> APORTREQ </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40000420) APORT Request Status Register </i>
//    <loc> ( (unsigned int)((ACMP1_APORTREQ >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT0XREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT0YREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT1XREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT1YREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT2XREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT2YREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT3XREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT3YREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT4XREQ </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTREQ_APORT4YREQ </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ACMP1_APORTCONFLICT  ---------------------------
// SVD Line: 52544

unsigned int ACMP1_APORTCONFLICT __AT (0x40000424);



// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT0XCONFLICT  ------------------------
// SVD Line: 52553

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT0XCONFLICT
//    <name> APORT0XCONFLICT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40000424) 1 If the Bus Connected to APORT0X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.0..0> APORT0XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT0YCONFLICT  ------------------------
// SVD Line: 52560

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT0YCONFLICT
//    <name> APORT0YCONFLICT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40000424) 1 If the Bus Connected to APORT0Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.1..1> APORT0YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT1XCONFLICT  ------------------------
// SVD Line: 52567

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT1XCONFLICT
//    <name> APORT1XCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40000424) 1 If the Bus Connected to APORT1X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.2..2> APORT1XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT1YCONFLICT  ------------------------
// SVD Line: 52574

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT1YCONFLICT
//    <name> APORT1YCONFLICT </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40000424) 1 If the Bus Connected to APORT1X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.3..3> APORT1YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT2XCONFLICT  ------------------------
// SVD Line: 52581

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT2XCONFLICT
//    <name> APORT2XCONFLICT </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40000424) 1 If the Bus Connected to APORT2X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.4..4> APORT2XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT2YCONFLICT  ------------------------
// SVD Line: 52588

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT2YCONFLICT
//    <name> APORT2YCONFLICT </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40000424) 1 If the Bus Connected to APORT2Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.5..5> APORT2YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT3XCONFLICT  ------------------------
// SVD Line: 52595

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT3XCONFLICT
//    <name> APORT3XCONFLICT </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40000424) 1 If the Bus Connected to APORT3X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.6..6> APORT3XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT3YCONFLICT  ------------------------
// SVD Line: 52602

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT3YCONFLICT
//    <name> APORT3YCONFLICT </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40000424) 1 If the Bus Connected to APORT3Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.7..7> APORT3YCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT4XCONFLICT  ------------------------
// SVD Line: 52609

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT4XCONFLICT
//    <name> APORT4XCONFLICT </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40000424) 1 If the Bus Connected to APORT4X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.8..8> APORT4XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: ACMP1_APORTCONFLICT_APORT4YCONFLICT  ------------------------
// SVD Line: 52616

//  <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT4YCONFLICT
//    <name> APORT4YCONFLICT </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40000424) 1 If the Bus Connected to APORT4Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_APORTCONFLICT ) </loc>
//      <o.9..9> APORT4YCONFLICT
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: ACMP1_APORTCONFLICT  ------------------------------
// SVD Line: 52544

//  <rtree> SFDITEM_REG__ACMP1_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40000424) APORT Conflict Status Register </i>
//    <loc> ( (unsigned int)((ACMP1_APORTCONFLICT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT0XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT0YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT1XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT1YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT2XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT2YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT3XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT3YCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT4XCONFLICT </item>
//    <item> SFDITEM_FIELD__ACMP1_APORTCONFLICT_APORT4YCONFLICT </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ACMP1_HYSTERESIS0  ----------------------------
// SVD Line: 52625

unsigned int ACMP1_HYSTERESIS0 __AT (0x40000428);



// ---------------------------  Field Item: ACMP1_HYSTERESIS0_HYST  -------------------------------
// SVD Line: 52634

//  <item> SFDITEM_FIELD__ACMP1_HYSTERESIS0_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40000428) \nHysteresis Select When ACMPOUT=0\n0 : HYST0 = No hysteresis\n1 : HYST1 = 14 mV hysteresis\n2 : HYST2 = 25 mV hysteresis\n3 : HYST3 = 30 mV hysteresis\n4 : HYST4 = 35 mV hysteresis\n5 : HYST5 = 39 mV hysteresis\n6 : HYST6 = 42 mV hysteresis\n7 : HYST7 = 45 mV hysteresis\n8 : HYST8 = No hysteresis\n9 : HYST9 = -14 mV hysteresis\n10 : HYST10 = -25 mV hysteresis\n11 : HYST11 = -30 mV hysteresis\n12 : HYST12 = -35 mV hysteresis\n13 : HYST13 = -39 mV hysteresis\n14 : HYST14 = -42 mV hysteresis\n15 : HYST15 = -45 mV hysteresis </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_HYSTERESIS0 ) </loc>
//      <o.3..0> HYST
//        <0=> 0: HYST0 = No hysteresis
//        <1=> 1: HYST1 = 14 mV hysteresis
//        <2=> 2: HYST2 = 25 mV hysteresis
//        <3=> 3: HYST3 = 30 mV hysteresis
//        <4=> 4: HYST4 = 35 mV hysteresis
//        <5=> 5: HYST5 = 39 mV hysteresis
//        <6=> 6: HYST6 = 42 mV hysteresis
//        <7=> 7: HYST7 = 45 mV hysteresis
//        <8=> 8: HYST8 = No hysteresis
//        <9=> 9: HYST9 = -14 mV hysteresis
//        <10=> 10: HYST10 = -25 mV hysteresis
//        <11=> 11: HYST11 = -30 mV hysteresis
//        <12=> 12: HYST12 = -35 mV hysteresis
//        <13=> 13: HYST13 = -39 mV hysteresis
//        <14=> 14: HYST14 = -42 mV hysteresis
//        <15=> 15: HYST15 = -45 mV hysteresis
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_HYSTERESIS0_DIVVA  ------------------------------
// SVD Line: 52723

//  <item> SFDITEM_FIELD__ACMP1_HYSTERESIS0_DIVVA
//    <name> DIVVA </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40000428) Divider for VA Voltage When ACMPOUT=0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_HYSTERESIS0 >> 16) & 0x3F), ((ACMP1_HYSTERESIS0 = (ACMP1_HYSTERESIS0 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_HYSTERESIS0_DIVVB  ------------------------------
// SVD Line: 52730

//  <item> SFDITEM_FIELD__ACMP1_HYSTERESIS0_DIVVB
//    <name> DIVVB </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40000428) Divider for VB Voltage When ACMPOUT=0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_HYSTERESIS0 >> 24) & 0x3F), ((ACMP1_HYSTERESIS0 = (ACMP1_HYSTERESIS0 & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ACMP1_HYSTERESIS0  -------------------------------
// SVD Line: 52625

//  <rtree> SFDITEM_REG__ACMP1_HYSTERESIS0
//    <name> HYSTERESIS0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000428) Hysteresis 0 Register </i>
//    <loc> ( (unsigned int)((ACMP1_HYSTERESIS0 >> 0) & 0xFFFFFFFF), ((ACMP1_HYSTERESIS0 = (ACMP1_HYSTERESIS0 & ~(0x3F3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_HYSTERESIS0_HYST </item>
//    <item> SFDITEM_FIELD__ACMP1_HYSTERESIS0_DIVVA </item>
//    <item> SFDITEM_FIELD__ACMP1_HYSTERESIS0_DIVVB </item>
//  </rtree>
//  


// ------------------------  Register Item Address: ACMP1_HYSTERESIS1  ----------------------------
// SVD Line: 52739

unsigned int ACMP1_HYSTERESIS1 __AT (0x4000042C);



// ---------------------------  Field Item: ACMP1_HYSTERESIS1_HYST  -------------------------------
// SVD Line: 52748

//  <item> SFDITEM_FIELD__ACMP1_HYSTERESIS1_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000042C) \nHysteresis Select When ACMPOUT=1\n0 : HYST0 = No hysteresis\n1 : HYST1 = 14 mV hysteresis\n2 : HYST2 = 25 mV hysteresis\n3 : HYST3 = 30 mV hysteresis\n4 : HYST4 = 35 mV hysteresis\n5 : HYST5 = 39 mV hysteresis\n6 : HYST6 = 42 mV hysteresis\n7 : HYST7 = 45 mV hysteresis\n8 : HYST8 = No hysteresis\n9 : HYST9 = -14 mV hysteresis\n10 : HYST10 = -25 mV hysteresis\n11 : HYST11 = -30 mV hysteresis\n12 : HYST12 = -35 mV hysteresis\n13 : HYST13 = -39 mV hysteresis\n14 : HYST14 = -42 mV hysteresis\n15 : HYST15 = -45 mV hysteresis </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_HYSTERESIS1 ) </loc>
//      <o.3..0> HYST
//        <0=> 0: HYST0 = No hysteresis
//        <1=> 1: HYST1 = 14 mV hysteresis
//        <2=> 2: HYST2 = 25 mV hysteresis
//        <3=> 3: HYST3 = 30 mV hysteresis
//        <4=> 4: HYST4 = 35 mV hysteresis
//        <5=> 5: HYST5 = 39 mV hysteresis
//        <6=> 6: HYST6 = 42 mV hysteresis
//        <7=> 7: HYST7 = 45 mV hysteresis
//        <8=> 8: HYST8 = No hysteresis
//        <9=> 9: HYST9 = -14 mV hysteresis
//        <10=> 10: HYST10 = -25 mV hysteresis
//        <11=> 11: HYST11 = -30 mV hysteresis
//        <12=> 12: HYST12 = -35 mV hysteresis
//        <13=> 13: HYST13 = -39 mV hysteresis
//        <14=> 14: HYST14 = -42 mV hysteresis
//        <15=> 15: HYST15 = -45 mV hysteresis
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_HYSTERESIS1_DIVVA  ------------------------------
// SVD Line: 52837

//  <item> SFDITEM_FIELD__ACMP1_HYSTERESIS1_DIVVA
//    <name> DIVVA </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x4000042C) Divider for VA Voltage When ACMPOUT=1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_HYSTERESIS1 >> 16) & 0x3F), ((ACMP1_HYSTERESIS1 = (ACMP1_HYSTERESIS1 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: ACMP1_HYSTERESIS1_DIVVB  ------------------------------
// SVD Line: 52844

//  <item> SFDITEM_FIELD__ACMP1_HYSTERESIS1_DIVVB
//    <name> DIVVB </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x4000042C) Divider for VB Voltage When ACMPOUT=1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_HYSTERESIS1 >> 24) & 0x3F), ((ACMP1_HYSTERESIS1 = (ACMP1_HYSTERESIS1 & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ACMP1_HYSTERESIS1  -------------------------------
// SVD Line: 52739

//  <rtree> SFDITEM_REG__ACMP1_HYSTERESIS1
//    <name> HYSTERESIS1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000042C) Hysteresis 1 Register </i>
//    <loc> ( (unsigned int)((ACMP1_HYSTERESIS1 >> 0) & 0xFFFFFFFF), ((ACMP1_HYSTERESIS1 = (ACMP1_HYSTERESIS1 & ~(0x3F3F000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_HYSTERESIS1_HYST </item>
//    <item> SFDITEM_FIELD__ACMP1_HYSTERESIS1_DIVVA </item>
//    <item> SFDITEM_FIELD__ACMP1_HYSTERESIS1_DIVVB </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ACMP1_ROUTEPEN  -----------------------------
// SVD Line: 52853

unsigned int ACMP1_ROUTEPEN __AT (0x40000440);



// ----------------------------  Field Item: ACMP1_ROUTEPEN_OUTPEN  -------------------------------
// SVD Line: 52862

//  <item> SFDITEM_FIELD__ACMP1_ROUTEPEN_OUTPEN
//    <name> OUTPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000440) ACMP Output Pin Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_ROUTEPEN ) </loc>
//      <o.0..0> OUTPEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: ACMP1_ROUTEPEN  ---------------------------------
// SVD Line: 52853

//  <rtree> SFDITEM_REG__ACMP1_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000440) I/O Routing Pine Enable Register </i>
//    <loc> ( (unsigned int)((ACMP1_ROUTEPEN >> 0) & 0xFFFFFFFF), ((ACMP1_ROUTEPEN = (ACMP1_ROUTEPEN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_ROUTEPEN_OUTPEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ACMP1_ROUTELOC0  -----------------------------
// SVD Line: 52871

unsigned int ACMP1_ROUTELOC0 __AT (0x40000444);



// ---------------------------  Field Item: ACMP1_ROUTELOC0_OUTLOC  -------------------------------
// SVD Line: 52880

//  <item> SFDITEM_FIELD__ACMP1_ROUTELOC0_OUTLOC
//    <name> OUTLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40000444) \nI/O Location\n0 : LOC0 = Location 0\n1 : LOC1 = Location 1\n2 : LOC2 = Location 2\n3 : LOC3 = Location 3\n4 : LOC4 = Location 4\n5 : LOC5 = Location 5\n6 : LOC6 = Location 6\n7 : LOC7 = Location 7\n8 : LOC8 = Location 8\n9 : LOC9 = Location 9\n10 : LOC10 = Location 10\n11 : LOC11 = Location 11\n12 : LOC12 = Location 12\n13 : LOC13 = Location 13\n14 : LOC14 = Location 14\n15 : LOC15 = Location 15\n16 : LOC16 = Location 16\n17 : LOC17 = Location 17\n18 : LOC18 = Location 18\n19 : LOC19 = Location 19\n20 : LOC20 = Location 20\n21 : LOC21 = Location 21\n22 : LOC22 = Location 22\n23 : LOC23 = Location 23\n24 : LOC24 = Location 24\n25 : LOC25 = Location 25\n26 : LOC26 = Location 26\n27 : LOC27 = Location 27\n28 : LOC28 = Location 28\n29 : LOC29 = Location 29\n30 : LOC30 = Location 30\n31 : LOC31 = Location 31\n32 : Reserved - do not use\n33 : Reserved - do not use\n34 : Reserved - do not use\n35 : Reserved - do not use\n36 : Reserved - do not use\n37 : Reserved - do not use\n38 : Reserved - do not use\n39 : Reserved - do not use\n40 : Reserved - do not use\n41 : Reserved - do not use\n42 : Reserved - do not use\n43 : Reserved - do not use\n44 : Reserved - do not use\n45 : Reserved - do not use\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_ROUTELOC0 ) </loc>
//      <o.5..0> OUTLOC
//        <0=> 0: LOC0 = Location 0
//        <1=> 1: LOC1 = Location 1
//        <2=> 2: LOC2 = Location 2
//        <3=> 3: LOC3 = Location 3
//        <4=> 4: LOC4 = Location 4
//        <5=> 5: LOC5 = Location 5
//        <6=> 6: LOC6 = Location 6
//        <7=> 7: LOC7 = Location 7
//        <8=> 8: LOC8 = Location 8
//        <9=> 9: LOC9 = Location 9
//        <10=> 10: LOC10 = Location 10
//        <11=> 11: LOC11 = Location 11
//        <12=> 12: LOC12 = Location 12
//        <13=> 13: LOC13 = Location 13
//        <14=> 14: LOC14 = Location 14
//        <15=> 15: LOC15 = Location 15
//        <16=> 16: LOC16 = Location 16
//        <17=> 17: LOC17 = Location 17
//        <18=> 18: LOC18 = Location 18
//        <19=> 19: LOC19 = Location 19
//        <20=> 20: LOC20 = Location 20
//        <21=> 21: LOC21 = Location 21
//        <22=> 22: LOC22 = Location 22
//        <23=> 23: LOC23 = Location 23
//        <24=> 24: LOC24 = Location 24
//        <25=> 25: LOC25 = Location 25
//        <26=> 26: LOC26 = Location 26
//        <27=> 27: LOC27 = Location 27
//        <28=> 28: LOC28 = Location 28
//        <29=> 29: LOC29 = Location 29
//        <30=> 30: LOC30 = Location 30
//        <31=> 31: LOC31 = Location 31
//        <32=> 32: 
//        <33=> 33: 
//        <34=> 34: 
//        <35=> 35: 
//        <36=> 36: 
//        <37=> 37: 
//        <38=> 38: 
//        <39=> 39: 
//        <40=> 40: 
//        <41=> 41: 
//        <42=> 42: 
//        <43=> 43: 
//        <44=> 44: 
//        <45=> 45: 
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: ACMP1_ROUTELOC0  --------------------------------
// SVD Line: 52871

//  <rtree> SFDITEM_REG__ACMP1_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000444) I/O Routing Location Register </i>
//    <loc> ( (unsigned int)((ACMP1_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((ACMP1_ROUTELOC0 = (ACMP1_ROUTELOC0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_ROUTELOC0_OUTLOC </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: ACMP1  -------------------------------------
// SVD Line: 51799

//  <view> ACMP1
//    <name> ACMP1 </name>
//    <item> SFDITEM_REG__ACMP1_CTRL </item>
//    <item> SFDITEM_REG__ACMP1_INPUTSEL </item>
//    <item> SFDITEM_REG__ACMP1_STATUS </item>
//    <item> SFDITEM_REG__ACMP1_IF </item>
//    <item> SFDITEM_REG__ACMP1_IFS </item>
//    <item> SFDITEM_REG__ACMP1_IFC </item>
//    <item> SFDITEM_REG__ACMP1_IEN </item>
//    <item> SFDITEM_REG__ACMP1_APORTREQ </item>
//    <item> SFDITEM_REG__ACMP1_APORTCONFLICT </item>
//    <item> SFDITEM_REG__ACMP1_HYSTERESIS0 </item>
//    <item> SFDITEM_REG__ACMP1_HYSTERESIS1 </item>
//    <item> SFDITEM_REG__ACMP1_ROUTEPEN </item>
//    <item> SFDITEM_REG__ACMP1_ROUTELOC0 </item>
//  </view>
//  


// ----------------------------  Register Item Address: IDAC0_CTRL  -------------------------------
// SVD Line: 53067

unsigned int IDAC0_CTRL __AT (0x40006000);



// --------------------------------  Field Item: IDAC0_CTRL_EN  -----------------------------------
// SVD Line: 53076

//  <item> SFDITEM_FIELD__IDAC0_CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40006000) Current DAC Enable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IDAC0_CTRL_CURSINK  ---------------------------------
// SVD Line: 53083

//  <item> SFDITEM_FIELD__IDAC0_CTRL_CURSINK
//    <name> CURSINK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40006000) Current Sink Enable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.1..1> CURSINK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: IDAC0_CTRL_MINOUTTRANS  -------------------------------
// SVD Line: 53090

//  <item> SFDITEM_FIELD__IDAC0_CTRL_MINOUTTRANS
//    <name> MINOUTTRANS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40006000) Minimum Output Transition Enable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.2..2> MINOUTTRANS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: IDAC0_CTRL_APORTOUTEN  -------------------------------
// SVD Line: 53097

//  <item> SFDITEM_FIELD__IDAC0_CTRL_APORTOUTEN
//    <name> APORTOUTEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40006000) APORT Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.3..3> APORTOUTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: IDAC0_CTRL_APORTOUTSEL  -------------------------------
// SVD Line: 53104

//  <item> SFDITEM_FIELD__IDAC0_CTRL_APORTOUTSEL
//    <name> APORTOUTSEL </name>
//    <rw> 
//    <i> [Bits 11..4] RW (@ 0x40006000) APORT Output Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((IDAC0_CTRL >> 4) & 0xFF), ((IDAC0_CTRL = (IDAC0_CTRL & ~(0xFFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: IDAC0_CTRL_PWRSEL  ---------------------------------
// SVD Line: 53273

//  <item> SFDITEM_FIELD__IDAC0_CTRL_PWRSEL
//    <name> PWRSEL </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40006000) Power Select </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.12..12> PWRSEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IDAC0_CTRL_EM2DELAY  --------------------------------
// SVD Line: 53280

//  <item> SFDITEM_FIELD__IDAC0_CTRL_EM2DELAY
//    <name> EM2DELAY </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40006000) EM2 Delay </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.13..13> EM2DELAY
//    </check>
//  </item>
//  


// --------------------------  Field Item: IDAC0_CTRL_APORTMASTERDIS  -----------------------------
// SVD Line: 53287

//  <item> SFDITEM_FIELD__IDAC0_CTRL_APORTMASTERDIS
//    <name> APORTMASTERDIS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40006000) APORT Bus Master Disable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.14..14> APORTMASTERDIS
//    </check>
//  </item>
//  


// --------------------------  Field Item: IDAC0_CTRL_APORTOUTENPRS  ------------------------------
// SVD Line: 53294

//  <item> SFDITEM_FIELD__IDAC0_CTRL_APORTOUTENPRS
//    <name> APORTOUTENPRS </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40006000) PRS Controlled APORT Output Enable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.16..16> APORTOUTENPRS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IDAC0_CTRL_PRSSEL  ---------------------------------
// SVD Line: 53301

//  <item> SFDITEM_FIELD__IDAC0_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40006000) \nIDAC Output Enable PRS Channel Select\n0 : PRSCH0 = PRS Channel 0 selected.\n1 : PRSCH1 = PRS Channel 1 selected.\n2 : PRSCH2 = PRS Channel 2 selected.\n3 : PRSCH3 = PRS Channel 3 selected.\n4 : PRSCH4 = PRS Channel 4 selected.\n5 : PRSCH5 = PRS Channel 5 selected.\n6 : PRSCH6 = PRS Channel 6 selected.\n7 : PRSCH7 = PRS Channel 7 selected.\n8 : PRSCH8 = PRS Channel 8 selected.\n9 : PRSCH9 = PRS Channel 9 selected.\n10 : PRSCH10 = PRS Channel 10 selected.\n11 : PRSCH11 = PRS Channel 11 selected.\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) IDAC0_CTRL ) </loc>
//      <o.23..20> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected.
//        <1=> 1: PRSCH1 = PRS Channel 1 selected.
//        <2=> 2: PRSCH2 = PRS Channel 2 selected.
//        <3=> 3: PRSCH3 = PRS Channel 3 selected.
//        <4=> 4: PRSCH4 = PRS Channel 4 selected.
//        <5=> 5: PRSCH5 = PRS Channel 5 selected.
//        <6=> 6: PRSCH6 = PRS Channel 6 selected.
//        <7=> 7: PRSCH7 = PRS Channel 7 selected.
//        <8=> 8: PRSCH8 = PRS Channel 8 selected.
//        <9=> 9: PRSCH9 = PRS Channel 9 selected.
//        <10=> 10: PRSCH10 = PRS Channel 10 selected.
//        <11=> 11: PRSCH11 = PRS Channel 11 selected.
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: IDAC0_CTRL  -----------------------------------
// SVD Line: 53067

//  <rtree> SFDITEM_REG__IDAC0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006000) Control Register </i>
//    <loc> ( (unsigned int)((IDAC0_CTRL >> 0) & 0xFFFFFFFF), ((IDAC0_CTRL = (IDAC0_CTRL & ~(0xF17FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF17FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_EN </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_CURSINK </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_MINOUTTRANS </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_APORTOUTEN </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_APORTOUTSEL </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_PWRSEL </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_EM2DELAY </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_APORTMASTERDIS </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_APORTOUTENPRS </item>
//    <item> SFDITEM_FIELD__IDAC0_CTRL_PRSSEL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: IDAC0_CURPROG  ------------------------------
// SVD Line: 53372

unsigned int IDAC0_CURPROG __AT (0x40006004);



// ---------------------------  Field Item: IDAC0_CURPROG_RANGESEL  -------------------------------
// SVD Line: 53381

//  <item> SFDITEM_FIELD__IDAC0_CURPROG_RANGESEL
//    <name> RANGESEL </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40006004) \nCurrent Range Select\n0 : RANGE0 = Current range set to 0 - 1.6 uA.\n1 : RANGE1 = Current range set to 1.6 - 4.7 uA.\n2 : RANGE2 = Current range set to 0.5 - 16 uA.\n3 : RANGE3 = Current range set to 2 - 64 uA. </i>
//    <combo> 
//      <loc> ( (unsigned int) IDAC0_CURPROG ) </loc>
//      <o.1..0> RANGESEL
//        <0=> 0: RANGE0 = Current range set to 0 - 1.6 uA.
//        <1=> 1: RANGE1 = Current range set to 1.6 - 4.7 uA.
//        <2=> 2: RANGE2 = Current range set to 0.5 - 16 uA.
//        <3=> 3: RANGE3 = Current range set to 2 - 64 uA.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: IDAC0_CURPROG_STEPSEL  -------------------------------
// SVD Line: 53410

//  <item> SFDITEM_FIELD__IDAC0_CURPROG_STEPSEL
//    <name> STEPSEL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40006004) Current Step Size Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((IDAC0_CURPROG >> 8) & 0x1F), ((IDAC0_CURPROG = (IDAC0_CURPROG & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: IDAC0_CURPROG_TUNING  --------------------------------
// SVD Line: 53417

//  <item> SFDITEM_FIELD__IDAC0_CURPROG_TUNING
//    <name> TUNING </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40006004) Tune the Current to Given Accuracy </i>
//    <edit> 
//      <loc> ( (unsigned char)((IDAC0_CURPROG >> 16) & 0xFF), ((IDAC0_CURPROG = (IDAC0_CURPROG & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: IDAC0_CURPROG  ---------------------------------
// SVD Line: 53372

//  <rtree> SFDITEM_REG__IDAC0_CURPROG
//    <name> CURPROG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006004) Current Programming Register </i>
//    <loc> ( (unsigned int)((IDAC0_CURPROG >> 0) & 0xFFFFFFFF), ((IDAC0_CURPROG = (IDAC0_CURPROG & ~(0xFF1F03UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF1F03) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IDAC0_CURPROG_RANGESEL </item>
//    <item> SFDITEM_FIELD__IDAC0_CURPROG_STEPSEL </item>
//    <item> SFDITEM_FIELD__IDAC0_CURPROG_TUNING </item>
//  </rtree>
//  


// -------------------------  Register Item Address: IDAC0_DUTYCONFIG  ----------------------------
// SVD Line: 53426

unsigned int IDAC0_DUTYCONFIG __AT (0x4000600C);



// ----------------------  Field Item: IDAC0_DUTYCONFIG_EM2DUTYCYCLEDIS  --------------------------
// SVD Line: 53435

//  <item> SFDITEM_FIELD__IDAC0_DUTYCONFIG_EM2DUTYCYCLEDIS
//    <name> EM2DUTYCYCLEDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000600C) Duty Cycle Enable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_DUTYCONFIG ) </loc>
//      <o.1..1> EM2DUTYCYCLEDIS
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: IDAC0_DUTYCONFIG  --------------------------------
// SVD Line: 53426

//  <rtree> SFDITEM_REG__IDAC0_DUTYCONFIG
//    <name> DUTYCONFIG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000600C) Duty Cycle Configuration Register </i>
//    <loc> ( (unsigned int)((IDAC0_DUTYCONFIG >> 0) & 0xFFFFFFFF), ((IDAC0_DUTYCONFIG = (IDAC0_DUTYCONFIG & ~(0x2UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IDAC0_DUTYCONFIG_EM2DUTYCYCLEDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IDAC0_STATUS  ------------------------------
// SVD Line: 53444

unsigned int IDAC0_STATUS __AT (0x40006018);



// -------------------------  Field Item: IDAC0_STATUS_APORTCONFLICT  -----------------------------
// SVD Line: 53453

//  <item> SFDITEM_FIELD__IDAC0_STATUS_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40006018) APORT Conflict Output </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_STATUS ) </loc>
//      <o.1..1> APORTCONFLICT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: IDAC0_STATUS  ----------------------------------
// SVD Line: 53444

//  <rtree> SFDITEM_REG__IDAC0_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006018) Status Register </i>
//    <loc> ( (unsigned int)((IDAC0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IDAC0_STATUS_APORTCONFLICT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IDAC0_IF  --------------------------------
// SVD Line: 53462

unsigned int IDAC0_IF __AT (0x40006020);



// ---------------------------  Field Item: IDAC0_IF_APORTCONFLICT  -------------------------------
// SVD Line: 53471

//  <item> SFDITEM_FIELD__IDAC0_IF_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40006020) APORT Conflict Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_IF ) </loc>
//      <o.1..1> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IDAC0_IF  ------------------------------------
// SVD Line: 53462

//  <rtree> SFDITEM_REG__IDAC0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006020) Interrupt Flag Register </i>
//    <loc> ( (unsigned int)((IDAC0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IDAC0_IF_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IDAC0_IFS  --------------------------------
// SVD Line: 53480

unsigned int IDAC0_IFS __AT (0x40006024);



// ---------------------------  Field Item: IDAC0_IFS_APORTCONFLICT  ------------------------------
// SVD Line: 53489

//  <item> SFDITEM_FIELD__IDAC0_IFS_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40006024) Set APORTCONFLICT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_IFS ) </loc>
//      <o.1..1> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IDAC0_IFS  -----------------------------------
// SVD Line: 53480

//  <rtree> SFDITEM_REG__IDAC0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40006024) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((IDAC0_IFS >> 0) & 0xFFFFFFFF), ((IDAC0_IFS = (IDAC0_IFS & ~(0x2UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IDAC0_IFS_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IDAC0_IFC  --------------------------------
// SVD Line: 53498

unsigned int IDAC0_IFC __AT (0x40006028);



// ---------------------------  Field Item: IDAC0_IFC_APORTCONFLICT  ------------------------------
// SVD Line: 53507

//  <item> SFDITEM_FIELD__IDAC0_IFC_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40006028) Clear APORTCONFLICT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_IFC ) </loc>
//      <o.1..1> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IDAC0_IFC  -----------------------------------
// SVD Line: 53498

//  <rtree> SFDITEM_REG__IDAC0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40006028) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((IDAC0_IFC >> 0) & 0xFFFFFFFF), ((IDAC0_IFC = (IDAC0_IFC & ~(0x2UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IDAC0_IFC_APORTCONFLICT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IDAC0_IEN  --------------------------------
// SVD Line: 53516

unsigned int IDAC0_IEN __AT (0x4000602C);



// ---------------------------  Field Item: IDAC0_IEN_APORTCONFLICT  ------------------------------
// SVD Line: 53525

//  <item> SFDITEM_FIELD__IDAC0_IEN_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000602C) APORTCONFLICT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_IEN ) </loc>
//      <o.1..1> APORTCONFLICT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IDAC0_IEN  -----------------------------------
// SVD Line: 53516

//  <rtree> SFDITEM_REG__IDAC0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000602C) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((IDAC0_IEN >> 0) & 0xFFFFFFFF), ((IDAC0_IEN = (IDAC0_IEN & ~(0x2UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IDAC0_IEN_APORTCONFLICT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: IDAC0_APORTREQ  -----------------------------
// SVD Line: 53534

unsigned int IDAC0_APORTREQ __AT (0x40006034);



// --------------------------  Field Item: IDAC0_APORTREQ_APORT1XREQ  -----------------------------
// SVD Line: 53543

//  <item> SFDITEM_FIELD__IDAC0_APORTREQ_APORT1XREQ
//    <name> APORT1XREQ </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40006034) 1 If the APORT Bus Connected to APORT1X is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_APORTREQ ) </loc>
//      <o.2..2> APORT1XREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: IDAC0_APORTREQ_APORT1YREQ  -----------------------------
// SVD Line: 53550

//  <item> SFDITEM_FIELD__IDAC0_APORTREQ_APORT1YREQ
//    <name> APORT1YREQ </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40006034) 1 If the Bus Connected to APORT1Y is Requested </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_APORTREQ ) </loc>
//      <o.3..3> APORT1YREQ
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: IDAC0_APORTREQ  ---------------------------------
// SVD Line: 53534

//  <rtree> SFDITEM_REG__IDAC0_APORTREQ
//    <name> APORTREQ </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006034) APORT Request Status Register </i>
//    <loc> ( (unsigned int)((IDAC0_APORTREQ >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IDAC0_APORTREQ_APORT1XREQ </item>
//    <item> SFDITEM_FIELD__IDAC0_APORTREQ_APORT1YREQ </item>
//  </rtree>
//  


// -----------------------  Register Item Address: IDAC0_APORTCONFLICT  ---------------------------
// SVD Line: 53559

unsigned int IDAC0_APORTCONFLICT __AT (0x40006038);



// ---------------------  Field Item: IDAC0_APORTCONFLICT_APORT1XCONFLICT  ------------------------
// SVD Line: 53568

//  <item> SFDITEM_FIELD__IDAC0_APORTCONFLICT_APORT1XCONFLICT
//    <name> APORT1XCONFLICT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40006038) 1 If the Bus Connected to APORT1X is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_APORTCONFLICT ) </loc>
//      <o.2..2> APORT1XCONFLICT
//    </check>
//  </item>
//  


// ---------------------  Field Item: IDAC0_APORTCONFLICT_APORT1YCONFLICT  ------------------------
// SVD Line: 53575

//  <item> SFDITEM_FIELD__IDAC0_APORTCONFLICT_APORT1YCONFLICT
//    <name> APORT1YCONFLICT </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40006038) 1 If the Bus Connected to APORT1Y is in Conflict With Another Peripheral </i>
//    <check> 
//      <loc> ( (unsigned int) IDAC0_APORTCONFLICT ) </loc>
//      <o.3..3> APORT1YCONFLICT
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: IDAC0_APORTCONFLICT  ------------------------------
// SVD Line: 53559

//  <rtree> SFDITEM_REG__IDAC0_APORTCONFLICT
//    <name> APORTCONFLICT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006038) APORT Request Status Register </i>
//    <loc> ( (unsigned int)((IDAC0_APORTCONFLICT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__IDAC0_APORTCONFLICT_APORT1XCONFLICT </item>
//    <item> SFDITEM_FIELD__IDAC0_APORTCONFLICT_APORT1YCONFLICT </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: IDAC0  -------------------------------------
// SVD Line: 53053

//  <view> IDAC0
//    <name> IDAC0 </name>
//    <item> SFDITEM_REG__IDAC0_CTRL </item>
//    <item> SFDITEM_REG__IDAC0_CURPROG </item>
//    <item> SFDITEM_REG__IDAC0_DUTYCONFIG </item>
//    <item> SFDITEM_REG__IDAC0_STATUS </item>
//    <item> SFDITEM_REG__IDAC0_IF </item>
//    <item> SFDITEM_REG__IDAC0_IFS </item>
//    <item> SFDITEM_REG__IDAC0_IFC </item>
//    <item> SFDITEM_REG__IDAC0_IEN </item>
//    <item> SFDITEM_REG__IDAC0_APORTREQ </item>
//    <item> SFDITEM_REG__IDAC0_APORTCONFLICT </item>
//  </view>
//  


// ----------------------------  Register Item Address: RTCC_CTRL  --------------------------------
// SVD Line: 53600

unsigned int RTCC_CTRL __AT (0x40042000);



// ------------------------------  Field Item: RTCC_CTRL_ENABLE  ----------------------------------
// SVD Line: 53609

//  <item> SFDITEM_FIELD__RTCC_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042000) RTCC Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CTRL_DEBUGRUN  ---------------------------------
// SVD Line: 53616

//  <item> SFDITEM_FIELD__RTCC_CTRL_DEBUGRUN
//    <name> DEBUGRUN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042000) Debug Mode Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.2..2> DEBUGRUN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CTRL_PRECCV0TOP  --------------------------------
// SVD Line: 53623

//  <item> SFDITEM_FIELD__RTCC_CTRL_PRECCV0TOP
//    <name> PRECCV0TOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042000) Pre-counter CCV0 Top Value Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.4..4> PRECCV0TOP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_CTRL_CCV1TOP  ---------------------------------
// SVD Line: 53630

//  <item> SFDITEM_FIELD__RTCC_CTRL_CCV1TOP
//    <name> CCV1TOP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042000) CCV1 Top Value Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.5..5> CCV1TOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CTRL_CNTPRESC  ---------------------------------
// SVD Line: 53637

//  <item> SFDITEM_FIELD__RTCC_CTRL_CNTPRESC
//    <name> CNTPRESC </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40042000) \nCounter Prescaler Value\n0 : DIV1 = CLKCNT = LFECLKRTCC/1\n1 : DIV2 = CLKCNT = LFECLKRTCC/2\n2 : DIV4 = CLKCNT = LFECLKRTCC/4\n3 : DIV8 = CLKCNT = LFECLKRTCC/8\n4 : DIV16 = CLKCNT = LFECLKRTCC/16\n5 : DIV32 = CLKCNT = LFECLKRTCC/32\n6 : DIV64 = CLKCNT = LFECLKRTCC/64\n7 : DIV128 = CLKCNT = LFECLKRTCC/128\n8 : DIV256 = CLKCNT = LFECLKRTCC/256\n9 : DIV512 = CLKCNT = LFECLKRTCC/512\n10 : DIV1024 = CLKCNT = LFECLKRTCC/1024\n11 : DIV2048 = CLKCNT = LFECLKRTCC/2048\n12 : DIV4096 = CLKCNT = LFECLKRTCC/4096\n13 : DIV8192 = CLKCNT = LFECLKRTCC/8192\n14 : DIV16384 = CLKCNT = LFECLKRTCC/16384\n15 : DIV32768 = CLKCNT = LFECLKRTCC/32768 </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.11..8> CNTPRESC
//        <0=> 0: DIV1 = CLKCNT = LFECLKRTCC/1
//        <1=> 1: DIV2 = CLKCNT = LFECLKRTCC/2
//        <2=> 2: DIV4 = CLKCNT = LFECLKRTCC/4
//        <3=> 3: DIV8 = CLKCNT = LFECLKRTCC/8
//        <4=> 4: DIV16 = CLKCNT = LFECLKRTCC/16
//        <5=> 5: DIV32 = CLKCNT = LFECLKRTCC/32
//        <6=> 6: DIV64 = CLKCNT = LFECLKRTCC/64
//        <7=> 7: DIV128 = CLKCNT = LFECLKRTCC/128
//        <8=> 8: DIV256 = CLKCNT = LFECLKRTCC/256
//        <9=> 9: DIV512 = CLKCNT = LFECLKRTCC/512
//        <10=> 10: DIV1024 = CLKCNT = LFECLKRTCC/1024
//        <11=> 11: DIV2048 = CLKCNT = LFECLKRTCC/2048
//        <12=> 12: DIV4096 = CLKCNT = LFECLKRTCC/4096
//        <13=> 13: DIV8192 = CLKCNT = LFECLKRTCC/8192
//        <14=> 14: DIV16384 = CLKCNT = LFECLKRTCC/16384
//        <15=> 15: DIV32768 = CLKCNT = LFECLKRTCC/32768
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: RTCC_CTRL_CNTTICK  ---------------------------------
// SVD Line: 53726

//  <item> SFDITEM_FIELD__RTCC_CTRL_CNTTICK
//    <name> CNTTICK </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042000) Counter Prescaler Mode </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.12..12> CNTTICK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CTRL_OSCFDETEN  --------------------------------
// SVD Line: 53733

//  <item> SFDITEM_FIELD__RTCC_CTRL_OSCFDETEN
//    <name> OSCFDETEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40042000) Oscillator Failure Detection Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.15..15> OSCFDETEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_CTRL_CNTMODE  ---------------------------------
// SVD Line: 53740

//  <item> SFDITEM_FIELD__RTCC_CTRL_CNTMODE
//    <name> CNTMODE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40042000) Main Counter Mode </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.16..16> CNTMODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTCC_CTRL_LYEARCORRDIS  -------------------------------
// SVD Line: 53747

//  <item> SFDITEM_FIELD__RTCC_CTRL_LYEARCORRDIS
//    <name> LYEARCORRDIS </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40042000) Leap Year Correction Disabled </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CTRL ) </loc>
//      <o.17..17> LYEARCORRDIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_CTRL  -----------------------------------
// SVD Line: 53600

//  <rtree> SFDITEM_REG__RTCC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042000) Control Register </i>
//    <loc> ( (unsigned int)((RTCC_CTRL >> 0) & 0xFFFFFFFF), ((RTCC_CTRL = (RTCC_CTRL & ~(0x39F35UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x39F35) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_DEBUGRUN </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_PRECCV0TOP </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_CCV1TOP </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_CNTPRESC </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_CNTTICK </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_OSCFDETEN </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_CNTMODE </item>
//    <item> SFDITEM_FIELD__RTCC_CTRL_LYEARCORRDIS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTCC_PRECNT  -------------------------------
// SVD Line: 53756

unsigned int RTCC_PRECNT __AT (0x40042004);



// -----------------------------  Field Item: RTCC_PRECNT_PRECNT  ---------------------------------
// SVD Line: 53765

//  <item> SFDITEM_FIELD__RTCC_PRECNT_PRECNT
//    <name> PRECNT </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x40042004) Pre-Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTCC_PRECNT >> 0) & 0x7FFF), ((RTCC_PRECNT = (RTCC_PRECNT & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RTCC_PRECNT  ----------------------------------
// SVD Line: 53756

//  <rtree> SFDITEM_REG__RTCC_PRECNT
//    <name> PRECNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042004) Pre-Counter Value Register </i>
//    <loc> ( (unsigned int)((RTCC_PRECNT >> 0) & 0xFFFFFFFF), ((RTCC_PRECNT = (RTCC_PRECNT & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_PRECNT_PRECNT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTCC_CNT  --------------------------------
// SVD Line: 53774

unsigned int RTCC_CNT __AT (0x40042008);



// --------------------------------  Field Item: RTCC_CNT_CNT  ------------------------------------
// SVD Line: 53783

//  <item> SFDITEM_FIELD__RTCC_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042008) Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_CNT >> 0) & 0xFFFFFFFF), ((RTCC_CNT = (RTCC_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_CNT  ------------------------------------
// SVD Line: 53774

//  <rtree> SFDITEM_REG__RTCC_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042008) Counter Value Register </i>
//    <loc> ( (unsigned int)((RTCC_CNT >> 0) & 0xFFFFFFFF), ((RTCC_CNT = (RTCC_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CNT_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTCC_COMBCNT  ------------------------------
// SVD Line: 53792

unsigned int RTCC_COMBCNT __AT (0x4004200C);



// -----------------------------  Field Item: RTCC_COMBCNT_PRECNT  --------------------------------
// SVD Line: 53801

//  <item> SFDITEM_FIELD__RTCC_COMBCNT_PRECNT
//    <name> PRECNT </name>
//    <r> 
//    <i> [Bits 14..0] RO (@ 0x4004200C) Pre-Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTCC_COMBCNT >> 0) & 0x7FFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_COMBCNT_CNTLSB  --------------------------------
// SVD Line: 53808

//  <item> SFDITEM_FIELD__RTCC_COMBCNT_CNTLSB
//    <name> CNTLSB </name>
//    <r> 
//    <i> [Bits 31..15] RO (@ 0x4004200C) Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_COMBCNT >> 15) & 0x1FFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_COMBCNT  ----------------------------------
// SVD Line: 53792

//  <rtree> SFDITEM_REG__RTCC_COMBCNT
//    <name> COMBCNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4004200C) Combined Pre-Counter and Counter Value Register </i>
//    <loc> ( (unsigned int)((RTCC_COMBCNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTCC_COMBCNT_PRECNT </item>
//    <item> SFDITEM_FIELD__RTCC_COMBCNT_CNTLSB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTCC_TIME  --------------------------------
// SVD Line: 53817

unsigned int RTCC_TIME __AT (0x40042010);



// -------------------------------  Field Item: RTCC_TIME_SECU  -----------------------------------
// SVD Line: 53826

//  <item> SFDITEM_FIELD__RTCC_TIME_SECU
//    <name> SECU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042010) Seconds, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_TIME >> 0) & 0xF), ((RTCC_TIME = (RTCC_TIME & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTCC_TIME_SECT  -----------------------------------
// SVD Line: 53833

//  <item> SFDITEM_FIELD__RTCC_TIME_SECT
//    <name> SECT </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042010) Seconds, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_TIME >> 4) & 0x7), ((RTCC_TIME = (RTCC_TIME & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTCC_TIME_MINU  -----------------------------------
// SVD Line: 53840

//  <item> SFDITEM_FIELD__RTCC_TIME_MINU
//    <name> MINU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40042010) Minutes, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_TIME >> 8) & 0xF), ((RTCC_TIME = (RTCC_TIME & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTCC_TIME_MINT  -----------------------------------
// SVD Line: 53847

//  <item> SFDITEM_FIELD__RTCC_TIME_MINT
//    <name> MINT </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40042010) Minutes, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_TIME >> 12) & 0x7), ((RTCC_TIME = (RTCC_TIME & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTCC_TIME_HOURU  ----------------------------------
// SVD Line: 53854

//  <item> SFDITEM_FIELD__RTCC_TIME_HOURU
//    <name> HOURU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40042010) Hours, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_TIME >> 16) & 0xF), ((RTCC_TIME = (RTCC_TIME & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTCC_TIME_HOURT  ----------------------------------
// SVD Line: 53861

//  <item> SFDITEM_FIELD__RTCC_TIME_HOURT
//    <name> HOURT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40042010) Hours, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_TIME >> 20) & 0x3), ((RTCC_TIME = (RTCC_TIME & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_TIME  -----------------------------------
// SVD Line: 53817

//  <rtree> SFDITEM_REG__RTCC_TIME
//    <name> TIME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042010) Time of Day Register </i>
//    <loc> ( (unsigned int)((RTCC_TIME >> 0) & 0xFFFFFFFF), ((RTCC_TIME = (RTCC_TIME & ~(0x3F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_TIME_SECU </item>
//    <item> SFDITEM_FIELD__RTCC_TIME_SECT </item>
//    <item> SFDITEM_FIELD__RTCC_TIME_MINU </item>
//    <item> SFDITEM_FIELD__RTCC_TIME_MINT </item>
//    <item> SFDITEM_FIELD__RTCC_TIME_HOURU </item>
//    <item> SFDITEM_FIELD__RTCC_TIME_HOURT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTCC_DATE  --------------------------------
// SVD Line: 53870

unsigned int RTCC_DATE __AT (0x40042014);



// ------------------------------  Field Item: RTCC_DATE_DAYOMU  ----------------------------------
// SVD Line: 53879

//  <item> SFDITEM_FIELD__RTCC_DATE_DAYOMU
//    <name> DAYOMU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042014) Day of Month, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_DATE >> 0) & 0xF), ((RTCC_DATE = (RTCC_DATE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RTCC_DATE_DAYOMT  ----------------------------------
// SVD Line: 53886

//  <item> SFDITEM_FIELD__RTCC_DATE_DAYOMT
//    <name> DAYOMT </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40042014) Day of Month, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_DATE >> 4) & 0x3), ((RTCC_DATE = (RTCC_DATE & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RTCC_DATE_MONTHU  ----------------------------------
// SVD Line: 53893

//  <item> SFDITEM_FIELD__RTCC_DATE_MONTHU
//    <name> MONTHU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40042014) Month, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_DATE >> 8) & 0xF), ((RTCC_DATE = (RTCC_DATE & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RTCC_DATE_MONTHT  ----------------------------------
// SVD Line: 53900

//  <item> SFDITEM_FIELD__RTCC_DATE_MONTHT
//    <name> MONTHT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042014) Month, Tens </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_DATE ) </loc>
//      <o.12..12> MONTHT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTCC_DATE_YEARU  ----------------------------------
// SVD Line: 53907

//  <item> SFDITEM_FIELD__RTCC_DATE_YEARU
//    <name> YEARU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40042014) Year, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_DATE >> 16) & 0xF), ((RTCC_DATE = (RTCC_DATE & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTCC_DATE_YEART  ----------------------------------
// SVD Line: 53914

//  <item> SFDITEM_FIELD__RTCC_DATE_YEART
//    <name> YEART </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40042014) Year, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_DATE >> 20) & 0xF), ((RTCC_DATE = (RTCC_DATE & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTCC_DATE_DAYOW  ----------------------------------
// SVD Line: 53921

//  <item> SFDITEM_FIELD__RTCC_DATE_DAYOW
//    <name> DAYOW </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40042014) Day of Week </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_DATE >> 24) & 0x7), ((RTCC_DATE = (RTCC_DATE & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_DATE  -----------------------------------
// SVD Line: 53870

//  <rtree> SFDITEM_REG__RTCC_DATE
//    <name> DATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042014) Date Register </i>
//    <loc> ( (unsigned int)((RTCC_DATE >> 0) & 0xFFFFFFFF), ((RTCC_DATE = (RTCC_DATE & ~(0x7FF1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FF1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_DATE_DAYOMU </item>
//    <item> SFDITEM_FIELD__RTCC_DATE_DAYOMT </item>
//    <item> SFDITEM_FIELD__RTCC_DATE_MONTHU </item>
//    <item> SFDITEM_FIELD__RTCC_DATE_MONTHT </item>
//    <item> SFDITEM_FIELD__RTCC_DATE_YEARU </item>
//    <item> SFDITEM_FIELD__RTCC_DATE_YEART </item>
//    <item> SFDITEM_FIELD__RTCC_DATE_DAYOW </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTCC_IF  ---------------------------------
// SVD Line: 53930

unsigned int RTCC_IF __AT (0x40042018);



// ---------------------------------  Field Item: RTCC_IF_OF  -------------------------------------
// SVD Line: 53939

//  <item> SFDITEM_FIELD__RTCC_IF_OF
//    <name> OF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40042018) Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTCC_IF_CC0  ------------------------------------
// SVD Line: 53946

//  <item> SFDITEM_FIELD__RTCC_IF_CC0
//    <name> CC0 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40042018) Channel 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.1..1> CC0
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTCC_IF_CC1  ------------------------------------
// SVD Line: 53953

//  <item> SFDITEM_FIELD__RTCC_IF_CC1
//    <name> CC1 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40042018) Channel 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.2..2> CC1
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTCC_IF_CC2  ------------------------------------
// SVD Line: 53960

//  <item> SFDITEM_FIELD__RTCC_IF_CC2
//    <name> CC2 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40042018) Channel 2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.3..3> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTCC_IF_OSCFAIL  ----------------------------------
// SVD Line: 53967

//  <item> SFDITEM_FIELD__RTCC_IF_OSCFAIL
//    <name> OSCFAIL </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40042018) Oscillator Failure Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.4..4> OSCFAIL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTCC_IF_CNTTICK  ----------------------------------
// SVD Line: 53974

//  <item> SFDITEM_FIELD__RTCC_IF_CNTTICK
//    <name> CNTTICK </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40042018) Main Counter Tick </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.5..5> CNTTICK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTCC_IF_MINTICK  ----------------------------------
// SVD Line: 53981

//  <item> SFDITEM_FIELD__RTCC_IF_MINTICK
//    <name> MINTICK </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40042018) Minute Tick </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.6..6> MINTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IF_HOURTICK  ----------------------------------
// SVD Line: 53988

//  <item> SFDITEM_FIELD__RTCC_IF_HOURTICK
//    <name> HOURTICK </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40042018) Hour Tick </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.7..7> HOURTICK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTCC_IF_DAYTICK  ----------------------------------
// SVD Line: 53995

//  <item> SFDITEM_FIELD__RTCC_IF_DAYTICK
//    <name> DAYTICK </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40042018) Day Tick </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.8..8> DAYTICK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTCC_IF_DAYOWOF  ----------------------------------
// SVD Line: 54002

//  <item> SFDITEM_FIELD__RTCC_IF_DAYOWOF
//    <name> DAYOWOF </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40042018) Day of Week Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.9..9> DAYOWOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IF_MONTHTICK  ---------------------------------
// SVD Line: 54009

//  <item> SFDITEM_FIELD__RTCC_IF_MONTHTICK
//    <name> MONTHTICK </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40042018) Month Tick </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IF ) </loc>
//      <o.10..10> MONTHTICK
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTCC_IF  ------------------------------------
// SVD Line: 53930

//  <rtree> SFDITEM_REG__RTCC_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40042018) RTCC Interrupt Flags </i>
//    <loc> ( (unsigned int)((RTCC_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTCC_IF_OF </item>
//    <item> SFDITEM_FIELD__RTCC_IF_CC0 </item>
//    <item> SFDITEM_FIELD__RTCC_IF_CC1 </item>
//    <item> SFDITEM_FIELD__RTCC_IF_CC2 </item>
//    <item> SFDITEM_FIELD__RTCC_IF_OSCFAIL </item>
//    <item> SFDITEM_FIELD__RTCC_IF_CNTTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IF_MINTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IF_HOURTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IF_DAYTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IF_DAYOWOF </item>
//    <item> SFDITEM_FIELD__RTCC_IF_MONTHTICK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTCC_IFS  --------------------------------
// SVD Line: 54018

unsigned int RTCC_IFS __AT (0x4004201C);



// ---------------------------------  Field Item: RTCC_IFS_OF  ------------------------------------
// SVD Line: 54027

//  <item> SFDITEM_FIELD__RTCC_IFS_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004201C) Set OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IFS_CC0  ------------------------------------
// SVD Line: 54034

//  <item> SFDITEM_FIELD__RTCC_IFS_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4004201C) Set CC0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.1..1> CC0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IFS_CC1  ------------------------------------
// SVD Line: 54041

//  <item> SFDITEM_FIELD__RTCC_IFS_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4004201C) Set CC1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.2..2> CC1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IFS_CC2  ------------------------------------
// SVD Line: 54048

//  <item> SFDITEM_FIELD__RTCC_IFS_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4004201C) Set CC2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.3..3> CC2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFS_OSCFAIL  ----------------------------------
// SVD Line: 54055

//  <item> SFDITEM_FIELD__RTCC_IFS_OSCFAIL
//    <name> OSCFAIL </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4004201C) Set OSCFAIL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.4..4> OSCFAIL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFS_CNTTICK  ----------------------------------
// SVD Line: 54062

//  <item> SFDITEM_FIELD__RTCC_IFS_CNTTICK
//    <name> CNTTICK </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4004201C) Set CNTTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.5..5> CNTTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFS_MINTICK  ----------------------------------
// SVD Line: 54069

//  <item> SFDITEM_FIELD__RTCC_IFS_MINTICK
//    <name> MINTICK </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4004201C) Set MINTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.6..6> MINTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFS_HOURTICK  ---------------------------------
// SVD Line: 54076

//  <item> SFDITEM_FIELD__RTCC_IFS_HOURTICK
//    <name> HOURTICK </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4004201C) Set HOURTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.7..7> HOURTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFS_DAYTICK  ----------------------------------
// SVD Line: 54083

//  <item> SFDITEM_FIELD__RTCC_IFS_DAYTICK
//    <name> DAYTICK </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4004201C) Set DAYTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.8..8> DAYTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFS_DAYOWOF  ----------------------------------
// SVD Line: 54090

//  <item> SFDITEM_FIELD__RTCC_IFS_DAYOWOF
//    <name> DAYOWOF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x4004201C) Set DAYOWOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.9..9> DAYOWOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTCC_IFS_MONTHTICK  ---------------------------------
// SVD Line: 54097

//  <item> SFDITEM_FIELD__RTCC_IFS_MONTHTICK
//    <name> MONTHTICK </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x4004201C) Set MONTHTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFS ) </loc>
//      <o.10..10> MONTHTICK
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_IFS  ------------------------------------
// SVD Line: 54018

//  <rtree> SFDITEM_REG__RTCC_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004201C) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((RTCC_IFS >> 0) & 0xFFFFFFFF), ((RTCC_IFS = (RTCC_IFS & ~(0x7FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_IFS_OF </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_CC0 </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_CC1 </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_CC2 </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_OSCFAIL </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_CNTTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_MINTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_HOURTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_DAYTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_DAYOWOF </item>
//    <item> SFDITEM_FIELD__RTCC_IFS_MONTHTICK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTCC_IFC  --------------------------------
// SVD Line: 54106

unsigned int RTCC_IFC __AT (0x40042020);



// ---------------------------------  Field Item: RTCC_IFC_OF  ------------------------------------
// SVD Line: 54115

//  <item> SFDITEM_FIELD__RTCC_IFC_OF
//    <name> OF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40042020) Clear OF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IFC_CC0  ------------------------------------
// SVD Line: 54122

//  <item> SFDITEM_FIELD__RTCC_IFC_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40042020) Clear CC0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.1..1> CC0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IFC_CC1  ------------------------------------
// SVD Line: 54129

//  <item> SFDITEM_FIELD__RTCC_IFC_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40042020) Clear CC1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.2..2> CC1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IFC_CC2  ------------------------------------
// SVD Line: 54136

//  <item> SFDITEM_FIELD__RTCC_IFC_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40042020) Clear CC2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.3..3> CC2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFC_OSCFAIL  ----------------------------------
// SVD Line: 54143

//  <item> SFDITEM_FIELD__RTCC_IFC_OSCFAIL
//    <name> OSCFAIL </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40042020) Clear OSCFAIL Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.4..4> OSCFAIL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFC_CNTTICK  ----------------------------------
// SVD Line: 54150

//  <item> SFDITEM_FIELD__RTCC_IFC_CNTTICK
//    <name> CNTTICK </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40042020) Clear CNTTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.5..5> CNTTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFC_MINTICK  ----------------------------------
// SVD Line: 54157

//  <item> SFDITEM_FIELD__RTCC_IFC_MINTICK
//    <name> MINTICK </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40042020) Clear MINTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.6..6> MINTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFC_HOURTICK  ---------------------------------
// SVD Line: 54164

//  <item> SFDITEM_FIELD__RTCC_IFC_HOURTICK
//    <name> HOURTICK </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40042020) Clear HOURTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.7..7> HOURTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFC_DAYTICK  ----------------------------------
// SVD Line: 54171

//  <item> SFDITEM_FIELD__RTCC_IFC_DAYTICK
//    <name> DAYTICK </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40042020) Clear DAYTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.8..8> DAYTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IFC_DAYOWOF  ----------------------------------
// SVD Line: 54178

//  <item> SFDITEM_FIELD__RTCC_IFC_DAYOWOF
//    <name> DAYOWOF </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40042020) Clear DAYOWOF Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.9..9> DAYOWOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTCC_IFC_MONTHTICK  ---------------------------------
// SVD Line: 54185

//  <item> SFDITEM_FIELD__RTCC_IFC_MONTHTICK
//    <name> MONTHTICK </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40042020) Clear MONTHTICK Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IFC ) </loc>
//      <o.10..10> MONTHTICK
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_IFC  ------------------------------------
// SVD Line: 54106

//  <rtree> SFDITEM_REG__RTCC_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40042020) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((RTCC_IFC >> 0) & 0xFFFFFFFF), ((RTCC_IFC = (RTCC_IFC & ~(0x7FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_IFC_OF </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_CC0 </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_CC1 </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_CC2 </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_OSCFAIL </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_CNTTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_MINTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_HOURTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_DAYTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_DAYOWOF </item>
//    <item> SFDITEM_FIELD__RTCC_IFC_MONTHTICK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTCC_IEN  --------------------------------
// SVD Line: 54194

unsigned int RTCC_IEN __AT (0x40042024);



// ---------------------------------  Field Item: RTCC_IEN_OF  ------------------------------------
// SVD Line: 54203

//  <item> SFDITEM_FIELD__RTCC_IEN_OF
//    <name> OF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042024) OF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.0..0> OF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IEN_CC0  ------------------------------------
// SVD Line: 54210

//  <item> SFDITEM_FIELD__RTCC_IEN_CC0
//    <name> CC0 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042024) CC0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.1..1> CC0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IEN_CC1  ------------------------------------
// SVD Line: 54217

//  <item> SFDITEM_FIELD__RTCC_IEN_CC1
//    <name> CC1 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042024) CC1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.2..2> CC1
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTCC_IEN_CC2  ------------------------------------
// SVD Line: 54224

//  <item> SFDITEM_FIELD__RTCC_IEN_CC2
//    <name> CC2 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042024) CC2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.3..3> CC2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IEN_OSCFAIL  ----------------------------------
// SVD Line: 54231

//  <item> SFDITEM_FIELD__RTCC_IEN_OSCFAIL
//    <name> OSCFAIL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042024) OSCFAIL Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.4..4> OSCFAIL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IEN_CNTTICK  ----------------------------------
// SVD Line: 54238

//  <item> SFDITEM_FIELD__RTCC_IEN_CNTTICK
//    <name> CNTTICK </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042024) CNTTICK Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.5..5> CNTTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IEN_MINTICK  ----------------------------------
// SVD Line: 54245

//  <item> SFDITEM_FIELD__RTCC_IEN_MINTICK
//    <name> MINTICK </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042024) MINTICK Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.6..6> MINTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IEN_HOURTICK  ---------------------------------
// SVD Line: 54252

//  <item> SFDITEM_FIELD__RTCC_IEN_HOURTICK
//    <name> HOURTICK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042024) HOURTICK Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.7..7> HOURTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IEN_DAYTICK  ----------------------------------
// SVD Line: 54259

//  <item> SFDITEM_FIELD__RTCC_IEN_DAYTICK
//    <name> DAYTICK </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40042024) DAYTICK Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.8..8> DAYTICK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTCC_IEN_DAYOWOF  ----------------------------------
// SVD Line: 54266

//  <item> SFDITEM_FIELD__RTCC_IEN_DAYOWOF
//    <name> DAYOWOF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40042024) DAYOWOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.9..9> DAYOWOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTCC_IEN_MONTHTICK  ---------------------------------
// SVD Line: 54273

//  <item> SFDITEM_FIELD__RTCC_IEN_MONTHTICK
//    <name> MONTHTICK </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40042024) MONTHTICK Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_IEN ) </loc>
//      <o.10..10> MONTHTICK
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_IEN  ------------------------------------
// SVD Line: 54194

//  <rtree> SFDITEM_REG__RTCC_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042024) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((RTCC_IEN >> 0) & 0xFFFFFFFF), ((RTCC_IEN = (RTCC_IEN & ~(0x7FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_IEN_OF </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_CC0 </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_CC1 </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_CC2 </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_OSCFAIL </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_CNTTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_MINTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_HOURTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_DAYTICK </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_DAYOWOF </item>
//    <item> SFDITEM_FIELD__RTCC_IEN_MONTHTICK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTCC_STATUS  -------------------------------
// SVD Line: 54282

unsigned int RTCC_STATUS __AT (0x40042028);



// -------------------------------  Register Item: RTCC_STATUS  -----------------------------------
// SVD Line: 54282

//  <item> SFDITEM_REG__RTCC_STATUS
//    <name> STATUS </name>
//    <i> [Bits 31..0] RO (@ 0x40042028) Status Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_STATUS >> 0) & 0xFFFFFFFF), ((RTCC_STATUS = (RTCC_STATUS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTCC_CMD  --------------------------------
// SVD Line: 54291

unsigned int RTCC_CMD __AT (0x4004202C);



// -----------------------------  Field Item: RTCC_CMD_CLRSTATUS  ---------------------------------
// SVD Line: 54300

//  <item> SFDITEM_FIELD__RTCC_CMD_CLRSTATUS
//    <name> CLRSTATUS </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4004202C) Clear RTCC_STATUS Register </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CMD ) </loc>
//      <o.0..0> CLRSTATUS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_CMD  ------------------------------------
// SVD Line: 54291

//  <rtree> SFDITEM_REG__RTCC_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4004202C) Command Register </i>
//    <loc> ( (unsigned int)((RTCC_CMD >> 0) & 0xFFFFFFFF), ((RTCC_CMD = (RTCC_CMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CMD_CLRSTATUS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_SYNCBUSY  ------------------------------
// SVD Line: 54309

unsigned int RTCC_SYNCBUSY __AT (0x40042030);



// ------------------------------  Field Item: RTCC_SYNCBUSY_CMD  ---------------------------------
// SVD Line: 54318

//  <item> SFDITEM_FIELD__RTCC_SYNCBUSY_CMD
//    <name> CMD </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40042030) CMD Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_SYNCBUSY ) </loc>
//      <o.5..5> CMD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_SYNCBUSY  ---------------------------------
// SVD Line: 54309

//  <rtree> SFDITEM_REG__RTCC_SYNCBUSY
//    <name> SYNCBUSY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40042030) Synchronization Busy Register </i>
//    <loc> ( (unsigned int)((RTCC_SYNCBUSY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTCC_SYNCBUSY_CMD </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_POWERDOWN  -----------------------------
// SVD Line: 54327

unsigned int RTCC_POWERDOWN __AT (0x40042034);



// -----------------------------  Field Item: RTCC_POWERDOWN_RAM  ---------------------------------
// SVD Line: 54336

//  <item> SFDITEM_FIELD__RTCC_POWERDOWN_RAM
//    <name> RAM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042034) Retention RAM Power-down </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_POWERDOWN ) </loc>
//      <o.0..0> RAM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_POWERDOWN  ---------------------------------
// SVD Line: 54327

//  <rtree> SFDITEM_REG__RTCC_POWERDOWN
//    <name> POWERDOWN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042034) Retention RAM Power-down Register </i>
//    <loc> ( (unsigned int)((RTCC_POWERDOWN >> 0) & 0xFFFFFFFF), ((RTCC_POWERDOWN = (RTCC_POWERDOWN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_POWERDOWN_RAM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTCC_LOCK  --------------------------------
// SVD Line: 54345

unsigned int RTCC_LOCK __AT (0x40042038);



// ------------------------------  Field Item: RTCC_LOCK_LOCKKEY  ---------------------------------
// SVD Line: 54354

//  <item> SFDITEM_FIELD__RTCC_LOCK_LOCKKEY
//    <name> LOCKKEY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042038) Configuration Lock Key </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTCC_LOCK >> 0) & 0xFFFF), ((RTCC_LOCK = (RTCC_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTCC_LOCK  -----------------------------------
// SVD Line: 54345

//  <rtree> SFDITEM_REG__RTCC_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042038) Configuration Lock Register </i>
//    <loc> ( (unsigned int)((RTCC_LOCK >> 0) & 0xFFFFFFFF), ((RTCC_LOCK = (RTCC_LOCK & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_LOCK_LOCKKEY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTCC_EM4WUEN  ------------------------------
// SVD Line: 54373

unsigned int RTCC_EM4WUEN __AT (0x4004203C);



// -----------------------------  Field Item: RTCC_EM4WUEN_EM4WU  ---------------------------------
// SVD Line: 54382

//  <item> SFDITEM_FIELD__RTCC_EM4WUEN_EM4WU
//    <name> EM4WU </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004203C) EM4 Wake-up Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_EM4WUEN ) </loc>
//      <o.0..0> EM4WU
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_EM4WUEN  ----------------------------------
// SVD Line: 54373

//  <rtree> SFDITEM_REG__RTCC_EM4WUEN
//    <name> EM4WUEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004203C) Wake Up Enable </i>
//    <loc> ( (unsigned int)((RTCC_EM4WUEN >> 0) & 0xFFFFFFFF), ((RTCC_EM4WUEN = (RTCC_EM4WUEN & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_EM4WUEN_EM4WU </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC0_CTRL  ------------------------------
// SVD Line: 54391

unsigned int RTCC_CC0_CTRL __AT (0x40042040);



// -----------------------------  Field Item: RTCC_CC0_CTRL_MODE  ---------------------------------
// SVD Line: 54400

//  <item> SFDITEM_FIELD__RTCC_CC0_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40042040) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC0_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_CTRL_CMOA  ---------------------------------
// SVD Line: 54424

//  <item> SFDITEM_FIELD__RTCC_CC0_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40042040) \nCompare Match Output Action\n0 : PULSE = A single clock cycle pulse is generated on output\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC0_CTRL ) </loc>
//      <o.3..2> CMOA
//        <0=> 0: PULSE = A single clock cycle pulse is generated on output
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC0_CTRL_ICEDGE  --------------------------------
// SVD Line: 54453

//  <item> SFDITEM_FIELD__RTCC_CC0_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40042040) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC0_CTRL ) </loc>
//      <o.5..4> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC0_CTRL_PRSSEL  --------------------------------
// SVD Line: 54482

//  <item> SFDITEM_FIELD__RTCC_CC0_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x40042040) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC0_CTRL ) </loc>
//      <o.9..6> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: RTCC_CC0_CTRL_COMPBASE  -------------------------------
// SVD Line: 54551

//  <item> SFDITEM_FIELD__RTCC_CC0_CTRL_COMPBASE
//    <name> COMPBASE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042040) Capture Compare Channel Comparison Base </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC0_CTRL ) </loc>
//      <o.11..11> COMPBASE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTCC_CC0_CTRL_COMPMASK  -------------------------------
// SVD Line: 54558

//  <item> SFDITEM_FIELD__RTCC_CC0_CTRL_COMPMASK
//    <name> COMPMASK </name>
//    <rw> 
//    <i> [Bits 16..12] RW (@ 0x40042040) Capture Compare Channel Comparison Mask </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_CTRL >> 12) & 0x1F), ((RTCC_CC0_CTRL = (RTCC_CC0_CTRL & ~(0x1FUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_CTRL_DAYCC  --------------------------------
// SVD Line: 54565

//  <item> SFDITEM_FIELD__RTCC_CC0_CTRL_DAYCC
//    <name> DAYCC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40042040) Day Capture/Compare Selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC0_CTRL ) </loc>
//      <o.17..17> DAYCC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC0_CTRL  ---------------------------------
// SVD Line: 54391

//  <rtree> SFDITEM_REG__RTCC_CC0_CTRL
//    <name> CC0_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042040) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((RTCC_CC0_CTRL >> 0) & 0xFFFFFFFF), ((RTCC_CC0_CTRL = (RTCC_CC0_CTRL & ~(0x3FBFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FBFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC0_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_CTRL_COMPBASE </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_CTRL_COMPMASK </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_CTRL_DAYCC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTCC_CC0_CCV  ------------------------------
// SVD Line: 54574

unsigned int RTCC_CC0_CCV __AT (0x40042044);



// ------------------------------  Field Item: RTCC_CC0_CCV_CCV  ----------------------------------
// SVD Line: 54583

//  <item> SFDITEM_FIELD__RTCC_CC0_CCV_CCV
//    <name> CCV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042044) Capture/Compare Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_CC0_CCV >> 0) & 0xFFFFFFFF), ((RTCC_CC0_CCV = (RTCC_CC0_CCV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC0_CCV  ----------------------------------
// SVD Line: 54574

//  <rtree> SFDITEM_REG__RTCC_CC0_CCV
//    <name> CC0_CCV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042044) Capture/Compare Value Register </i>
//    <loc> ( (unsigned int)((RTCC_CC0_CCV >> 0) & 0xFFFFFFFF), ((RTCC_CC0_CCV = (RTCC_CC0_CCV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC0_CCV_CCV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC0_TIME  ------------------------------
// SVD Line: 54592

unsigned int RTCC_CC0_TIME __AT (0x40042048);



// -----------------------------  Field Item: RTCC_CC0_TIME_SECU  ---------------------------------
// SVD Line: 54601

//  <item> SFDITEM_FIELD__RTCC_CC0_TIME_SECU
//    <name> SECU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042048) Seconds, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_TIME >> 0) & 0xF), ((RTCC_CC0_TIME = (RTCC_CC0_TIME & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_TIME_SECT  ---------------------------------
// SVD Line: 54608

//  <item> SFDITEM_FIELD__RTCC_CC0_TIME_SECT
//    <name> SECT </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042048) Seconds, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_TIME >> 4) & 0x7), ((RTCC_CC0_TIME = (RTCC_CC0_TIME & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_TIME_MINU  ---------------------------------
// SVD Line: 54615

//  <item> SFDITEM_FIELD__RTCC_CC0_TIME_MINU
//    <name> MINU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40042048) Minutes, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_TIME >> 8) & 0xF), ((RTCC_CC0_TIME = (RTCC_CC0_TIME & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_TIME_MINT  ---------------------------------
// SVD Line: 54622

//  <item> SFDITEM_FIELD__RTCC_CC0_TIME_MINT
//    <name> MINT </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40042048) Minutes, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_TIME >> 12) & 0x7), ((RTCC_CC0_TIME = (RTCC_CC0_TIME & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_TIME_HOURU  --------------------------------
// SVD Line: 54629

//  <item> SFDITEM_FIELD__RTCC_CC0_TIME_HOURU
//    <name> HOURU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40042048) Hours, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_TIME >> 16) & 0xF), ((RTCC_CC0_TIME = (RTCC_CC0_TIME & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_TIME_HOURT  --------------------------------
// SVD Line: 54636

//  <item> SFDITEM_FIELD__RTCC_CC0_TIME_HOURT
//    <name> HOURT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40042048) Hours, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_TIME >> 20) & 0x3), ((RTCC_CC0_TIME = (RTCC_CC0_TIME & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC0_TIME  ---------------------------------
// SVD Line: 54592

//  <rtree> SFDITEM_REG__RTCC_CC0_TIME
//    <name> CC0_TIME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042048) Capture/Compare Time Register </i>
//    <loc> ( (unsigned int)((RTCC_CC0_TIME >> 0) & 0xFFFFFFFF), ((RTCC_CC0_TIME = (RTCC_CC0_TIME & ~(0x3F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC0_TIME_SECU </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_TIME_SECT </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_TIME_MINU </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_TIME_MINT </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_TIME_HOURU </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_TIME_HOURT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC0_DATE  ------------------------------
// SVD Line: 54645

unsigned int RTCC_CC0_DATE __AT (0x4004204C);



// -----------------------------  Field Item: RTCC_CC0_DATE_DAYU  ---------------------------------
// SVD Line: 54654

//  <item> SFDITEM_FIELD__RTCC_CC0_DATE_DAYU
//    <name> DAYU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004204C) Day of Month/week, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_DATE >> 0) & 0xF), ((RTCC_CC0_DATE = (RTCC_CC0_DATE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC0_DATE_DAYT  ---------------------------------
// SVD Line: 54661

//  <item> SFDITEM_FIELD__RTCC_CC0_DATE_DAYT
//    <name> DAYT </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004204C) Day of Month/week, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_DATE >> 4) & 0x3), ((RTCC_CC0_DATE = (RTCC_CC0_DATE & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC0_DATE_MONTHU  --------------------------------
// SVD Line: 54668

//  <item> SFDITEM_FIELD__RTCC_CC0_DATE_MONTHU
//    <name> MONTHU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4004204C) Month, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC0_DATE >> 8) & 0xF), ((RTCC_CC0_DATE = (RTCC_CC0_DATE & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC0_DATE_MONTHT  --------------------------------
// SVD Line: 54675

//  <item> SFDITEM_FIELD__RTCC_CC0_DATE_MONTHT
//    <name> MONTHT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004204C) Month, Tens </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC0_DATE ) </loc>
//      <o.12..12> MONTHT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC0_DATE  ---------------------------------
// SVD Line: 54645

//  <rtree> SFDITEM_REG__RTCC_CC0_DATE
//    <name> CC0_DATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004204C) Capture/Compare Date Register </i>
//    <loc> ( (unsigned int)((RTCC_CC0_DATE >> 0) & 0xFFFFFFFF), ((RTCC_CC0_DATE = (RTCC_CC0_DATE & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC0_DATE_DAYU </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_DATE_DAYT </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_DATE_MONTHU </item>
//    <item> SFDITEM_FIELD__RTCC_CC0_DATE_MONTHT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC1_CTRL  ------------------------------
// SVD Line: 54684

unsigned int RTCC_CC1_CTRL __AT (0x40042050);



// -----------------------------  Field Item: RTCC_CC1_CTRL_MODE  ---------------------------------
// SVD Line: 54693

//  <item> SFDITEM_FIELD__RTCC_CC1_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40042050) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC1_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_CTRL_CMOA  ---------------------------------
// SVD Line: 54717

//  <item> SFDITEM_FIELD__RTCC_CC1_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40042050) \nCompare Match Output Action\n0 : PULSE = A single clock cycle pulse is generated on output\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC1_CTRL ) </loc>
//      <o.3..2> CMOA
//        <0=> 0: PULSE = A single clock cycle pulse is generated on output
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC1_CTRL_ICEDGE  --------------------------------
// SVD Line: 54746

//  <item> SFDITEM_FIELD__RTCC_CC1_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40042050) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC1_CTRL ) </loc>
//      <o.5..4> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC1_CTRL_PRSSEL  --------------------------------
// SVD Line: 54775

//  <item> SFDITEM_FIELD__RTCC_CC1_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x40042050) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC1_CTRL ) </loc>
//      <o.9..6> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: RTCC_CC1_CTRL_COMPBASE  -------------------------------
// SVD Line: 54844

//  <item> SFDITEM_FIELD__RTCC_CC1_CTRL_COMPBASE
//    <name> COMPBASE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042050) Capture Compare Channel Comparison Base </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC1_CTRL ) </loc>
//      <o.11..11> COMPBASE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTCC_CC1_CTRL_COMPMASK  -------------------------------
// SVD Line: 54851

//  <item> SFDITEM_FIELD__RTCC_CC1_CTRL_COMPMASK
//    <name> COMPMASK </name>
//    <rw> 
//    <i> [Bits 16..12] RW (@ 0x40042050) Capture Compare Channel Comparison Mask </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_CTRL >> 12) & 0x1F), ((RTCC_CC1_CTRL = (RTCC_CC1_CTRL & ~(0x1FUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_CTRL_DAYCC  --------------------------------
// SVD Line: 54858

//  <item> SFDITEM_FIELD__RTCC_CC1_CTRL_DAYCC
//    <name> DAYCC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40042050) Day Capture/Compare Selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC1_CTRL ) </loc>
//      <o.17..17> DAYCC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC1_CTRL  ---------------------------------
// SVD Line: 54684

//  <rtree> SFDITEM_REG__RTCC_CC1_CTRL
//    <name> CC1_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042050) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((RTCC_CC1_CTRL >> 0) & 0xFFFFFFFF), ((RTCC_CC1_CTRL = (RTCC_CC1_CTRL & ~(0x3FBFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FBFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC1_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_CTRL_COMPBASE </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_CTRL_COMPMASK </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_CTRL_DAYCC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTCC_CC1_CCV  ------------------------------
// SVD Line: 54867

unsigned int RTCC_CC1_CCV __AT (0x40042054);



// ------------------------------  Field Item: RTCC_CC1_CCV_CCV  ----------------------------------
// SVD Line: 54876

//  <item> SFDITEM_FIELD__RTCC_CC1_CCV_CCV
//    <name> CCV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042054) Capture/Compare Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_CC1_CCV >> 0) & 0xFFFFFFFF), ((RTCC_CC1_CCV = (RTCC_CC1_CCV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC1_CCV  ----------------------------------
// SVD Line: 54867

//  <rtree> SFDITEM_REG__RTCC_CC1_CCV
//    <name> CC1_CCV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042054) Capture/Compare Value Register </i>
//    <loc> ( (unsigned int)((RTCC_CC1_CCV >> 0) & 0xFFFFFFFF), ((RTCC_CC1_CCV = (RTCC_CC1_CCV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC1_CCV_CCV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC1_TIME  ------------------------------
// SVD Line: 54885

unsigned int RTCC_CC1_TIME __AT (0x40042058);



// -----------------------------  Field Item: RTCC_CC1_TIME_SECU  ---------------------------------
// SVD Line: 54894

//  <item> SFDITEM_FIELD__RTCC_CC1_TIME_SECU
//    <name> SECU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042058) Seconds, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_TIME >> 0) & 0xF), ((RTCC_CC1_TIME = (RTCC_CC1_TIME & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_TIME_SECT  ---------------------------------
// SVD Line: 54901

//  <item> SFDITEM_FIELD__RTCC_CC1_TIME_SECT
//    <name> SECT </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042058) Seconds, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_TIME >> 4) & 0x7), ((RTCC_CC1_TIME = (RTCC_CC1_TIME & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_TIME_MINU  ---------------------------------
// SVD Line: 54908

//  <item> SFDITEM_FIELD__RTCC_CC1_TIME_MINU
//    <name> MINU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40042058) Minutes, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_TIME >> 8) & 0xF), ((RTCC_CC1_TIME = (RTCC_CC1_TIME & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_TIME_MINT  ---------------------------------
// SVD Line: 54915

//  <item> SFDITEM_FIELD__RTCC_CC1_TIME_MINT
//    <name> MINT </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40042058) Minutes, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_TIME >> 12) & 0x7), ((RTCC_CC1_TIME = (RTCC_CC1_TIME & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_TIME_HOURU  --------------------------------
// SVD Line: 54922

//  <item> SFDITEM_FIELD__RTCC_CC1_TIME_HOURU
//    <name> HOURU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40042058) Hours, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_TIME >> 16) & 0xF), ((RTCC_CC1_TIME = (RTCC_CC1_TIME & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_TIME_HOURT  --------------------------------
// SVD Line: 54929

//  <item> SFDITEM_FIELD__RTCC_CC1_TIME_HOURT
//    <name> HOURT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40042058) Hours, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_TIME >> 20) & 0x3), ((RTCC_CC1_TIME = (RTCC_CC1_TIME & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC1_TIME  ---------------------------------
// SVD Line: 54885

//  <rtree> SFDITEM_REG__RTCC_CC1_TIME
//    <name> CC1_TIME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042058) Capture/Compare Time Register </i>
//    <loc> ( (unsigned int)((RTCC_CC1_TIME >> 0) & 0xFFFFFFFF), ((RTCC_CC1_TIME = (RTCC_CC1_TIME & ~(0x3F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC1_TIME_SECU </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_TIME_SECT </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_TIME_MINU </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_TIME_MINT </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_TIME_HOURU </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_TIME_HOURT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC1_DATE  ------------------------------
// SVD Line: 54938

unsigned int RTCC_CC1_DATE __AT (0x4004205C);



// -----------------------------  Field Item: RTCC_CC1_DATE_DAYU  ---------------------------------
// SVD Line: 54947

//  <item> SFDITEM_FIELD__RTCC_CC1_DATE_DAYU
//    <name> DAYU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004205C) Day of Month/week, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_DATE >> 0) & 0xF), ((RTCC_CC1_DATE = (RTCC_CC1_DATE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC1_DATE_DAYT  ---------------------------------
// SVD Line: 54954

//  <item> SFDITEM_FIELD__RTCC_CC1_DATE_DAYT
//    <name> DAYT </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004205C) Day of Month/week, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_DATE >> 4) & 0x3), ((RTCC_CC1_DATE = (RTCC_CC1_DATE & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC1_DATE_MONTHU  --------------------------------
// SVD Line: 54961

//  <item> SFDITEM_FIELD__RTCC_CC1_DATE_MONTHU
//    <name> MONTHU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4004205C) Month, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC1_DATE >> 8) & 0xF), ((RTCC_CC1_DATE = (RTCC_CC1_DATE & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC1_DATE_MONTHT  --------------------------------
// SVD Line: 54968

//  <item> SFDITEM_FIELD__RTCC_CC1_DATE_MONTHT
//    <name> MONTHT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004205C) Month, Tens </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC1_DATE ) </loc>
//      <o.12..12> MONTHT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC1_DATE  ---------------------------------
// SVD Line: 54938

//  <rtree> SFDITEM_REG__RTCC_CC1_DATE
//    <name> CC1_DATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004205C) Capture/Compare Date Register </i>
//    <loc> ( (unsigned int)((RTCC_CC1_DATE >> 0) & 0xFFFFFFFF), ((RTCC_CC1_DATE = (RTCC_CC1_DATE & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC1_DATE_DAYU </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_DATE_DAYT </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_DATE_MONTHU </item>
//    <item> SFDITEM_FIELD__RTCC_CC1_DATE_MONTHT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC2_CTRL  ------------------------------
// SVD Line: 54977

unsigned int RTCC_CC2_CTRL __AT (0x40042060);



// -----------------------------  Field Item: RTCC_CC2_CTRL_MODE  ---------------------------------
// SVD Line: 54986

//  <item> SFDITEM_FIELD__RTCC_CC2_CTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40042060) \nCC Channel Mode\n0 : OFF = Compare/Capture channel turned off\n1 : INPUTCAPTURE = Input capture\n2 : OUTPUTCOMPARE = Output compare\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC2_CTRL ) </loc>
//      <o.1..0> MODE
//        <0=> 0: OFF = Compare/Capture channel turned off
//        <1=> 1: INPUTCAPTURE = Input capture
//        <2=> 2: OUTPUTCOMPARE = Output compare
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_CTRL_CMOA  ---------------------------------
// SVD Line: 55010

//  <item> SFDITEM_FIELD__RTCC_CC2_CTRL_CMOA
//    <name> CMOA </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40042060) \nCompare Match Output Action\n0 : PULSE = A single clock cycle pulse is generated on output\n1 : TOGGLE = Toggle output on compare match\n2 : CLEAR = Clear output on compare match\n3 : SET = Set output on compare match </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC2_CTRL ) </loc>
//      <o.3..2> CMOA
//        <0=> 0: PULSE = A single clock cycle pulse is generated on output
//        <1=> 1: TOGGLE = Toggle output on compare match
//        <2=> 2: CLEAR = Clear output on compare match
//        <3=> 3: SET = Set output on compare match
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC2_CTRL_ICEDGE  --------------------------------
// SVD Line: 55039

//  <item> SFDITEM_FIELD__RTCC_CC2_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40042060) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : NONE = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC2_CTRL ) </loc>
//      <o.5..4> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: NONE = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC2_CTRL_PRSSEL  --------------------------------
// SVD Line: 55068

//  <item> SFDITEM_FIELD__RTCC_CC2_CTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x40042060) \nCompare/Capture Channel PRS Input Channel Selection\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) RTCC_CC2_CTRL ) </loc>
//      <o.9..6> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: RTCC_CC2_CTRL_COMPBASE  -------------------------------
// SVD Line: 55137

//  <item> SFDITEM_FIELD__RTCC_CC2_CTRL_COMPBASE
//    <name> COMPBASE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042060) Capture Compare Channel Comparison Base </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC2_CTRL ) </loc>
//      <o.11..11> COMPBASE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTCC_CC2_CTRL_COMPMASK  -------------------------------
// SVD Line: 55144

//  <item> SFDITEM_FIELD__RTCC_CC2_CTRL_COMPMASK
//    <name> COMPMASK </name>
//    <rw> 
//    <i> [Bits 16..12] RW (@ 0x40042060) Capture Compare Channel Comparison Mask </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_CTRL >> 12) & 0x1F), ((RTCC_CC2_CTRL = (RTCC_CC2_CTRL & ~(0x1FUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_CTRL_DAYCC  --------------------------------
// SVD Line: 55151

//  <item> SFDITEM_FIELD__RTCC_CC2_CTRL_DAYCC
//    <name> DAYCC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40042060) Day Capture/Compare Selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC2_CTRL ) </loc>
//      <o.17..17> DAYCC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC2_CTRL  ---------------------------------
// SVD Line: 54977

//  <rtree> SFDITEM_REG__RTCC_CC2_CTRL
//    <name> CC2_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042060) CC Channel Control Register </i>
//    <loc> ( (unsigned int)((RTCC_CC2_CTRL >> 0) & 0xFFFFFFFF), ((RTCC_CC2_CTRL = (RTCC_CC2_CTRL & ~(0x3FBFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FBFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC2_CTRL_MODE </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_CTRL_CMOA </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_CTRL_ICEDGE </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_CTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_CTRL_COMPBASE </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_CTRL_COMPMASK </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_CTRL_DAYCC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTCC_CC2_CCV  ------------------------------
// SVD Line: 55160

unsigned int RTCC_CC2_CCV __AT (0x40042064);



// ------------------------------  Field Item: RTCC_CC2_CCV_CCV  ----------------------------------
// SVD Line: 55169

//  <item> SFDITEM_FIELD__RTCC_CC2_CCV_CCV
//    <name> CCV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042064) Capture/Compare Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_CC2_CCV >> 0) & 0xFFFFFFFF), ((RTCC_CC2_CCV = (RTCC_CC2_CCV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC2_CCV  ----------------------------------
// SVD Line: 55160

//  <rtree> SFDITEM_REG__RTCC_CC2_CCV
//    <name> CC2_CCV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042064) Capture/Compare Value Register </i>
//    <loc> ( (unsigned int)((RTCC_CC2_CCV >> 0) & 0xFFFFFFFF), ((RTCC_CC2_CCV = (RTCC_CC2_CCV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC2_CCV_CCV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC2_TIME  ------------------------------
// SVD Line: 55178

unsigned int RTCC_CC2_TIME __AT (0x40042068);



// -----------------------------  Field Item: RTCC_CC2_TIME_SECU  ---------------------------------
// SVD Line: 55187

//  <item> SFDITEM_FIELD__RTCC_CC2_TIME_SECU
//    <name> SECU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042068) Seconds, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_TIME >> 0) & 0xF), ((RTCC_CC2_TIME = (RTCC_CC2_TIME & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_TIME_SECT  ---------------------------------
// SVD Line: 55194

//  <item> SFDITEM_FIELD__RTCC_CC2_TIME_SECT
//    <name> SECT </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40042068) Seconds, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_TIME >> 4) & 0x7), ((RTCC_CC2_TIME = (RTCC_CC2_TIME & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_TIME_MINU  ---------------------------------
// SVD Line: 55201

//  <item> SFDITEM_FIELD__RTCC_CC2_TIME_MINU
//    <name> MINU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40042068) Minutes, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_TIME >> 8) & 0xF), ((RTCC_CC2_TIME = (RTCC_CC2_TIME & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_TIME_MINT  ---------------------------------
// SVD Line: 55208

//  <item> SFDITEM_FIELD__RTCC_CC2_TIME_MINT
//    <name> MINT </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40042068) Minutes, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_TIME >> 12) & 0x7), ((RTCC_CC2_TIME = (RTCC_CC2_TIME & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_TIME_HOURU  --------------------------------
// SVD Line: 55215

//  <item> SFDITEM_FIELD__RTCC_CC2_TIME_HOURU
//    <name> HOURU </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40042068) Hours, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_TIME >> 16) & 0xF), ((RTCC_CC2_TIME = (RTCC_CC2_TIME & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_TIME_HOURT  --------------------------------
// SVD Line: 55222

//  <item> SFDITEM_FIELD__RTCC_CC2_TIME_HOURT
//    <name> HOURT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40042068) Hours, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_TIME >> 20) & 0x3), ((RTCC_CC2_TIME = (RTCC_CC2_TIME & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC2_TIME  ---------------------------------
// SVD Line: 55178

//  <rtree> SFDITEM_REG__RTCC_CC2_TIME
//    <name> CC2_TIME </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042068) Capture/Compare Time Register </i>
//    <loc> ( (unsigned int)((RTCC_CC2_TIME >> 0) & 0xFFFFFFFF), ((RTCC_CC2_TIME = (RTCC_CC2_TIME & ~(0x3F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC2_TIME_SECU </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_TIME_SECT </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_TIME_MINU </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_TIME_MINT </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_TIME_HOURU </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_TIME_HOURT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_CC2_DATE  ------------------------------
// SVD Line: 55231

unsigned int RTCC_CC2_DATE __AT (0x4004206C);



// -----------------------------  Field Item: RTCC_CC2_DATE_DAYU  ---------------------------------
// SVD Line: 55240

//  <item> SFDITEM_FIELD__RTCC_CC2_DATE_DAYU
//    <name> DAYU </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004206C) Day of Month/week, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_DATE >> 0) & 0xF), ((RTCC_CC2_DATE = (RTCC_CC2_DATE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTCC_CC2_DATE_DAYT  ---------------------------------
// SVD Line: 55247

//  <item> SFDITEM_FIELD__RTCC_CC2_DATE_DAYT
//    <name> DAYT </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004206C) Day of Month/week, Tens </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_DATE >> 4) & 0x3), ((RTCC_CC2_DATE = (RTCC_CC2_DATE & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC2_DATE_MONTHU  --------------------------------
// SVD Line: 55254

//  <item> SFDITEM_FIELD__RTCC_CC2_DATE_MONTHU
//    <name> MONTHU </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4004206C) Month, Units </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTCC_CC2_DATE >> 8) & 0xF), ((RTCC_CC2_DATE = (RTCC_CC2_DATE & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTCC_CC2_DATE_MONTHT  --------------------------------
// SVD Line: 55261

//  <item> SFDITEM_FIELD__RTCC_CC2_DATE_MONTHT
//    <name> MONTHT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004206C) Month, Tens </i>
//    <check> 
//      <loc> ( (unsigned int) RTCC_CC2_DATE ) </loc>
//      <o.12..12> MONTHT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_CC2_DATE  ---------------------------------
// SVD Line: 55231

//  <rtree> SFDITEM_REG__RTCC_CC2_DATE
//    <name> CC2_DATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004206C) Capture/Compare Date Register </i>
//    <loc> ( (unsigned int)((RTCC_CC2_DATE >> 0) & 0xFFFFFFFF), ((RTCC_CC2_DATE = (RTCC_CC2_DATE & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_CC2_DATE_DAYU </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_DATE_DAYT </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_DATE_MONTHU </item>
//    <item> SFDITEM_FIELD__RTCC_CC2_DATE_MONTHT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET0_REG  ------------------------------
// SVD Line: 55270

unsigned int RTCC_RET0_REG __AT (0x40042104);



// ------------------------------  Field Item: RTCC_RET0_REG_REG  ---------------------------------
// SVD Line: 55279

//  <item> SFDITEM_FIELD__RTCC_RET0_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042104) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET0_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET0_REG = (RTCC_RET0_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET0_REG  ---------------------------------
// SVD Line: 55270

//  <rtree> SFDITEM_REG__RTCC_RET0_REG
//    <name> RET0_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042104) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET0_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET0_REG = (RTCC_RET0_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET0_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET1_REG  ------------------------------
// SVD Line: 55288

unsigned int RTCC_RET1_REG __AT (0x40042108);



// ------------------------------  Field Item: RTCC_RET1_REG_REG  ---------------------------------
// SVD Line: 55297

//  <item> SFDITEM_FIELD__RTCC_RET1_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042108) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET1_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET1_REG = (RTCC_RET1_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET1_REG  ---------------------------------
// SVD Line: 55288

//  <rtree> SFDITEM_REG__RTCC_RET1_REG
//    <name> RET1_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042108) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET1_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET1_REG = (RTCC_RET1_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET1_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET2_REG  ------------------------------
// SVD Line: 55306

unsigned int RTCC_RET2_REG __AT (0x4004210C);



// ------------------------------  Field Item: RTCC_RET2_REG_REG  ---------------------------------
// SVD Line: 55315

//  <item> SFDITEM_FIELD__RTCC_RET2_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004210C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET2_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET2_REG = (RTCC_RET2_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET2_REG  ---------------------------------
// SVD Line: 55306

//  <rtree> SFDITEM_REG__RTCC_RET2_REG
//    <name> RET2_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004210C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET2_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET2_REG = (RTCC_RET2_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET2_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET3_REG  ------------------------------
// SVD Line: 55324

unsigned int RTCC_RET3_REG __AT (0x40042110);



// ------------------------------  Field Item: RTCC_RET3_REG_REG  ---------------------------------
// SVD Line: 55333

//  <item> SFDITEM_FIELD__RTCC_RET3_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042110) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET3_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET3_REG = (RTCC_RET3_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET3_REG  ---------------------------------
// SVD Line: 55324

//  <rtree> SFDITEM_REG__RTCC_RET3_REG
//    <name> RET3_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042110) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET3_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET3_REG = (RTCC_RET3_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET3_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET4_REG  ------------------------------
// SVD Line: 55342

unsigned int RTCC_RET4_REG __AT (0x40042114);



// ------------------------------  Field Item: RTCC_RET4_REG_REG  ---------------------------------
// SVD Line: 55351

//  <item> SFDITEM_FIELD__RTCC_RET4_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042114) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET4_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET4_REG = (RTCC_RET4_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET4_REG  ---------------------------------
// SVD Line: 55342

//  <rtree> SFDITEM_REG__RTCC_RET4_REG
//    <name> RET4_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042114) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET4_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET4_REG = (RTCC_RET4_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET4_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET5_REG  ------------------------------
// SVD Line: 55360

unsigned int RTCC_RET5_REG __AT (0x40042118);



// ------------------------------  Field Item: RTCC_RET5_REG_REG  ---------------------------------
// SVD Line: 55369

//  <item> SFDITEM_FIELD__RTCC_RET5_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042118) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET5_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET5_REG = (RTCC_RET5_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET5_REG  ---------------------------------
// SVD Line: 55360

//  <rtree> SFDITEM_REG__RTCC_RET5_REG
//    <name> RET5_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042118) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET5_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET5_REG = (RTCC_RET5_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET5_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET6_REG  ------------------------------
// SVD Line: 55378

unsigned int RTCC_RET6_REG __AT (0x4004211C);



// ------------------------------  Field Item: RTCC_RET6_REG_REG  ---------------------------------
// SVD Line: 55387

//  <item> SFDITEM_FIELD__RTCC_RET6_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004211C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET6_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET6_REG = (RTCC_RET6_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET6_REG  ---------------------------------
// SVD Line: 55378

//  <rtree> SFDITEM_REG__RTCC_RET6_REG
//    <name> RET6_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004211C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET6_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET6_REG = (RTCC_RET6_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET6_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET7_REG  ------------------------------
// SVD Line: 55396

unsigned int RTCC_RET7_REG __AT (0x40042120);



// ------------------------------  Field Item: RTCC_RET7_REG_REG  ---------------------------------
// SVD Line: 55405

//  <item> SFDITEM_FIELD__RTCC_RET7_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042120) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET7_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET7_REG = (RTCC_RET7_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET7_REG  ---------------------------------
// SVD Line: 55396

//  <rtree> SFDITEM_REG__RTCC_RET7_REG
//    <name> RET7_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042120) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET7_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET7_REG = (RTCC_RET7_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET7_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET8_REG  ------------------------------
// SVD Line: 55414

unsigned int RTCC_RET8_REG __AT (0x40042124);



// ------------------------------  Field Item: RTCC_RET8_REG_REG  ---------------------------------
// SVD Line: 55423

//  <item> SFDITEM_FIELD__RTCC_RET8_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042124) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET8_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET8_REG = (RTCC_RET8_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET8_REG  ---------------------------------
// SVD Line: 55414

//  <rtree> SFDITEM_REG__RTCC_RET8_REG
//    <name> RET8_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042124) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET8_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET8_REG = (RTCC_RET8_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET8_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET9_REG  ------------------------------
// SVD Line: 55432

unsigned int RTCC_RET9_REG __AT (0x40042128);



// ------------------------------  Field Item: RTCC_RET9_REG_REG  ---------------------------------
// SVD Line: 55441

//  <item> SFDITEM_FIELD__RTCC_RET9_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042128) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET9_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET9_REG = (RTCC_RET9_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTCC_RET9_REG  ---------------------------------
// SVD Line: 55432

//  <rtree> SFDITEM_REG__RTCC_RET9_REG
//    <name> RET9_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042128) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET9_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET9_REG = (RTCC_RET9_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET9_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET10_REG  -----------------------------
// SVD Line: 55450

unsigned int RTCC_RET10_REG __AT (0x4004212C);



// -----------------------------  Field Item: RTCC_RET10_REG_REG  ---------------------------------
// SVD Line: 55459

//  <item> SFDITEM_FIELD__RTCC_RET10_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004212C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET10_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET10_REG = (RTCC_RET10_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET10_REG  ---------------------------------
// SVD Line: 55450

//  <rtree> SFDITEM_REG__RTCC_RET10_REG
//    <name> RET10_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004212C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET10_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET10_REG = (RTCC_RET10_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET10_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET11_REG  -----------------------------
// SVD Line: 55468

unsigned int RTCC_RET11_REG __AT (0x40042130);



// -----------------------------  Field Item: RTCC_RET11_REG_REG  ---------------------------------
// SVD Line: 55477

//  <item> SFDITEM_FIELD__RTCC_RET11_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042130) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET11_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET11_REG = (RTCC_RET11_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET11_REG  ---------------------------------
// SVD Line: 55468

//  <rtree> SFDITEM_REG__RTCC_RET11_REG
//    <name> RET11_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042130) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET11_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET11_REG = (RTCC_RET11_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET11_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET12_REG  -----------------------------
// SVD Line: 55486

unsigned int RTCC_RET12_REG __AT (0x40042134);



// -----------------------------  Field Item: RTCC_RET12_REG_REG  ---------------------------------
// SVD Line: 55495

//  <item> SFDITEM_FIELD__RTCC_RET12_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042134) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET12_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET12_REG = (RTCC_RET12_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET12_REG  ---------------------------------
// SVD Line: 55486

//  <rtree> SFDITEM_REG__RTCC_RET12_REG
//    <name> RET12_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042134) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET12_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET12_REG = (RTCC_RET12_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET12_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET13_REG  -----------------------------
// SVD Line: 55504

unsigned int RTCC_RET13_REG __AT (0x40042138);



// -----------------------------  Field Item: RTCC_RET13_REG_REG  ---------------------------------
// SVD Line: 55513

//  <item> SFDITEM_FIELD__RTCC_RET13_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042138) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET13_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET13_REG = (RTCC_RET13_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET13_REG  ---------------------------------
// SVD Line: 55504

//  <rtree> SFDITEM_REG__RTCC_RET13_REG
//    <name> RET13_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042138) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET13_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET13_REG = (RTCC_RET13_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET13_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET14_REG  -----------------------------
// SVD Line: 55522

unsigned int RTCC_RET14_REG __AT (0x4004213C);



// -----------------------------  Field Item: RTCC_RET14_REG_REG  ---------------------------------
// SVD Line: 55531

//  <item> SFDITEM_FIELD__RTCC_RET14_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004213C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET14_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET14_REG = (RTCC_RET14_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET14_REG  ---------------------------------
// SVD Line: 55522

//  <rtree> SFDITEM_REG__RTCC_RET14_REG
//    <name> RET14_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004213C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET14_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET14_REG = (RTCC_RET14_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET14_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET15_REG  -----------------------------
// SVD Line: 55540

unsigned int RTCC_RET15_REG __AT (0x40042140);



// -----------------------------  Field Item: RTCC_RET15_REG_REG  ---------------------------------
// SVD Line: 55549

//  <item> SFDITEM_FIELD__RTCC_RET15_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042140) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET15_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET15_REG = (RTCC_RET15_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET15_REG  ---------------------------------
// SVD Line: 55540

//  <rtree> SFDITEM_REG__RTCC_RET15_REG
//    <name> RET15_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042140) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET15_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET15_REG = (RTCC_RET15_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET15_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET16_REG  -----------------------------
// SVD Line: 55558

unsigned int RTCC_RET16_REG __AT (0x40042144);



// -----------------------------  Field Item: RTCC_RET16_REG_REG  ---------------------------------
// SVD Line: 55567

//  <item> SFDITEM_FIELD__RTCC_RET16_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042144) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET16_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET16_REG = (RTCC_RET16_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET16_REG  ---------------------------------
// SVD Line: 55558

//  <rtree> SFDITEM_REG__RTCC_RET16_REG
//    <name> RET16_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042144) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET16_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET16_REG = (RTCC_RET16_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET16_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET17_REG  -----------------------------
// SVD Line: 55576

unsigned int RTCC_RET17_REG __AT (0x40042148);



// -----------------------------  Field Item: RTCC_RET17_REG_REG  ---------------------------------
// SVD Line: 55585

//  <item> SFDITEM_FIELD__RTCC_RET17_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042148) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET17_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET17_REG = (RTCC_RET17_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET17_REG  ---------------------------------
// SVD Line: 55576

//  <rtree> SFDITEM_REG__RTCC_RET17_REG
//    <name> RET17_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042148) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET17_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET17_REG = (RTCC_RET17_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET17_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET18_REG  -----------------------------
// SVD Line: 55594

unsigned int RTCC_RET18_REG __AT (0x4004214C);



// -----------------------------  Field Item: RTCC_RET18_REG_REG  ---------------------------------
// SVD Line: 55603

//  <item> SFDITEM_FIELD__RTCC_RET18_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004214C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET18_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET18_REG = (RTCC_RET18_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET18_REG  ---------------------------------
// SVD Line: 55594

//  <rtree> SFDITEM_REG__RTCC_RET18_REG
//    <name> RET18_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004214C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET18_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET18_REG = (RTCC_RET18_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET18_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET19_REG  -----------------------------
// SVD Line: 55612

unsigned int RTCC_RET19_REG __AT (0x40042150);



// -----------------------------  Field Item: RTCC_RET19_REG_REG  ---------------------------------
// SVD Line: 55621

//  <item> SFDITEM_FIELD__RTCC_RET19_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042150) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET19_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET19_REG = (RTCC_RET19_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET19_REG  ---------------------------------
// SVD Line: 55612

//  <rtree> SFDITEM_REG__RTCC_RET19_REG
//    <name> RET19_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042150) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET19_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET19_REG = (RTCC_RET19_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET19_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET20_REG  -----------------------------
// SVD Line: 55630

unsigned int RTCC_RET20_REG __AT (0x40042154);



// -----------------------------  Field Item: RTCC_RET20_REG_REG  ---------------------------------
// SVD Line: 55639

//  <item> SFDITEM_FIELD__RTCC_RET20_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042154) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET20_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET20_REG = (RTCC_RET20_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET20_REG  ---------------------------------
// SVD Line: 55630

//  <rtree> SFDITEM_REG__RTCC_RET20_REG
//    <name> RET20_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042154) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET20_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET20_REG = (RTCC_RET20_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET20_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET21_REG  -----------------------------
// SVD Line: 55648

unsigned int RTCC_RET21_REG __AT (0x40042158);



// -----------------------------  Field Item: RTCC_RET21_REG_REG  ---------------------------------
// SVD Line: 55657

//  <item> SFDITEM_FIELD__RTCC_RET21_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042158) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET21_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET21_REG = (RTCC_RET21_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET21_REG  ---------------------------------
// SVD Line: 55648

//  <rtree> SFDITEM_REG__RTCC_RET21_REG
//    <name> RET21_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042158) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET21_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET21_REG = (RTCC_RET21_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET21_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET22_REG  -----------------------------
// SVD Line: 55666

unsigned int RTCC_RET22_REG __AT (0x4004215C);



// -----------------------------  Field Item: RTCC_RET22_REG_REG  ---------------------------------
// SVD Line: 55675

//  <item> SFDITEM_FIELD__RTCC_RET22_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004215C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET22_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET22_REG = (RTCC_RET22_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET22_REG  ---------------------------------
// SVD Line: 55666

//  <rtree> SFDITEM_REG__RTCC_RET22_REG
//    <name> RET22_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004215C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET22_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET22_REG = (RTCC_RET22_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET22_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET23_REG  -----------------------------
// SVD Line: 55684

unsigned int RTCC_RET23_REG __AT (0x40042160);



// -----------------------------  Field Item: RTCC_RET23_REG_REG  ---------------------------------
// SVD Line: 55693

//  <item> SFDITEM_FIELD__RTCC_RET23_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042160) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET23_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET23_REG = (RTCC_RET23_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET23_REG  ---------------------------------
// SVD Line: 55684

//  <rtree> SFDITEM_REG__RTCC_RET23_REG
//    <name> RET23_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042160) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET23_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET23_REG = (RTCC_RET23_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET23_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET24_REG  -----------------------------
// SVD Line: 55702

unsigned int RTCC_RET24_REG __AT (0x40042164);



// -----------------------------  Field Item: RTCC_RET24_REG_REG  ---------------------------------
// SVD Line: 55711

//  <item> SFDITEM_FIELD__RTCC_RET24_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042164) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET24_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET24_REG = (RTCC_RET24_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET24_REG  ---------------------------------
// SVD Line: 55702

//  <rtree> SFDITEM_REG__RTCC_RET24_REG
//    <name> RET24_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042164) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET24_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET24_REG = (RTCC_RET24_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET24_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET25_REG  -----------------------------
// SVD Line: 55720

unsigned int RTCC_RET25_REG __AT (0x40042168);



// -----------------------------  Field Item: RTCC_RET25_REG_REG  ---------------------------------
// SVD Line: 55729

//  <item> SFDITEM_FIELD__RTCC_RET25_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042168) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET25_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET25_REG = (RTCC_RET25_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET25_REG  ---------------------------------
// SVD Line: 55720

//  <rtree> SFDITEM_REG__RTCC_RET25_REG
//    <name> RET25_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042168) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET25_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET25_REG = (RTCC_RET25_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET25_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET26_REG  -----------------------------
// SVD Line: 55738

unsigned int RTCC_RET26_REG __AT (0x4004216C);



// -----------------------------  Field Item: RTCC_RET26_REG_REG  ---------------------------------
// SVD Line: 55747

//  <item> SFDITEM_FIELD__RTCC_RET26_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004216C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET26_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET26_REG = (RTCC_RET26_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET26_REG  ---------------------------------
// SVD Line: 55738

//  <rtree> SFDITEM_REG__RTCC_RET26_REG
//    <name> RET26_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004216C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET26_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET26_REG = (RTCC_RET26_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET26_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET27_REG  -----------------------------
// SVD Line: 55756

unsigned int RTCC_RET27_REG __AT (0x40042170);



// -----------------------------  Field Item: RTCC_RET27_REG_REG  ---------------------------------
// SVD Line: 55765

//  <item> SFDITEM_FIELD__RTCC_RET27_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042170) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET27_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET27_REG = (RTCC_RET27_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET27_REG  ---------------------------------
// SVD Line: 55756

//  <rtree> SFDITEM_REG__RTCC_RET27_REG
//    <name> RET27_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042170) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET27_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET27_REG = (RTCC_RET27_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET27_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET28_REG  -----------------------------
// SVD Line: 55774

unsigned int RTCC_RET28_REG __AT (0x40042174);



// -----------------------------  Field Item: RTCC_RET28_REG_REG  ---------------------------------
// SVD Line: 55783

//  <item> SFDITEM_FIELD__RTCC_RET28_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042174) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET28_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET28_REG = (RTCC_RET28_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET28_REG  ---------------------------------
// SVD Line: 55774

//  <rtree> SFDITEM_REG__RTCC_RET28_REG
//    <name> RET28_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042174) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET28_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET28_REG = (RTCC_RET28_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET28_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET29_REG  -----------------------------
// SVD Line: 55792

unsigned int RTCC_RET29_REG __AT (0x40042178);



// -----------------------------  Field Item: RTCC_RET29_REG_REG  ---------------------------------
// SVD Line: 55801

//  <item> SFDITEM_FIELD__RTCC_RET29_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042178) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET29_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET29_REG = (RTCC_RET29_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET29_REG  ---------------------------------
// SVD Line: 55792

//  <rtree> SFDITEM_REG__RTCC_RET29_REG
//    <name> RET29_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042178) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET29_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET29_REG = (RTCC_RET29_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET29_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET30_REG  -----------------------------
// SVD Line: 55810

unsigned int RTCC_RET30_REG __AT (0x4004217C);



// -----------------------------  Field Item: RTCC_RET30_REG_REG  ---------------------------------
// SVD Line: 55819

//  <item> SFDITEM_FIELD__RTCC_RET30_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004217C) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET30_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET30_REG = (RTCC_RET30_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET30_REG  ---------------------------------
// SVD Line: 55810

//  <rtree> SFDITEM_REG__RTCC_RET30_REG
//    <name> RET30_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4004217C) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET30_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET30_REG = (RTCC_RET30_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET30_REG_REG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTCC_RET31_REG  -----------------------------
// SVD Line: 55828

unsigned int RTCC_RET31_REG __AT (0x40042180);



// -----------------------------  Field Item: RTCC_RET31_REG_REG  ---------------------------------
// SVD Line: 55837

//  <item> SFDITEM_FIELD__RTCC_RET31_REG_REG
//    <name> REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042180) General Purpose Retention Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTCC_RET31_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET31_REG = (RTCC_RET31_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTCC_RET31_REG  ---------------------------------
// SVD Line: 55828

//  <rtree> SFDITEM_REG__RTCC_RET31_REG
//    <name> RET31_REG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042180) Retention Register </i>
//    <loc> ( (unsigned int)((RTCC_RET31_REG >> 0) & 0xFFFFFFFF), ((RTCC_RET31_REG = (RTCC_RET31_REG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTCC_RET31_REG_REG </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RTCC  -------------------------------------
// SVD Line: 53586

//  <view> RTCC
//    <name> RTCC </name>
//    <item> SFDITEM_REG__RTCC_CTRL </item>
//    <item> SFDITEM_REG__RTCC_PRECNT </item>
//    <item> SFDITEM_REG__RTCC_CNT </item>
//    <item> SFDITEM_REG__RTCC_COMBCNT </item>
//    <item> SFDITEM_REG__RTCC_TIME </item>
//    <item> SFDITEM_REG__RTCC_DATE </item>
//    <item> SFDITEM_REG__RTCC_IF </item>
//    <item> SFDITEM_REG__RTCC_IFS </item>
//    <item> SFDITEM_REG__RTCC_IFC </item>
//    <item> SFDITEM_REG__RTCC_IEN </item>
//    <item> SFDITEM_REG__RTCC_STATUS </item>
//    <item> SFDITEM_REG__RTCC_CMD </item>
//    <item> SFDITEM_REG__RTCC_SYNCBUSY </item>
//    <item> SFDITEM_REG__RTCC_POWERDOWN </item>
//    <item> SFDITEM_REG__RTCC_LOCK </item>
//    <item> SFDITEM_REG__RTCC_EM4WUEN </item>
//    <item> SFDITEM_REG__RTCC_CC0_CTRL </item>
//    <item> SFDITEM_REG__RTCC_CC0_CCV </item>
//    <item> SFDITEM_REG__RTCC_CC0_TIME </item>
//    <item> SFDITEM_REG__RTCC_CC0_DATE </item>
//    <item> SFDITEM_REG__RTCC_CC1_CTRL </item>
//    <item> SFDITEM_REG__RTCC_CC1_CCV </item>
//    <item> SFDITEM_REG__RTCC_CC1_TIME </item>
//    <item> SFDITEM_REG__RTCC_CC1_DATE </item>
//    <item> SFDITEM_REG__RTCC_CC2_CTRL </item>
//    <item> SFDITEM_REG__RTCC_CC2_CCV </item>
//    <item> SFDITEM_REG__RTCC_CC2_TIME </item>
//    <item> SFDITEM_REG__RTCC_CC2_DATE </item>
//    <item> SFDITEM_REG__RTCC_RET0_REG </item>
//    <item> SFDITEM_REG__RTCC_RET1_REG </item>
//    <item> SFDITEM_REG__RTCC_RET2_REG </item>
//    <item> SFDITEM_REG__RTCC_RET3_REG </item>
//    <item> SFDITEM_REG__RTCC_RET4_REG </item>
//    <item> SFDITEM_REG__RTCC_RET5_REG </item>
//    <item> SFDITEM_REG__RTCC_RET6_REG </item>
//    <item> SFDITEM_REG__RTCC_RET7_REG </item>
//    <item> SFDITEM_REG__RTCC_RET8_REG </item>
//    <item> SFDITEM_REG__RTCC_RET9_REG </item>
//    <item> SFDITEM_REG__RTCC_RET10_REG </item>
//    <item> SFDITEM_REG__RTCC_RET11_REG </item>
//    <item> SFDITEM_REG__RTCC_RET12_REG </item>
//    <item> SFDITEM_REG__RTCC_RET13_REG </item>
//    <item> SFDITEM_REG__RTCC_RET14_REG </item>
//    <item> SFDITEM_REG__RTCC_RET15_REG </item>
//    <item> SFDITEM_REG__RTCC_RET16_REG </item>
//    <item> SFDITEM_REG__RTCC_RET17_REG </item>
//    <item> SFDITEM_REG__RTCC_RET18_REG </item>
//    <item> SFDITEM_REG__RTCC_RET19_REG </item>
//    <item> SFDITEM_REG__RTCC_RET20_REG </item>
//    <item> SFDITEM_REG__RTCC_RET21_REG </item>
//    <item> SFDITEM_REG__RTCC_RET22_REG </item>
//    <item> SFDITEM_REG__RTCC_RET23_REG </item>
//    <item> SFDITEM_REG__RTCC_RET24_REG </item>
//    <item> SFDITEM_REG__RTCC_RET25_REG </item>
//    <item> SFDITEM_REG__RTCC_RET26_REG </item>
//    <item> SFDITEM_REG__RTCC_RET27_REG </item>
//    <item> SFDITEM_REG__RTCC_RET28_REG </item>
//    <item> SFDITEM_REG__RTCC_RET29_REG </item>
//    <item> SFDITEM_REG__RTCC_RET30_REG </item>
//    <item> SFDITEM_REG__RTCC_RET31_REG </item>
//  </view>
//  


// ----------------------------  Register Item Address: WDOG0_CTRL  -------------------------------
// SVD Line: 55862

unsigned int WDOG0_CTRL __AT (0x40052000);



// --------------------------------  Field Item: WDOG0_CTRL_EN  -----------------------------------
// SVD Line: 55871

//  <item> SFDITEM_FIELD__WDOG0_CTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40052000) Watchdog Timer Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: WDOG0_CTRL_DEBUGRUN  --------------------------------
// SVD Line: 55878

//  <item> SFDITEM_FIELD__WDOG0_CTRL_DEBUGRUN
//    <name> DEBUGRUN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40052000) Debug Mode Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.1..1> DEBUGRUN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: WDOG0_CTRL_EM2RUN  ---------------------------------
// SVD Line: 55885

//  <item> SFDITEM_FIELD__WDOG0_CTRL_EM2RUN
//    <name> EM2RUN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40052000) Energy Mode 2 Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.2..2> EM2RUN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: WDOG0_CTRL_EM3RUN  ---------------------------------
// SVD Line: 55892

//  <item> SFDITEM_FIELD__WDOG0_CTRL_EM3RUN
//    <name> EM3RUN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40052000) Energy Mode 3 Run Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.3..3> EM3RUN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_CTRL_LOCK  ----------------------------------
// SVD Line: 55899

//  <item> SFDITEM_FIELD__WDOG0_CTRL_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40052000) Configuration Lock </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.4..4> LOCK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: WDOG0_CTRL_EM4BLOCK  --------------------------------
// SVD Line: 55906

//  <item> SFDITEM_FIELD__WDOG0_CTRL_EM4BLOCK
//    <name> EM4BLOCK </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40052000) Energy Mode 4 Block </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.5..5> EM4BLOCK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: WDOG0_CTRL_SWOSCBLOCK  -------------------------------
// SVD Line: 55913

//  <item> SFDITEM_FIELD__WDOG0_CTRL_SWOSCBLOCK
//    <name> SWOSCBLOCK </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40052000) Software Oscillator Disable Block </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.6..6> SWOSCBLOCK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: WDOG0_CTRL_PERSEL  ---------------------------------
// SVD Line: 55920

//  <item> SFDITEM_FIELD__WDOG0_CTRL_PERSEL
//    <name> PERSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40052000) Watchdog Timeout Period Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDOG0_CTRL >> 8) & 0xF), ((WDOG0_CTRL = (WDOG0_CTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: WDOG0_CTRL_CLKSEL  ---------------------------------
// SVD Line: 55927

//  <item> SFDITEM_FIELD__WDOG0_CTRL_CLKSEL
//    <name> CLKSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40052000) \nWatchdog Clock Select\n0 : ULFRCO = ULFRCO\n1 : LFRCO = LFRCO\n2 : LFXO = LFXO\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.13..12> CLKSEL
//        <0=> 0: ULFRCO = ULFRCO
//        <1=> 1: LFRCO = LFRCO
//        <2=> 2: LFXO = LFXO
//        <3=> 3: 
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: WDOG0_CTRL_WARNSEL  ---------------------------------
// SVD Line: 55951

//  <item> SFDITEM_FIELD__WDOG0_CTRL_WARNSEL
//    <name> WARNSEL </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40052000) Watchdog Timeout Period Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDOG0_CTRL >> 16) & 0x3), ((WDOG0_CTRL = (WDOG0_CTRL & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: WDOG0_CTRL_WINSEL  ---------------------------------
// SVD Line: 55958

//  <item> SFDITEM_FIELD__WDOG0_CTRL_WINSEL
//    <name> WINSEL </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40052000) Watchdog Illegal Window Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDOG0_CTRL >> 24) & 0x7), ((WDOG0_CTRL = (WDOG0_CTRL & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: WDOG0_CTRL_CLRSRC  ---------------------------------
// SVD Line: 55965

//  <item> SFDITEM_FIELD__WDOG0_CTRL_CLRSRC
//    <name> CLRSRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40052000) Watchdog Clear Source </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.30..30> CLRSRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: WDOG0_CTRL_WDOGRSTDIS  -------------------------------
// SVD Line: 55972

//  <item> SFDITEM_FIELD__WDOG0_CTRL_WDOGRSTDIS
//    <name> WDOGRSTDIS </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40052000) Watchdog Reset Disable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CTRL ) </loc>
//      <o.31..31> WDOGRSTDIS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: WDOG0_CTRL  -----------------------------------
// SVD Line: 55862

//  <rtree> SFDITEM_REG__WDOG0_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40052000) Control Register </i>
//    <loc> ( (unsigned int)((WDOG0_CTRL >> 0) & 0xFFFFFFFF), ((WDOG0_CTRL = (WDOG0_CTRL & ~(0xC7033F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC7033F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_EN </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_DEBUGRUN </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_EM2RUN </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_EM3RUN </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_LOCK </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_EM4BLOCK </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_SWOSCBLOCK </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_PERSEL </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_CLKSEL </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_WARNSEL </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_WINSEL </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_CLRSRC </item>
//    <item> SFDITEM_FIELD__WDOG0_CTRL_WDOGRSTDIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: WDOG0_CMD  --------------------------------
// SVD Line: 55981

unsigned int WDOG0_CMD __AT (0x40052004);



// -------------------------------  Field Item: WDOG0_CMD_CLEAR  ----------------------------------
// SVD Line: 55990

//  <item> SFDITEM_FIELD__WDOG0_CMD_CLEAR
//    <name> CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40052004) Watchdog Timer Clear </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_CMD ) </loc>
//      <o.0..0> CLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: WDOG0_CMD  -----------------------------------
// SVD Line: 55981

//  <rtree> SFDITEM_REG__WDOG0_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40052004) Command Register </i>
//    <loc> ( (unsigned int)((WDOG0_CMD >> 0) & 0xFFFFFFFF), ((WDOG0_CMD = (WDOG0_CMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG0_CMD_CLEAR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDOG0_SYNCBUSY  -----------------------------
// SVD Line: 55999

unsigned int WDOG0_SYNCBUSY __AT (0x40052008);



// -----------------------------  Field Item: WDOG0_SYNCBUSY_CTRL  --------------------------------
// SVD Line: 56008

//  <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_CTRL
//    <name> CTRL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40052008) CTRL Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_SYNCBUSY ) </loc>
//      <o.0..0> CTRL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: WDOG0_SYNCBUSY_CMD  ---------------------------------
// SVD Line: 56015

//  <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_CMD
//    <name> CMD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40052008) CMD Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_SYNCBUSY ) </loc>
//      <o.1..1> CMD
//    </check>
//  </item>
//  


// -------------------------  Field Item: WDOG0_SYNCBUSY_PCH0_PRSCTRL  ----------------------------
// SVD Line: 56022

//  <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_PCH0_PRSCTRL
//    <name> PCH0_PRSCTRL </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40052008) PCH0_PRSCTRL Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_SYNCBUSY ) </loc>
//      <o.2..2> PCH0_PRSCTRL
//    </check>
//  </item>
//  


// -------------------------  Field Item: WDOG0_SYNCBUSY_PCH1_PRSCTRL  ----------------------------
// SVD Line: 56029

//  <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_PCH1_PRSCTRL
//    <name> PCH1_PRSCTRL </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40052008) PCH1_PRSCTRL Register Busy </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_SYNCBUSY ) </loc>
//      <o.3..3> PCH1_PRSCTRL
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: WDOG0_SYNCBUSY  ---------------------------------
// SVD Line: 55999

//  <rtree> SFDITEM_REG__WDOG0_SYNCBUSY
//    <name> SYNCBUSY </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40052008) Synchronization Busy Register </i>
//    <loc> ( (unsigned int)((WDOG0_SYNCBUSY >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_CTRL </item>
//    <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_CMD </item>
//    <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_PCH0_PRSCTRL </item>
//    <item> SFDITEM_FIELD__WDOG0_SYNCBUSY_PCH1_PRSCTRL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: WDOG0_PCH0_PRSCTRL  ---------------------------
// SVD Line: 56038

unsigned int WDOG0_PCH0_PRSCTRL __AT (0x4005200C);



// --------------------------  Field Item: WDOG0_PCH0_PRSCTRL_PRSSEL  -----------------------------
// SVD Line: 56047

//  <item> SFDITEM_FIELD__WDOG0_PCH0_PRSCTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4005200C) \nPRS Channel PRS Select\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG0_PCH0_PRSCTRL ) </loc>
//      <o.3..0> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------  Field Item: WDOG0_PCH0_PRSCTRL_PRSMISSRSTEN  --------------------------
// SVD Line: 56116

//  <item> SFDITEM_FIELD__WDOG0_PCH0_PRSCTRL_PRSMISSRSTEN
//    <name> PRSMISSRSTEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4005200C) PRS Missing Event Will Trigger a Watchdog Reset </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_PCH0_PRSCTRL ) </loc>
//      <o.8..8> PRSMISSRSTEN
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: WDOG0_PCH0_PRSCTRL  -------------------------------
// SVD Line: 56038

//  <rtree> SFDITEM_REG__WDOG0_PCH0_PRSCTRL
//    <name> PCH0_PRSCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4005200C) PRS Control Register </i>
//    <loc> ( (unsigned int)((WDOG0_PCH0_PRSCTRL >> 0) & 0xFFFFFFFF), ((WDOG0_PCH0_PRSCTRL = (WDOG0_PCH0_PRSCTRL & ~(0x10FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG0_PCH0_PRSCTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__WDOG0_PCH0_PRSCTRL_PRSMISSRSTEN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: WDOG0_PCH1_PRSCTRL  ---------------------------
// SVD Line: 56125

unsigned int WDOG0_PCH1_PRSCTRL __AT (0x40052010);



// --------------------------  Field Item: WDOG0_PCH1_PRSCTRL_PRSSEL  -----------------------------
// SVD Line: 56134

//  <item> SFDITEM_FIELD__WDOG0_PCH1_PRSCTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40052010) \nPRS Channel PRS Select\n0 : PRSCH0 = PRS Channel 0 selected as input\n1 : PRSCH1 = PRS Channel 1 selected as input\n2 : PRSCH2 = PRS Channel 2 selected as input\n3 : PRSCH3 = PRS Channel 3 selected as input\n4 : PRSCH4 = PRS Channel 4 selected as input\n5 : PRSCH5 = PRS Channel 5 selected as input\n6 : PRSCH6 = PRS Channel 6 selected as input\n7 : PRSCH7 = PRS Channel 7 selected as input\n8 : PRSCH8 = PRS Channel 8 selected as input\n9 : PRSCH9 = PRS Channel 9 selected as input\n10 : PRSCH10 = PRS Channel 10 selected as input\n11 : PRSCH11 = PRS Channel 11 selected as input\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG0_PCH1_PRSCTRL ) </loc>
//      <o.3..0> PRSSEL
//        <0=> 0: PRSCH0 = PRS Channel 0 selected as input
//        <1=> 1: PRSCH1 = PRS Channel 1 selected as input
//        <2=> 2: PRSCH2 = PRS Channel 2 selected as input
//        <3=> 3: PRSCH3 = PRS Channel 3 selected as input
//        <4=> 4: PRSCH4 = PRS Channel 4 selected as input
//        <5=> 5: PRSCH5 = PRS Channel 5 selected as input
//        <6=> 6: PRSCH6 = PRS Channel 6 selected as input
//        <7=> 7: PRSCH7 = PRS Channel 7 selected as input
//        <8=> 8: PRSCH8 = PRS Channel 8 selected as input
//        <9=> 9: PRSCH9 = PRS Channel 9 selected as input
//        <10=> 10: PRSCH10 = PRS Channel 10 selected as input
//        <11=> 11: PRSCH11 = PRS Channel 11 selected as input
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -----------------------  Field Item: WDOG0_PCH1_PRSCTRL_PRSMISSRSTEN  --------------------------
// SVD Line: 56203

//  <item> SFDITEM_FIELD__WDOG0_PCH1_PRSCTRL_PRSMISSRSTEN
//    <name> PRSMISSRSTEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40052010) PRS Missing Event Will Trigger a Watchdog Reset </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_PCH1_PRSCTRL ) </loc>
//      <o.8..8> PRSMISSRSTEN
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: WDOG0_PCH1_PRSCTRL  -------------------------------
// SVD Line: 56125

//  <rtree> SFDITEM_REG__WDOG0_PCH1_PRSCTRL
//    <name> PCH1_PRSCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40052010) PRS Control Register </i>
//    <loc> ( (unsigned int)((WDOG0_PCH1_PRSCTRL >> 0) & 0xFFFFFFFF), ((WDOG0_PCH1_PRSCTRL = (WDOG0_PCH1_PRSCTRL & ~(0x10FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG0_PCH1_PRSCTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__WDOG0_PCH1_PRSCTRL_PRSMISSRSTEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDOG0_IF  --------------------------------
// SVD Line: 56212

unsigned int WDOG0_IF __AT (0x4005201C);



// --------------------------------  Field Item: WDOG0_IF_TOUT  -----------------------------------
// SVD Line: 56221

//  <item> SFDITEM_FIELD__WDOG0_IF_TOUT
//    <name> TOUT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4005201C) WDOG Timeout Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IF ) </loc>
//      <o.0..0> TOUT
//    </check>
//  </item>
//  


// --------------------------------  Field Item: WDOG0_IF_WARN  -----------------------------------
// SVD Line: 56228

//  <item> SFDITEM_FIELD__WDOG0_IF_WARN
//    <name> WARN </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4005201C) WDOG Warning Timeout Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IF ) </loc>
//      <o.1..1> WARN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: WDOG0_IF_WIN  ------------------------------------
// SVD Line: 56235

//  <item> SFDITEM_FIELD__WDOG0_IF_WIN
//    <name> WIN </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4005201C) WDOG Window Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IF ) </loc>
//      <o.2..2> WIN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: WDOG0_IF_PEM0  -----------------------------------
// SVD Line: 56242

//  <item> SFDITEM_FIELD__WDOG0_IF_PEM0
//    <name> PEM0 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4005201C) PRS Channel Zero Event Missing Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IF ) </loc>
//      <o.3..3> PEM0
//    </check>
//  </item>
//  


// --------------------------------  Field Item: WDOG0_IF_PEM1  -----------------------------------
// SVD Line: 56249

//  <item> SFDITEM_FIELD__WDOG0_IF_PEM1
//    <name> PEM1 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4005201C) PRS Channel One Event Missing Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IF ) </loc>
//      <o.4..4> PEM1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: WDOG0_IF  ------------------------------------
// SVD Line: 56212

//  <rtree> SFDITEM_REG__WDOG0_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4005201C) Watchdog Interrupt Flags </i>
//    <loc> ( (unsigned int)((WDOG0_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDOG0_IF_TOUT </item>
//    <item> SFDITEM_FIELD__WDOG0_IF_WARN </item>
//    <item> SFDITEM_FIELD__WDOG0_IF_WIN </item>
//    <item> SFDITEM_FIELD__WDOG0_IF_PEM0 </item>
//    <item> SFDITEM_FIELD__WDOG0_IF_PEM1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: WDOG0_IFS  --------------------------------
// SVD Line: 56258

unsigned int WDOG0_IFS __AT (0x40052020);



// -------------------------------  Field Item: WDOG0_IFS_TOUT  -----------------------------------
// SVD Line: 56267

//  <item> SFDITEM_FIELD__WDOG0_IFS_TOUT
//    <name> TOUT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40052020) Set TOUT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFS ) </loc>
//      <o.0..0> TOUT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IFS_WARN  -----------------------------------
// SVD Line: 56274

//  <item> SFDITEM_FIELD__WDOG0_IFS_WARN
//    <name> WARN </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40052020) Set WARN Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFS ) </loc>
//      <o.1..1> WARN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: WDOG0_IFS_WIN  -----------------------------------
// SVD Line: 56281

//  <item> SFDITEM_FIELD__WDOG0_IFS_WIN
//    <name> WIN </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40052020) Set WIN Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFS ) </loc>
//      <o.2..2> WIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IFS_PEM0  -----------------------------------
// SVD Line: 56288

//  <item> SFDITEM_FIELD__WDOG0_IFS_PEM0
//    <name> PEM0 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40052020) Set PEM0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFS ) </loc>
//      <o.3..3> PEM0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IFS_PEM1  -----------------------------------
// SVD Line: 56295

//  <item> SFDITEM_FIELD__WDOG0_IFS_PEM1
//    <name> PEM1 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40052020) Set PEM1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFS ) </loc>
//      <o.4..4> PEM1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: WDOG0_IFS  -----------------------------------
// SVD Line: 56258

//  <rtree> SFDITEM_REG__WDOG0_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40052020) Interrupt Flag Set Register </i>
//    <loc> ( (unsigned int)((WDOG0_IFS >> 0) & 0xFFFFFFFF), ((WDOG0_IFS = (WDOG0_IFS & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG0_IFS_TOUT </item>
//    <item> SFDITEM_FIELD__WDOG0_IFS_WARN </item>
//    <item> SFDITEM_FIELD__WDOG0_IFS_WIN </item>
//    <item> SFDITEM_FIELD__WDOG0_IFS_PEM0 </item>
//    <item> SFDITEM_FIELD__WDOG0_IFS_PEM1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: WDOG0_IFC  --------------------------------
// SVD Line: 56304

unsigned int WDOG0_IFC __AT (0x40052024);



// -------------------------------  Field Item: WDOG0_IFC_TOUT  -----------------------------------
// SVD Line: 56313

//  <item> SFDITEM_FIELD__WDOG0_IFC_TOUT
//    <name> TOUT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40052024) Clear TOUT Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFC ) </loc>
//      <o.0..0> TOUT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IFC_WARN  -----------------------------------
// SVD Line: 56320

//  <item> SFDITEM_FIELD__WDOG0_IFC_WARN
//    <name> WARN </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40052024) Clear WARN Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFC ) </loc>
//      <o.1..1> WARN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: WDOG0_IFC_WIN  -----------------------------------
// SVD Line: 56327

//  <item> SFDITEM_FIELD__WDOG0_IFC_WIN
//    <name> WIN </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40052024) Clear WIN Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFC ) </loc>
//      <o.2..2> WIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IFC_PEM0  -----------------------------------
// SVD Line: 56334

//  <item> SFDITEM_FIELD__WDOG0_IFC_PEM0
//    <name> PEM0 </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40052024) Clear PEM0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFC ) </loc>
//      <o.3..3> PEM0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IFC_PEM1  -----------------------------------
// SVD Line: 56341

//  <item> SFDITEM_FIELD__WDOG0_IFC_PEM1
//    <name> PEM1 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40052024) Clear PEM1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IFC ) </loc>
//      <o.4..4> PEM1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: WDOG0_IFC  -----------------------------------
// SVD Line: 56304

//  <rtree> SFDITEM_REG__WDOG0_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40052024) Interrupt Flag Clear Register </i>
//    <loc> ( (unsigned int)((WDOG0_IFC >> 0) & 0xFFFFFFFF), ((WDOG0_IFC = (WDOG0_IFC & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG0_IFC_TOUT </item>
//    <item> SFDITEM_FIELD__WDOG0_IFC_WARN </item>
//    <item> SFDITEM_FIELD__WDOG0_IFC_WIN </item>
//    <item> SFDITEM_FIELD__WDOG0_IFC_PEM0 </item>
//    <item> SFDITEM_FIELD__WDOG0_IFC_PEM1 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: WDOG0_IEN  --------------------------------
// SVD Line: 56350

unsigned int WDOG0_IEN __AT (0x40052028);



// -------------------------------  Field Item: WDOG0_IEN_TOUT  -----------------------------------
// SVD Line: 56359

//  <item> SFDITEM_FIELD__WDOG0_IEN_TOUT
//    <name> TOUT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40052028) TOUT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IEN ) </loc>
//      <o.0..0> TOUT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IEN_WARN  -----------------------------------
// SVD Line: 56366

//  <item> SFDITEM_FIELD__WDOG0_IEN_WARN
//    <name> WARN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40052028) WARN Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IEN ) </loc>
//      <o.1..1> WARN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: WDOG0_IEN_WIN  -----------------------------------
// SVD Line: 56373

//  <item> SFDITEM_FIELD__WDOG0_IEN_WIN
//    <name> WIN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40052028) WIN Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IEN ) </loc>
//      <o.2..2> WIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IEN_PEM0  -----------------------------------
// SVD Line: 56380

//  <item> SFDITEM_FIELD__WDOG0_IEN_PEM0
//    <name> PEM0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40052028) PEM0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IEN ) </loc>
//      <o.3..3> PEM0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: WDOG0_IEN_PEM1  -----------------------------------
// SVD Line: 56387

//  <item> SFDITEM_FIELD__WDOG0_IEN_PEM1
//    <name> PEM1 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40052028) PEM1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) WDOG0_IEN ) </loc>
//      <o.4..4> PEM1
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: WDOG0_IEN  -----------------------------------
// SVD Line: 56350

//  <rtree> SFDITEM_REG__WDOG0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40052028) Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((WDOG0_IEN >> 0) & 0xFFFFFFFF), ((WDOG0_IEN = (WDOG0_IEN & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG0_IEN_TOUT </item>
//    <item> SFDITEM_FIELD__WDOG0_IEN_WARN </item>
//    <item> SFDITEM_FIELD__WDOG0_IEN_WIN </item>
//    <item> SFDITEM_FIELD__WDOG0_IEN_PEM0 </item>
//    <item> SFDITEM_FIELD__WDOG0_IEN_PEM1 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: WDOG0  -------------------------------------
// SVD Line: 55848

//  <view> WDOG0
//    <name> WDOG0 </name>
//    <item> SFDITEM_REG__WDOG0_CTRL </item>
//    <item> SFDITEM_REG__WDOG0_CMD </item>
//    <item> SFDITEM_REG__WDOG0_SYNCBUSY </item>
//    <item> SFDITEM_REG__WDOG0_PCH0_PRSCTRL </item>
//    <item> SFDITEM_REG__WDOG0_PCH1_PRSCTRL </item>
//    <item> SFDITEM_REG__WDOG0_IF </item>
//    <item> SFDITEM_REG__WDOG0_IFS </item>
//    <item> SFDITEM_REG__WDOG0_IFC </item>
//    <item> SFDITEM_REG__WDOG0_IEN </item>
//  </view>
//  


// ---------------------------  Register Item Address: AGC_STATUS0  -------------------------------
// SVD Line: 56412

unsigned int AGC_STATUS0 __AT (0x40087000);



// ----------------------------  Field Item: AGC_STATUS0_GAININDEX  -------------------------------
// SVD Line: 56421

//  <item> SFDITEM_FIELD__AGC_STATUS0_GAININDEX
//    <name> GAININDEX </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x40087000) GAININDEX </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS0 >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AGC_STATUS0_CCA  ----------------------------------
// SVD Line: 56428

//  <item> SFDITEM_FIELD__AGC_STATUS0_CCA
//    <name> CCA </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40087000) CCA </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_STATUS0 ) </loc>
//      <o.10..10> CCA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_STATUS0_GAINOK  ---------------------------------
// SVD Line: 56435

//  <item> SFDITEM_FIELD__AGC_STATUS0_GAINOK
//    <name> GAINOK </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40087000) GAINOK </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_STATUS0 ) </loc>
//      <o.12..12> GAINOK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: AGC_STATUS0_GAINIFPGA  -------------------------------
// SVD Line: 56442

//  <item> SFDITEM_FIELD__AGC_STATUS0_GAINIFPGA
//    <name> GAINIFPGA </name>
//    <r> 
//    <i> [Bits 16..13] RO (@ 0x40087000) GAINIFPGA </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS0 >> 13) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_STATUS0_GAINLNADEGEN  ------------------------------
// SVD Line: 56449

//  <item> SFDITEM_FIELD__AGC_STATUS0_GAINLNADEGEN
//    <name> GAINLNADEGEN </name>
//    <r> 
//    <i> [Bits 19..17] RO (@ 0x40087000) GAINLNADEGEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS0 >> 17) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_STATUS0_GAINLNASLICE  ------------------------------
// SVD Line: 56456

//  <item> SFDITEM_FIELD__AGC_STATUS0_GAINLNASLICE
//    <name> GAINLNASLICE </name>
//    <r> 
//    <i> [Bits 23..20] RO (@ 0x40087000) GAINLNASLICE </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS0 >> 20) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_STATUS0_GAINLNAATTEN  ------------------------------
// SVD Line: 56463

//  <item> SFDITEM_FIELD__AGC_STATUS0_GAINLNAATTEN
//    <name> GAINLNAATTEN </name>
//    <r> 
//    <i> [Bits 29..25] RO (@ 0x40087000) GAINLNAATTEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS0 >> 25) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AGC_STATUS0  ----------------------------------
// SVD Line: 56412

//  <rtree> SFDITEM_REG__AGC_STATUS0
//    <name> STATUS0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40087000) STATUS0 </i>
//    <loc> ( (unsigned int)((AGC_STATUS0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AGC_STATUS0_GAININDEX </item>
//    <item> SFDITEM_FIELD__AGC_STATUS0_CCA </item>
//    <item> SFDITEM_FIELD__AGC_STATUS0_GAINOK </item>
//    <item> SFDITEM_FIELD__AGC_STATUS0_GAINIFPGA </item>
//    <item> SFDITEM_FIELD__AGC_STATUS0_GAINLNADEGEN </item>
//    <item> SFDITEM_FIELD__AGC_STATUS0_GAINLNASLICE </item>
//    <item> SFDITEM_FIELD__AGC_STATUS0_GAINLNAATTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: AGC_STATUS1  -------------------------------
// SVD Line: 56472

unsigned int AGC_STATUS1 __AT (0x40087004);



// ------------------------------  Field Item: AGC_STATUS1_CHPWR  ---------------------------------
// SVD Line: 56481

//  <item> SFDITEM_FIELD__AGC_STATUS1_CHPWR
//    <name> CHPWR </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40087004) CHPWR </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS1 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_STATUS1_ADCSTABILITYDET  ----------------------------
// SVD Line: 56488

//  <item> SFDITEM_FIELD__AGC_STATUS1_ADCSTABILITYDET
//    <name> ADCSTABILITYDET </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40087004) ADCSTABILITYDET </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_STATUS1 ) </loc>
//      <o.9..9> ADCSTABILITYDET
//    </check>
//  </item>
//  


// ---------------------------  Field Item: AGC_STATUS1_PGAPEAKDET2  ------------------------------
// SVD Line: 56495

//  <item> SFDITEM_FIELD__AGC_STATUS1_PGAPEAKDET2
//    <name> PGAPEAKDET2 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40087004) PGAPEAKDET2 </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_STATUS1 ) </loc>
//      <o.10..10> PGAPEAKDET2
//    </check>
//  </item>
//  


// ---------------------------  Field Item: AGC_STATUS1_PGAPEAKDET1  ------------------------------
// SVD Line: 56502

//  <item> SFDITEM_FIELD__AGC_STATUS1_PGAPEAKDET1
//    <name> PGAPEAKDET1 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40087004) PGAPEAKDET1 </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_STATUS1 ) </loc>
//      <o.11..11> PGAPEAKDET1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: AGC_STATUS1_CFLOOPSTATE  ------------------------------
// SVD Line: 56509

//  <item> SFDITEM_FIELD__AGC_STATUS1_CFLOOPSTATE
//    <name> CFLOOPSTATE </name>
//    <r> 
//    <i> [Bits 13..12] RO (@ 0x40087004) CFLOOPSTATE </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS1 >> 12) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_STATUS1_FASTLOOPSTATE  -----------------------------
// SVD Line: 56516

//  <item> SFDITEM_FIELD__AGC_STATUS1_FASTLOOPSTATE
//    <name> FASTLOOPSTATE </name>
//    <r> 
//    <i> [Bits 16..14] RO (@ 0x40087004) FASTLOOPSTATE </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_STATUS1 >> 14) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AGC_STATUS1  ----------------------------------
// SVD Line: 56472

//  <rtree> SFDITEM_REG__AGC_STATUS1
//    <name> STATUS1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40087004) STATUS1 </i>
//    <loc> ( (unsigned int)((AGC_STATUS1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AGC_STATUS1_CHPWR </item>
//    <item> SFDITEM_FIELD__AGC_STATUS1_ADCSTABILITYDET </item>
//    <item> SFDITEM_FIELD__AGC_STATUS1_PGAPEAKDET2 </item>
//    <item> SFDITEM_FIELD__AGC_STATUS1_PGAPEAKDET1 </item>
//    <item> SFDITEM_FIELD__AGC_STATUS1_CFLOOPSTATE </item>
//    <item> SFDITEM_FIELD__AGC_STATUS1_FASTLOOPSTATE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AGC_RSSI  --------------------------------
// SVD Line: 56525

unsigned int AGC_RSSI __AT (0x40087008);



// ------------------------------  Field Item: AGC_RSSI_RSSIFRAC  ---------------------------------
// SVD Line: 56534

//  <item> SFDITEM_FIELD__AGC_RSSI_RSSIFRAC
//    <name> RSSIFRAC </name>
//    <r> 
//    <i> [Bits 7..6] RO (@ 0x40087008) RSSIFRAC </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_RSSI >> 6) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: AGC_RSSI_RSSIINT  ----------------------------------
// SVD Line: 56541

//  <item> SFDITEM_FIELD__AGC_RSSI_RSSIINT
//    <name> RSSIINT </name>
//    <r> 
//    <i> [Bits 15..8] RO (@ 0x40087008) RSSIINT </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_RSSI >> 8) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AGC_RSSI  ------------------------------------
// SVD Line: 56525

//  <rtree> SFDITEM_REG__AGC_RSSI
//    <name> RSSI </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40087008) RSSI </i>
//    <loc> ( (unsigned int)((AGC_RSSI >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AGC_RSSI_RSSIFRAC </item>
//    <item> SFDITEM_FIELD__AGC_RSSI_RSSIINT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_FRAMERSSI  ------------------------------
// SVD Line: 56550

unsigned int AGC_FRAMERSSI __AT (0x4008700C);



// -------------------------  Field Item: AGC_FRAMERSSI_FRAMERSSIFRAC  ----------------------------
// SVD Line: 56559

//  <item> SFDITEM_FIELD__AGC_FRAMERSSI_FRAMERSSIFRAC
//    <name> FRAMERSSIFRAC </name>
//    <r> 
//    <i> [Bits 7..6] RO (@ 0x4008700C) FRAMERSSIFRAC </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_FRAMERSSI >> 6) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_FRAMERSSI_FRAMERSSIINT  -----------------------------
// SVD Line: 56566

//  <item> SFDITEM_FIELD__AGC_FRAMERSSI_FRAMERSSIINT
//    <name> FRAMERSSIINT </name>
//    <r> 
//    <i> [Bits 15..8] RO (@ 0x4008700C) FRAMERSSIINT </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_FRAMERSSI >> 8) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: AGC_FRAMERSSI  ---------------------------------
// SVD Line: 56550

//  <rtree> SFDITEM_REG__AGC_FRAMERSSI
//    <name> FRAMERSSI </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008700C) FRAMERSSI </i>
//    <loc> ( (unsigned int)((AGC_FRAMERSSI >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AGC_FRAMERSSI_FRAMERSSIFRAC </item>
//    <item> SFDITEM_FIELD__AGC_FRAMERSSI_FRAMERSSIINT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AGC_CTRL0  --------------------------------
// SVD Line: 56575

unsigned int AGC_CTRL0 __AT (0x40087014);



// -----------------------------  Field Item: AGC_CTRL0_PWRTARGET  --------------------------------
// SVD Line: 56584

//  <item> SFDITEM_FIELD__AGC_CTRL0_PWRTARGET
//    <name> PWRTARGET </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40087014) PWRTARGET </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL0 >> 0) & 0xFF), ((AGC_CTRL0 = (AGC_CTRL0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AGC_CTRL0_MODE  -----------------------------------
// SVD Line: 56591

//  <item> SFDITEM_FIELD__AGC_CTRL0_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40087014) MODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL0 >> 8) & 0x7), ((AGC_CTRL0 = (AGC_CTRL0 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: AGC_CTRL0_RSSISHIFT  --------------------------------
// SVD Line: 56598

//  <item> SFDITEM_FIELD__AGC_CTRL0_RSSISHIFT
//    <name> RSSISHIFT </name>
//    <rw> 
//    <i> [Bits 18..11] RW (@ 0x40087014) RSSISHIFT </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL0 >> 11) & 0xFF), ((AGC_CTRL0 = (AGC_CTRL0 & ~(0xFFUL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: AGC_CTRL0_DISCFLOOPADJ  -------------------------------
// SVD Line: 56605

//  <item> SFDITEM_FIELD__AGC_CTRL0_DISCFLOOPADJ
//    <name> DISCFLOOPADJ </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40087014) DISCFLOOPADJ </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL0 ) </loc>
//      <o.19..19> DISCFLOOPADJ
//    </check>
//  </item>
//  


// ---------------------------  Field Item: AGC_CTRL0_USEADCSATDET  -------------------------------
// SVD Line: 56612

//  <item> SFDITEM_FIELD__AGC_CTRL0_USEADCSATDET
//    <name> USEADCSATDET </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40087014) USEADCSATDET </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL0 ) </loc>
//      <o.20..20> USEADCSATDET
//    </check>
//  </item>
//  


// --------------------------  Field Item: AGC_CTRL0_AGCCLKUNDIVREQ  ------------------------------
// SVD Line: 56619

//  <item> SFDITEM_FIELD__AGC_CTRL0_AGCCLKUNDIVREQ
//    <name> AGCCLKUNDIVREQ </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40087014) AGCCLKUNDIVREQ </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL0 ) </loc>
//      <o.21..21> AGCCLKUNDIVREQ
//    </check>
//  </item>
//  


// ---------------------------  Field Item: AGC_CTRL0_DISRESETCHPWR  ------------------------------
// SVD Line: 56626

//  <item> SFDITEM_FIELD__AGC_CTRL0_DISRESETCHPWR
//    <name> DISRESETCHPWR </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40087014) DISRESETCHPWR </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL0 ) </loc>
//      <o.22..22> DISRESETCHPWR
//    </check>
//  </item>
//  


// -------------------------  Field Item: AGC_CTRL0_ADCRESETDURATION  -----------------------------
// SVD Line: 56633

//  <item> SFDITEM_FIELD__AGC_CTRL0_ADCRESETDURATION
//    <name> ADCRESETDURATION </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40087014) ADCRESETDURATION </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL0 >> 23) & 0x3), ((AGC_CTRL0 = (AGC_CTRL0 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AGC_CTRL0  -----------------------------------
// SVD Line: 56575

//  <rtree> SFDITEM_REG__AGC_CTRL0
//    <name> CTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087014) CTRL0 </i>
//    <loc> ( (unsigned int)((AGC_CTRL0 >> 0) & 0xFFFFFFFF), ((AGC_CTRL0 = (AGC_CTRL0 & ~(0x1FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_CTRL0_PWRTARGET </item>
//    <item> SFDITEM_FIELD__AGC_CTRL0_MODE </item>
//    <item> SFDITEM_FIELD__AGC_CTRL0_RSSISHIFT </item>
//    <item> SFDITEM_FIELD__AGC_CTRL0_DISCFLOOPADJ </item>
//    <item> SFDITEM_FIELD__AGC_CTRL0_USEADCSATDET </item>
//    <item> SFDITEM_FIELD__AGC_CTRL0_AGCCLKUNDIVREQ </item>
//    <item> SFDITEM_FIELD__AGC_CTRL0_DISRESETCHPWR </item>
//    <item> SFDITEM_FIELD__AGC_CTRL0_ADCRESETDURATION </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AGC_CTRL1  --------------------------------
// SVD Line: 56642

unsigned int AGC_CTRL1 __AT (0x40087018);



// -----------------------------  Field Item: AGC_CTRL1_CCATHRSH  ---------------------------------
// SVD Line: 56651

//  <item> SFDITEM_FIELD__AGC_CTRL1_CCATHRSH
//    <name> CCATHRSH </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40087018) CCATHRSH </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL1 >> 0) & 0xFF), ((AGC_CTRL1 = (AGC_CTRL1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: AGC_CTRL1_RSSIPERIOD  --------------------------------
// SVD Line: 56658

//  <item> SFDITEM_FIELD__AGC_CTRL1_RSSIPERIOD
//    <name> RSSIPERIOD </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40087018) RSSIPERIOD </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL1 >> 8) & 0xF), ((AGC_CTRL1 = (AGC_CTRL1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: AGC_CTRL1_AGCPERIOD  --------------------------------
// SVD Line: 56665

//  <item> SFDITEM_FIELD__AGC_CTRL1_AGCPERIOD
//    <name> AGCPERIOD </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40087018) AGCPERIOD </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL1 >> 12) & 0x7), ((AGC_CTRL1 = (AGC_CTRL1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: AGC_CTRL1_SUBPERIOD  --------------------------------
// SVD Line: 56672

//  <item> SFDITEM_FIELD__AGC_CTRL1_SUBPERIOD
//    <name> SUBPERIOD </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40087018) SUBPERIOD </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL1 ) </loc>
//      <o.15..15> SUBPERIOD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: AGC_CTRL1_SUBNUM  ----------------------------------
// SVD Line: 56679

//  <item> SFDITEM_FIELD__AGC_CTRL1_SUBNUM
//    <name> SUBNUM </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40087018) SUBNUM </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL1 >> 16) & 0x1F), ((AGC_CTRL1 = (AGC_CTRL1 & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: AGC_CTRL1_SUBDEN  ----------------------------------
// SVD Line: 56686

//  <item> SFDITEM_FIELD__AGC_CTRL1_SUBDEN
//    <name> SUBDEN </name>
//    <rw> 
//    <i> [Bits 25..21] RW (@ 0x40087018) SUBDEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL1 >> 21) & 0x1F), ((AGC_CTRL1 = (AGC_CTRL1 & ~(0x1FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: AGC_CTRL1_SUBINT  ----------------------------------
// SVD Line: 56693

//  <item> SFDITEM_FIELD__AGC_CTRL1_SUBINT
//    <name> SUBINT </name>
//    <rw> 
//    <i> [Bits 31..26] RW (@ 0x40087018) SUBINT </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL1 >> 26) & 0x3F), ((AGC_CTRL1 = (AGC_CTRL1 & ~(0x3FUL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: AGC_CTRL1  -----------------------------------
// SVD Line: 56642

//  <rtree> SFDITEM_REG__AGC_CTRL1
//    <name> CTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087018) CTRL1 </i>
//    <loc> ( (unsigned int)((AGC_CTRL1 >> 0) & 0xFFFFFFFF), ((AGC_CTRL1 = (AGC_CTRL1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_CTRL1_CCATHRSH </item>
//    <item> SFDITEM_FIELD__AGC_CTRL1_RSSIPERIOD </item>
//    <item> SFDITEM_FIELD__AGC_CTRL1_AGCPERIOD </item>
//    <item> SFDITEM_FIELD__AGC_CTRL1_SUBPERIOD </item>
//    <item> SFDITEM_FIELD__AGC_CTRL1_SUBNUM </item>
//    <item> SFDITEM_FIELD__AGC_CTRL1_SUBDEN </item>
//    <item> SFDITEM_FIELD__AGC_CTRL1_SUBINT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: AGC_CTRL2  --------------------------------
// SVD Line: 56702

unsigned int AGC_CTRL2 __AT (0x4008701C);



// -----------------------------  Field Item: AGC_CTRL2_FASTSTEP  ---------------------------------
// SVD Line: 56711

//  <item> SFDITEM_FIELD__AGC_CTRL2_FASTSTEP
//    <name> FASTSTEP </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4008701C) FASTSTEP </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL2 >> 0) & 0x1F), ((AGC_CTRL2 = (AGC_CTRL2 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: AGC_CTRL2_HYST  -----------------------------------
// SVD Line: 56718

//  <item> SFDITEM_FIELD__AGC_CTRL2_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bits 8..5] RW (@ 0x4008701C) HYST </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL2 >> 5) & 0xF), ((AGC_CTRL2 = (AGC_CTRL2 & ~(0xFUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: AGC_CTRL2_DMASEL  ----------------------------------
// SVD Line: 56725

//  <item> SFDITEM_FIELD__AGC_CTRL2_DMASEL
//    <name> DMASEL </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008701C) DMASEL </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL2 ) </loc>
//      <o.9..9> DMASEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_CTRL2_MAXPWRVAR  --------------------------------
// SVD Line: 56732

//  <item> SFDITEM_FIELD__AGC_CTRL2_MAXPWRVAR
//    <name> MAXPWRVAR </name>
//    <rw> 
//    <i> [Bits 15..10] RW (@ 0x4008701C) MAXPWRVAR </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL2 >> 10) & 0x3F), ((AGC_CTRL2 = (AGC_CTRL2 & ~(0x3FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: AGC_CTRL2_FASTLOOPDEL  -------------------------------
// SVD Line: 56739

//  <item> SFDITEM_FIELD__AGC_CTRL2_FASTLOOPDEL
//    <name> FASTLOOPDEL </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4008701C) FASTLOOPDEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL2 >> 16) & 0xF), ((AGC_CTRL2 = (AGC_CTRL2 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: AGC_CTRL2_CFLOOPDEL  --------------------------------
// SVD Line: 56746

//  <item> SFDITEM_FIELD__AGC_CTRL2_CFLOOPDEL
//    <name> CFLOOPDEL </name>
//    <rw> 
//    <i> [Bits 25..20] RW (@ 0x4008701C) CFLOOPDEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL2 >> 20) & 0x3F), ((AGC_CTRL2 = (AGC_CTRL2 & ~(0x3FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: AGC_CTRL2_RSSIFAST  ---------------------------------
// SVD Line: 56753

//  <item> SFDITEM_FIELD__AGC_CTRL2_RSSIFAST
//    <name> RSSIFAST </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4008701C) RSSIFAST </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL2 ) </loc>
//      <o.26..26> RSSIFAST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: AGC_CTRL2_SLOWGAINADJ  -------------------------------
// SVD Line: 56760

//  <item> SFDITEM_FIELD__AGC_CTRL2_SLOWGAINADJ
//    <name> SLOWGAINADJ </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4008701C) SLOWGAINADJ </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL2 ) </loc>
//      <o.27..27> SLOWGAINADJ
//    </check>
//  </item>
//  


// --------------------------  Field Item: AGC_CTRL2_ADCRSTFASTLOOP  ------------------------------
// SVD Line: 56767

//  <item> SFDITEM_FIELD__AGC_CTRL2_ADCRSTFASTLOOP
//    <name> ADCRSTFASTLOOP </name>
//    <rw> 
//    <i> [Bits 30..29] RW (@ 0x4008701C) ADCRSTFASTLOOP </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_CTRL2 >> 29) & 0x3), ((AGC_CTRL2 = (AGC_CTRL2 & ~(0x3UL << 29 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 29 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: AGC_CTRL2_ADCRSTSTARTUP  ------------------------------
// SVD Line: 56774

//  <item> SFDITEM_FIELD__AGC_CTRL2_ADCRSTSTARTUP
//    <name> ADCRSTSTARTUP </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4008701C) ADCRSTSTARTUP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CTRL2 ) </loc>
//      <o.31..31> ADCRSTSTARTUP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: AGC_CTRL2  -----------------------------------
// SVD Line: 56702

//  <rtree> SFDITEM_REG__AGC_CTRL2
//    <name> CTRL2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008701C) CTRL2 </i>
//    <loc> ( (unsigned int)((AGC_CTRL2 >> 0) & 0xFFFFFFFF), ((AGC_CTRL2 = (AGC_CTRL2 & ~(0xEFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_CTRL2_FASTSTEP </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_HYST </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_DMASEL </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_MAXPWRVAR </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_FASTLOOPDEL </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_CFLOOPDEL </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_RSSIFAST </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_SLOWGAINADJ </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_ADCRSTFASTLOOP </item>
//    <item> SFDITEM_FIELD__AGC_CTRL2_ADCRSTSTARTUP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: AGC_RSSISTEPTHR  -----------------------------
// SVD Line: 56783

unsigned int AGC_RSSISTEPTHR __AT (0x40087020);



// -------------------------  Field Item: AGC_RSSISTEPTHR_POSSTEPTHR  -----------------------------
// SVD Line: 56792

//  <item> SFDITEM_FIELD__AGC_RSSISTEPTHR_POSSTEPTHR
//    <name> POSSTEPTHR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40087020) POSSTEPTHR </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_RSSISTEPTHR >> 0) & 0xFF), ((AGC_RSSISTEPTHR = (AGC_RSSISTEPTHR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_RSSISTEPTHR_NEGSTEPTHR  -----------------------------
// SVD Line: 56799

//  <item> SFDITEM_FIELD__AGC_RSSISTEPTHR_NEGSTEPTHR
//    <name> NEGSTEPTHR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40087020) NEGSTEPTHR </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_RSSISTEPTHR >> 8) & 0xFF), ((AGC_RSSISTEPTHR = (AGC_RSSISTEPTHR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_RSSISTEPTHR  --------------------------------
// SVD Line: 56783

//  <rtree> SFDITEM_REG__AGC_RSSISTEPTHR
//    <name> RSSISTEPTHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087020) RSSISTEPTHR </i>
//    <loc> ( (unsigned int)((AGC_RSSISTEPTHR >> 0) & 0xFFFFFFFF), ((AGC_RSSISTEPTHR = (AGC_RSSISTEPTHR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_RSSISTEPTHR_POSSTEPTHR </item>
//    <item> SFDITEM_FIELD__AGC_RSSISTEPTHR_NEGSTEPTHR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_IFPEAKDET  ------------------------------
// SVD Line: 56808

unsigned int AGC_IFPEAKDET __AT (0x40087024);



// --------------------------  Field Item: AGC_IFPEAKDET_PKDTHRESH1  ------------------------------
// SVD Line: 56817

//  <item> SFDITEM_FIELD__AGC_IFPEAKDET_PKDTHRESH1
//    <name> PKDTHRESH1 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40087024) PKDTHRESH1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_IFPEAKDET >> 0) & 0xF), ((AGC_IFPEAKDET = (AGC_IFPEAKDET & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_IFPEAKDET_PKDTHRESH2  ------------------------------
// SVD Line: 56824

//  <item> SFDITEM_FIELD__AGC_IFPEAKDET_PKDTHRESH2
//    <name> PKDTHRESH2 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40087024) PKDTHRESH2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_IFPEAKDET >> 4) & 0xF), ((AGC_IFPEAKDET = (AGC_IFPEAKDET & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: AGC_IFPEAKDET_MODEPKD  -------------------------------
// SVD Line: 56831

//  <item> SFDITEM_FIELD__AGC_IFPEAKDET_MODEPKD
//    <name> MODEPKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40087024) MODEPKD </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_IFPEAKDET >> 8) & 0x3), ((AGC_IFPEAKDET = (AGC_IFPEAKDET & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: AGC_IFPEAKDET  ---------------------------------
// SVD Line: 56808

//  <rtree> SFDITEM_REG__AGC_IFPEAKDET
//    <name> IFPEAKDET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087024) IFPEAKDET </i>
//    <loc> ( (unsigned int)((AGC_IFPEAKDET >> 0) & 0xFFFFFFFF), ((AGC_IFPEAKDET = (AGC_IFPEAKDET & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_IFPEAKDET_PKDTHRESH1 </item>
//    <item> SFDITEM_FIELD__AGC_IFPEAKDET_PKDTHRESH2 </item>
//    <item> SFDITEM_FIELD__AGC_IFPEAKDET_MODEPKD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: AGC_MANGAIN  -------------------------------
// SVD Line: 56840

unsigned int AGC_MANGAIN __AT (0x40087028);



// --------------------------  Field Item: AGC_MANGAIN_MANGAININDEX  ------------------------------
// SVD Line: 56849

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAININDEX
//    <name> MANGAININDEX </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40087028) MANGAININDEX </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MANGAIN >> 0) & 0x3F), ((AGC_MANGAIN = (AGC_MANGAIN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_MANGAIN_MANGAININDEXEN  -----------------------------
// SVD Line: 56856

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAININDEXEN
//    <name> MANGAININDEXEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40087028) MANGAININDEXEN </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANGAIN ) </loc>
//      <o.7..7> MANGAININDEXEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: AGC_MANGAIN_MANGAINIFPGA  ------------------------------
// SVD Line: 56863

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINIFPGA
//    <name> MANGAINIFPGA </name>
//    <rw> 
//    <i> [Bits 12..9] RW (@ 0x40087028) MANGAINIFPGA </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MANGAIN >> 9) & 0xF), ((AGC_MANGAIN = (AGC_MANGAIN & ~(0xFUL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_MANGAIN_MANGAINLNADEGEN  ----------------------------
// SVD Line: 56870

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNADEGEN
//    <name> MANGAINLNADEGEN </name>
//    <rw> 
//    <i> [Bits 15..13] RW (@ 0x40087028) MANGAINLNADEGEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MANGAIN >> 13) & 0x7), ((AGC_MANGAIN = (AGC_MANGAIN & ~(0x7UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_MANGAIN_MANGAINLNASLICES  ----------------------------
// SVD Line: 56877

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNASLICES
//    <name> MANGAINLNASLICES </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40087028) MANGAINLNASLICES </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MANGAIN >> 16) & 0xF), ((AGC_MANGAIN = (AGC_MANGAIN & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_MANGAIN_MANGAINLNAATTEN  ----------------------------
// SVD Line: 56884

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNAATTEN
//    <name> MANGAINLNAATTEN </name>
//    <rw> 
//    <i> [Bits 25..21] RW (@ 0x40087028) MANGAINLNAATTEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MANGAIN >> 21) & 0x1F), ((AGC_MANGAIN = (AGC_MANGAIN & ~(0x1FUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_MANGAIN_MANGAINLNASLICESREG  --------------------------
// SVD Line: 56891

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNASLICESREG
//    <name> MANGAINLNASLICESREG </name>
//    <rw> 
//    <i> [Bits 29..26] RW (@ 0x40087028) MANGAINLNASLICESREG </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MANGAIN >> 26) & 0xF), ((AGC_MANGAIN = (AGC_MANGAIN & ~(0xFUL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: AGC_MANGAIN_MANGAINEN  -------------------------------
// SVD Line: 56898

//  <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINEN
//    <name> MANGAINEN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40087028) MANGAINEN </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANGAIN ) </loc>
//      <o.30..30> MANGAINEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: AGC_MANGAIN  ----------------------------------
// SVD Line: 56840

//  <rtree> SFDITEM_REG__AGC_MANGAIN
//    <name> MANGAIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087028) MANGAIN </i>
//    <loc> ( (unsigned int)((AGC_MANGAIN >> 0) & 0xFFFFFFFF), ((AGC_MANGAIN = (AGC_MANGAIN & ~(0x7FEFFEBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FEFFEBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAININDEX </item>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAININDEXEN </item>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINIFPGA </item>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNADEGEN </item>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNASLICES </item>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNAATTEN </item>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINLNASLICESREG </item>
//    <item> SFDITEM_FIELD__AGC_MANGAIN_MANGAINEN </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: AGC_IF  ---------------------------------
// SVD Line: 56907

unsigned int AGC_IF __AT (0x40087030);



// ------------------------------  Field Item: AGC_IF_RSSIVALID  ----------------------------------
// SVD Line: 56916

//  <item> SFDITEM_FIELD__AGC_IF_RSSIVALID
//    <name> RSSIVALID </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40087030) RSSIVALID </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IF ) </loc>
//      <o.0..0> RSSIVALID
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: AGC_IF_CCA  -------------------------------------
// SVD Line: 56923

//  <item> SFDITEM_FIELD__AGC_IF_CCA
//    <name> CCA </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40087030) CCA </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IF ) </loc>
//      <o.2..2> CCA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IF_RSSIPOSSTEP  ---------------------------------
// SVD Line: 56930

//  <item> SFDITEM_FIELD__AGC_IF_RSSIPOSSTEP
//    <name> RSSIPOSSTEP </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40087030) RSSIPOSSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IF ) </loc>
//      <o.3..3> RSSIPOSSTEP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IF_RSSINEGSTEP  ---------------------------------
// SVD Line: 56937

//  <item> SFDITEM_FIELD__AGC_IF_RSSINEGSTEP
//    <name> RSSINEGSTEP </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40087030) RSSINEGSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IF ) </loc>
//      <o.4..4> RSSINEGSTEP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: AGC_IF_RSSIDONE  ----------------------------------
// SVD Line: 56944

//  <item> SFDITEM_FIELD__AGC_IF_RSSIDONE
//    <name> RSSIDONE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40087030) RSSIDONE </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IF ) </loc>
//      <o.5..5> RSSIDONE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: AGC_IF  -------------------------------------
// SVD Line: 56907

//  <rtree> SFDITEM_REG__AGC_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40087030) IF </i>
//    <loc> ( (unsigned int)((AGC_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AGC_IF_RSSIVALID </item>
//    <item> SFDITEM_FIELD__AGC_IF_CCA </item>
//    <item> SFDITEM_FIELD__AGC_IF_RSSIPOSSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IF_RSSINEGSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IF_RSSIDONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AGC_IFS  ---------------------------------
// SVD Line: 56953

unsigned int AGC_IFS __AT (0x40087034);



// ------------------------------  Field Item: AGC_IFS_RSSIVALID  ---------------------------------
// SVD Line: 56962

//  <item> SFDITEM_FIELD__AGC_IFS_RSSIVALID
//    <name> RSSIVALID </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40087034) RSSIVALID </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFS ) </loc>
//      <o.0..0> RSSIVALID
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: AGC_IFS_CCA  ------------------------------------
// SVD Line: 56969

//  <item> SFDITEM_FIELD__AGC_IFS_CCA
//    <name> CCA </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40087034) CCA </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFS ) </loc>
//      <o.2..2> CCA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IFS_RSSIPOSSTEP  --------------------------------
// SVD Line: 56976

//  <item> SFDITEM_FIELD__AGC_IFS_RSSIPOSSTEP
//    <name> RSSIPOSSTEP </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40087034) RSSIPOSSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFS ) </loc>
//      <o.3..3> RSSIPOSSTEP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IFS_RSSINEGSTEP  --------------------------------
// SVD Line: 56983

//  <item> SFDITEM_FIELD__AGC_IFS_RSSINEGSTEP
//    <name> RSSINEGSTEP </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40087034) RSSINEGSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFS ) </loc>
//      <o.4..4> RSSINEGSTEP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: AGC_IFS_RSSIDONE  ----------------------------------
// SVD Line: 56990

//  <item> SFDITEM_FIELD__AGC_IFS_RSSIDONE
//    <name> RSSIDONE </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40087034) RSSIDONE </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFS ) </loc>
//      <o.5..5> RSSIDONE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: AGC_IFS  ------------------------------------
// SVD Line: 56953

//  <rtree> SFDITEM_REG__AGC_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40087034) IFS </i>
//    <loc> ( (unsigned int)((AGC_IFS >> 0) & 0xFFFFFFFF), ((AGC_IFS = (AGC_IFS & ~(0x3DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_IFS_RSSIVALID </item>
//    <item> SFDITEM_FIELD__AGC_IFS_CCA </item>
//    <item> SFDITEM_FIELD__AGC_IFS_RSSIPOSSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IFS_RSSINEGSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IFS_RSSIDONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AGC_IFC  ---------------------------------
// SVD Line: 56999

unsigned int AGC_IFC __AT (0x40087038);



// ------------------------------  Field Item: AGC_IFC_RSSIVALID  ---------------------------------
// SVD Line: 57008

//  <item> SFDITEM_FIELD__AGC_IFC_RSSIVALID
//    <name> RSSIVALID </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40087038) RSSIVALID </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFC ) </loc>
//      <o.0..0> RSSIVALID
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: AGC_IFC_CCA  ------------------------------------
// SVD Line: 57015

//  <item> SFDITEM_FIELD__AGC_IFC_CCA
//    <name> CCA </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40087038) CCA </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFC ) </loc>
//      <o.2..2> CCA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IFC_RSSIPOSSTEP  --------------------------------
// SVD Line: 57022

//  <item> SFDITEM_FIELD__AGC_IFC_RSSIPOSSTEP
//    <name> RSSIPOSSTEP </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40087038) RSSIPOSSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFC ) </loc>
//      <o.3..3> RSSIPOSSTEP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IFC_RSSINEGSTEP  --------------------------------
// SVD Line: 57029

//  <item> SFDITEM_FIELD__AGC_IFC_RSSINEGSTEP
//    <name> RSSINEGSTEP </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40087038) RSSINEGSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFC ) </loc>
//      <o.4..4> RSSINEGSTEP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: AGC_IFC_RSSIDONE  ----------------------------------
// SVD Line: 57036

//  <item> SFDITEM_FIELD__AGC_IFC_RSSIDONE
//    <name> RSSIDONE </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40087038) RSSIDONE </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IFC ) </loc>
//      <o.5..5> RSSIDONE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: AGC_IFC  ------------------------------------
// SVD Line: 56999

//  <rtree> SFDITEM_REG__AGC_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40087038) IFC </i>
//    <loc> ( (unsigned int)((AGC_IFC >> 0) & 0xFFFFFFFF), ((AGC_IFC = (AGC_IFC & ~(0x3DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_IFC_RSSIVALID </item>
//    <item> SFDITEM_FIELD__AGC_IFC_CCA </item>
//    <item> SFDITEM_FIELD__AGC_IFC_RSSIPOSSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IFC_RSSINEGSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IFC_RSSIDONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AGC_IEN  ---------------------------------
// SVD Line: 57045

unsigned int AGC_IEN __AT (0x4008703C);



// ------------------------------  Field Item: AGC_IEN_RSSIVALID  ---------------------------------
// SVD Line: 57054

//  <item> SFDITEM_FIELD__AGC_IEN_RSSIVALID
//    <name> RSSIVALID </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008703C) RSSIVALID </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IEN ) </loc>
//      <o.0..0> RSSIVALID
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: AGC_IEN_CCA  ------------------------------------
// SVD Line: 57061

//  <item> SFDITEM_FIELD__AGC_IEN_CCA
//    <name> CCA </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008703C) CCA </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IEN ) </loc>
//      <o.2..2> CCA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IEN_RSSIPOSSTEP  --------------------------------
// SVD Line: 57068

//  <item> SFDITEM_FIELD__AGC_IEN_RSSIPOSSTEP
//    <name> RSSIPOSSTEP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008703C) RSSIPOSSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IEN ) </loc>
//      <o.3..3> RSSIPOSSTEP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: AGC_IEN_RSSINEGSTEP  --------------------------------
// SVD Line: 57075

//  <item> SFDITEM_FIELD__AGC_IEN_RSSINEGSTEP
//    <name> RSSINEGSTEP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008703C) RSSINEGSTEP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IEN ) </loc>
//      <o.4..4> RSSINEGSTEP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: AGC_IEN_RSSIDONE  ----------------------------------
// SVD Line: 57082

//  <item> SFDITEM_FIELD__AGC_IEN_RSSIDONE
//    <name> RSSIDONE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008703C) RSSIDONE </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_IEN ) </loc>
//      <o.5..5> RSSIDONE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: AGC_IEN  ------------------------------------
// SVD Line: 57045

//  <rtree> SFDITEM_REG__AGC_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008703C) IEN </i>
//    <loc> ( (unsigned int)((AGC_IEN >> 0) & 0xFFFFFFFF), ((AGC_IEN = (AGC_IEN & ~(0x3DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_IEN_RSSIVALID </item>
//    <item> SFDITEM_FIELD__AGC_IEN_CCA </item>
//    <item> SFDITEM_FIELD__AGC_IEN_RSSIPOSSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IEN_RSSINEGSTEP </item>
//    <item> SFDITEM_FIELD__AGC_IEN_RSSIDONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: AGC_CMD  ---------------------------------
// SVD Line: 57091

unsigned int AGC_CMD __AT (0x40087040);



// ------------------------------  Field Item: AGC_CMD_RSSISTART  ---------------------------------
// SVD Line: 57100

//  <item> SFDITEM_FIELD__AGC_CMD_RSSISTART
//    <name> RSSISTART </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40087040) RSSISTART </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_CMD ) </loc>
//      <o.0..0> RSSISTART
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: AGC_CMD  ------------------------------------
// SVD Line: 57091

//  <rtree> SFDITEM_REG__AGC_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40087040) CMD </i>
//    <loc> ( (unsigned int)((AGC_CMD >> 0) & 0xFFFFFFFF), ((AGC_CMD = (AGC_CMD & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_CMD_RSSISTART </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_GAINRANGE  ------------------------------
// SVD Line: 57109

unsigned int AGC_GAINRANGE __AT (0x40087048);



// ----------------------------  Field Item: AGC_GAINRANGE_MAXGAIN  -------------------------------
// SVD Line: 57118

//  <item> SFDITEM_FIELD__AGC_GAINRANGE_MAXGAIN
//    <name> MAXGAIN </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40087048) MAXGAIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINRANGE >> 0) & 0x7F), ((AGC_GAINRANGE = (AGC_GAINRANGE & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: AGC_GAINRANGE_MINGAIN  -------------------------------
// SVD Line: 57125

//  <item> SFDITEM_FIELD__AGC_GAINRANGE_MINGAIN
//    <name> MINGAIN </name>
//    <rw> 
//    <i> [Bits 13..7] RW (@ 0x40087048) MINGAIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINRANGE >> 7) & 0x7F), ((AGC_GAINRANGE = (AGC_GAINRANGE & ~(0x7FUL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: AGC_GAINRANGE  ---------------------------------
// SVD Line: 57109

//  <rtree> SFDITEM_REG__AGC_GAINRANGE
//    <name> GAINRANGE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087048) GAINRANGE </i>
//    <loc> ( (unsigned int)((AGC_GAINRANGE >> 0) & 0xFFFFFFFF), ((AGC_GAINRANGE = (AGC_GAINRANGE & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_GAINRANGE_MAXGAIN </item>
//    <item> SFDITEM_FIELD__AGC_GAINRANGE_MINGAIN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_GAININDEX  ------------------------------
// SVD Line: 57134

unsigned int AGC_GAININDEX __AT (0x4008704C);



// --------------------------  Field Item: AGC_GAININDEX_NUMINDEXPGA  -----------------------------
// SVD Line: 57143

//  <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXPGA
//    <name> NUMINDEXPGA </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4008704C) NUMINDEXPGA </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAININDEX >> 0) & 0xF), ((AGC_GAININDEX = (AGC_GAININDEX & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_GAININDEX_NUMINDEXDEGEN  ----------------------------
// SVD Line: 57150

//  <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXDEGEN
//    <name> NUMINDEXDEGEN </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4008704C) NUMINDEXDEGEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAININDEX >> 4) & 0x3), ((AGC_GAININDEX = (AGC_GAININDEX & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAININDEX_NUMINDEXSLICES  ----------------------------
// SVD Line: 57157

//  <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXSLICES
//    <name> NUMINDEXSLICES </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x4008704C) NUMINDEXSLICES </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAININDEX >> 6) & 0x7), ((AGC_GAININDEX = (AGC_GAININDEX & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_GAININDEX_NUMINDEXATTEN  ----------------------------
// SVD Line: 57164

//  <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXATTEN
//    <name> NUMINDEXATTEN </name>
//    <rw> 
//    <i> [Bits 13..9] RW (@ 0x4008704C) NUMINDEXATTEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAININDEX >> 9) & 0x1F), ((AGC_GAININDEX = (AGC_GAININDEX & ~(0x1FUL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_GAININDEX_MININDEXPGA  -----------------------------
// SVD Line: 57171

//  <item> SFDITEM_FIELD__AGC_GAININDEX_MININDEXPGA
//    <name> MININDEXPGA </name>
//    <rw> 
//    <i> [Bits 17..14] RW (@ 0x4008704C) MININDEXPGA </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAININDEX >> 14) & 0xF), ((AGC_GAININDEX = (AGC_GAININDEX & ~(0xFUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_GAININDEX_MININDEXDEGEN  ----------------------------
// SVD Line: 57178

//  <item> SFDITEM_FIELD__AGC_GAININDEX_MININDEXDEGEN
//    <name> MININDEXDEGEN </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x4008704C) MININDEXDEGEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAININDEX >> 18) & 0x3), ((AGC_GAININDEX = (AGC_GAININDEX & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: AGC_GAININDEX  ---------------------------------
// SVD Line: 57134

//  <rtree> SFDITEM_REG__AGC_GAININDEX
//    <name> GAININDEX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008704C) GAININDEX </i>
//    <loc> ( (unsigned int)((AGC_GAININDEX >> 0) & 0xFFFFFFFF), ((AGC_GAININDEX = (AGC_GAININDEX & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXPGA </item>
//    <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXDEGEN </item>
//    <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXSLICES </item>
//    <item> SFDITEM_FIELD__AGC_GAININDEX_NUMINDEXATTEN </item>
//    <item> SFDITEM_FIELD__AGC_GAININDEX_MININDEXPGA </item>
//    <item> SFDITEM_FIELD__AGC_GAININDEX_MININDEXDEGEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_SLICECODE  ------------------------------
// SVD Line: 57187

unsigned int AGC_SLICECODE __AT (0x40087050);



// ------------------------  Field Item: AGC_SLICECODE_SLICECODEINDEX0  ---------------------------
// SVD Line: 57196

//  <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX0
//    <name> SLICECODEINDEX0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40087050) SLICECODEINDEX0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_SLICECODE >> 0) & 0xF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_SLICECODE_SLICECODEINDEX1  ---------------------------
// SVD Line: 57203

//  <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX1
//    <name> SLICECODEINDEX1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40087050) SLICECODEINDEX1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_SLICECODE >> 4) & 0xF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_SLICECODE_SLICECODEINDEX2  ---------------------------
// SVD Line: 57210

//  <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX2
//    <name> SLICECODEINDEX2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40087050) SLICECODEINDEX2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_SLICECODE >> 8) & 0xF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_SLICECODE_SLICECODEINDEX3  ---------------------------
// SVD Line: 57217

//  <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX3
//    <name> SLICECODEINDEX3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40087050) SLICECODEINDEX3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_SLICECODE >> 12) & 0xF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_SLICECODE_SLICECODEINDEX4  ---------------------------
// SVD Line: 57224

//  <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX4
//    <name> SLICECODEINDEX4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40087050) SLICECODEINDEX4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_SLICECODE >> 16) & 0xF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_SLICECODE_SLICECODEINDEX5  ---------------------------
// SVD Line: 57231

//  <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX5
//    <name> SLICECODEINDEX5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40087050) SLICECODEINDEX5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_SLICECODE >> 20) & 0xF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_SLICECODE_SLICECODEINDEX6  ---------------------------
// SVD Line: 57238

//  <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX6
//    <name> SLICECODEINDEX6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40087050) SLICECODEINDEX6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_SLICECODE >> 24) & 0xF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: AGC_SLICECODE  ---------------------------------
// SVD Line: 57187

//  <rtree> SFDITEM_REG__AGC_SLICECODE
//    <name> SLICECODE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087050) SLICECODE </i>
//    <loc> ( (unsigned int)((AGC_SLICECODE >> 0) & 0xFFFFFFFF), ((AGC_SLICECODE = (AGC_SLICECODE & ~(0xFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX0 </item>
//    <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX1 </item>
//    <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX2 </item>
//    <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX3 </item>
//    <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX4 </item>
//    <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX5 </item>
//    <item> SFDITEM_FIELD__AGC_SLICECODE_SLICECODEINDEX6 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_ATTENCODE1  -----------------------------
// SVD Line: 57247

unsigned int AGC_ATTENCODE1 __AT (0x40087054);



// -----------------------  Field Item: AGC_ATTENCODE1_ATTENCODEINDEX0  ---------------------------
// SVD Line: 57256

//  <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX0
//    <name> ATTENCODEINDEX0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40087054) ATTENCODEINDEX0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE1 >> 0) & 0xF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE1_ATTENCODEINDEX1  ---------------------------
// SVD Line: 57263

//  <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX1
//    <name> ATTENCODEINDEX1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40087054) ATTENCODEINDEX1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE1 >> 4) & 0xF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE1_ATTENCODEINDEX2  ---------------------------
// SVD Line: 57270

//  <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX2
//    <name> ATTENCODEINDEX2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40087054) ATTENCODEINDEX2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE1 >> 8) & 0xF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE1_ATTENCODEINDEX3  ---------------------------
// SVD Line: 57277

//  <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX3
//    <name> ATTENCODEINDEX3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40087054) ATTENCODEINDEX3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE1 >> 12) & 0xF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE1_ATTENCODEINDEX4  ---------------------------
// SVD Line: 57284

//  <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX4
//    <name> ATTENCODEINDEX4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40087054) ATTENCODEINDEX4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE1 >> 16) & 0xF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE1_ATTENCODEINDEX5  ---------------------------
// SVD Line: 57291

//  <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX5
//    <name> ATTENCODEINDEX5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40087054) ATTENCODEINDEX5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE1 >> 20) & 0xF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE1_ATTENCODEINDEX6  ---------------------------
// SVD Line: 57298

//  <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX6
//    <name> ATTENCODEINDEX6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40087054) ATTENCODEINDEX6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE1 >> 24) & 0xF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_ATTENCODE1  ---------------------------------
// SVD Line: 57247

//  <rtree> SFDITEM_REG__AGC_ATTENCODE1
//    <name> ATTENCODE1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087054) ATTENCODE1 </i>
//    <loc> ( (unsigned int)((AGC_ATTENCODE1 >> 0) & 0xFFFFFFFF), ((AGC_ATTENCODE1 = (AGC_ATTENCODE1 & ~(0xFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX0 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX1 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX2 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX3 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX4 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX5 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE1_ATTENCODEINDEX6 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_ATTENCODE2  -----------------------------
// SVD Line: 57307

unsigned int AGC_ATTENCODE2 __AT (0x40087058);



// -----------------------  Field Item: AGC_ATTENCODE2_ATTENCODEINDEX7  ---------------------------
// SVD Line: 57316

//  <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX7
//    <name> ATTENCODEINDEX7 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40087058) ATTENCODEINDEX7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE2 >> 0) & 0x1F), ((AGC_ATTENCODE2 = (AGC_ATTENCODE2 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE2_ATTENCODEINDEX8  ---------------------------
// SVD Line: 57323

//  <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX8
//    <name> ATTENCODEINDEX8 </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40087058) ATTENCODEINDEX8 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE2 >> 5) & 0x1F), ((AGC_ATTENCODE2 = (AGC_ATTENCODE2 & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE2_ATTENCODEINDEX9  ---------------------------
// SVD Line: 57330

//  <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX9
//    <name> ATTENCODEINDEX9 </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x40087058) ATTENCODEINDEX9 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE2 >> 10) & 0x1F), ((AGC_ATTENCODE2 = (AGC_ATTENCODE2 & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE2_ATTENCODEINDEX10  --------------------------
// SVD Line: 57337

//  <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX10
//    <name> ATTENCODEINDEX10 </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x40087058) ATTENCODEINDEX10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE2 >> 15) & 0x1F), ((AGC_ATTENCODE2 = (AGC_ATTENCODE2 & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE2_ATTENCODEINDEX11  --------------------------
// SVD Line: 57344

//  <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX11
//    <name> ATTENCODEINDEX11 </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x40087058) ATTENCODEINDEX11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE2 >> 20) & 0x1F), ((AGC_ATTENCODE2 = (AGC_ATTENCODE2 & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE2_ATTENCODEINDEX12  --------------------------
// SVD Line: 57351

//  <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX12
//    <name> ATTENCODEINDEX12 </name>
//    <rw> 
//    <i> [Bits 29..25] RW (@ 0x40087058) ATTENCODEINDEX12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE2 >> 25) & 0x1F), ((AGC_ATTENCODE2 = (AGC_ATTENCODE2 & ~(0x1FUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_ATTENCODE2  ---------------------------------
// SVD Line: 57307

//  <rtree> SFDITEM_REG__AGC_ATTENCODE2
//    <name> ATTENCODE2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087058) ATTENCODE2 </i>
//    <loc> ( (unsigned int)((AGC_ATTENCODE2 >> 0) & 0xFFFFFFFF), ((AGC_ATTENCODE2 = (AGC_ATTENCODE2 & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX7 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX8 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX9 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX10 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX11 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE2_ATTENCODEINDEX12 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_ATTENCODE3  -----------------------------
// SVD Line: 57360

unsigned int AGC_ATTENCODE3 __AT (0x4008705C);



// -----------------------  Field Item: AGC_ATTENCODE3_ATTENCODEINDEX13  --------------------------
// SVD Line: 57369

//  <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX13
//    <name> ATTENCODEINDEX13 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4008705C) ATTENCODEINDEX13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE3 >> 0) & 0x1F), ((AGC_ATTENCODE3 = (AGC_ATTENCODE3 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE3_ATTENCODEINDEX14  --------------------------
// SVD Line: 57376

//  <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX14
//    <name> ATTENCODEINDEX14 </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x4008705C) ATTENCODEINDEX14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE3 >> 5) & 0x1F), ((AGC_ATTENCODE3 = (AGC_ATTENCODE3 & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE3_ATTENCODEINDEX15  --------------------------
// SVD Line: 57383

//  <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX15
//    <name> ATTENCODEINDEX15 </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x4008705C) ATTENCODEINDEX15 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE3 >> 10) & 0x1F), ((AGC_ATTENCODE3 = (AGC_ATTENCODE3 & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE3_ATTENCODEINDEX16  --------------------------
// SVD Line: 57390

//  <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX16
//    <name> ATTENCODEINDEX16 </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x4008705C) ATTENCODEINDEX16 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE3 >> 15) & 0x1F), ((AGC_ATTENCODE3 = (AGC_ATTENCODE3 & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE3_ATTENCODEINDEX17  --------------------------
// SVD Line: 57397

//  <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX17
//    <name> ATTENCODEINDEX17 </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x4008705C) ATTENCODEINDEX17 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE3 >> 20) & 0x1F), ((AGC_ATTENCODE3 = (AGC_ATTENCODE3 & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_ATTENCODE3_ATTENCODEINDEX18  --------------------------
// SVD Line: 57404

//  <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX18
//    <name> ATTENCODEINDEX18 </name>
//    <rw> 
//    <i> [Bits 29..25] RW (@ 0x4008705C) ATTENCODEINDEX18 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_ATTENCODE3 >> 25) & 0x1F), ((AGC_ATTENCODE3 = (AGC_ATTENCODE3 & ~(0x1FUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_ATTENCODE3  ---------------------------------
// SVD Line: 57360

//  <rtree> SFDITEM_REG__AGC_ATTENCODE3
//    <name> ATTENCODE3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008705C) ATTENCODE3 </i>
//    <loc> ( (unsigned int)((AGC_ATTENCODE3 >> 0) & 0xFFFFFFFF), ((AGC_ATTENCODE3 = (AGC_ATTENCODE3 & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX13 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX14 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX15 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX16 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX17 </item>
//    <item> SFDITEM_FIELD__AGC_ATTENCODE3_ATTENCODEINDEX18 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_GAINERROR1  -----------------------------
// SVD Line: 57413

unsigned int AGC_GAINERROR1 __AT (0x40087060);



// ------------------------  Field Item: AGC_GAINERROR1_DEGENERRINDEX0  ---------------------------
// SVD Line: 57422

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_DEGENERRINDEX0
//    <name> DEGENERRINDEX0 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40087060) DEGENERRINDEX0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 0) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_DEGENERRINDEX1  ---------------------------
// SVD Line: 57429

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_DEGENERRINDEX1
//    <name> DEGENERRINDEX1 </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40087060) DEGENERRINDEX1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 3) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_DEGENERRINDEX2  ---------------------------
// SVD Line: 57436

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_DEGENERRINDEX2
//    <name> DEGENERRINDEX2 </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x40087060) DEGENERRINDEX2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 6) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_SLICEERRINDEX0  ---------------------------
// SVD Line: 57443

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX0
//    <name> SLICEERRINDEX0 </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x40087060) SLICEERRINDEX0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 9) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_SLICEERRINDEX1  ---------------------------
// SVD Line: 57450

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX1
//    <name> SLICEERRINDEX1 </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40087060) SLICEERRINDEX1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 12) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_SLICEERRINDEX2  ---------------------------
// SVD Line: 57457

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX2
//    <name> SLICEERRINDEX2 </name>
//    <rw> 
//    <i> [Bits 17..15] RW (@ 0x40087060) SLICEERRINDEX2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 15) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_SLICEERRINDEX3  ---------------------------
// SVD Line: 57464

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX3
//    <name> SLICEERRINDEX3 </name>
//    <rw> 
//    <i> [Bits 20..18] RW (@ 0x40087060) SLICEERRINDEX3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 18) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_SLICEERRINDEX4  ---------------------------
// SVD Line: 57471

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX4
//    <name> SLICEERRINDEX4 </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x40087060) SLICEERRINDEX4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 21) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR1_SLICEERRINDEX5  ---------------------------
// SVD Line: 57478

//  <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX5
//    <name> SLICEERRINDEX5 </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40087060) SLICEERRINDEX5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR1 >> 24) & 0x7), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_GAINERROR1  ---------------------------------
// SVD Line: 57413

//  <rtree> SFDITEM_REG__AGC_GAINERROR1
//    <name> GAINERROR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087060) GAINERROR1 </i>
//    <loc> ( (unsigned int)((AGC_GAINERROR1 >> 0) & 0xFFFFFFFF), ((AGC_GAINERROR1 = (AGC_GAINERROR1 & ~(0x7FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_DEGENERRINDEX0 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_DEGENERRINDEX1 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_DEGENERRINDEX2 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX0 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX1 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX2 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX3 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX4 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR1_SLICEERRINDEX5 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_GAINERROR2  -----------------------------
// SVD Line: 57487

unsigned int AGC_GAINERROR2 __AT (0x40087064);



// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX0  ---------------------------
// SVD Line: 57496

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX0
//    <name> ATTENERRINDEX0 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40087064) ATTENERRINDEX0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 0) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX1  ---------------------------
// SVD Line: 57503

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX1
//    <name> ATTENERRINDEX1 </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40087064) ATTENERRINDEX1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 3) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX2  ---------------------------
// SVD Line: 57510

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX2
//    <name> ATTENERRINDEX2 </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x40087064) ATTENERRINDEX2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 6) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX3  ---------------------------
// SVD Line: 57517

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX3
//    <name> ATTENERRINDEX3 </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x40087064) ATTENERRINDEX3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 9) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX4  ---------------------------
// SVD Line: 57524

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX4
//    <name> ATTENERRINDEX4 </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40087064) ATTENERRINDEX4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 12) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX5  ---------------------------
// SVD Line: 57531

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX5
//    <name> ATTENERRINDEX5 </name>
//    <rw> 
//    <i> [Bits 17..15] RW (@ 0x40087064) ATTENERRINDEX5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 15) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX6  ---------------------------
// SVD Line: 57538

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX6
//    <name> ATTENERRINDEX6 </name>
//    <rw> 
//    <i> [Bits 20..18] RW (@ 0x40087064) ATTENERRINDEX6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 18) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX7  ---------------------------
// SVD Line: 57545

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX7
//    <name> ATTENERRINDEX7 </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x40087064) ATTENERRINDEX7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 21) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX8  ---------------------------
// SVD Line: 57552

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX8
//    <name> ATTENERRINDEX8 </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40087064) ATTENERRINDEX8 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 24) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINERROR2_ATTENERRINDEX9  ---------------------------
// SVD Line: 57559

//  <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX9
//    <name> ATTENERRINDEX9 </name>
//    <rw> 
//    <i> [Bits 29..27] RW (@ 0x40087064) ATTENERRINDEX9 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR2 >> 27) & 0x7), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x7UL << 27 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 27 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_GAINERROR2  ---------------------------------
// SVD Line: 57487

//  <rtree> SFDITEM_REG__AGC_GAINERROR2
//    <name> GAINERROR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087064) GAINERROR2 </i>
//    <loc> ( (unsigned int)((AGC_GAINERROR2 >> 0) & 0xFFFFFFFF), ((AGC_GAINERROR2 = (AGC_GAINERROR2 & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX0 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX1 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX2 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX3 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX4 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX5 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX6 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX7 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX8 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR2_ATTENERRINDEX9 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_GAINERROR3  -----------------------------
// SVD Line: 57568

unsigned int AGC_GAINERROR3 __AT (0x40087068);



// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX10  ---------------------------
// SVD Line: 57577

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX10
//    <name> ATTENERRINDEX10 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40087068) ATTENERRINDEX10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 0) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX11  ---------------------------
// SVD Line: 57584

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX11
//    <name> ATTENERRINDEX11 </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40087068) ATTENERRINDEX11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 3) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX12  ---------------------------
// SVD Line: 57591

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX12
//    <name> ATTENERRINDEX12 </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x40087068) ATTENERRINDEX12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 6) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX13  ---------------------------
// SVD Line: 57598

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX13
//    <name> ATTENERRINDEX13 </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x40087068) ATTENERRINDEX13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 9) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX14  ---------------------------
// SVD Line: 57605

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX14
//    <name> ATTENERRINDEX14 </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40087068) ATTENERRINDEX14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 12) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX15  ---------------------------
// SVD Line: 57612

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX15
//    <name> ATTENERRINDEX15 </name>
//    <rw> 
//    <i> [Bits 17..15] RW (@ 0x40087068) ATTENERRINDEX15 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 15) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX16  ---------------------------
// SVD Line: 57619

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX16
//    <name> ATTENERRINDEX16 </name>
//    <rw> 
//    <i> [Bits 20..18] RW (@ 0x40087068) ATTENERRINDEX16 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 18) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINERROR3_ATTENERRINDEX17  ---------------------------
// SVD Line: 57626

//  <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX17
//    <name> ATTENERRINDEX17 </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x40087068) ATTENERRINDEX17 </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINERROR3 >> 21) & 0x7), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_GAINERROR3  ---------------------------------
// SVD Line: 57568

//  <rtree> SFDITEM_REG__AGC_GAINERROR3
//    <name> GAINERROR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087068) GAINERROR3 </i>
//    <loc> ( (unsigned int)((AGC_GAINERROR3 >> 0) & 0xFFFFFFFF), ((AGC_GAINERROR3 = (AGC_GAINERROR3 & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX10 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX11 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX12 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX13 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX14 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX15 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX16 </item>
//    <item> SFDITEM_FIELD__AGC_GAINERROR3_ATTENERRINDEX17 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: AGC_MANUALCTRL  -----------------------------
// SVD Line: 57635

unsigned int AGC_MANUALCTRL __AT (0x4008706C);



// ------------------------  Field Item: AGC_MANUALCTRL_ENMANUALRSTPKD  ---------------------------
// SVD Line: 57644

//  <item> SFDITEM_FIELD__AGC_MANUALCTRL_ENMANUALRSTPKD
//    <name> ENMANUALRSTPKD </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008706C) ENMANUALRSTPKD </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANUALCTRL ) </loc>
//      <o.0..0> ENMANUALRSTPKD
//    </check>
//  </item>
//  


// -------------------------  Field Item: AGC_MANUALCTRL_MANUALRSTPKD  ----------------------------
// SVD Line: 57651

//  <item> SFDITEM_FIELD__AGC_MANUALCTRL_MANUALRSTPKD
//    <name> MANUALRSTPKD </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008706C) MANUALRSTPKD </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANUALCTRL ) </loc>
//      <o.1..1> MANUALRSTPKD
//    </check>
//  </item>
//  


// ----------------------  Field Item: AGC_MANUALCTRL_ENMANUALSLICESSEL  --------------------------
// SVD Line: 57658

//  <item> SFDITEM_FIELD__AGC_MANUALCTRL_ENMANUALSLICESSEL
//    <name> ENMANUALSLICESSEL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008706C) ENMANUALSLICESSEL </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANUALCTRL ) </loc>
//      <o.2..2> ENMANUALSLICESSEL
//    </check>
//  </item>
//  


// -----------------------  Field Item: AGC_MANUALCTRL_MANUALSLICESSEL  ---------------------------
// SVD Line: 57665

//  <item> SFDITEM_FIELD__AGC_MANUALCTRL_MANUALSLICESSEL
//    <name> MANUALSLICESSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008706C) MANUALSLICESSEL </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANUALCTRL ) </loc>
//      <o.3..3> MANUALSLICESSEL
//    </check>
//  </item>
//  


// ----------------------  Field Item: AGC_MANUALCTRL_ENMANUALSLICESDUMP  -------------------------
// SVD Line: 57672

//  <item> SFDITEM_FIELD__AGC_MANUALCTRL_ENMANUALSLICESDUMP
//    <name> ENMANUALSLICESDUMP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008706C) ENMANUALSLICESDUMP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANUALCTRL ) </loc>
//      <o.4..4> ENMANUALSLICESDUMP
//    </check>
//  </item>
//  


// -----------------------  Field Item: AGC_MANUALCTRL_MANUALSLICESDUMP  --------------------------
// SVD Line: 57679

//  <item> SFDITEM_FIELD__AGC_MANUALCTRL_MANUALSLICESDUMP
//    <name> MANUALSLICESDUMP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008706C) MANUALSLICESDUMP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_MANUALCTRL ) </loc>
//      <o.5..5> MANUALSLICESDUMP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: AGC_MANUALCTRL  ---------------------------------
// SVD Line: 57635

//  <rtree> SFDITEM_REG__AGC_MANUALCTRL
//    <name> MANUALCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008706C) MANUALCTRL </i>
//    <loc> ( (unsigned int)((AGC_MANUALCTRL >> 0) & 0xFFFFFFFF), ((AGC_MANUALCTRL = (AGC_MANUALCTRL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_MANUALCTRL_ENMANUALRSTPKD </item>
//    <item> SFDITEM_FIELD__AGC_MANUALCTRL_MANUALRSTPKD </item>
//    <item> SFDITEM_FIELD__AGC_MANUALCTRL_ENMANUALSLICESSEL </item>
//    <item> SFDITEM_FIELD__AGC_MANUALCTRL_MANUALSLICESSEL </item>
//    <item> SFDITEM_FIELD__AGC_MANUALCTRL_ENMANUALSLICESDUMP </item>
//    <item> SFDITEM_FIELD__AGC_MANUALCTRL_MANUALSLICESDUMP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: AGC_GAINSTEPLIM  -----------------------------
// SVD Line: 57688

unsigned int AGC_GAINSTEPLIM __AT (0x40087070);



// ------------------------  Field Item: AGC_GAINSTEPLIM_FASTSTEPDOWN  ----------------------------
// SVD Line: 57697

//  <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_FASTSTEPDOWN
//    <name> FASTSTEPDOWN </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40087070) FASTSTEPDOWN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINSTEPLIM >> 0) & 0x3F), ((AGC_GAINSTEPLIM = (AGC_GAINSTEPLIM & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: AGC_GAINSTEPLIM_EN2XFASTSTEPDOWN  --------------------------
// SVD Line: 57704

//  <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_EN2XFASTSTEPDOWN
//    <name> EN2XFASTSTEPDOWN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40087070) EN2XFASTSTEPDOWN </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_GAINSTEPLIM ) </loc>
//      <o.6..6> EN2XFASTSTEPDOWN
//    </check>
//  </item>
//  


// -------------------------  Field Item: AGC_GAINSTEPLIM_FASTSTEPUP  -----------------------------
// SVD Line: 57711

//  <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_FASTSTEPUP
//    <name> FASTSTEPUP </name>
//    <rw> 
//    <i> [Bits 12..7] RW (@ 0x40087070) FASTSTEPUP </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINSTEPLIM >> 7) & 0x3F), ((AGC_GAINSTEPLIM = (AGC_GAINSTEPLIM & ~(0x3FUL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: AGC_GAINSTEPLIM_EN2XFASTSTEPUP  ---------------------------
// SVD Line: 57718

//  <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_EN2XFASTSTEPUP
//    <name> EN2XFASTSTEPUP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40087070) EN2XFASTSTEPUP </i>
//    <check> 
//      <loc> ( (unsigned int) AGC_GAINSTEPLIM ) </loc>
//      <o.13..13> EN2XFASTSTEPUP
//    </check>
//  </item>
//  


// ------------------------  Field Item: AGC_GAINSTEPLIM_CFLOOPSTEPMAX  ---------------------------
// SVD Line: 57725

//  <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_CFLOOPSTEPMAX
//    <name> CFLOOPSTEPMAX </name>
//    <rw> 
//    <i> [Bits 19..14] RW (@ 0x40087070) CFLOOPSTEPMAX </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_GAINSTEPLIM >> 14) & 0x3F), ((AGC_GAINSTEPLIM = (AGC_GAINSTEPLIM & ~(0x3FUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: AGC_GAINSTEPLIM  --------------------------------
// SVD Line: 57688

//  <rtree> SFDITEM_REG__AGC_GAINSTEPLIM
//    <name> GAINSTEPLIM </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087070) GAINSTEPLIM </i>
//    <loc> ( (unsigned int)((AGC_GAINSTEPLIM >> 0) & 0xFFFFFFFF), ((AGC_GAINSTEPLIM = (AGC_GAINSTEPLIM & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_FASTSTEPDOWN </item>
//    <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_EN2XFASTSTEPDOWN </item>
//    <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_FASTSTEPUP </item>
//    <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_EN2XFASTSTEPUP </item>
//    <item> SFDITEM_FIELD__AGC_GAINSTEPLIM_CFLOOPSTEPMAX </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: AGC_LOOPDEL  -------------------------------
// SVD Line: 57734

unsigned int AGC_LOOPDEL __AT (0x40087074);



// -----------------------------  Field Item: AGC_LOOPDEL_PKDWAIT  --------------------------------
// SVD Line: 57743

//  <item> SFDITEM_FIELD__AGC_LOOPDEL_PKDWAIT
//    <name> PKDWAIT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40087074) PKDWAIT </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_LOOPDEL >> 0) & 0xF), ((AGC_LOOPDEL = (AGC_LOOPDEL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: AGC_LOOPDEL_IFPGADEL  --------------------------------
// SVD Line: 57750

//  <item> SFDITEM_FIELD__AGC_LOOPDEL_IFPGADEL
//    <name> IFPGADEL </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40087074) IFPGADEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_LOOPDEL >> 4) & 0xF), ((AGC_LOOPDEL = (AGC_LOOPDEL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_LOOPDEL_LNASLICESDEL  ------------------------------
// SVD Line: 57757

//  <item> SFDITEM_FIELD__AGC_LOOPDEL_LNASLICESDEL
//    <name> LNASLICESDEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40087074) LNASLICESDEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_LOOPDEL >> 8) & 0xF), ((AGC_LOOPDEL = (AGC_LOOPDEL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AGC_LOOPDEL  ----------------------------------
// SVD Line: 57734

//  <rtree> SFDITEM_REG__AGC_LOOPDEL
//    <name> LOOPDEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087074) LOOPDEL </i>
//    <loc> ( (unsigned int)((AGC_LOOPDEL >> 0) & 0xFFFFFFFF), ((AGC_LOOPDEL = (AGC_LOOPDEL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_LOOPDEL_PKDWAIT </item>
//    <item> SFDITEM_FIELD__AGC_LOOPDEL_IFPGADEL </item>
//    <item> SFDITEM_FIELD__AGC_LOOPDEL_LNASLICESDEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: AGC_MININDEX  ------------------------------
// SVD Line: 57766

unsigned int AGC_MININDEX __AT (0x40087078);



// -------------------------  Field Item: AGC_MININDEX_INDEXMINATTEN  -----------------------------
// SVD Line: 57775

//  <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINATTEN
//    <name> INDEXMINATTEN </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40087078) INDEXMINATTEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MININDEX >> 0) & 0x3F), ((AGC_MININDEX = (AGC_MININDEX & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_MININDEX_INDEXMINSLICES  ----------------------------
// SVD Line: 57782

//  <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINSLICES
//    <name> INDEXMINSLICES </name>
//    <rw> 
//    <i> [Bits 11..6] RW (@ 0x40087078) INDEXMINSLICES </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MININDEX >> 6) & 0x3F), ((AGC_MININDEX = (AGC_MININDEX & ~(0x3FUL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: AGC_MININDEX_INDEXMINDEGEN  -----------------------------
// SVD Line: 57789

//  <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINDEGEN
//    <name> INDEXMINDEGEN </name>
//    <rw> 
//    <i> [Bits 17..12] RW (@ 0x40087078) INDEXMINDEGEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MININDEX >> 12) & 0x3F), ((AGC_MININDEX = (AGC_MININDEX & ~(0x3FUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: AGC_MININDEX_INDEXMINPGA  ------------------------------
// SVD Line: 57796

//  <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINPGA
//    <name> INDEXMINPGA </name>
//    <rw> 
//    <i> [Bits 23..18] RW (@ 0x40087078) INDEXMINPGA </i>
//    <edit> 
//      <loc> ( (unsigned char)((AGC_MININDEX >> 18) & 0x3F), ((AGC_MININDEX = (AGC_MININDEX & ~(0x3FUL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: AGC_MININDEX  ----------------------------------
// SVD Line: 57766

//  <rtree> SFDITEM_REG__AGC_MININDEX
//    <name> MININDEX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40087078) MININDEX </i>
//    <loc> ( (unsigned int)((AGC_MININDEX >> 0) & 0xFFFFFFFF), ((AGC_MININDEX = (AGC_MININDEX & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINATTEN </item>
//    <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINSLICES </item>
//    <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINDEGEN </item>
//    <item> SFDITEM_FIELD__AGC_MININDEX_INDEXMINPGA </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: AGC  --------------------------------------
// SVD Line: 56398

//  <view> AGC
//    <name> AGC </name>
//    <item> SFDITEM_REG__AGC_STATUS0 </item>
//    <item> SFDITEM_REG__AGC_STATUS1 </item>
//    <item> SFDITEM_REG__AGC_RSSI </item>
//    <item> SFDITEM_REG__AGC_FRAMERSSI </item>
//    <item> SFDITEM_REG__AGC_CTRL0 </item>
//    <item> SFDITEM_REG__AGC_CTRL1 </item>
//    <item> SFDITEM_REG__AGC_CTRL2 </item>
//    <item> SFDITEM_REG__AGC_RSSISTEPTHR </item>
//    <item> SFDITEM_REG__AGC_IFPEAKDET </item>
//    <item> SFDITEM_REG__AGC_MANGAIN </item>
//    <item> SFDITEM_REG__AGC_IF </item>
//    <item> SFDITEM_REG__AGC_IFS </item>
//    <item> SFDITEM_REG__AGC_IFC </item>
//    <item> SFDITEM_REG__AGC_IEN </item>
//    <item> SFDITEM_REG__AGC_CMD </item>
//    <item> SFDITEM_REG__AGC_GAINRANGE </item>
//    <item> SFDITEM_REG__AGC_GAININDEX </item>
//    <item> SFDITEM_REG__AGC_SLICECODE </item>
//    <item> SFDITEM_REG__AGC_ATTENCODE1 </item>
//    <item> SFDITEM_REG__AGC_ATTENCODE2 </item>
//    <item> SFDITEM_REG__AGC_ATTENCODE3 </item>
//    <item> SFDITEM_REG__AGC_GAINERROR1 </item>
//    <item> SFDITEM_REG__AGC_GAINERROR2 </item>
//    <item> SFDITEM_REG__AGC_GAINERROR3 </item>
//    <item> SFDITEM_REG__AGC_MANUALCTRL </item>
//    <item> SFDITEM_REG__AGC_GAINSTEPLIM </item>
//    <item> SFDITEM_REG__AGC_LOOPDEL </item>
//    <item> SFDITEM_REG__AGC_MININDEX </item>
//  </view>
//  


// -----------------------------  Register Item Address: CRC_CTRL  --------------------------------
// SVD Line: 57817

unsigned int CRC_CTRL __AT (0x40082000);



// ------------------------------  Field Item: CRC_CTRL_INPUTINV  ---------------------------------
// SVD Line: 57826

//  <item> SFDITEM_FIELD__CRC_CTRL_INPUTINV
//    <name> INPUTINV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40082000) INPUTINV </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CTRL ) </loc>
//      <o.0..0> INPUTINV
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRC_CTRL_OUTPUTINV  ---------------------------------
// SVD Line: 57833

//  <item> SFDITEM_FIELD__CRC_CTRL_OUTPUTINV
//    <name> OUTPUTINV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40082000) OUTPUTINV </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CTRL ) </loc>
//      <o.1..1> OUTPUTINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CRC_CTRL_CRCWIDTH  ---------------------------------
// SVD Line: 57840

//  <item> SFDITEM_FIELD__CRC_CTRL_CRCWIDTH
//    <name> CRCWIDTH </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40082000) CRCWIDTH </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CTRL >> 2) & 0x3), ((CRC_CTRL = (CRC_CTRL & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: CRC_CTRL_INPUTBITORDER  -------------------------------
// SVD Line: 57847

//  <item> SFDITEM_FIELD__CRC_CTRL_INPUTBITORDER
//    <name> INPUTBITORDER </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40082000) INPUTBITORDER </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CTRL ) </loc>
//      <o.5..5> INPUTBITORDER
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CRC_CTRL_BYTEREVERSE  --------------------------------
// SVD Line: 57854

//  <item> SFDITEM_FIELD__CRC_CTRL_BYTEREVERSE
//    <name> BYTEREVERSE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40082000) BYTEREVERSE </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CTRL ) </loc>
//      <o.6..6> BYTEREVERSE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: CRC_CTRL_BITREVERSE  --------------------------------
// SVD Line: 57861

//  <item> SFDITEM_FIELD__CRC_CTRL_BITREVERSE
//    <name> BITREVERSE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40082000) BITREVERSE </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CTRL ) </loc>
//      <o.7..7> BITREVERSE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: CRC_CTRL_BITSPERWORD  --------------------------------
// SVD Line: 57868

//  <item> SFDITEM_FIELD__CRC_CTRL_BITSPERWORD
//    <name> BITSPERWORD </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40082000) BITSPERWORD </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CTRL >> 8) & 0xF), ((CRC_CTRL = (CRC_CTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CRC_CTRL_PADCRCINPUT  --------------------------------
// SVD Line: 57875

//  <item> SFDITEM_FIELD__CRC_CTRL_PADCRCINPUT
//    <name> PADCRCINPUT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40082000) PADCRCINPUT </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CTRL ) </loc>
//      <o.12..12> PADCRCINPUT
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CRC_CTRL  ------------------------------------
// SVD Line: 57817

//  <rtree> SFDITEM_REG__CRC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40082000) CTRL </i>
//    <loc> ( (unsigned int)((CRC_CTRL >> 0) & 0xFFFFFFFF), ((CRC_CTRL = (CRC_CTRL & ~(0x1FEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_CTRL_INPUTINV </item>
//    <item> SFDITEM_FIELD__CRC_CTRL_OUTPUTINV </item>
//    <item> SFDITEM_FIELD__CRC_CTRL_CRCWIDTH </item>
//    <item> SFDITEM_FIELD__CRC_CTRL_INPUTBITORDER </item>
//    <item> SFDITEM_FIELD__CRC_CTRL_BYTEREVERSE </item>
//    <item> SFDITEM_FIELD__CRC_CTRL_BITREVERSE </item>
//    <item> SFDITEM_FIELD__CRC_CTRL_BITSPERWORD </item>
//    <item> SFDITEM_FIELD__CRC_CTRL_PADCRCINPUT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CRC_STATUS  -------------------------------
// SVD Line: 57884

unsigned int CRC_STATUS __AT (0x40082004);



// -------------------------------  Field Item: CRC_STATUS_BUSY  ----------------------------------
// SVD Line: 57893

//  <item> SFDITEM_FIELD__CRC_STATUS_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40082004) BUSY </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_STATUS ) </loc>
//      <o.0..0> BUSY
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CRC_STATUS  -----------------------------------
// SVD Line: 57884

//  <rtree> SFDITEM_REG__CRC_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40082004) STATUS </i>
//    <loc> ( (unsigned int)((CRC_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRC_STATUS_BUSY </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_CMD  ---------------------------------
// SVD Line: 57902

unsigned int CRC_CMD __AT (0x40082008);



// -----------------------------  Field Item: CRC_CMD_INITIALIZE  ---------------------------------
// SVD Line: 57911

//  <item> SFDITEM_FIELD__CRC_CMD_INITIALIZE
//    <name> INITIALIZE </name>
//    <w> 
//    <i> [Bits 5..0] WO (@ 0x40082008) INITIALIZE </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CMD >> 0) & 0x0), ((CRC_CMD = (CRC_CMD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: CRC_CMD  ------------------------------------
// SVD Line: 57902

//  <rtree> SFDITEM_REG__CRC_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40082008) CMD </i>
//    <loc> ( (unsigned int)((CRC_CMD >> 0) & 0xFFFFFFFF), ((CRC_CMD = (CRC_CMD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_CMD_INITIALIZE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: CRC_INPUTDATA  ------------------------------
// SVD Line: 57920

unsigned int CRC_INPUTDATA __AT (0x4008200C);



// ---------------------------  Field Item: CRC_INPUTDATA_INPUTDATA  ------------------------------
// SVD Line: 57929

//  <item> SFDITEM_FIELD__CRC_INPUTDATA_INPUTDATA
//    <name> INPUTDATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008200C) INPUTDATA </i>
//    <edit> 
//      <loc> ( (unsigned short)((CRC_INPUTDATA >> 0) & 0xFFFF), ((CRC_INPUTDATA = (CRC_INPUTDATA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: CRC_INPUTDATA  ---------------------------------
// SVD Line: 57920

//  <rtree> SFDITEM_REG__CRC_INPUTDATA
//    <name> INPUTDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008200C) INPUTDATA </i>
//    <loc> ( (unsigned int)((CRC_INPUTDATA >> 0) & 0xFFFFFFFF), ((CRC_INPUTDATA = (CRC_INPUTDATA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_INPUTDATA_INPUTDATA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_INIT  --------------------------------
// SVD Line: 57938

unsigned int CRC_INIT __AT (0x40082010);



// --------------------------------  Field Item: CRC_INIT_INIT  -----------------------------------
// SVD Line: 57947

//  <item> SFDITEM_FIELD__CRC_INIT_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40082010) INIT </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_INIT >> 0) & 0xFFFFFFFF), ((CRC_INIT = (CRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CRC_INIT  ------------------------------------
// SVD Line: 57938

//  <rtree> SFDITEM_REG__CRC_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40082010) INIT </i>
//    <loc> ( (unsigned int)((CRC_INIT >> 0) & 0xFFFFFFFF), ((CRC_INIT = (CRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_INIT_INIT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_DATA  --------------------------------
// SVD Line: 57956

unsigned int CRC_DATA __AT (0x40082014);



// --------------------------------  Field Item: CRC_DATA_DATA  -----------------------------------
// SVD Line: 57965

//  <item> SFDITEM_FIELD__CRC_DATA_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40082014) DATA </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_DATA >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CRC_DATA  ------------------------------------
// SVD Line: 57956

//  <rtree> SFDITEM_REG__CRC_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40082014) DATA </i>
//    <loc> ( (unsigned int)((CRC_DATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CRC_DATA_DATA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_POLY  --------------------------------
// SVD Line: 57974

unsigned int CRC_POLY __AT (0x40082018);



// --------------------------------  Field Item: CRC_POLY_POLY  -----------------------------------
// SVD Line: 57983

//  <item> SFDITEM_FIELD__CRC_POLY_POLY
//    <name> POLY </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40082018) POLY </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_POLY >> 0) & 0xFFFFFFFF), ((CRC_POLY = (CRC_POLY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CRC_POLY  ------------------------------------
// SVD Line: 57974

//  <rtree> SFDITEM_REG__CRC_POLY
//    <name> POLY </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40082018) POLY </i>
//    <loc> ( (unsigned int)((CRC_POLY >> 0) & 0xFFFFFFFF), ((CRC_POLY = (CRC_POLY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_POLY_POLY </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CRC  --------------------------------------
// SVD Line: 57807

//  <view> CRC
//    <name> CRC </name>
//    <item> SFDITEM_REG__CRC_CTRL </item>
//    <item> SFDITEM_REG__CRC_STATUS </item>
//    <item> SFDITEM_REG__CRC_CMD </item>
//    <item> SFDITEM_REG__CRC_INPUTDATA </item>
//    <item> SFDITEM_REG__CRC_INIT </item>
//    <item> SFDITEM_REG__CRC_DATA </item>
//    <item> SFDITEM_REG__CRC_POLY </item>
//  </view>
//  


// ----------------------------  Register Item Address: FRC_STATUS  -------------------------------
// SVD Line: 58012

unsigned int FRC_STATUS __AT (0x40080000);



// ---------------------------  Field Item: FRC_STATUS_ACTIVETXFCD  -------------------------------
// SVD Line: 58021

//  <item> SFDITEM_FIELD__FRC_STATUS_ACTIVETXFCD
//    <name> ACTIVETXFCD </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40080000) ACTIVETXFCD </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_STATUS ) </loc>
//      <o.0..0> ACTIVETXFCD
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_STATUS_ACTIVERXFCD  -------------------------------
// SVD Line: 58028

//  <item> SFDITEM_FIELD__FRC_STATUS_ACTIVERXFCD
//    <name> ACTIVERXFCD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40080000) ACTIVERXFCD </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_STATUS ) </loc>
//      <o.1..1> ACTIVERXFCD
//    </check>
//  </item>
//  


// ------------------------  Field Item: FRC_STATUS_RXABORTINPROGRESS  ----------------------------
// SVD Line: 58035

//  <item> SFDITEM_FIELD__FRC_STATUS_RXABORTINPROGRESS
//    <name> RXABORTINPROGRESS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40080000) RXABORTINPROGRESS </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_STATUS ) </loc>
//      <o.2..2> RXABORTINPROGRESS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_STATUS_SNIFFDFRAME  -------------------------------
// SVD Line: 58042

//  <item> SFDITEM_FIELD__FRC_STATUS_SNIFFDFRAME
//    <name> SNIFFDFRAME </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40080000) SNIFFDFRAME </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_STATUS ) </loc>
//      <o.3..3> SNIFFDFRAME
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_STATUS_SNIFFDCOUNT  -------------------------------
// SVD Line: 58049

//  <item> SFDITEM_FIELD__FRC_STATUS_SNIFFDCOUNT
//    <name> SNIFFDCOUNT </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40080000) SNIFFDCOUNT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_STATUS >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: FRC_STATUS_RXRAWBLOCKED  ------------------------------
// SVD Line: 58056

//  <item> SFDITEM_FIELD__FRC_STATUS_RXRAWBLOCKED
//    <name> RXRAWBLOCKED </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40080000) RXRAWBLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_STATUS ) </loc>
//      <o.8..8> RXRAWBLOCKED
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FRC_STATUS  -----------------------------------
// SVD Line: 58012

//  <rtree> SFDITEM_REG__FRC_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080000) STATUS </i>
//    <loc> ( (unsigned int)((FRC_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_STATUS_ACTIVETXFCD </item>
//    <item> SFDITEM_FIELD__FRC_STATUS_ACTIVERXFCD </item>
//    <item> SFDITEM_FIELD__FRC_STATUS_RXABORTINPROGRESS </item>
//    <item> SFDITEM_FIELD__FRC_STATUS_SNIFFDFRAME </item>
//    <item> SFDITEM_FIELD__FRC_STATUS_SNIFFDCOUNT </item>
//    <item> SFDITEM_FIELD__FRC_STATUS_RXRAWBLOCKED </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_DFLCTRL  -------------------------------
// SVD Line: 58065

unsigned int FRC_DFLCTRL __AT (0x40080004);



// -----------------------------  Field Item: FRC_DFLCTRL_DFLMODE  --------------------------------
// SVD Line: 58074

//  <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLMODE
//    <name> DFLMODE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40080004) DFLMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_DFLCTRL >> 0) & 0x7), ((FRC_DFLCTRL = (FRC_DFLCTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: FRC_DFLCTRL_DFLBITORDER  ------------------------------
// SVD Line: 58081

//  <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLBITORDER
//    <name> DFLBITORDER </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080004) DFLBITORDER </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_DFLCTRL ) </loc>
//      <o.3..3> DFLBITORDER
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_DFLCTRL_DFLSHIFT  --------------------------------
// SVD Line: 58088

//  <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLSHIFT
//    <name> DFLSHIFT </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40080004) DFLSHIFT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_DFLCTRL >> 4) & 0x7), ((FRC_DFLCTRL = (FRC_DFLCTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FRC_DFLCTRL_DFLOFFSET  -------------------------------
// SVD Line: 58095

//  <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLOFFSET
//    <name> DFLOFFSET </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40080004) DFLOFFSET </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_DFLCTRL >> 8) & 0xF), ((FRC_DFLCTRL = (FRC_DFLCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_DFLCTRL_DFLBITS  --------------------------------
// SVD Line: 58102

//  <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLBITS
//    <name> DFLBITS </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40080004) DFLBITS </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_DFLCTRL >> 12) & 0xF), ((FRC_DFLCTRL = (FRC_DFLCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FRC_DFLCTRL_MINLENGTH  -------------------------------
// SVD Line: 58109

//  <item> SFDITEM_FIELD__FRC_DFLCTRL_MINLENGTH
//    <name> MINLENGTH </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40080004) MINLENGTH </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_DFLCTRL >> 16) & 0xF), ((FRC_DFLCTRL = (FRC_DFLCTRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: FRC_DFLCTRL_DFLINCLUDECRC  -----------------------------
// SVD Line: 58116

//  <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLINCLUDECRC
//    <name> DFLINCLUDECRC </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40080004) DFLINCLUDECRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_DFLCTRL ) </loc>
//      <o.20..20> DFLINCLUDECRC
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FRC_DFLCTRL  ----------------------------------
// SVD Line: 58065

//  <rtree> SFDITEM_REG__FRC_DFLCTRL
//    <name> DFLCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080004) DFLCTRL </i>
//    <loc> ( (unsigned int)((FRC_DFLCTRL >> 0) & 0xFFFFFFFF), ((FRC_DFLCTRL = (FRC_DFLCTRL & ~(0x1FFF7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLMODE </item>
//    <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLBITORDER </item>
//    <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLSHIFT </item>
//    <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLOFFSET </item>
//    <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLBITS </item>
//    <item> SFDITEM_FIELD__FRC_DFLCTRL_MINLENGTH </item>
//    <item> SFDITEM_FIELD__FRC_DFLCTRL_DFLINCLUDECRC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_MAXLENGTH  ------------------------------
// SVD Line: 58125

unsigned int FRC_MAXLENGTH __AT (0x40080008);



// ---------------------------  Field Item: FRC_MAXLENGTH_MAXLENGTH  ------------------------------
// SVD Line: 58134

//  <item> SFDITEM_FIELD__FRC_MAXLENGTH_MAXLENGTH
//    <name> MAXLENGTH </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40080008) MAXLENGTH </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_MAXLENGTH >> 0) & 0xFFF), ((FRC_MAXLENGTH = (FRC_MAXLENGTH & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_MAXLENGTH  ---------------------------------
// SVD Line: 58125

//  <rtree> SFDITEM_REG__FRC_MAXLENGTH
//    <name> MAXLENGTH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080008) MAXLENGTH </i>
//    <loc> ( (unsigned int)((FRC_MAXLENGTH >> 0) & 0xFFFFFFFF), ((FRC_MAXLENGTH = (FRC_MAXLENGTH & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_MAXLENGTH_MAXLENGTH </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_ADDRFILTCTRL  ----------------------------
// SVD Line: 58143

unsigned int FRC_ADDRFILTCTRL __AT (0x4008000C);



// -----------------------------  Field Item: FRC_ADDRFILTCTRL_EN  --------------------------------
// SVD Line: 58152

//  <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008000C) EN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_ADDRFILTCTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_ADDRFILTCTRL_BRDCST00EN  ----------------------------
// SVD Line: 58159

//  <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_BRDCST00EN
//    <name> BRDCST00EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008000C) BRDCST00EN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_ADDRFILTCTRL ) </loc>
//      <o.1..1> BRDCST00EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_ADDRFILTCTRL_BRDCSTFFEN  ----------------------------
// SVD Line: 58166

//  <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_BRDCSTFFEN
//    <name> BRDCSTFFEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008000C) BRDCSTFFEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_ADDRFILTCTRL ) </loc>
//      <o.2..2> BRDCSTFFEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_ADDRFILTCTRL_ADDRESS  ------------------------------
// SVD Line: 58173

//  <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4008000C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_ADDRFILTCTRL >> 8) & 0xFF), ((FRC_ADDRFILTCTRL = (FRC_ADDRFILTCTRL & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_ADDRFILTCTRL  --------------------------------
// SVD Line: 58143

//  <rtree> SFDITEM_REG__FRC_ADDRFILTCTRL
//    <name> ADDRFILTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008000C) ADDRFILTCTRL </i>
//    <loc> ( (unsigned int)((FRC_ADDRFILTCTRL >> 0) & 0xFFFFFFFF), ((FRC_ADDRFILTCTRL = (FRC_ADDRFILTCTRL & ~(0xFF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_EN </item>
//    <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_BRDCST00EN </item>
//    <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_BRDCSTFFEN </item>
//    <item> SFDITEM_FIELD__FRC_ADDRFILTCTRL_ADDRESS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_DATABUFFER  -----------------------------
// SVD Line: 58182

unsigned int FRC_DATABUFFER __AT (0x40080010);



// --------------------------  Field Item: FRC_DATABUFFER_DATABUFFER  -----------------------------
// SVD Line: 58191

//  <item> SFDITEM_FIELD__FRC_DATABUFFER_DATABUFFER
//    <name> DATABUFFER </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40080010) DATABUFFER </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_DATABUFFER >> 0) & 0xFF), ((FRC_DATABUFFER = (FRC_DATABUFFER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_DATABUFFER  ---------------------------------
// SVD Line: 58182

//  <rtree> SFDITEM_REG__FRC_DATABUFFER
//    <name> DATABUFFER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080010) DATABUFFER </i>
//    <loc> ( (unsigned int)((FRC_DATABUFFER >> 0) & 0xFFFFFFFF), ((FRC_DATABUFFER = (FRC_DATABUFFER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_DATABUFFER_DATABUFFER </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_WCNT  --------------------------------
// SVD Line: 58200

unsigned int FRC_WCNT __AT (0x40080014);



// --------------------------------  Field Item: FRC_WCNT_WCNT  -----------------------------------
// SVD Line: 58209

//  <item> SFDITEM_FIELD__FRC_WCNT_WCNT
//    <name> WCNT </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40080014) WCNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_WCNT >> 0) & 0xFFF), ((FRC_WCNT = (FRC_WCNT & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: FRC_WCNT  ------------------------------------
// SVD Line: 58200

//  <rtree> SFDITEM_REG__FRC_WCNT
//    <name> WCNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080014) WCNT </i>
//    <loc> ( (unsigned int)((FRC_WCNT >> 0) & 0xFFFFFFFF), ((FRC_WCNT = (FRC_WCNT & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_WCNT_WCNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_WCNTCMP0  ------------------------------
// SVD Line: 58218

unsigned int FRC_WCNTCMP0 __AT (0x40080018);



// --------------------------  Field Item: FRC_WCNTCMP0_FRAMELENGTH  ------------------------------
// SVD Line: 58227

//  <item> SFDITEM_FIELD__FRC_WCNTCMP0_FRAMELENGTH
//    <name> FRAMELENGTH </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40080018) FRAMELENGTH </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_WCNTCMP0 >> 0) & 0xFFF), ((FRC_WCNTCMP0 = (FRC_WCNTCMP0 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_WCNTCMP0  ----------------------------------
// SVD Line: 58218

//  <rtree> SFDITEM_REG__FRC_WCNTCMP0
//    <name> WCNTCMP0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080018) WCNTCMP0 </i>
//    <loc> ( (unsigned int)((FRC_WCNTCMP0 >> 0) & 0xFFFFFFFF), ((FRC_WCNTCMP0 = (FRC_WCNTCMP0 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_WCNTCMP0_FRAMELENGTH </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_WCNTCMP1  ------------------------------
// SVD Line: 58236

unsigned int FRC_WCNTCMP1 __AT (0x4008001C);



// -------------------------  Field Item: FRC_WCNTCMP1_LENGTHFIELDLOC  ----------------------------
// SVD Line: 58245

//  <item> SFDITEM_FIELD__FRC_WCNTCMP1_LENGTHFIELDLOC
//    <name> LENGTHFIELDLOC </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x4008001C) LENGTHFIELDLOC </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_WCNTCMP1 >> 0) & 0xFFF), ((FRC_WCNTCMP1 = (FRC_WCNTCMP1 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_WCNTCMP1  ----------------------------------
// SVD Line: 58236

//  <rtree> SFDITEM_REG__FRC_WCNTCMP1
//    <name> WCNTCMP1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008001C) WCNTCMP1 </i>
//    <loc> ( (unsigned int)((FRC_WCNTCMP1 >> 0) & 0xFFFFFFFF), ((FRC_WCNTCMP1 = (FRC_WCNTCMP1 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_WCNTCMP1_LENGTHFIELDLOC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_WCNTCMP2  ------------------------------
// SVD Line: 58254

unsigned int FRC_WCNTCMP2 __AT (0x40080020);



// --------------------------  Field Item: FRC_WCNTCMP2_ADDRFIELDLOC  -----------------------------
// SVD Line: 58263

//  <item> SFDITEM_FIELD__FRC_WCNTCMP2_ADDRFIELDLOC
//    <name> ADDRFIELDLOC </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40080020) ADDRFIELDLOC </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_WCNTCMP2 >> 0) & 0xFFF), ((FRC_WCNTCMP2 = (FRC_WCNTCMP2 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_WCNTCMP2  ----------------------------------
// SVD Line: 58254

//  <rtree> SFDITEM_REG__FRC_WCNTCMP2
//    <name> WCNTCMP2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080020) WCNTCMP2 </i>
//    <loc> ( (unsigned int)((FRC_WCNTCMP2 >> 0) & 0xFFFFFFFF), ((FRC_WCNTCMP2 = (FRC_WCNTCMP2 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_WCNTCMP2_ADDRFIELDLOC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_CMD  ---------------------------------
// SVD Line: 58272

unsigned int FRC_CMD __AT (0x40080024);



// -------------------------------  Field Item: FRC_CMD_RXABORT  ----------------------------------
// SVD Line: 58281

//  <item> SFDITEM_FIELD__FRC_CMD_RXABORT
//    <name> RXABORT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40080024) RXABORT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.0..0> RXABORT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_CMD_FRAMEDETRESUME  -------------------------------
// SVD Line: 58288

//  <item> SFDITEM_FIELD__FRC_CMD_FRAMEDETRESUME
//    <name> FRAMEDETRESUME </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40080024) FRAMEDETRESUME </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.1..1> FRAMEDETRESUME
//    </check>
//  </item>
//  


// ------------------------  Field Item: FRC_CMD_INTERLEAVEWRITERESUME  ---------------------------
// SVD Line: 58295

//  <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVEWRITERESUME
//    <name> INTERLEAVEWRITERESUME </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40080024) INTERLEAVEWRITERESUME </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.2..2> INTERLEAVEWRITERESUME
//    </check>
//  </item>
//  


// ------------------------  Field Item: FRC_CMD_INTERLEAVEREADRESUME  ----------------------------
// SVD Line: 58302

//  <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVEREADRESUME
//    <name> INTERLEAVEREADRESUME </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40080024) INTERLEAVEREADRESUME </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.3..3> INTERLEAVEREADRESUME
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_CMD_CONVRESUME  ---------------------------------
// SVD Line: 58309

//  <item> SFDITEM_FIELD__FRC_CMD_CONVRESUME
//    <name> CONVRESUME </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40080024) CONVRESUME </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.4..4> CONVRESUME
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_CMD_CONVTERMINATE  -------------------------------
// SVD Line: 58316

//  <item> SFDITEM_FIELD__FRC_CMD_CONVTERMINATE
//    <name> CONVTERMINATE </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40080024) CONVTERMINATE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.5..5> CONVTERMINATE
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_CMD_TXSUBFRAMERESUME  ------------------------------
// SVD Line: 58323

//  <item> SFDITEM_FIELD__FRC_CMD_TXSUBFRAMERESUME
//    <name> TXSUBFRAMERESUME </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40080024) TXSUBFRAMERESUME </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.6..6> TXSUBFRAMERESUME
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_CMD_INTERLEAVEINIT  -------------------------------
// SVD Line: 58330

//  <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVEINIT
//    <name> INTERLEAVEINIT </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40080024) INTERLEAVEINIT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.7..7> INTERLEAVEINIT
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_CMD_INTERLEAVECNTCLEAR  -----------------------------
// SVD Line: 58337

//  <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVECNTCLEAR
//    <name> INTERLEAVECNTCLEAR </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40080024) INTERLEAVECNTCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.8..8> INTERLEAVECNTCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_CMD_CONVINIT  ----------------------------------
// SVD Line: 58344

//  <item> SFDITEM_FIELD__FRC_CMD_CONVINIT
//    <name> CONVINIT </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40080024) CONVINIT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.9..9> CONVINIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_CMD_BLOCKINIT  ---------------------------------
// SVD Line: 58351

//  <item> SFDITEM_FIELD__FRC_CMD_BLOCKINIT
//    <name> BLOCKINIT </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40080024) BLOCKINIT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.10..10> BLOCKINIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_CMD_STATEINIT  ---------------------------------
// SVD Line: 58358

//  <item> SFDITEM_FIELD__FRC_CMD_STATEINIT
//    <name> STATEINIT </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40080024) STATEINIT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.11..11> STATEINIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_CMD_RXRAWUNBLOCK  --------------------------------
// SVD Line: 58365

//  <item> SFDITEM_FIELD__FRC_CMD_RXRAWUNBLOCK
//    <name> RXRAWUNBLOCK </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40080024) RXRAWUNBLOCK </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CMD ) </loc>
//      <o.12..12> RXRAWUNBLOCK
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: FRC_CMD  ------------------------------------
// SVD Line: 58272

//  <rtree> SFDITEM_REG__FRC_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40080024) CMD </i>
//    <loc> ( (unsigned int)((FRC_CMD >> 0) & 0xFFFFFFFF), ((FRC_CMD = (FRC_CMD & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_CMD_RXABORT </item>
//    <item> SFDITEM_FIELD__FRC_CMD_FRAMEDETRESUME </item>
//    <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVEWRITERESUME </item>
//    <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVEREADRESUME </item>
//    <item> SFDITEM_FIELD__FRC_CMD_CONVRESUME </item>
//    <item> SFDITEM_FIELD__FRC_CMD_CONVTERMINATE </item>
//    <item> SFDITEM_FIELD__FRC_CMD_TXSUBFRAMERESUME </item>
//    <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVEINIT </item>
//    <item> SFDITEM_FIELD__FRC_CMD_INTERLEAVECNTCLEAR </item>
//    <item> SFDITEM_FIELD__FRC_CMD_CONVINIT </item>
//    <item> SFDITEM_FIELD__FRC_CMD_BLOCKINIT </item>
//    <item> SFDITEM_FIELD__FRC_CMD_STATEINIT </item>
//    <item> SFDITEM_FIELD__FRC_CMD_RXRAWUNBLOCK </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_WHITECTRL  ------------------------------
// SVD Line: 58374

unsigned int FRC_WHITECTRL __AT (0x40080028);



// --------------------------  Field Item: FRC_WHITECTRL_FEEDBACKSEL  -----------------------------
// SVD Line: 58383

//  <item> SFDITEM_FIELD__FRC_WHITECTRL_FEEDBACKSEL
//    <name> FEEDBACKSEL </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40080028) FEEDBACKSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_WHITECTRL >> 0) & 0x1F), ((FRC_WHITECTRL = (FRC_WHITECTRL & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: FRC_WHITECTRL_XORFEEDBACK  -----------------------------
// SVD Line: 58390

//  <item> SFDITEM_FIELD__FRC_WHITECTRL_XORFEEDBACK
//    <name> XORFEEDBACK </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40080028) XORFEEDBACK </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_WHITECTRL >> 5) & 0x3), ((FRC_WHITECTRL = (FRC_WHITECTRL & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: FRC_WHITECTRL_SHROUTPUTSEL  -----------------------------
// SVD Line: 58397

//  <item> SFDITEM_FIELD__FRC_WHITECTRL_SHROUTPUTSEL
//    <name> SHROUTPUTSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40080028) SHROUTPUTSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_WHITECTRL >> 8) & 0xF), ((FRC_WHITECTRL = (FRC_WHITECTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: FRC_WHITECTRL_BLOCKERRORCORRECT  --------------------------
// SVD Line: 58404

//  <item> SFDITEM_FIELD__FRC_WHITECTRL_BLOCKERRORCORRECT
//    <name> BLOCKERRORCORRECT </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40080028) BLOCKERRORCORRECT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_WHITECTRL ) </loc>
//      <o.12..12> BLOCKERRORCORRECT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: FRC_WHITECTRL  ---------------------------------
// SVD Line: 58374

//  <rtree> SFDITEM_REG__FRC_WHITECTRL
//    <name> WHITECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080028) WHITECTRL </i>
//    <loc> ( (unsigned int)((FRC_WHITECTRL >> 0) & 0xFFFFFFFF), ((FRC_WHITECTRL = (FRC_WHITECTRL & ~(0x1F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_WHITECTRL_FEEDBACKSEL </item>
//    <item> SFDITEM_FIELD__FRC_WHITECTRL_XORFEEDBACK </item>
//    <item> SFDITEM_FIELD__FRC_WHITECTRL_SHROUTPUTSEL </item>
//    <item> SFDITEM_FIELD__FRC_WHITECTRL_BLOCKERRORCORRECT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_WHITEPOLY  ------------------------------
// SVD Line: 58413

unsigned int FRC_WHITEPOLY __AT (0x4008002C);



// -----------------------------  Field Item: FRC_WHITEPOLY_POLY  ---------------------------------
// SVD Line: 58422

//  <item> SFDITEM_FIELD__FRC_WHITEPOLY_POLY
//    <name> POLY </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008002C) POLY </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_WHITEPOLY >> 0) & 0xFFFF), ((FRC_WHITEPOLY = (FRC_WHITEPOLY & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_WHITEPOLY  ---------------------------------
// SVD Line: 58413

//  <rtree> SFDITEM_REG__FRC_WHITEPOLY
//    <name> WHITEPOLY </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008002C) WHITEPOLY </i>
//    <loc> ( (unsigned int)((FRC_WHITEPOLY >> 0) & 0xFFFFFFFF), ((FRC_WHITEPOLY = (FRC_WHITEPOLY & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_WHITEPOLY_POLY </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_WHITEINIT  ------------------------------
// SVD Line: 58431

unsigned int FRC_WHITEINIT __AT (0x40080030);



// ---------------------------  Field Item: FRC_WHITEINIT_WHITEINIT  ------------------------------
// SVD Line: 58440

//  <item> SFDITEM_FIELD__FRC_WHITEINIT_WHITEINIT
//    <name> WHITEINIT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40080030) WHITEINIT </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_WHITEINIT >> 0) & 0xFFFF), ((FRC_WHITEINIT = (FRC_WHITEINIT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_WHITEINIT  ---------------------------------
// SVD Line: 58431

//  <rtree> SFDITEM_REG__FRC_WHITEINIT
//    <name> WHITEINIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080030) WHITEINIT </i>
//    <loc> ( (unsigned int)((FRC_WHITEINIT >> 0) & 0xFFFFFFFF), ((FRC_WHITEINIT = (FRC_WHITEINIT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_WHITEINIT_WHITEINIT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_FECCTRL  -------------------------------
// SVD Line: 58449

unsigned int FRC_FECCTRL __AT (0x40080034);



// -------------------------  Field Item: FRC_FECCTRL_BLOCKWHITEMODE  -----------------------------
// SVD Line: 58458

//  <item> SFDITEM_FIELD__FRC_FECCTRL_BLOCKWHITEMODE
//    <name> BLOCKWHITEMODE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40080034) BLOCKWHITEMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FECCTRL >> 0) & 0x7), ((FRC_FECCTRL = (FRC_FECCTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FRC_FECCTRL_CONVMODE  --------------------------------
// SVD Line: 58465

//  <item> SFDITEM_FIELD__FRC_FECCTRL_CONVMODE
//    <name> CONVMODE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40080034) CONVMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FECCTRL >> 4) & 0x3), ((FRC_FECCTRL = (FRC_FECCTRL & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: FRC_FECCTRL_CONVDECODEMODE  -----------------------------
// SVD Line: 58472

//  <item> SFDITEM_FIELD__FRC_FECCTRL_CONVDECODEMODE
//    <name> CONVDECODEMODE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080034) CONVDECODEMODE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.6..6> CONVDECODEMODE
//    </check>
//  </item>
//  


// ----------------------  Field Item: FRC_FECCTRL_CONVTRACEBACKDISABLE  --------------------------
// SVD Line: 58479

//  <item> SFDITEM_FIELD__FRC_FECCTRL_CONVTRACEBACKDISABLE
//    <name> CONVTRACEBACKDISABLE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080034) CONVTRACEBACKDISABLE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.7..7> CONVTRACEBACKDISABLE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_FECCTRL_CONVINV  --------------------------------
// SVD Line: 58486

//  <item> SFDITEM_FIELD__FRC_FECCTRL_CONVINV
//    <name> CONVINV </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40080034) CONVINV </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FECCTRL >> 8) & 0x3), ((FRC_FECCTRL = (FRC_FECCTRL & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: FRC_FECCTRL_INTERLEAVEMODE  -----------------------------
// SVD Line: 58493

//  <item> SFDITEM_FIELD__FRC_FECCTRL_INTERLEAVEMODE
//    <name> INTERLEAVEMODE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40080034) INTERLEAVEMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FECCTRL >> 10) & 0x3), ((FRC_FECCTRL = (FRC_FECCTRL & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: FRC_FECCTRL_INTERLEAVEFIRSTINDEX  --------------------------
// SVD Line: 58500

//  <item> SFDITEM_FIELD__FRC_FECCTRL_INTERLEAVEFIRSTINDEX
//    <name> INTERLEAVEFIRSTINDEX </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40080034) INTERLEAVEFIRSTINDEX </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FECCTRL >> 12) & 0xF), ((FRC_FECCTRL = (FRC_FECCTRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: FRC_FECCTRL_INTERLEAVEWIDTH  ----------------------------
// SVD Line: 58507

//  <item> SFDITEM_FIELD__FRC_FECCTRL_INTERLEAVEWIDTH
//    <name> INTERLEAVEWIDTH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40080034) INTERLEAVEWIDTH </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.16..16> INTERLEAVEWIDTH
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_FECCTRL_CONVBUSLOCK  ------------------------------
// SVD Line: 58514

//  <item> SFDITEM_FIELD__FRC_FECCTRL_CONVBUSLOCK
//    <name> CONVBUSLOCK </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40080034) CONVBUSLOCK </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.17..17> CONVBUSLOCK
//    </check>
//  </item>
//  


// ----------------------  Field Item: FRC_FECCTRL_CONVSUBFRAMETERMINATE  -------------------------
// SVD Line: 58521

//  <item> SFDITEM_FIELD__FRC_FECCTRL_CONVSUBFRAMETERMINATE
//    <name> CONVSUBFRAMETERMINATE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40080034) CONVSUBFRAMETERMINATE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.18..18> CONVSUBFRAMETERMINATE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_FECCTRL_SINGLEBLOCK  ------------------------------
// SVD Line: 58528

//  <item> SFDITEM_FIELD__FRC_FECCTRL_SINGLEBLOCK
//    <name> SINGLEBLOCK </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40080034) SINGLEBLOCK </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.19..19> SINGLEBLOCK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_FECCTRL_FORCE2FSK  -------------------------------
// SVD Line: 58535

//  <item> SFDITEM_FIELD__FRC_FECCTRL_FORCE2FSK
//    <name> FORCE2FSK </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40080034) FORCE2FSK </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.20..20> FORCE2FSK
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_FECCTRL_CONVHARDERROR  -----------------------------
// SVD Line: 58542

//  <item> SFDITEM_FIELD__FRC_FECCTRL_CONVHARDERROR
//    <name> CONVHARDERROR </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40080034) CONVHARDERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FECCTRL ) </loc>
//      <o.21..21> CONVHARDERROR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FRC_FECCTRL  ----------------------------------
// SVD Line: 58449

//  <rtree> SFDITEM_REG__FRC_FECCTRL
//    <name> FECCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080034) FECCTRL </i>
//    <loc> ( (unsigned int)((FRC_FECCTRL >> 0) & 0xFFFFFFFF), ((FRC_FECCTRL = (FRC_FECCTRL & ~(0x3FFFF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_BLOCKWHITEMODE </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_CONVMODE </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_CONVDECODEMODE </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_CONVTRACEBACKDISABLE </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_CONVINV </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_INTERLEAVEMODE </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_INTERLEAVEFIRSTINDEX </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_INTERLEAVEWIDTH </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_CONVBUSLOCK </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_CONVSUBFRAMETERMINATE </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_SINGLEBLOCK </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_FORCE2FSK </item>
//    <item> SFDITEM_FIELD__FRC_FECCTRL_CONVHARDERROR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_BLOCKRAMADDR  ----------------------------
// SVD Line: 58551

unsigned int FRC_BLOCKRAMADDR __AT (0x40080038);



// ------------------------  Field Item: FRC_BLOCKRAMADDR_BLOCKRAMADDR  ---------------------------
// SVD Line: 58560

//  <item> SFDITEM_FIELD__FRC_BLOCKRAMADDR_BLOCKRAMADDR
//    <name> BLOCKRAMADDR </name>
//    <rw> 
//    <i> [Bits 14..2] RW (@ 0x40080038) BLOCKRAMADDR </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_BLOCKRAMADDR >> 2) & 0x1FFF), ((FRC_BLOCKRAMADDR = (FRC_BLOCKRAMADDR & ~(0x1FFFUL << 2 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_BLOCKRAMADDR  --------------------------------
// SVD Line: 58551

//  <rtree> SFDITEM_REG__FRC_BLOCKRAMADDR
//    <name> BLOCKRAMADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080038) BLOCKRAMADDR </i>
//    <loc> ( (unsigned int)((FRC_BLOCKRAMADDR >> 0) & 0xFFFFFFFF), ((FRC_BLOCKRAMADDR = (FRC_BLOCKRAMADDR & ~(0x7FFCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_BLOCKRAMADDR_BLOCKRAMADDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_CONVRAMADDR  -----------------------------
// SVD Line: 58569

unsigned int FRC_CONVRAMADDR __AT (0x4008003C);



// -------------------------  Field Item: FRC_CONVRAMADDR_CONVRAMADDR  ----------------------------
// SVD Line: 58578

//  <item> SFDITEM_FIELD__FRC_CONVRAMADDR_CONVRAMADDR
//    <name> CONVRAMADDR </name>
//    <rw> 
//    <i> [Bits 14..2] RW (@ 0x4008003C) CONVRAMADDR </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_CONVRAMADDR >> 2) & 0x1FFF), ((FRC_CONVRAMADDR = (FRC_CONVRAMADDR & ~(0x1FFFUL << 2 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_CONVRAMADDR  --------------------------------
// SVD Line: 58569

//  <rtree> SFDITEM_REG__FRC_CONVRAMADDR
//    <name> CONVRAMADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008003C) CONVRAMADDR </i>
//    <loc> ( (unsigned int)((FRC_CONVRAMADDR >> 0) & 0xFFFFFFFF), ((FRC_CONVRAMADDR = (FRC_CONVRAMADDR & ~(0x7FFCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_CONVRAMADDR_CONVRAMADDR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_CTRL  --------------------------------
// SVD Line: 58587

unsigned int FRC_CTRL __AT (0x40080040);



// ------------------------------  Field Item: FRC_CTRL_RANDOMTX  ---------------------------------
// SVD Line: 58596

//  <item> SFDITEM_FIELD__FRC_CTRL_RANDOMTX
//    <name> RANDOMTX </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080040) RANDOMTX </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CTRL ) </loc>
//      <o.0..0> RANDOMTX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_CTRL_UARTMODE  ---------------------------------
// SVD Line: 58603

//  <item> SFDITEM_FIELD__FRC_CTRL_UARTMODE
//    <name> UARTMODE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40080040) UARTMODE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CTRL ) </loc>
//      <o.1..1> UARTMODE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_CTRL_BITORDER  ---------------------------------
// SVD Line: 58610

//  <item> SFDITEM_FIELD__FRC_CTRL_BITORDER
//    <name> BITORDER </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080040) BITORDER </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CTRL ) </loc>
//      <o.2..2> BITORDER
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_CTRL_TXFCDMODE  ---------------------------------
// SVD Line: 58617

//  <item> SFDITEM_FIELD__FRC_CTRL_TXFCDMODE
//    <name> TXFCDMODE </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40080040) TXFCDMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_CTRL >> 4) & 0x3), ((FRC_CTRL = (FRC_CTRL & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_CTRL_RXFCDMODE  ---------------------------------
// SVD Line: 58624

//  <item> SFDITEM_FIELD__FRC_CTRL_RXFCDMODE
//    <name> RXFCDMODE </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40080040) RXFCDMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_CTRL >> 6) & 0x3), ((FRC_CTRL = (FRC_CTRL & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FRC_CTRL_BITSPERWORD  --------------------------------
// SVD Line: 58631

//  <item> SFDITEM_FIELD__FRC_CTRL_BITSPERWORD
//    <name> BITSPERWORD </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40080040) BITSPERWORD </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_CTRL >> 8) & 0x7), ((FRC_CTRL = (FRC_CTRL & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_CTRL_RATESELECT  --------------------------------
// SVD Line: 58638

//  <item> SFDITEM_FIELD__FRC_CTRL_RATESELECT
//    <name> RATESELECT </name>
//    <rw> 
//    <i> [Bits 12..11] RW (@ 0x40080040) RATESELECT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_CTRL >> 11) & 0x3), ((FRC_CTRL = (FRC_CTRL & ~(0x3UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_CTRL_TXPREFETCH  --------------------------------
// SVD Line: 58645

//  <item> SFDITEM_FIELD__FRC_CTRL_TXPREFETCH
//    <name> TXPREFETCH </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40080040) TXPREFETCH </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CTRL ) </loc>
//      <o.13..13> TXPREFETCH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_CTRL_SEQHANDSHAKE  -------------------------------
// SVD Line: 58652

//  <item> SFDITEM_FIELD__FRC_CTRL_SEQHANDSHAKE
//    <name> SEQHANDSHAKE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40080040) SEQHANDSHAKE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CTRL ) </loc>
//      <o.16..16> SEQHANDSHAKE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_CTRL_PRBSTEST  ---------------------------------
// SVD Line: 58659

//  <item> SFDITEM_FIELD__FRC_CTRL_PRBSTEST
//    <name> PRBSTEST </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40080040) PRBSTEST </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CTRL ) </loc>
//      <o.17..17> PRBSTEST
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FRC_CTRL  ------------------------------------
// SVD Line: 58587

//  <rtree> SFDITEM_REG__FRC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080040) CTRL </i>
//    <loc> ( (unsigned int)((FRC_CTRL >> 0) & 0xFFFFFFFF), ((FRC_CTRL = (FRC_CTRL & ~(0x33FF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x33FF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_CTRL_RANDOMTX </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_UARTMODE </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_BITORDER </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_TXFCDMODE </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_RXFCDMODE </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_BITSPERWORD </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_RATESELECT </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_TXPREFETCH </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_SEQHANDSHAKE </item>
//    <item> SFDITEM_FIELD__FRC_CTRL_PRBSTEST </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: FRC_RXCTRL  -------------------------------
// SVD Line: 58668

unsigned int FRC_RXCTRL __AT (0x40080044);



// -----------------------------  Field Item: FRC_RXCTRL_STORECRC  --------------------------------
// SVD Line: 58677

//  <item> SFDITEM_FIELD__FRC_RXCTRL_STORECRC
//    <name> STORECRC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080044) STORECRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RXCTRL ) </loc>
//      <o.0..0> STORECRC
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_RXCTRL_ACCEPTCRCERRORS  -----------------------------
// SVD Line: 58684

//  <item> SFDITEM_FIELD__FRC_RXCTRL_ACCEPTCRCERRORS
//    <name> ACCEPTCRCERRORS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40080044) ACCEPTCRCERRORS </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RXCTRL ) </loc>
//      <o.1..1> ACCEPTCRCERRORS
//    </check>
//  </item>
//  


// ------------------------  Field Item: FRC_RXCTRL_ACCEPTBLOCKERRORS  ----------------------------
// SVD Line: 58691

//  <item> SFDITEM_FIELD__FRC_RXCTRL_ACCEPTBLOCKERRORS
//    <name> ACCEPTBLOCKERRORS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080044) ACCEPTBLOCKERRORS </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RXCTRL ) </loc>
//      <o.2..2> ACCEPTBLOCKERRORS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_RXCTRL_TRACKABFRAME  ------------------------------
// SVD Line: 58698

//  <item> SFDITEM_FIELD__FRC_RXCTRL_TRACKABFRAME
//    <name> TRACKABFRAME </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40080044) TRACKABFRAME </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RXCTRL ) </loc>
//      <o.3..3> TRACKABFRAME
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_RXCTRL_BUFCLEAR  --------------------------------
// SVD Line: 58705

//  <item> SFDITEM_FIELD__FRC_RXCTRL_BUFCLEAR
//    <name> BUFCLEAR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40080044) BUFCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RXCTRL ) </loc>
//      <o.4..4> BUFCLEAR
//    </check>
//  </item>
//  


// -----------------------  Field Item: FRC_RXCTRL_BUFRESTOREFRAMEERROR  --------------------------
// SVD Line: 58712

//  <item> SFDITEM_FIELD__FRC_RXCTRL_BUFRESTOREFRAMEERROR
//    <name> BUFRESTOREFRAMEERROR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080044) BUFRESTOREFRAMEERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RXCTRL ) </loc>
//      <o.5..5> BUFRESTOREFRAMEERROR
//    </check>
//  </item>
//  


// -----------------------  Field Item: FRC_RXCTRL_BUFRESTORERXABORTED  ---------------------------
// SVD Line: 58719

//  <item> SFDITEM_FIELD__FRC_RXCTRL_BUFRESTORERXABORTED
//    <name> BUFRESTORERXABORTED </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40080044) BUFRESTORERXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RXCTRL ) </loc>
//      <o.6..6> BUFRESTORERXABORTED
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: FRC_RXCTRL  -----------------------------------
// SVD Line: 58668

//  <rtree> SFDITEM_REG__FRC_RXCTRL
//    <name> RXCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080044) RXCTRL </i>
//    <loc> ( (unsigned int)((FRC_RXCTRL >> 0) & 0xFFFFFFFF), ((FRC_RXCTRL = (FRC_RXCTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_RXCTRL_STORECRC </item>
//    <item> SFDITEM_FIELD__FRC_RXCTRL_ACCEPTCRCERRORS </item>
//    <item> SFDITEM_FIELD__FRC_RXCTRL_ACCEPTBLOCKERRORS </item>
//    <item> SFDITEM_FIELD__FRC_RXCTRL_TRACKABFRAME </item>
//    <item> SFDITEM_FIELD__FRC_RXCTRL_BUFCLEAR </item>
//    <item> SFDITEM_FIELD__FRC_RXCTRL_BUFRESTOREFRAMEERROR </item>
//    <item> SFDITEM_FIELD__FRC_RXCTRL_BUFRESTORERXABORTED </item>
//  </rtree>
//  


// -----------------------  Register Item Address: FRC_TRAILTXDATACTRL  ---------------------------
// SVD Line: 58728

unsigned int FRC_TRAILTXDATACTRL __AT (0x40080048);



// -----------------------  Field Item: FRC_TRAILTXDATACTRL_TRAILTXDATA  --------------------------
// SVD Line: 58737

//  <item> SFDITEM_FIELD__FRC_TRAILTXDATACTRL_TRAILTXDATA
//    <name> TRAILTXDATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40080048) TRAILTXDATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_TRAILTXDATACTRL >> 0) & 0xFF), ((FRC_TRAILTXDATACTRL = (FRC_TRAILTXDATACTRL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: FRC_TRAILTXDATACTRL_TRAILTXDATACNT  -------------------------
// SVD Line: 58744

//  <item> SFDITEM_FIELD__FRC_TRAILTXDATACTRL_TRAILTXDATACNT
//    <name> TRAILTXDATACNT </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40080048) TRAILTXDATACNT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_TRAILTXDATACTRL >> 8) & 0x7), ((FRC_TRAILTXDATACTRL = (FRC_TRAILTXDATACTRL & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: FRC_TRAILTXDATACTRL_TRAILTXDATAFORCE  ------------------------
// SVD Line: 58751

//  <item> SFDITEM_FIELD__FRC_TRAILTXDATACTRL_TRAILTXDATAFORCE
//    <name> TRAILTXDATAFORCE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40080048) TRAILTXDATAFORCE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_TRAILTXDATACTRL ) </loc>
//      <o.11..11> TRAILTXDATAFORCE
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: FRC_TRAILTXDATACTRL  ------------------------------
// SVD Line: 58728

//  <rtree> SFDITEM_REG__FRC_TRAILTXDATACTRL
//    <name> TRAILTXDATACTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080048) TRAILTXDATACTRL </i>
//    <loc> ( (unsigned int)((FRC_TRAILTXDATACTRL >> 0) & 0xFFFFFFFF), ((FRC_TRAILTXDATACTRL = (FRC_TRAILTXDATACTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_TRAILTXDATACTRL_TRAILTXDATA </item>
//    <item> SFDITEM_FIELD__FRC_TRAILTXDATACTRL_TRAILTXDATACNT </item>
//    <item> SFDITEM_FIELD__FRC_TRAILTXDATACTRL_TRAILTXDATAFORCE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_TRAILRXDATA  -----------------------------
// SVD Line: 58760

unsigned int FRC_TRAILRXDATA __AT (0x4008004C);



// ----------------------------  Field Item: FRC_TRAILRXDATA_RSSI  --------------------------------
// SVD Line: 58769

//  <item> SFDITEM_FIELD__FRC_TRAILRXDATA_RSSI
//    <name> RSSI </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008004C) RSSI </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_TRAILRXDATA ) </loc>
//      <o.0..0> RSSI
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_TRAILRXDATA_CRCOK  -------------------------------
// SVD Line: 58776

//  <item> SFDITEM_FIELD__FRC_TRAILRXDATA_CRCOK
//    <name> CRCOK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008004C) CRCOK </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_TRAILRXDATA ) </loc>
//      <o.1..1> CRCOK
//    </check>
//  </item>
//  


// -----------------------  Field Item: FRC_TRAILRXDATA_PROTIMERCC0BASE  --------------------------
// SVD Line: 58783

//  <item> SFDITEM_FIELD__FRC_TRAILRXDATA_PROTIMERCC0BASE
//    <name> PROTIMERCC0BASE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008004C) PROTIMERCC0BASE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_TRAILRXDATA ) </loc>
//      <o.2..2> PROTIMERCC0BASE
//    </check>
//  </item>
//  


// ----------------------  Field Item: FRC_TRAILRXDATA_PROTIMERCC0WRAPL  --------------------------
// SVD Line: 58790

//  <item> SFDITEM_FIELD__FRC_TRAILRXDATA_PROTIMERCC0WRAPL
//    <name> PROTIMERCC0WRAPL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008004C) PROTIMERCC0WRAPL </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_TRAILRXDATA ) </loc>
//      <o.3..3> PROTIMERCC0WRAPL
//    </check>
//  </item>
//  


// ----------------------  Field Item: FRC_TRAILRXDATA_PROTIMERCC0WRAPH  --------------------------
// SVD Line: 58797

//  <item> SFDITEM_FIELD__FRC_TRAILRXDATA_PROTIMERCC0WRAPH
//    <name> PROTIMERCC0WRAPH </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008004C) PROTIMERCC0WRAPH </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_TRAILRXDATA ) </loc>
//      <o.4..4> PROTIMERCC0WRAPH
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_TRAILRXDATA_RTCSTAMP  ------------------------------
// SVD Line: 58804

//  <item> SFDITEM_FIELD__FRC_TRAILRXDATA_RTCSTAMP
//    <name> RTCSTAMP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008004C) RTCSTAMP </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_TRAILRXDATA ) </loc>
//      <o.5..5> RTCSTAMP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: FRC_TRAILRXDATA  --------------------------------
// SVD Line: 58760

//  <rtree> SFDITEM_REG__FRC_TRAILRXDATA
//    <name> TRAILRXDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008004C) TRAILRXDATA </i>
//    <loc> ( (unsigned int)((FRC_TRAILRXDATA >> 0) & 0xFFFFFFFF), ((FRC_TRAILRXDATA = (FRC_TRAILRXDATA & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_TRAILRXDATA_RSSI </item>
//    <item> SFDITEM_FIELD__FRC_TRAILRXDATA_CRCOK </item>
//    <item> SFDITEM_FIELD__FRC_TRAILRXDATA_PROTIMERCC0BASE </item>
//    <item> SFDITEM_FIELD__FRC_TRAILRXDATA_PROTIMERCC0WRAPL </item>
//    <item> SFDITEM_FIELD__FRC_TRAILRXDATA_PROTIMERCC0WRAPH </item>
//    <item> SFDITEM_FIELD__FRC_TRAILRXDATA_RTCSTAMP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_SCNT  --------------------------------
// SVD Line: 58813

unsigned int FRC_SCNT __AT (0x40080050);



// --------------------------------  Field Item: FRC_SCNT_SCNT  -----------------------------------
// SVD Line: 58822

//  <item> SFDITEM_FIELD__FRC_SCNT_SCNT
//    <name> SCNT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40080050) SCNT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_SCNT >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: FRC_SCNT  ------------------------------------
// SVD Line: 58813

//  <rtree> SFDITEM_REG__FRC_SCNT
//    <name> SCNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080050) SCNT </i>
//    <loc> ( (unsigned int)((FRC_SCNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_SCNT_SCNT </item>
//  </rtree>
//  


// ------------------------  Register Item Address: FRC_CONVGENERATOR  ----------------------------
// SVD Line: 58831

unsigned int FRC_CONVGENERATOR __AT (0x40080054);



// ------------------------  Field Item: FRC_CONVGENERATOR_GENERATOR0  ----------------------------
// SVD Line: 58840

//  <item> SFDITEM_FIELD__FRC_CONVGENERATOR_GENERATOR0
//    <name> GENERATOR0 </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40080054) GENERATOR0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_CONVGENERATOR >> 0) & 0x7F), ((FRC_CONVGENERATOR = (FRC_CONVGENERATOR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: FRC_CONVGENERATOR_GENERATOR1  ----------------------------
// SVD Line: 58847

//  <item> SFDITEM_FIELD__FRC_CONVGENERATOR_GENERATOR1
//    <name> GENERATOR1 </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x40080054) GENERATOR1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_CONVGENERATOR >> 8) & 0x7F), ((FRC_CONVGENERATOR = (FRC_CONVGENERATOR & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: FRC_CONVGENERATOR_RECURSIVE  ----------------------------
// SVD Line: 58854

//  <item> SFDITEM_FIELD__FRC_CONVGENERATOR_RECURSIVE
//    <name> RECURSIVE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40080054) RECURSIVE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CONVGENERATOR ) </loc>
//      <o.16..16> RECURSIVE
//    </check>
//  </item>
//  


// -----------------------  Field Item: FRC_CONVGENERATOR_NONSYSTEMATIC  --------------------------
// SVD Line: 58861

//  <item> SFDITEM_FIELD__FRC_CONVGENERATOR_NONSYSTEMATIC
//    <name> NONSYSTEMATIC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40080054) NONSYSTEMATIC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_CONVGENERATOR ) </loc>
//      <o.17..17> NONSYSTEMATIC
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: FRC_CONVGENERATOR  -------------------------------
// SVD Line: 58831

//  <rtree> SFDITEM_REG__FRC_CONVGENERATOR
//    <name> CONVGENERATOR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080054) CONVGENERATOR </i>
//    <loc> ( (unsigned int)((FRC_CONVGENERATOR >> 0) & 0xFFFFFFFF), ((FRC_CONVGENERATOR = (FRC_CONVGENERATOR & ~(0x37F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x37F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_CONVGENERATOR_GENERATOR0 </item>
//    <item> SFDITEM_FIELD__FRC_CONVGENERATOR_GENERATOR1 </item>
//    <item> SFDITEM_FIELD__FRC_CONVGENERATOR_RECURSIVE </item>
//    <item> SFDITEM_FIELD__FRC_CONVGENERATOR_NONSYSTEMATIC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_PUNCTCTRL  ------------------------------
// SVD Line: 58870

unsigned int FRC_PUNCTCTRL __AT (0x40080058);



// ----------------------------  Field Item: FRC_PUNCTCTRL_PUNCT0  --------------------------------
// SVD Line: 58879

//  <item> SFDITEM_FIELD__FRC_PUNCTCTRL_PUNCT0
//    <name> PUNCT0 </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40080058) PUNCT0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_PUNCTCTRL >> 0) & 0x7F), ((FRC_PUNCTCTRL = (FRC_PUNCTCTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FRC_PUNCTCTRL_PUNCT1  --------------------------------
// SVD Line: 58886

//  <item> SFDITEM_FIELD__FRC_PUNCTCTRL_PUNCT1
//    <name> PUNCT1 </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x40080058) PUNCT1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_PUNCTCTRL >> 8) & 0x7F), ((FRC_PUNCTCTRL = (FRC_PUNCTCTRL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_PUNCTCTRL  ---------------------------------
// SVD Line: 58870

//  <rtree> SFDITEM_REG__FRC_PUNCTCTRL
//    <name> PUNCTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080058) PUNCTCTRL </i>
//    <loc> ( (unsigned int)((FRC_PUNCTCTRL >> 0) & 0xFFFFFFFF), ((FRC_PUNCTCTRL = (FRC_PUNCTCTRL & ~(0x7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_PUNCTCTRL_PUNCT0 </item>
//    <item> SFDITEM_FIELD__FRC_PUNCTCTRL_PUNCT1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_PAUSECTRL  ------------------------------
// SVD Line: 58895

unsigned int FRC_PAUSECTRL __AT (0x4008005C);



// ------------------------  Field Item: FRC_PAUSECTRL_FRAMEDETPAUSEEN  ---------------------------
// SVD Line: 58904

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_FRAMEDETPAUSEEN
//    <name> FRAMEDETPAUSEEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008005C) FRAMEDETPAUSEEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_PAUSECTRL ) </loc>
//      <o.0..0> FRAMEDETPAUSEEN
//    </check>
//  </item>
//  


// -------------------  Field Item: FRC_PAUSECTRL_TXINTERLEAVEWRITEPAUSEEN  -----------------------
// SVD Line: 58911

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_TXINTERLEAVEWRITEPAUSEEN
//    <name> TXINTERLEAVEWRITEPAUSEEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008005C) TXINTERLEAVEWRITEPAUSEEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_PAUSECTRL ) </loc>
//      <o.1..1> TXINTERLEAVEWRITEPAUSEEN
//    </check>
//  </item>
//  


// -------------------  Field Item: FRC_PAUSECTRL_RXINTERLEAVEWRITEPAUSEEN  -----------------------
// SVD Line: 58918

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_RXINTERLEAVEWRITEPAUSEEN
//    <name> RXINTERLEAVEWRITEPAUSEEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008005C) RXINTERLEAVEWRITEPAUSEEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_PAUSECTRL ) </loc>
//      <o.2..2> RXINTERLEAVEWRITEPAUSEEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: FRC_PAUSECTRL_INTERLEAVEREADPAUSEEN  ------------------------
// SVD Line: 58925

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_INTERLEAVEREADPAUSEEN
//    <name> INTERLEAVEREADPAUSEEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008005C) INTERLEAVEREADPAUSEEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_PAUSECTRL ) </loc>
//      <o.3..3> INTERLEAVEREADPAUSEEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: FRC_PAUSECTRL_TXSUBFRAMEPAUSEEN  --------------------------
// SVD Line: 58932

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_TXSUBFRAMEPAUSEEN
//    <name> TXSUBFRAMEPAUSEEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008005C) TXSUBFRAMEPAUSEEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_PAUSECTRL ) </loc>
//      <o.4..4> TXSUBFRAMEPAUSEEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_PAUSECTRL_CONVPAUSECNT  -----------------------------
// SVD Line: 58939

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_CONVPAUSECNT
//    <name> CONVPAUSECNT </name>
//    <rw> 
//    <i> [Bits 10..5] RW (@ 0x4008005C) CONVPAUSECNT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_PAUSECTRL >> 5) & 0x3F), ((FRC_PAUSECTRL = (FRC_PAUSECTRL & ~(0x3FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: FRC_PAUSECTRL_INTERLEAVEWRITEPAUSECNT  -----------------------
// SVD Line: 58946

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_INTERLEAVEWRITEPAUSECNT
//    <name> INTERLEAVEWRITEPAUSECNT </name>
//    <rw> 
//    <i> [Bits 15..11] RW (@ 0x4008005C) INTERLEAVEWRITEPAUSECNT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_PAUSECTRL >> 11) & 0x1F), ((FRC_PAUSECTRL = (FRC_PAUSECTRL & ~(0x1FUL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: FRC_PAUSECTRL_INTERLEAVEREADPAUSECNT  ------------------------
// SVD Line: 58953

//  <item> SFDITEM_FIELD__FRC_PAUSECTRL_INTERLEAVEREADPAUSECNT
//    <name> INTERLEAVEREADPAUSECNT </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x4008005C) INTERLEAVEREADPAUSECNT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_PAUSECTRL >> 16) & 0x1F), ((FRC_PAUSECTRL = (FRC_PAUSECTRL & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_PAUSECTRL  ---------------------------------
// SVD Line: 58895

//  <rtree> SFDITEM_REG__FRC_PAUSECTRL
//    <name> PAUSECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008005C) PAUSECTRL </i>
//    <loc> ( (unsigned int)((FRC_PAUSECTRL >> 0) & 0xFFFFFFFF), ((FRC_PAUSECTRL = (FRC_PAUSECTRL & ~(0x1FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_FRAMEDETPAUSEEN </item>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_TXINTERLEAVEWRITEPAUSEEN </item>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_RXINTERLEAVEWRITEPAUSEEN </item>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_INTERLEAVEREADPAUSEEN </item>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_TXSUBFRAMEPAUSEEN </item>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_CONVPAUSECNT </item>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_INTERLEAVEWRITEPAUSECNT </item>
//    <item> SFDITEM_FIELD__FRC_PAUSECTRL_INTERLEAVEREADPAUSECNT </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: FRC_IF  ---------------------------------
// SVD Line: 58962

unsigned int FRC_IF __AT (0x40080060);



// --------------------------------  Field Item: FRC_IF_TXDONE  -----------------------------------
// SVD Line: 58971

//  <item> SFDITEM_FIELD__FRC_IF_TXDONE
//    <name> TXDONE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40080060) TXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.0..0> TXDONE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_IF_TXAFTERFRAMEDONE  ------------------------------
// SVD Line: 58978

//  <item> SFDITEM_FIELD__FRC_IF_TXAFTERFRAMEDONE
//    <name> TXAFTERFRAMEDONE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40080060) TXAFTERFRAMEDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.1..1> TXAFTERFRAMEDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_TXABORTED  ----------------------------------
// SVD Line: 58985

//  <item> SFDITEM_FIELD__FRC_IF_TXABORTED
//    <name> TXABORTED </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40080060) TXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.2..2> TXABORTED
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: FRC_IF_TXUF  ------------------------------------
// SVD Line: 58992

//  <item> SFDITEM_FIELD__FRC_IF_TXUF
//    <name> TXUF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40080060) TXUF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.3..3> TXUF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IF_RXDONE  -----------------------------------
// SVD Line: 58999

//  <item> SFDITEM_FIELD__FRC_IF_RXDONE
//    <name> RXDONE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40080060) RXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.4..4> RXDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_RXABORTED  ----------------------------------
// SVD Line: 59006

//  <item> SFDITEM_FIELD__FRC_IF_RXABORTED
//    <name> RXABORTED </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40080060) RXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.5..5> RXABORTED
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_FRAMEERROR  ---------------------------------
// SVD Line: 59013

//  <item> SFDITEM_FIELD__FRC_IF_FRAMEERROR
//    <name> FRAMEERROR </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40080060) FRAMEERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.6..6> FRAMEERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_BLOCKERROR  ---------------------------------
// SVD Line: 59020

//  <item> SFDITEM_FIELD__FRC_IF_BLOCKERROR
//    <name> BLOCKERROR </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40080060) BLOCKERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.7..7> BLOCKERROR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: FRC_IF_RXOF  ------------------------------------
// SVD Line: 59027

//  <item> SFDITEM_FIELD__FRC_IF_RXOF
//    <name> RXOF </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40080060) RXOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.8..8> RXOF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IF_WCNTCMP0  ----------------------------------
// SVD Line: 59034

//  <item> SFDITEM_FIELD__FRC_IF_WCNTCMP0
//    <name> WCNTCMP0 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40080060) WCNTCMP0 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.9..9> WCNTCMP0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IF_WCNTCMP1  ----------------------------------
// SVD Line: 59041

//  <item> SFDITEM_FIELD__FRC_IF_WCNTCMP1
//    <name> WCNTCMP1 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40080060) WCNTCMP1 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.10..10> WCNTCMP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IF_WCNTCMP2  ----------------------------------
// SVD Line: 59048

//  <item> SFDITEM_FIELD__FRC_IF_WCNTCMP2
//    <name> WCNTCMP2 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40080060) WCNTCMP2 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.11..11> WCNTCMP2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_ADDRERROR  ----------------------------------
// SVD Line: 59055

//  <item> SFDITEM_FIELD__FRC_IF_ADDRERROR
//    <name> ADDRERROR </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40080060) ADDRERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.12..12> ADDRERROR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IF_BUSERROR  ----------------------------------
// SVD Line: 59062

//  <item> SFDITEM_FIELD__FRC_IF_BUSERROR
//    <name> BUSERROR </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40080060) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.13..13> BUSERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_RXRAWEVENT  ---------------------------------
// SVD Line: 59069

//  <item> SFDITEM_FIELD__FRC_IF_RXRAWEVENT
//    <name> RXRAWEVENT </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40080060) RXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.14..14> RXRAWEVENT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_TXRAWEVENT  ---------------------------------
// SVD Line: 59076

//  <item> SFDITEM_FIELD__FRC_IF_TXRAWEVENT
//    <name> TXRAWEVENT </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40080060) TXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.15..15> TXRAWEVENT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IF_SNIFFOF  -----------------------------------
// SVD Line: 59083

//  <item> SFDITEM_FIELD__FRC_IF_SNIFFOF
//    <name> SNIFFOF </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40080060) SNIFFOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.16..16> SNIFFOF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_IF_LVDSWILLERROR  --------------------------------
// SVD Line: 59090

//  <item> SFDITEM_FIELD__FRC_IF_LVDSWILLERROR
//    <name> LVDSWILLERROR </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x40080060) LVDSWILLERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.17..17> LVDSWILLERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_LVDSERROR  ----------------------------------
// SVD Line: 59097

//  <item> SFDITEM_FIELD__FRC_IF_LVDSERROR
//    <name> LVDSERROR </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x40080060) LVDSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.18..18> LVDSERROR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_IF_FRAMEDETPAUSED  -------------------------------
// SVD Line: 59104

//  <item> SFDITEM_FIELD__FRC_IF_FRAMEDETPAUSED
//    <name> FRAMEDETPAUSED </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40080060) FRAMEDETPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.24..24> FRAMEDETPAUSED
//    </check>
//  </item>
//  


// ------------------------  Field Item: FRC_IF_INTERLEAVEWRITEPAUSED  ----------------------------
// SVD Line: 59111

//  <item> SFDITEM_FIELD__FRC_IF_INTERLEAVEWRITEPAUSED
//    <name> INTERLEAVEWRITEPAUSED </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40080060) INTERLEAVEWRITEPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.25..25> INTERLEAVEWRITEPAUSED
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_IF_INTERLEAVEREADPAUSED  ----------------------------
// SVD Line: 59118

//  <item> SFDITEM_FIELD__FRC_IF_INTERLEAVEREADPAUSED
//    <name> INTERLEAVEREADPAUSED </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40080060) INTERLEAVEREADPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.26..26> INTERLEAVEREADPAUSED
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_IF_TXSUBFRAMEPAUSED  ------------------------------
// SVD Line: 59125

//  <item> SFDITEM_FIELD__FRC_IF_TXSUBFRAMEPAUSED
//    <name> TXSUBFRAMEPAUSED </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x40080060) TXSUBFRAMEPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.27..27> TXSUBFRAMEPAUSED
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IF_CONVPAUSED  ---------------------------------
// SVD Line: 59132

//  <item> SFDITEM_FIELD__FRC_IF_CONVPAUSED
//    <name> CONVPAUSED </name>
//    <r> 
//    <i> [Bit 28] RO (@ 0x40080060) CONVPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.28..28> CONVPAUSED
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IF_RXWORD  -----------------------------------
// SVD Line: 59139

//  <item> SFDITEM_FIELD__FRC_IF_RXWORD
//    <name> RXWORD </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x40080060) RXWORD </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.29..29> RXWORD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IF_TXWORD  -----------------------------------
// SVD Line: 59146

//  <item> SFDITEM_FIELD__FRC_IF_TXWORD
//    <name> TXWORD </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x40080060) TXWORD </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IF ) </loc>
//      <o.30..30> TXWORD
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: FRC_IF  -------------------------------------
// SVD Line: 58962

//  <rtree> SFDITEM_REG__FRC_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080060) IF </i>
//    <loc> ( (unsigned int)((FRC_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_IF_TXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IF_TXAFTERFRAMEDONE </item>
//    <item> SFDITEM_FIELD__FRC_IF_TXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IF_TXUF </item>
//    <item> SFDITEM_FIELD__FRC_IF_RXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IF_RXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IF_FRAMEERROR </item>
//    <item> SFDITEM_FIELD__FRC_IF_BLOCKERROR </item>
//    <item> SFDITEM_FIELD__FRC_IF_RXOF </item>
//    <item> SFDITEM_FIELD__FRC_IF_WCNTCMP0 </item>
//    <item> SFDITEM_FIELD__FRC_IF_WCNTCMP1 </item>
//    <item> SFDITEM_FIELD__FRC_IF_WCNTCMP2 </item>
//    <item> SFDITEM_FIELD__FRC_IF_ADDRERROR </item>
//    <item> SFDITEM_FIELD__FRC_IF_BUSERROR </item>
//    <item> SFDITEM_FIELD__FRC_IF_RXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IF_TXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IF_SNIFFOF </item>
//    <item> SFDITEM_FIELD__FRC_IF_LVDSWILLERROR </item>
//    <item> SFDITEM_FIELD__FRC_IF_LVDSERROR </item>
//    <item> SFDITEM_FIELD__FRC_IF_FRAMEDETPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IF_INTERLEAVEWRITEPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IF_INTERLEAVEREADPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IF_TXSUBFRAMEPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IF_CONVPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IF_RXWORD </item>
//    <item> SFDITEM_FIELD__FRC_IF_TXWORD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_IFS  ---------------------------------
// SVD Line: 59155

unsigned int FRC_IFS __AT (0x40080064);



// -------------------------------  Field Item: FRC_IFS_TXDONE  -----------------------------------
// SVD Line: 59164

//  <item> SFDITEM_FIELD__FRC_IFS_TXDONE
//    <name> TXDONE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40080064) TXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.0..0> TXDONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_IFS_TXAFTERFRAMEDONE  ------------------------------
// SVD Line: 59171

//  <item> SFDITEM_FIELD__FRC_IFS_TXAFTERFRAMEDONE
//    <name> TXAFTERFRAMEDONE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40080064) TXAFTERFRAMEDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.1..1> TXAFTERFRAMEDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_TXABORTED  ---------------------------------
// SVD Line: 59178

//  <item> SFDITEM_FIELD__FRC_IFS_TXABORTED
//    <name> TXABORTED </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40080064) TXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.2..2> TXABORTED
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IFS_TXUF  ------------------------------------
// SVD Line: 59185

//  <item> SFDITEM_FIELD__FRC_IFS_TXUF
//    <name> TXUF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40080064) TXUF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.3..3> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IFS_RXDONE  -----------------------------------
// SVD Line: 59192

//  <item> SFDITEM_FIELD__FRC_IFS_RXDONE
//    <name> RXDONE </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40080064) RXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.4..4> RXDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_RXABORTED  ---------------------------------
// SVD Line: 59199

//  <item> SFDITEM_FIELD__FRC_IFS_RXABORTED
//    <name> RXABORTED </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40080064) RXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.5..5> RXABORTED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFS_FRAMEERROR  ---------------------------------
// SVD Line: 59206

//  <item> SFDITEM_FIELD__FRC_IFS_FRAMEERROR
//    <name> FRAMEERROR </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40080064) FRAMEERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.6..6> FRAMEERROR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFS_BLOCKERROR  ---------------------------------
// SVD Line: 59213

//  <item> SFDITEM_FIELD__FRC_IFS_BLOCKERROR
//    <name> BLOCKERROR </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40080064) BLOCKERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.7..7> BLOCKERROR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IFS_RXOF  ------------------------------------
// SVD Line: 59220

//  <item> SFDITEM_FIELD__FRC_IFS_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40080064) RXOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.8..8> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_WCNTCMP0  ----------------------------------
// SVD Line: 59227

//  <item> SFDITEM_FIELD__FRC_IFS_WCNTCMP0
//    <name> WCNTCMP0 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40080064) WCNTCMP0 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.9..9> WCNTCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_WCNTCMP1  ----------------------------------
// SVD Line: 59234

//  <item> SFDITEM_FIELD__FRC_IFS_WCNTCMP1
//    <name> WCNTCMP1 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40080064) WCNTCMP1 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.10..10> WCNTCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_WCNTCMP2  ----------------------------------
// SVD Line: 59241

//  <item> SFDITEM_FIELD__FRC_IFS_WCNTCMP2
//    <name> WCNTCMP2 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40080064) WCNTCMP2 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.11..11> WCNTCMP2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_ADDRERROR  ---------------------------------
// SVD Line: 59248

//  <item> SFDITEM_FIELD__FRC_IFS_ADDRERROR
//    <name> ADDRERROR </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40080064) ADDRERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.12..12> ADDRERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_BUSERROR  ----------------------------------
// SVD Line: 59255

//  <item> SFDITEM_FIELD__FRC_IFS_BUSERROR
//    <name> BUSERROR </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40080064) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.13..13> BUSERROR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFS_RXRAWEVENT  ---------------------------------
// SVD Line: 59262

//  <item> SFDITEM_FIELD__FRC_IFS_RXRAWEVENT
//    <name> RXRAWEVENT </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40080064) RXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.14..14> RXRAWEVENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFS_TXRAWEVENT  ---------------------------------
// SVD Line: 59269

//  <item> SFDITEM_FIELD__FRC_IFS_TXRAWEVENT
//    <name> TXRAWEVENT </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40080064) TXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.15..15> TXRAWEVENT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IFS_SNIFFOF  ----------------------------------
// SVD Line: 59276

//  <item> SFDITEM_FIELD__FRC_IFS_SNIFFOF
//    <name> SNIFFOF </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40080064) SNIFFOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.16..16> SNIFFOF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_IFS_LVDSWILLERROR  -------------------------------
// SVD Line: 59283

//  <item> SFDITEM_FIELD__FRC_IFS_LVDSWILLERROR
//    <name> LVDSWILLERROR </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40080064) LVDSWILLERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.17..17> LVDSWILLERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFS_LVDSERROR  ---------------------------------
// SVD Line: 59290

//  <item> SFDITEM_FIELD__FRC_IFS_LVDSERROR
//    <name> LVDSERROR </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x40080064) LVDSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFS ) </loc>
//      <o.18..18> LVDSERROR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: FRC_IFS  ------------------------------------
// SVD Line: 59155

//  <rtree> SFDITEM_REG__FRC_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40080064) IFS </i>
//    <loc> ( (unsigned int)((FRC_IFS >> 0) & 0xFFFFFFFF), ((FRC_IFS = (FRC_IFS & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_IFS_TXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IFS_TXAFTERFRAMEDONE </item>
//    <item> SFDITEM_FIELD__FRC_IFS_TXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IFS_TXUF </item>
//    <item> SFDITEM_FIELD__FRC_IFS_RXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IFS_RXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IFS_FRAMEERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFS_BLOCKERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFS_RXOF </item>
//    <item> SFDITEM_FIELD__FRC_IFS_WCNTCMP0 </item>
//    <item> SFDITEM_FIELD__FRC_IFS_WCNTCMP1 </item>
//    <item> SFDITEM_FIELD__FRC_IFS_WCNTCMP2 </item>
//    <item> SFDITEM_FIELD__FRC_IFS_ADDRERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFS_BUSERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFS_RXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IFS_TXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IFS_SNIFFOF </item>
//    <item> SFDITEM_FIELD__FRC_IFS_LVDSWILLERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFS_LVDSERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_IFC  ---------------------------------
// SVD Line: 59299

unsigned int FRC_IFC __AT (0x40080068);



// -------------------------------  Field Item: FRC_IFC_TXDONE  -----------------------------------
// SVD Line: 59308

//  <item> SFDITEM_FIELD__FRC_IFC_TXDONE
//    <name> TXDONE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40080068) TXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.0..0> TXDONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_IFC_TXAFTERFRAMEDONE  ------------------------------
// SVD Line: 59315

//  <item> SFDITEM_FIELD__FRC_IFC_TXAFTERFRAMEDONE
//    <name> TXAFTERFRAMEDONE </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40080068) TXAFTERFRAMEDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.1..1> TXAFTERFRAMEDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_TXABORTED  ---------------------------------
// SVD Line: 59322

//  <item> SFDITEM_FIELD__FRC_IFC_TXABORTED
//    <name> TXABORTED </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40080068) TXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.2..2> TXABORTED
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IFC_TXUF  ------------------------------------
// SVD Line: 59329

//  <item> SFDITEM_FIELD__FRC_IFC_TXUF
//    <name> TXUF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40080068) TXUF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.3..3> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IFC_RXDONE  -----------------------------------
// SVD Line: 59336

//  <item> SFDITEM_FIELD__FRC_IFC_RXDONE
//    <name> RXDONE </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40080068) RXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.4..4> RXDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_RXABORTED  ---------------------------------
// SVD Line: 59343

//  <item> SFDITEM_FIELD__FRC_IFC_RXABORTED
//    <name> RXABORTED </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40080068) RXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.5..5> RXABORTED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFC_FRAMEERROR  ---------------------------------
// SVD Line: 59350

//  <item> SFDITEM_FIELD__FRC_IFC_FRAMEERROR
//    <name> FRAMEERROR </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40080068) FRAMEERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.6..6> FRAMEERROR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFC_BLOCKERROR  ---------------------------------
// SVD Line: 59357

//  <item> SFDITEM_FIELD__FRC_IFC_BLOCKERROR
//    <name> BLOCKERROR </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40080068) BLOCKERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.7..7> BLOCKERROR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IFC_RXOF  ------------------------------------
// SVD Line: 59364

//  <item> SFDITEM_FIELD__FRC_IFC_RXOF
//    <name> RXOF </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40080068) RXOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.8..8> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_WCNTCMP0  ----------------------------------
// SVD Line: 59371

//  <item> SFDITEM_FIELD__FRC_IFC_WCNTCMP0
//    <name> WCNTCMP0 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40080068) WCNTCMP0 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.9..9> WCNTCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_WCNTCMP1  ----------------------------------
// SVD Line: 59378

//  <item> SFDITEM_FIELD__FRC_IFC_WCNTCMP1
//    <name> WCNTCMP1 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40080068) WCNTCMP1 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.10..10> WCNTCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_WCNTCMP2  ----------------------------------
// SVD Line: 59385

//  <item> SFDITEM_FIELD__FRC_IFC_WCNTCMP2
//    <name> WCNTCMP2 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40080068) WCNTCMP2 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.11..11> WCNTCMP2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_ADDRERROR  ---------------------------------
// SVD Line: 59392

//  <item> SFDITEM_FIELD__FRC_IFC_ADDRERROR
//    <name> ADDRERROR </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40080068) ADDRERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.12..12> ADDRERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_BUSERROR  ----------------------------------
// SVD Line: 59399

//  <item> SFDITEM_FIELD__FRC_IFC_BUSERROR
//    <name> BUSERROR </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40080068) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.13..13> BUSERROR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFC_RXRAWEVENT  ---------------------------------
// SVD Line: 59406

//  <item> SFDITEM_FIELD__FRC_IFC_RXRAWEVENT
//    <name> RXRAWEVENT </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40080068) RXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.14..14> RXRAWEVENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IFC_TXRAWEVENT  ---------------------------------
// SVD Line: 59413

//  <item> SFDITEM_FIELD__FRC_IFC_TXRAWEVENT
//    <name> TXRAWEVENT </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40080068) TXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.15..15> TXRAWEVENT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IFC_SNIFFOF  ----------------------------------
// SVD Line: 59420

//  <item> SFDITEM_FIELD__FRC_IFC_SNIFFOF
//    <name> SNIFFOF </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40080068) SNIFFOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.16..16> SNIFFOF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_IFC_LVDSWILLERROR  -------------------------------
// SVD Line: 59427

//  <item> SFDITEM_FIELD__FRC_IFC_LVDSWILLERROR
//    <name> LVDSWILLERROR </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40080068) LVDSWILLERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.17..17> LVDSWILLERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IFC_LVDSERROR  ---------------------------------
// SVD Line: 59434

//  <item> SFDITEM_FIELD__FRC_IFC_LVDSERROR
//    <name> LVDSERROR </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x40080068) LVDSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IFC ) </loc>
//      <o.18..18> LVDSERROR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: FRC_IFC  ------------------------------------
// SVD Line: 59299

//  <rtree> SFDITEM_REG__FRC_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40080068) IFC </i>
//    <loc> ( (unsigned int)((FRC_IFC >> 0) & 0xFFFFFFFF), ((FRC_IFC = (FRC_IFC & ~(0x7FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_IFC_TXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IFC_TXAFTERFRAMEDONE </item>
//    <item> SFDITEM_FIELD__FRC_IFC_TXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IFC_TXUF </item>
//    <item> SFDITEM_FIELD__FRC_IFC_RXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IFC_RXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IFC_FRAMEERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFC_BLOCKERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFC_RXOF </item>
//    <item> SFDITEM_FIELD__FRC_IFC_WCNTCMP0 </item>
//    <item> SFDITEM_FIELD__FRC_IFC_WCNTCMP1 </item>
//    <item> SFDITEM_FIELD__FRC_IFC_WCNTCMP2 </item>
//    <item> SFDITEM_FIELD__FRC_IFC_ADDRERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFC_BUSERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFC_RXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IFC_TXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IFC_SNIFFOF </item>
//    <item> SFDITEM_FIELD__FRC_IFC_LVDSWILLERROR </item>
//    <item> SFDITEM_FIELD__FRC_IFC_LVDSERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_IEN  ---------------------------------
// SVD Line: 59443

unsigned int FRC_IEN __AT (0x4008006C);



// -------------------------------  Field Item: FRC_IEN_TXDONE  -----------------------------------
// SVD Line: 59452

//  <item> SFDITEM_FIELD__FRC_IEN_TXDONE
//    <name> TXDONE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008006C) TXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.0..0> TXDONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_IEN_TXAFTERFRAMEDONE  ------------------------------
// SVD Line: 59459

//  <item> SFDITEM_FIELD__FRC_IEN_TXAFTERFRAMEDONE
//    <name> TXAFTERFRAMEDONE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008006C) TXAFTERFRAMEDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.1..1> TXAFTERFRAMEDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_TXABORTED  ---------------------------------
// SVD Line: 59466

//  <item> SFDITEM_FIELD__FRC_IEN_TXABORTED
//    <name> TXABORTED </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008006C) TXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.2..2> TXABORTED
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IEN_TXUF  ------------------------------------
// SVD Line: 59473

//  <item> SFDITEM_FIELD__FRC_IEN_TXUF
//    <name> TXUF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008006C) TXUF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.3..3> TXUF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IEN_RXDONE  -----------------------------------
// SVD Line: 59480

//  <item> SFDITEM_FIELD__FRC_IEN_RXDONE
//    <name> RXDONE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008006C) RXDONE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.4..4> RXDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_RXABORTED  ---------------------------------
// SVD Line: 59487

//  <item> SFDITEM_FIELD__FRC_IEN_RXABORTED
//    <name> RXABORTED </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008006C) RXABORTED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.5..5> RXABORTED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IEN_FRAMEERROR  ---------------------------------
// SVD Line: 59494

//  <item> SFDITEM_FIELD__FRC_IEN_FRAMEERROR
//    <name> FRAMEERROR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008006C) FRAMEERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.6..6> FRAMEERROR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IEN_BLOCKERROR  ---------------------------------
// SVD Line: 59501

//  <item> SFDITEM_FIELD__FRC_IEN_BLOCKERROR
//    <name> BLOCKERROR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008006C) BLOCKERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.7..7> BLOCKERROR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FRC_IEN_RXOF  ------------------------------------
// SVD Line: 59508

//  <item> SFDITEM_FIELD__FRC_IEN_RXOF
//    <name> RXOF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008006C) RXOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.8..8> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_WCNTCMP0  ----------------------------------
// SVD Line: 59515

//  <item> SFDITEM_FIELD__FRC_IEN_WCNTCMP0
//    <name> WCNTCMP0 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008006C) WCNTCMP0 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.9..9> WCNTCMP0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_WCNTCMP1  ----------------------------------
// SVD Line: 59522

//  <item> SFDITEM_FIELD__FRC_IEN_WCNTCMP1
//    <name> WCNTCMP1 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4008006C) WCNTCMP1 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.10..10> WCNTCMP1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_WCNTCMP2  ----------------------------------
// SVD Line: 59529

//  <item> SFDITEM_FIELD__FRC_IEN_WCNTCMP2
//    <name> WCNTCMP2 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4008006C) WCNTCMP2 </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.11..11> WCNTCMP2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_ADDRERROR  ---------------------------------
// SVD Line: 59536

//  <item> SFDITEM_FIELD__FRC_IEN_ADDRERROR
//    <name> ADDRERROR </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4008006C) ADDRERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.12..12> ADDRERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_BUSERROR  ----------------------------------
// SVD Line: 59543

//  <item> SFDITEM_FIELD__FRC_IEN_BUSERROR
//    <name> BUSERROR </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4008006C) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.13..13> BUSERROR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IEN_RXRAWEVENT  ---------------------------------
// SVD Line: 59550

//  <item> SFDITEM_FIELD__FRC_IEN_RXRAWEVENT
//    <name> RXRAWEVENT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4008006C) RXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.14..14> RXRAWEVENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IEN_TXRAWEVENT  ---------------------------------
// SVD Line: 59557

//  <item> SFDITEM_FIELD__FRC_IEN_TXRAWEVENT
//    <name> TXRAWEVENT </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008006C) TXRAWEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.15..15> TXRAWEVENT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IEN_SNIFFOF  ----------------------------------
// SVD Line: 59564

//  <item> SFDITEM_FIELD__FRC_IEN_SNIFFOF
//    <name> SNIFFOF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4008006C) SNIFFOF </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.16..16> SNIFFOF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_IEN_LVDSWILLERROR  -------------------------------
// SVD Line: 59571

//  <item> SFDITEM_FIELD__FRC_IEN_LVDSWILLERROR
//    <name> LVDSWILLERROR </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4008006C) LVDSWILLERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.17..17> LVDSWILLERROR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_IEN_LVDSERROR  ---------------------------------
// SVD Line: 59578

//  <item> SFDITEM_FIELD__FRC_IEN_LVDSERROR
//    <name> LVDSERROR </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4008006C) LVDSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.18..18> LVDSERROR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_IEN_FRAMEDETPAUSED  -------------------------------
// SVD Line: 59585

//  <item> SFDITEM_FIELD__FRC_IEN_FRAMEDETPAUSED
//    <name> FRAMEDETPAUSED </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4008006C) FRAMEDETPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.24..24> FRAMEDETPAUSED
//    </check>
//  </item>
//  


// ------------------------  Field Item: FRC_IEN_INTERLEAVEWRITEPAUSED  ---------------------------
// SVD Line: 59592

//  <item> SFDITEM_FIELD__FRC_IEN_INTERLEAVEWRITEPAUSED
//    <name> INTERLEAVEWRITEPAUSED </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4008006C) INTERLEAVEWRITEPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.25..25> INTERLEAVEWRITEPAUSED
//    </check>
//  </item>
//  


// ------------------------  Field Item: FRC_IEN_INTERLEAVEREADPAUSED  ----------------------------
// SVD Line: 59599

//  <item> SFDITEM_FIELD__FRC_IEN_INTERLEAVEREADPAUSED
//    <name> INTERLEAVEREADPAUSED </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4008006C) INTERLEAVEREADPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.26..26> INTERLEAVEREADPAUSED
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_IEN_TXSUBFRAMEPAUSED  ------------------------------
// SVD Line: 59606

//  <item> SFDITEM_FIELD__FRC_IEN_TXSUBFRAMEPAUSED
//    <name> TXSUBFRAMEPAUSED </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4008006C) TXSUBFRAMEPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.27..27> TXSUBFRAMEPAUSED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: FRC_IEN_CONVPAUSED  ---------------------------------
// SVD Line: 59613

//  <item> SFDITEM_FIELD__FRC_IEN_CONVPAUSED
//    <name> CONVPAUSED </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4008006C) CONVPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.28..28> CONVPAUSED
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IEN_RXWORD  -----------------------------------
// SVD Line: 59620

//  <item> SFDITEM_FIELD__FRC_IEN_RXWORD
//    <name> RXWORD </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4008006C) RXWORD </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.29..29> RXWORD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: FRC_IEN_TXWORD  -----------------------------------
// SVD Line: 59627

//  <item> SFDITEM_FIELD__FRC_IEN_TXWORD
//    <name> TXWORD </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4008006C) TXWORD </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_IEN ) </loc>
//      <o.30..30> TXWORD
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: FRC_IEN  ------------------------------------
// SVD Line: 59443

//  <rtree> SFDITEM_REG__FRC_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008006C) IEN </i>
//    <loc> ( (unsigned int)((FRC_IEN >> 0) & 0xFFFFFFFF), ((FRC_IEN = (FRC_IEN & ~(0x7F07FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F07FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_IEN_TXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IEN_TXAFTERFRAMEDONE </item>
//    <item> SFDITEM_FIELD__FRC_IEN_TXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IEN_TXUF </item>
//    <item> SFDITEM_FIELD__FRC_IEN_RXDONE </item>
//    <item> SFDITEM_FIELD__FRC_IEN_RXABORTED </item>
//    <item> SFDITEM_FIELD__FRC_IEN_FRAMEERROR </item>
//    <item> SFDITEM_FIELD__FRC_IEN_BLOCKERROR </item>
//    <item> SFDITEM_FIELD__FRC_IEN_RXOF </item>
//    <item> SFDITEM_FIELD__FRC_IEN_WCNTCMP0 </item>
//    <item> SFDITEM_FIELD__FRC_IEN_WCNTCMP1 </item>
//    <item> SFDITEM_FIELD__FRC_IEN_WCNTCMP2 </item>
//    <item> SFDITEM_FIELD__FRC_IEN_ADDRERROR </item>
//    <item> SFDITEM_FIELD__FRC_IEN_BUSERROR </item>
//    <item> SFDITEM_FIELD__FRC_IEN_RXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IEN_TXRAWEVENT </item>
//    <item> SFDITEM_FIELD__FRC_IEN_SNIFFOF </item>
//    <item> SFDITEM_FIELD__FRC_IEN_LVDSWILLERROR </item>
//    <item> SFDITEM_FIELD__FRC_IEN_LVDSERROR </item>
//    <item> SFDITEM_FIELD__FRC_IEN_FRAMEDETPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IEN_INTERLEAVEWRITEPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IEN_INTERLEAVEREADPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IEN_TXSUBFRAMEPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IEN_CONVPAUSED </item>
//    <item> SFDITEM_FIELD__FRC_IEN_RXWORD </item>
//    <item> SFDITEM_FIELD__FRC_IEN_TXWORD </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_BUFFERMODE  -----------------------------
// SVD Line: 59636

unsigned int FRC_BUFFERMODE __AT (0x40080070);



// -------------------------  Field Item: FRC_BUFFERMODE_TXBUFFERMODE  ----------------------------
// SVD Line: 59645

//  <item> SFDITEM_FIELD__FRC_BUFFERMODE_TXBUFFERMODE
//    <name> TXBUFFERMODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080070) TXBUFFERMODE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_BUFFERMODE ) </loc>
//      <o.0..0> TXBUFFERMODE
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_BUFFERMODE_RXBUFFERMODE  ----------------------------
// SVD Line: 59652

//  <item> SFDITEM_FIELD__FRC_BUFFERMODE_RXBUFFERMODE
//    <name> RXBUFFERMODE </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40080070) RXBUFFERMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_BUFFERMODE >> 1) & 0x3), ((FRC_BUFFERMODE = (FRC_BUFFERMODE & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_BUFFERMODE  ---------------------------------
// SVD Line: 59636

//  <rtree> SFDITEM_REG__FRC_BUFFERMODE
//    <name> BUFFERMODE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080070) BUFFERMODE </i>
//    <loc> ( (unsigned int)((FRC_BUFFERMODE >> 0) & 0xFFFFFFFF), ((FRC_BUFFERMODE = (FRC_BUFFERMODE & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_BUFFERMODE_TXBUFFERMODE </item>
//    <item> SFDITEM_FIELD__FRC_BUFFERMODE_RXBUFFERMODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_ROUTEPEN  ------------------------------
// SVD Line: 59661

unsigned int FRC_ROUTEPEN __AT (0x40080074);



// ----------------------------  Field Item: FRC_ROUTEPEN_DOUTPEN  --------------------------------
// SVD Line: 59670

//  <item> SFDITEM_FIELD__FRC_ROUTEPEN_DOUTPEN
//    <name> DOUTPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40080074) DOUTPEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_ROUTEPEN ) </loc>
//      <o.0..0> DOUTPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_ROUTEPEN_DCLKPEN  --------------------------------
// SVD Line: 59677

//  <item> SFDITEM_FIELD__FRC_ROUTEPEN_DCLKPEN
//    <name> DCLKPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40080074) DCLKPEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_ROUTEPEN ) </loc>
//      <o.1..1> DCLKPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_ROUTEPEN_DFRAMEPEN  -------------------------------
// SVD Line: 59684

//  <item> SFDITEM_FIELD__FRC_ROUTEPEN_DFRAMEPEN
//    <name> DFRAMEPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40080074) DFRAMEPEN </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_ROUTEPEN ) </loc>
//      <o.2..2> DFRAMEPEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: FRC_ROUTEPEN  ----------------------------------
// SVD Line: 59661

//  <rtree> SFDITEM_REG__FRC_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080074) ROUTEPEN </i>
//    <loc> ( (unsigned int)((FRC_ROUTEPEN >> 0) & 0xFFFFFFFF), ((FRC_ROUTEPEN = (FRC_ROUTEPEN & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_ROUTEPEN_DOUTPEN </item>
//    <item> SFDITEM_FIELD__FRC_ROUTEPEN_DCLKPEN </item>
//    <item> SFDITEM_FIELD__FRC_ROUTEPEN_DFRAMEPEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_ROUTELOC0  ------------------------------
// SVD Line: 59693

unsigned int FRC_ROUTELOC0 __AT (0x40080078);



// ----------------------------  Field Item: FRC_ROUTELOC0_DOUTLOC  -------------------------------
// SVD Line: 59702

//  <item> SFDITEM_FIELD__FRC_ROUTELOC0_DOUTLOC
//    <name> DOUTLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40080078) DOUTLOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_ROUTELOC0 >> 0) & 0x3F), ((FRC_ROUTELOC0 = (FRC_ROUTELOC0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FRC_ROUTELOC0_DCLKLOC  -------------------------------
// SVD Line: 59709

//  <item> SFDITEM_FIELD__FRC_ROUTELOC0_DCLKLOC
//    <name> DCLKLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40080078) DCLKLOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_ROUTELOC0 >> 8) & 0x3F), ((FRC_ROUTELOC0 = (FRC_ROUTELOC0 & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: FRC_ROUTELOC0_DFRAMELOC  ------------------------------
// SVD Line: 59716

//  <item> SFDITEM_FIELD__FRC_ROUTELOC0_DFRAMELOC
//    <name> DFRAMELOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40080078) DFRAMELOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_ROUTELOC0 >> 16) & 0x3F), ((FRC_ROUTELOC0 = (FRC_ROUTELOC0 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_ROUTELOC0  ---------------------------------
// SVD Line: 59693

//  <rtree> SFDITEM_REG__FRC_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080078) ROUTELOC0 </i>
//    <loc> ( (unsigned int)((FRC_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((FRC_ROUTELOC0 = (FRC_ROUTELOC0 & ~(0x3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_ROUTELOC0_DOUTLOC </item>
//    <item> SFDITEM_FIELD__FRC_ROUTELOC0_DCLKLOC </item>
//    <item> SFDITEM_FIELD__FRC_ROUTELOC0_DFRAMELOC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_SNIFFCTRL  ------------------------------
// SVD Line: 59725

unsigned int FRC_SNIFFCTRL __AT (0x4008007C);



// ---------------------------  Field Item: FRC_SNIFFCTRL_SNIFFMODE  ------------------------------
// SVD Line: 59734

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFMODE
//    <name> SNIFFMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4008007C) SNIFFMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_SNIFFCTRL >> 0) & 0x3), ((FRC_SNIFFCTRL = (FRC_SNIFFCTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: FRC_SNIFFCTRL_SNIFFBITS  ------------------------------
// SVD Line: 59741

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFBITS
//    <name> SNIFFBITS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008007C) SNIFFBITS </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_SNIFFCTRL ) </loc>
//      <o.2..2> SNIFFBITS
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_SNIFFCTRL_SNIFFRXDATA  -----------------------------
// SVD Line: 59748

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFRXDATA
//    <name> SNIFFRXDATA </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008007C) SNIFFRXDATA </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_SNIFFCTRL ) </loc>
//      <o.3..3> SNIFFRXDATA
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_SNIFFCTRL_SNIFFTXDATA  -----------------------------
// SVD Line: 59755

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFTXDATA
//    <name> SNIFFTXDATA </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008007C) SNIFFTXDATA </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_SNIFFCTRL ) </loc>
//      <o.4..4> SNIFFTXDATA
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_SNIFFCTRL_SNIFFRSSI  ------------------------------
// SVD Line: 59762

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFRSSI
//    <name> SNIFFRSSI </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008007C) SNIFFRSSI </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_SNIFFCTRL ) </loc>
//      <o.5..5> SNIFFRSSI
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_SNIFFCTRL_SNIFFSTATE  ------------------------------
// SVD Line: 59769

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFSTATE
//    <name> SNIFFSTATE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008007C) SNIFFSTATE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_SNIFFCTRL ) </loc>
//      <o.6..6> SNIFFSTATE
//    </check>
//  </item>
//  


// -------------------------  Field Item: FRC_SNIFFCTRL_SNIFFAUXDATA  -----------------------------
// SVD Line: 59776

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFAUXDATA
//    <name> SNIFFAUXDATA </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008007C) SNIFFAUXDATA </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_SNIFFCTRL ) </loc>
//      <o.7..7> SNIFFAUXDATA
//    </check>
//  </item>
//  


// ----------------------------  Field Item: FRC_SNIFFCTRL_SNIFFBR  -------------------------------
// SVD Line: 59783

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFBR
//    <name> SNIFFBR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4008007C) SNIFFBR </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_SNIFFCTRL >> 8) & 0xFF), ((FRC_SNIFFCTRL = (FRC_SNIFFCTRL & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: FRC_SNIFFCTRL_SNIFFSLEEPCTRL  ----------------------------
// SVD Line: 59790

//  <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFSLEEPCTRL
//    <name> SNIFFSLEEPCTRL </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4008007C) SNIFFSLEEPCTRL </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_SNIFFCTRL ) </loc>
//      <o.16..16> SNIFFSLEEPCTRL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: FRC_SNIFFCTRL  ---------------------------------
// SVD Line: 59725

//  <rtree> SFDITEM_REG__FRC_SNIFFCTRL
//    <name> SNIFFCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008007C) SNIFFCTRL </i>
//    <loc> ( (unsigned int)((FRC_SNIFFCTRL >> 0) & 0xFFFFFFFF), ((FRC_SNIFFCTRL = (FRC_SNIFFCTRL & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFMODE </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFBITS </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFRXDATA </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFTXDATA </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFRSSI </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFSTATE </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFAUXDATA </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFBR </item>
//    <item> SFDITEM_FIELD__FRC_SNIFFCTRL_SNIFFSLEEPCTRL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_AUXDATA  -------------------------------
// SVD Line: 59799

unsigned int FRC_AUXDATA __AT (0x40080080);



// -----------------------------  Field Item: FRC_AUXDATA_AUXDATA  --------------------------------
// SVD Line: 59808

//  <item> SFDITEM_FIELD__FRC_AUXDATA_AUXDATA
//    <name> AUXDATA </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40080080) AUXDATA </i>
//    <edit> 
//      <loc> ( (unsigned short)((FRC_AUXDATA >> 0) & 0x1FF), ((FRC_AUXDATA = (FRC_AUXDATA & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: FRC_AUXDATA  ----------------------------------
// SVD Line: 59799

//  <rtree> SFDITEM_REG__FRC_AUXDATA
//    <name> AUXDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080080) AUXDATA </i>
//    <loc> ( (unsigned int)((FRC_AUXDATA >> 0) & 0xFFFFFFFF), ((FRC_AUXDATA = (FRC_AUXDATA & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_AUXDATA_AUXDATA </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FRC_RAWCTRL  -------------------------------
// SVD Line: 59817

unsigned int FRC_RAWCTRL __AT (0x40080084);



// ----------------------------  Field Item: FRC_RAWCTRL_TXRAWMODE  -------------------------------
// SVD Line: 59826

//  <item> SFDITEM_FIELD__FRC_RAWCTRL_TXRAWMODE
//    <name> TXRAWMODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40080084) TXRAWMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_RAWCTRL >> 0) & 0x3), ((FRC_RAWCTRL = (FRC_RAWCTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: FRC_RAWCTRL_RXRAWMODE  -------------------------------
// SVD Line: 59833

//  <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWMODE
//    <name> RXRAWMODE </name>
//    <rw> 
//    <i> [Bits 4..2] RW (@ 0x40080084) RXRAWMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_RAWCTRL >> 2) & 0x7), ((FRC_RAWCTRL = (FRC_RAWCTRL & ~(0x7UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: FRC_RAWCTRL_RXRAWRANDOM  ------------------------------
// SVD Line: 59840

//  <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWRANDOM
//    <name> RXRAWRANDOM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40080084) RXRAWRANDOM </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RAWCTRL ) </loc>
//      <o.5..5> RXRAWRANDOM
//    </check>
//  </item>
//  


// --------------------------  Field Item: FRC_RAWCTRL_RXRAWTRIGGER  ------------------------------
// SVD Line: 59847

//  <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWTRIGGER
//    <name> RXRAWTRIGGER </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40080084) RXRAWTRIGGER </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_RAWCTRL ) </loc>
//      <o.7..7> RXRAWTRIGGER
//    </check>
//  </item>
//  


// ---------------------------  Field Item: FRC_RAWCTRL_RXRAWPRSSEL  ------------------------------
// SVD Line: 59854

//  <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWPRSSEL
//    <name> RXRAWPRSSEL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40080084) RXRAWPRSSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_RAWCTRL >> 8) & 0xF), ((FRC_RAWCTRL = (FRC_RAWCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: FRC_RAWCTRL  ----------------------------------
// SVD Line: 59817

//  <rtree> SFDITEM_REG__FRC_RAWCTRL
//    <name> RAWCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080084) RAWCTRL </i>
//    <loc> ( (unsigned int)((FRC_RAWCTRL >> 0) & 0xFFFFFFFF), ((FRC_RAWCTRL = (FRC_RAWCTRL & ~(0xFBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_RAWCTRL_TXRAWMODE </item>
//    <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWMODE </item>
//    <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWRANDOM </item>
//    <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWTRIGGER </item>
//    <item> SFDITEM_FIELD__FRC_RAWCTRL_RXRAWPRSSEL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_RXRAWDATA  ------------------------------
// SVD Line: 59863

unsigned int FRC_RXRAWDATA __AT (0x40080088);



// ---------------------------  Field Item: FRC_RXRAWDATA_RXRAWDATA  ------------------------------
// SVD Line: 59872

//  <item> SFDITEM_FIELD__FRC_RXRAWDATA_RXRAWDATA
//    <name> RXRAWDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080088) RXRAWDATA </i>
//    <edit> 
//      <loc> ( (unsigned int)((FRC_RXRAWDATA >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_RXRAWDATA  ---------------------------------
// SVD Line: 59863

//  <rtree> SFDITEM_REG__FRC_RXRAWDATA
//    <name> RXRAWDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080088) RXRAWDATA </i>
//    <loc> ( (unsigned int)((FRC_RXRAWDATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_RXRAWDATA_RXRAWDATA </item>
//  </rtree>
//  


// --------------------------  Register Item Address: FRC_PAUSEDATA  ------------------------------
// SVD Line: 59881

unsigned int FRC_PAUSEDATA __AT (0x4008008C);



// ---------------------------  Field Item: FRC_PAUSEDATA_PAUSEDATA  ------------------------------
// SVD Line: 59890

//  <item> SFDITEM_FIELD__FRC_PAUSEDATA_PAUSEDATA
//    <name> PAUSEDATA </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x4008008C) PAUSEDATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_PAUSEDATA >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: FRC_PAUSEDATA  ---------------------------------
// SVD Line: 59881

//  <rtree> SFDITEM_REG__FRC_PAUSEDATA
//    <name> PAUSEDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008008C) PAUSEDATA </i>
//    <loc> ( (unsigned int)((FRC_PAUSEDATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_PAUSEDATA_PAUSEDATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: FRC_LIKELYCONVSTATE  ---------------------------
// SVD Line: 59899

unsigned int FRC_LIKELYCONVSTATE __AT (0x40080090);



// ---------------------  Field Item: FRC_LIKELYCONVSTATE_LIKELYCONVSTATE  ------------------------
// SVD Line: 59908

//  <item> SFDITEM_FIELD__FRC_LIKELYCONVSTATE_LIKELYCONVSTATE
//    <name> LIKELYCONVSTATE </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x40080090) LIKELYCONVSTATE </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_LIKELYCONVSTATE >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: FRC_LIKELYCONVSTATE  ------------------------------
// SVD Line: 59899

//  <rtree> SFDITEM_REG__FRC_LIKELYCONVSTATE
//    <name> LIKELYCONVSTATE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080090) LIKELYCONVSTATE </i>
//    <loc> ( (unsigned int)((FRC_LIKELYCONVSTATE >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_LIKELYCONVSTATE_LIKELYCONVSTATE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: FRC_INTELEMENTNEXT  ---------------------------
// SVD Line: 59917

unsigned int FRC_INTELEMENTNEXT __AT (0x40080094);



// ----------------------  Field Item: FRC_INTELEMENTNEXT_INTELEMENTNEXT  -------------------------
// SVD Line: 59926

//  <item> SFDITEM_FIELD__FRC_INTELEMENTNEXT_INTELEMENTNEXT
//    <name> INTELEMENTNEXT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40080094) INTELEMENTNEXT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENTNEXT >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: FRC_INTELEMENTNEXT  -------------------------------
// SVD Line: 59917

//  <rtree> SFDITEM_REG__FRC_INTELEMENTNEXT
//    <name> INTELEMENTNEXT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40080094) INTELEMENTNEXT </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENTNEXT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENTNEXT_INTELEMENTNEXT </item>
//  </rtree>
//  


// ------------------------  Register Item Address: FRC_INTWRITEPOINT  ----------------------------
// SVD Line: 59935

unsigned int FRC_INTWRITEPOINT __AT (0x40080098);



// -----------------------  Field Item: FRC_INTWRITEPOINT_INTWRITEPOINT  --------------------------
// SVD Line: 59944

//  <item> SFDITEM_FIELD__FRC_INTWRITEPOINT_INTWRITEPOINT
//    <name> INTWRITEPOINT </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40080098) INTWRITEPOINT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTWRITEPOINT >> 0) & 0x1F), ((FRC_INTWRITEPOINT = (FRC_INTWRITEPOINT & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTWRITEPOINT  -------------------------------
// SVD Line: 59935

//  <rtree> SFDITEM_REG__FRC_INTWRITEPOINT
//    <name> INTWRITEPOINT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40080098) INTWRITEPOINT </i>
//    <loc> ( (unsigned int)((FRC_INTWRITEPOINT >> 0) & 0xFFFFFFFF), ((FRC_INTWRITEPOINT = (FRC_INTWRITEPOINT & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_INTWRITEPOINT_INTWRITEPOINT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTREADPOINT  ----------------------------
// SVD Line: 59953

unsigned int FRC_INTREADPOINT __AT (0x4008009C);



// ------------------------  Field Item: FRC_INTREADPOINT_INTREADPOINT  ---------------------------
// SVD Line: 59962

//  <item> SFDITEM_FIELD__FRC_INTREADPOINT_INTREADPOINT
//    <name> INTREADPOINT </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4008009C) INTREADPOINT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTREADPOINT >> 0) & 0x1F), ((FRC_INTREADPOINT = (FRC_INTREADPOINT & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTREADPOINT  --------------------------------
// SVD Line: 59953

//  <rtree> SFDITEM_REG__FRC_INTREADPOINT
//    <name> INTREADPOINT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008009C) INTREADPOINT </i>
//    <loc> ( (unsigned int)((FRC_INTREADPOINT >> 0) & 0xFFFFFFFF), ((FRC_INTREADPOINT = (FRC_INTREADPOINT & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_INTREADPOINT_INTREADPOINT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_FCD0  --------------------------------
// SVD Line: 59971

unsigned int FRC_FCD0 __AT (0x400800A0);



// -------------------------------  Field Item: FRC_FCD0_WORDS  -----------------------------------
// SVD Line: 59980

//  <item> SFDITEM_FIELD__FRC_FCD0_WORDS
//    <name> WORDS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400800A0) WORDS </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD0 >> 0) & 0xFF), ((FRC_FCD0 = (FRC_FCD0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: FRC_FCD0_BUFFER  ----------------------------------
// SVD Line: 59987

//  <item> SFDITEM_FIELD__FRC_FCD0_BUFFER
//    <name> BUFFER </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400800A0) BUFFER </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD0 >> 8) & 0x3), ((FRC_FCD0 = (FRC_FCD0 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD0_INCLUDECRC  --------------------------------
// SVD Line: 59994

//  <item> SFDITEM_FIELD__FRC_FCD0_INCLUDECRC
//    <name> INCLUDECRC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400800A0) INCLUDECRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD0 ) </loc>
//      <o.10..10> INCLUDECRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD0_CALCCRC  ----------------------------------
// SVD Line: 60001

//  <item> SFDITEM_FIELD__FRC_FCD0_CALCCRC
//    <name> CALCCRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400800A0) CALCCRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD0 ) </loc>
//      <o.11..11> CALCCRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD0_SKIPCRC  ----------------------------------
// SVD Line: 60008

//  <item> SFDITEM_FIELD__FRC_FCD0_SKIPCRC
//    <name> SKIPCRC </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400800A0) SKIPCRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD0 >> 12) & 0x3), ((FRC_FCD0 = (FRC_FCD0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD0_SKIPWHITE  ---------------------------------
// SVD Line: 60015

//  <item> SFDITEM_FIELD__FRC_FCD0_SKIPWHITE
//    <name> SKIPWHITE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400800A0) SKIPWHITE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD0 ) </loc>
//      <o.14..14> SKIPWHITE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FRC_FCD0  ------------------------------------
// SVD Line: 59971

//  <rtree> SFDITEM_REG__FRC_FCD0
//    <name> FCD0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400800A0) FCD0 </i>
//    <loc> ( (unsigned int)((FRC_FCD0 >> 0) & 0xFFFFFFFF), ((FRC_FCD0 = (FRC_FCD0 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_FCD0_WORDS </item>
//    <item> SFDITEM_FIELD__FRC_FCD0_BUFFER </item>
//    <item> SFDITEM_FIELD__FRC_FCD0_INCLUDECRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD0_CALCCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD0_SKIPCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD0_SKIPWHITE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_FCD1  --------------------------------
// SVD Line: 60024

unsigned int FRC_FCD1 __AT (0x400800A4);



// -------------------------------  Field Item: FRC_FCD1_WORDS  -----------------------------------
// SVD Line: 60033

//  <item> SFDITEM_FIELD__FRC_FCD1_WORDS
//    <name> WORDS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400800A4) WORDS </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD1 >> 0) & 0xFF), ((FRC_FCD1 = (FRC_FCD1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: FRC_FCD1_BUFFER  ----------------------------------
// SVD Line: 60040

//  <item> SFDITEM_FIELD__FRC_FCD1_BUFFER
//    <name> BUFFER </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400800A4) BUFFER </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD1 >> 8) & 0x3), ((FRC_FCD1 = (FRC_FCD1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD1_INCLUDECRC  --------------------------------
// SVD Line: 60047

//  <item> SFDITEM_FIELD__FRC_FCD1_INCLUDECRC
//    <name> INCLUDECRC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400800A4) INCLUDECRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD1 ) </loc>
//      <o.10..10> INCLUDECRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD1_CALCCRC  ----------------------------------
// SVD Line: 60054

//  <item> SFDITEM_FIELD__FRC_FCD1_CALCCRC
//    <name> CALCCRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400800A4) CALCCRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD1 ) </loc>
//      <o.11..11> CALCCRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD1_SKIPCRC  ----------------------------------
// SVD Line: 60061

//  <item> SFDITEM_FIELD__FRC_FCD1_SKIPCRC
//    <name> SKIPCRC </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400800A4) SKIPCRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD1 >> 12) & 0x3), ((FRC_FCD1 = (FRC_FCD1 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD1_SKIPWHITE  ---------------------------------
// SVD Line: 60068

//  <item> SFDITEM_FIELD__FRC_FCD1_SKIPWHITE
//    <name> SKIPWHITE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400800A4) SKIPWHITE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD1 ) </loc>
//      <o.14..14> SKIPWHITE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FRC_FCD1  ------------------------------------
// SVD Line: 60024

//  <rtree> SFDITEM_REG__FRC_FCD1
//    <name> FCD1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400800A4) FCD1 </i>
//    <loc> ( (unsigned int)((FRC_FCD1 >> 0) & 0xFFFFFFFF), ((FRC_FCD1 = (FRC_FCD1 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_FCD1_WORDS </item>
//    <item> SFDITEM_FIELD__FRC_FCD1_BUFFER </item>
//    <item> SFDITEM_FIELD__FRC_FCD1_INCLUDECRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD1_CALCCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD1_SKIPCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD1_SKIPWHITE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_FCD2  --------------------------------
// SVD Line: 60077

unsigned int FRC_FCD2 __AT (0x400800A8);



// -------------------------------  Field Item: FRC_FCD2_WORDS  -----------------------------------
// SVD Line: 60086

//  <item> SFDITEM_FIELD__FRC_FCD2_WORDS
//    <name> WORDS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400800A8) WORDS </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD2 >> 0) & 0xFF), ((FRC_FCD2 = (FRC_FCD2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: FRC_FCD2_BUFFER  ----------------------------------
// SVD Line: 60093

//  <item> SFDITEM_FIELD__FRC_FCD2_BUFFER
//    <name> BUFFER </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400800A8) BUFFER </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD2 >> 8) & 0x3), ((FRC_FCD2 = (FRC_FCD2 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD2_INCLUDECRC  --------------------------------
// SVD Line: 60100

//  <item> SFDITEM_FIELD__FRC_FCD2_INCLUDECRC
//    <name> INCLUDECRC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400800A8) INCLUDECRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD2 ) </loc>
//      <o.10..10> INCLUDECRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD2_CALCCRC  ----------------------------------
// SVD Line: 60107

//  <item> SFDITEM_FIELD__FRC_FCD2_CALCCRC
//    <name> CALCCRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400800A8) CALCCRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD2 ) </loc>
//      <o.11..11> CALCCRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD2_SKIPCRC  ----------------------------------
// SVD Line: 60114

//  <item> SFDITEM_FIELD__FRC_FCD2_SKIPCRC
//    <name> SKIPCRC </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400800A8) SKIPCRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD2 >> 12) & 0x3), ((FRC_FCD2 = (FRC_FCD2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD2_SKIPWHITE  ---------------------------------
// SVD Line: 60121

//  <item> SFDITEM_FIELD__FRC_FCD2_SKIPWHITE
//    <name> SKIPWHITE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400800A8) SKIPWHITE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD2 ) </loc>
//      <o.14..14> SKIPWHITE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FRC_FCD2  ------------------------------------
// SVD Line: 60077

//  <rtree> SFDITEM_REG__FRC_FCD2
//    <name> FCD2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400800A8) FCD2 </i>
//    <loc> ( (unsigned int)((FRC_FCD2 >> 0) & 0xFFFFFFFF), ((FRC_FCD2 = (FRC_FCD2 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_FCD2_WORDS </item>
//    <item> SFDITEM_FIELD__FRC_FCD2_BUFFER </item>
//    <item> SFDITEM_FIELD__FRC_FCD2_INCLUDECRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD2_CALCCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD2_SKIPCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD2_SKIPWHITE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: FRC_FCD3  --------------------------------
// SVD Line: 60130

unsigned int FRC_FCD3 __AT (0x400800AC);



// -------------------------------  Field Item: FRC_FCD3_WORDS  -----------------------------------
// SVD Line: 60139

//  <item> SFDITEM_FIELD__FRC_FCD3_WORDS
//    <name> WORDS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400800AC) WORDS </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD3 >> 0) & 0xFF), ((FRC_FCD3 = (FRC_FCD3 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: FRC_FCD3_BUFFER  ----------------------------------
// SVD Line: 60146

//  <item> SFDITEM_FIELD__FRC_FCD3_BUFFER
//    <name> BUFFER </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400800AC) BUFFER </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD3 >> 8) & 0x3), ((FRC_FCD3 = (FRC_FCD3 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD3_INCLUDECRC  --------------------------------
// SVD Line: 60153

//  <item> SFDITEM_FIELD__FRC_FCD3_INCLUDECRC
//    <name> INCLUDECRC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400800AC) INCLUDECRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD3 ) </loc>
//      <o.10..10> INCLUDECRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD3_CALCCRC  ----------------------------------
// SVD Line: 60160

//  <item> SFDITEM_FIELD__FRC_FCD3_CALCCRC
//    <name> CALCCRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400800AC) CALCCRC </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD3 ) </loc>
//      <o.11..11> CALCCRC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: FRC_FCD3_SKIPCRC  ----------------------------------
// SVD Line: 60167

//  <item> SFDITEM_FIELD__FRC_FCD3_SKIPCRC
//    <name> SKIPCRC </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400800AC) SKIPCRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_FCD3 >> 12) & 0x3), ((FRC_FCD3 = (FRC_FCD3 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: FRC_FCD3_SKIPWHITE  ---------------------------------
// SVD Line: 60174

//  <item> SFDITEM_FIELD__FRC_FCD3_SKIPWHITE
//    <name> SKIPWHITE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400800AC) SKIPWHITE </i>
//    <check> 
//      <loc> ( (unsigned int) FRC_FCD3 ) </loc>
//      <o.14..14> SKIPWHITE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FRC_FCD3  ------------------------------------
// SVD Line: 60130

//  <rtree> SFDITEM_REG__FRC_FCD3
//    <name> FCD3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400800AC) FCD3 </i>
//    <loc> ( (unsigned int)((FRC_FCD3 >> 0) & 0xFFFFFFFF), ((FRC_FCD3 = (FRC_FCD3 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FRC_FCD3_WORDS </item>
//    <item> SFDITEM_FIELD__FRC_FCD3_BUFFER </item>
//    <item> SFDITEM_FIELD__FRC_FCD3_INCLUDECRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD3_CALCCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD3_SKIPCRC </item>
//    <item> SFDITEM_FIELD__FRC_FCD3_SKIPWHITE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT0  -----------------------------
// SVD Line: 60183

unsigned int FRC_INTELEMENT0 __AT (0x400800C0);



// -------------------------  Field Item: FRC_INTELEMENT0_INTELEMENT  -----------------------------
// SVD Line: 60192

//  <item> SFDITEM_FIELD__FRC_INTELEMENT0_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800C0) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT0  --------------------------------
// SVD Line: 60183

//  <rtree> SFDITEM_REG__FRC_INTELEMENT0
//    <name> INTELEMENT0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800C0) INTELEMENT0 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT0_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT1  -----------------------------
// SVD Line: 60201

unsigned int FRC_INTELEMENT1 __AT (0x400800C4);



// -------------------------  Field Item: FRC_INTELEMENT1_INTELEMENT  -----------------------------
// SVD Line: 60210

//  <item> SFDITEM_FIELD__FRC_INTELEMENT1_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800C4) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT1 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT1  --------------------------------
// SVD Line: 60201

//  <rtree> SFDITEM_REG__FRC_INTELEMENT1
//    <name> INTELEMENT1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800C4) INTELEMENT1 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT1_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT2  -----------------------------
// SVD Line: 60219

unsigned int FRC_INTELEMENT2 __AT (0x400800C8);



// -------------------------  Field Item: FRC_INTELEMENT2_INTELEMENT  -----------------------------
// SVD Line: 60228

//  <item> SFDITEM_FIELD__FRC_INTELEMENT2_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800C8) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT2 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT2  --------------------------------
// SVD Line: 60219

//  <rtree> SFDITEM_REG__FRC_INTELEMENT2
//    <name> INTELEMENT2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800C8) INTELEMENT2 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT2_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT3  -----------------------------
// SVD Line: 60237

unsigned int FRC_INTELEMENT3 __AT (0x400800CC);



// -------------------------  Field Item: FRC_INTELEMENT3_INTELEMENT  -----------------------------
// SVD Line: 60246

//  <item> SFDITEM_FIELD__FRC_INTELEMENT3_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800CC) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT3  --------------------------------
// SVD Line: 60237

//  <rtree> SFDITEM_REG__FRC_INTELEMENT3
//    <name> INTELEMENT3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800CC) INTELEMENT3 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT3_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT4  -----------------------------
// SVD Line: 60255

unsigned int FRC_INTELEMENT4 __AT (0x400800D0);



// -------------------------  Field Item: FRC_INTELEMENT4_INTELEMENT  -----------------------------
// SVD Line: 60264

//  <item> SFDITEM_FIELD__FRC_INTELEMENT4_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800D0) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT4 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT4  --------------------------------
// SVD Line: 60255

//  <rtree> SFDITEM_REG__FRC_INTELEMENT4
//    <name> INTELEMENT4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800D0) INTELEMENT4 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT4_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT5  -----------------------------
// SVD Line: 60273

unsigned int FRC_INTELEMENT5 __AT (0x400800D4);



// -------------------------  Field Item: FRC_INTELEMENT5_INTELEMENT  -----------------------------
// SVD Line: 60282

//  <item> SFDITEM_FIELD__FRC_INTELEMENT5_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800D4) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT5 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT5  --------------------------------
// SVD Line: 60273

//  <rtree> SFDITEM_REG__FRC_INTELEMENT5
//    <name> INTELEMENT5 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800D4) INTELEMENT5 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT5 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT5_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT6  -----------------------------
// SVD Line: 60291

unsigned int FRC_INTELEMENT6 __AT (0x400800D8);



// -------------------------  Field Item: FRC_INTELEMENT6_INTELEMENT  -----------------------------
// SVD Line: 60300

//  <item> SFDITEM_FIELD__FRC_INTELEMENT6_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800D8) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT6 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT6  --------------------------------
// SVD Line: 60291

//  <rtree> SFDITEM_REG__FRC_INTELEMENT6
//    <name> INTELEMENT6 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800D8) INTELEMENT6 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT6 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT6_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT7  -----------------------------
// SVD Line: 60309

unsigned int FRC_INTELEMENT7 __AT (0x400800DC);



// -------------------------  Field Item: FRC_INTELEMENT7_INTELEMENT  -----------------------------
// SVD Line: 60318

//  <item> SFDITEM_FIELD__FRC_INTELEMENT7_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800DC) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT7 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT7  --------------------------------
// SVD Line: 60309

//  <rtree> SFDITEM_REG__FRC_INTELEMENT7
//    <name> INTELEMENT7 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800DC) INTELEMENT7 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT7 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT7_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT8  -----------------------------
// SVD Line: 60327

unsigned int FRC_INTELEMENT8 __AT (0x400800E0);



// -------------------------  Field Item: FRC_INTELEMENT8_INTELEMENT  -----------------------------
// SVD Line: 60336

//  <item> SFDITEM_FIELD__FRC_INTELEMENT8_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800E0) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT8 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT8  --------------------------------
// SVD Line: 60327

//  <rtree> SFDITEM_REG__FRC_INTELEMENT8
//    <name> INTELEMENT8 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800E0) INTELEMENT8 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT8 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT8_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT9  -----------------------------
// SVD Line: 60345

unsigned int FRC_INTELEMENT9 __AT (0x400800E4);



// -------------------------  Field Item: FRC_INTELEMENT9_INTELEMENT  -----------------------------
// SVD Line: 60354

//  <item> SFDITEM_FIELD__FRC_INTELEMENT9_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800E4) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT9 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: FRC_INTELEMENT9  --------------------------------
// SVD Line: 60345

//  <rtree> SFDITEM_REG__FRC_INTELEMENT9
//    <name> INTELEMENT9 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800E4) INTELEMENT9 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT9 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT9_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT10  ----------------------------
// SVD Line: 60363

unsigned int FRC_INTELEMENT10 __AT (0x400800E8);



// ------------------------  Field Item: FRC_INTELEMENT10_INTELEMENTN  ----------------------------
// SVD Line: 60372

//  <item> SFDITEM_FIELD__FRC_INTELEMENT10_INTELEMENTN
//    <name> INTELEMENTN </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800E8) INTELEMENTN </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT10 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTELEMENT10  --------------------------------
// SVD Line: 60363

//  <rtree> SFDITEM_REG__FRC_INTELEMENT10
//    <name> INTELEMENT10 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800E8) INTELEMENT10 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT10 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT10_INTELEMENTN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT11  ----------------------------
// SVD Line: 60381

unsigned int FRC_INTELEMENT11 __AT (0x400800EC);



// -------------------------  Field Item: FRC_INTELEMENT11_INTELEMENT  ----------------------------
// SVD Line: 60390

//  <item> SFDITEM_FIELD__FRC_INTELEMENT11_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800EC) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT11 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTELEMENT11  --------------------------------
// SVD Line: 60381

//  <rtree> SFDITEM_REG__FRC_INTELEMENT11
//    <name> INTELEMENT11 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800EC) INTELEMENT11 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT11 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT11_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT12  ----------------------------
// SVD Line: 60399

unsigned int FRC_INTELEMENT12 __AT (0x400800F0);



// -------------------------  Field Item: FRC_INTELEMENT12_INTELEMENT  ----------------------------
// SVD Line: 60408

//  <item> SFDITEM_FIELD__FRC_INTELEMENT12_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800F0) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT12 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTELEMENT12  --------------------------------
// SVD Line: 60399

//  <rtree> SFDITEM_REG__FRC_INTELEMENT12
//    <name> INTELEMENT12 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800F0) INTELEMENT12 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT12 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT12_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT13  ----------------------------
// SVD Line: 60417

unsigned int FRC_INTELEMENT13 __AT (0x400800F4);



// -------------------------  Field Item: FRC_INTELEMENT13_INTELEMENT  ----------------------------
// SVD Line: 60426

//  <item> SFDITEM_FIELD__FRC_INTELEMENT13_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800F4) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT13 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTELEMENT13  --------------------------------
// SVD Line: 60417

//  <rtree> SFDITEM_REG__FRC_INTELEMENT13
//    <name> INTELEMENT13 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800F4) INTELEMENT13 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT13 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT13_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT14  ----------------------------
// SVD Line: 60435

unsigned int FRC_INTELEMENT14 __AT (0x400800F8);



// -------------------------  Field Item: FRC_INTELEMENT14_INTELEMENT  ----------------------------
// SVD Line: 60444

//  <item> SFDITEM_FIELD__FRC_INTELEMENT14_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800F8) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT14 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTELEMENT14  --------------------------------
// SVD Line: 60435

//  <rtree> SFDITEM_REG__FRC_INTELEMENT14
//    <name> INTELEMENT14 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800F8) INTELEMENT14 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT14 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT14_INTELEMENT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: FRC_INTELEMENT15  ----------------------------
// SVD Line: 60453

unsigned int FRC_INTELEMENT15 __AT (0x400800FC);



// -------------------------  Field Item: FRC_INTELEMENT15_INTELEMENT  ----------------------------
// SVD Line: 60462

//  <item> SFDITEM_FIELD__FRC_INTELEMENT15_INTELEMENT
//    <name> INTELEMENT </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400800FC) INTELEMENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((FRC_INTELEMENT15 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: FRC_INTELEMENT15  --------------------------------
// SVD Line: 60453

//  <rtree> SFDITEM_REG__FRC_INTELEMENT15
//    <name> INTELEMENT15 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400800FC) INTELEMENT15 </i>
//    <loc> ( (unsigned int)((FRC_INTELEMENT15 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__FRC_INTELEMENT15_INTELEMENT </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: FRC  --------------------------------------
// SVD Line: 57994

//  <view> FRC
//    <name> FRC </name>
//    <item> SFDITEM_REG__FRC_STATUS </item>
//    <item> SFDITEM_REG__FRC_DFLCTRL </item>
//    <item> SFDITEM_REG__FRC_MAXLENGTH </item>
//    <item> SFDITEM_REG__FRC_ADDRFILTCTRL </item>
//    <item> SFDITEM_REG__FRC_DATABUFFER </item>
//    <item> SFDITEM_REG__FRC_WCNT </item>
//    <item> SFDITEM_REG__FRC_WCNTCMP0 </item>
//    <item> SFDITEM_REG__FRC_WCNTCMP1 </item>
//    <item> SFDITEM_REG__FRC_WCNTCMP2 </item>
//    <item> SFDITEM_REG__FRC_CMD </item>
//    <item> SFDITEM_REG__FRC_WHITECTRL </item>
//    <item> SFDITEM_REG__FRC_WHITEPOLY </item>
//    <item> SFDITEM_REG__FRC_WHITEINIT </item>
//    <item> SFDITEM_REG__FRC_FECCTRL </item>
//    <item> SFDITEM_REG__FRC_BLOCKRAMADDR </item>
//    <item> SFDITEM_REG__FRC_CONVRAMADDR </item>
//    <item> SFDITEM_REG__FRC_CTRL </item>
//    <item> SFDITEM_REG__FRC_RXCTRL </item>
//    <item> SFDITEM_REG__FRC_TRAILTXDATACTRL </item>
//    <item> SFDITEM_REG__FRC_TRAILRXDATA </item>
//    <item> SFDITEM_REG__FRC_SCNT </item>
//    <item> SFDITEM_REG__FRC_CONVGENERATOR </item>
//    <item> SFDITEM_REG__FRC_PUNCTCTRL </item>
//    <item> SFDITEM_REG__FRC_PAUSECTRL </item>
//    <item> SFDITEM_REG__FRC_IF </item>
//    <item> SFDITEM_REG__FRC_IFS </item>
//    <item> SFDITEM_REG__FRC_IFC </item>
//    <item> SFDITEM_REG__FRC_IEN </item>
//    <item> SFDITEM_REG__FRC_BUFFERMODE </item>
//    <item> SFDITEM_REG__FRC_ROUTEPEN </item>
//    <item> SFDITEM_REG__FRC_ROUTELOC0 </item>
//    <item> SFDITEM_REG__FRC_SNIFFCTRL </item>
//    <item> SFDITEM_REG__FRC_AUXDATA </item>
//    <item> SFDITEM_REG__FRC_RAWCTRL </item>
//    <item> SFDITEM_REG__FRC_RXRAWDATA </item>
//    <item> SFDITEM_REG__FRC_PAUSEDATA </item>
//    <item> SFDITEM_REG__FRC_LIKELYCONVSTATE </item>
//    <item> SFDITEM_REG__FRC_INTELEMENTNEXT </item>
//    <item> SFDITEM_REG__FRC_INTWRITEPOINT </item>
//    <item> SFDITEM_REG__FRC_INTREADPOINT </item>
//    <item> SFDITEM_REG__FRC_FCD0 </item>
//    <item> SFDITEM_REG__FRC_FCD1 </item>
//    <item> SFDITEM_REG__FRC_FCD2 </item>
//    <item> SFDITEM_REG__FRC_FCD3 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT0 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT1 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT2 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT3 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT4 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT5 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT6 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT7 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT8 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT9 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT10 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT11 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT12 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT13 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT14 </item>
//    <item> SFDITEM_REG__FRC_INTELEMENT15 </item>
//  </view>
//  


// ---------------------------  Register Item Address: MODEM_STATUS  ------------------------------
// SVD Line: 60487

unsigned int MODEM_STATUS __AT (0x40086000);



// ---------------------------  Field Item: MODEM_STATUS_DEMODSTATE  ------------------------------
// SVD Line: 60496

//  <item> SFDITEM_FIELD__MODEM_STATUS_DEMODSTATE
//    <name> DEMODSTATE </name>
//    <r> 
//    <i> [Bits 2..0] RO (@ 0x40086000) DEMODSTATE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_STATUS >> 0) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_STATUS_FRAMEDETID  ------------------------------
// SVD Line: 60503

//  <item> SFDITEM_FIELD__MODEM_STATUS_FRAMEDETID
//    <name> FRAMEDETID </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40086000) FRAMEDETID </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_STATUS ) </loc>
//      <o.4..4> FRAMEDETID
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_STATUS_ANTSEL  --------------------------------
// SVD Line: 60510

//  <item> SFDITEM_FIELD__MODEM_STATUS_ANTSEL
//    <name> ANTSEL </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40086000) ANTSEL </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_STATUS ) </loc>
//      <o.5..5> ANTSEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_STATUS_TIMSEQINV  -------------------------------
// SVD Line: 60517

//  <item> SFDITEM_FIELD__MODEM_STATUS_TIMSEQINV
//    <name> TIMSEQINV </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40086000) TIMSEQINV </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_STATUS ) </loc>
//      <o.6..6> TIMSEQINV
//    </check>
//  </item>
//  


// --------------------------  Field Item: MODEM_STATUS_TIMLOSTCAUSE  -----------------------------
// SVD Line: 60524

//  <item> SFDITEM_FIELD__MODEM_STATUS_TIMLOSTCAUSE
//    <name> TIMLOSTCAUSE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40086000) TIMLOSTCAUSE </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_STATUS ) </loc>
//      <o.7..7> TIMLOSTCAUSE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_STATUS_CORR  ---------------------------------
// SVD Line: 60531

//  <item> SFDITEM_FIELD__MODEM_STATUS_CORR
//    <name> CORR </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0x40086000) CORR </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_STATUS >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_STATUS_WEAKSYMBOLS  ------------------------------
// SVD Line: 60538

//  <item> SFDITEM_FIELD__MODEM_STATUS_WEAKSYMBOLS
//    <name> WEAKSYMBOLS </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x40086000) WEAKSYMBOLS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_STATUS >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MODEM_STATUS  ----------------------------------
// SVD Line: 60487

//  <rtree> SFDITEM_REG__MODEM_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40086000) STATUS </i>
//    <loc> ( (unsigned int)((MODEM_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MODEM_STATUS_DEMODSTATE </item>
//    <item> SFDITEM_FIELD__MODEM_STATUS_FRAMEDETID </item>
//    <item> SFDITEM_FIELD__MODEM_STATUS_ANTSEL </item>
//    <item> SFDITEM_FIELD__MODEM_STATUS_TIMSEQINV </item>
//    <item> SFDITEM_FIELD__MODEM_STATUS_TIMLOSTCAUSE </item>
//    <item> SFDITEM_FIELD__MODEM_STATUS_CORR </item>
//    <item> SFDITEM_FIELD__MODEM_STATUS_WEAKSYMBOLS </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_TIMDETSTATUS  ---------------------------
// SVD Line: 60547

unsigned int MODEM_TIMDETSTATUS __AT (0x40086004);



// ------------------------  Field Item: MODEM_TIMDETSTATUS_TIMDETCORR  ---------------------------
// SVD Line: 60556

//  <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETCORR
//    <name> TIMDETCORR </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40086004) TIMDETCORR </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMDETSTATUS >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: MODEM_TIMDETSTATUS_TIMDETFREQOFFEST  ------------------------
// SVD Line: 60563

//  <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETFREQOFFEST
//    <name> TIMDETFREQOFFEST </name>
//    <r> 
//    <i> [Bits 15..8] RO (@ 0x40086004) TIMDETFREQOFFEST </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMDETSTATUS >> 8) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: MODEM_TIMDETSTATUS_TIMDETPREERRORS  -------------------------
// SVD Line: 60570

//  <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETPREERRORS
//    <name> TIMDETPREERRORS </name>
//    <r> 
//    <i> [Bits 19..16] RO (@ 0x40086004) TIMDETPREERRORS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMDETSTATUS >> 16) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: MODEM_TIMDETSTATUS_TIMDETPASS  ---------------------------
// SVD Line: 60577

//  <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETPASS
//    <name> TIMDETPASS </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40086004) TIMDETPASS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_TIMDETSTATUS ) </loc>
//      <o.24..24> TIMDETPASS
//    </check>
//  </item>
//  


// -----------------------  Field Item: MODEM_TIMDETSTATUS_TIMDETINDEX  ---------------------------
// SVD Line: 60584

//  <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETINDEX
//    <name> TIMDETINDEX </name>
//    <r> 
//    <i> [Bits 28..25] RO (@ 0x40086004) TIMDETINDEX </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMDETSTATUS >> 25) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_TIMDETSTATUS  -------------------------------
// SVD Line: 60547

//  <rtree> SFDITEM_REG__MODEM_TIMDETSTATUS
//    <name> TIMDETSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40086004) TIMDETSTATUS </i>
//    <loc> ( (unsigned int)((MODEM_TIMDETSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETCORR </item>
//    <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETFREQOFFEST </item>
//    <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETPREERRORS </item>
//    <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETPASS </item>
//    <item> SFDITEM_FIELD__MODEM_TIMDETSTATUS_TIMDETINDEX </item>
//  </rtree>
//  


// -------------------------  Register Item Address: MODEM_FREQOFFEST  ----------------------------
// SVD Line: 60593

unsigned int MODEM_FREQOFFEST __AT (0x40086008);



// -------------------------  Field Item: MODEM_FREQOFFEST_FREQOFFEST  ----------------------------
// SVD Line: 60602

//  <item> SFDITEM_FIELD__MODEM_FREQOFFEST_FREQOFFEST
//    <name> FREQOFFEST </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40086008) FREQOFFEST </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_FREQOFFEST >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_FREQOFFEST_POE  --------------------------------
// SVD Line: 60609

//  <item> SFDITEM_FIELD__MODEM_FREQOFFEST_POE
//    <name> POE </name>
//    <r> 
//    <i> [Bits 15..8] RO (@ 0x40086008) POE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_FREQOFFEST >> 8) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_FREQOFFEST_CORRVAL  ------------------------------
// SVD Line: 60616

//  <item> SFDITEM_FIELD__MODEM_FREQOFFEST_CORRVAL
//    <name> CORRVAL </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0x40086008) CORRVAL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_FREQOFFEST >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_FREQOFFEST_SOFTVAL  ------------------------------
// SVD Line: 60623

//  <item> SFDITEM_FIELD__MODEM_FREQOFFEST_SOFTVAL
//    <name> SOFTVAL </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x40086008) SOFTVAL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_FREQOFFEST >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: MODEM_FREQOFFEST  --------------------------------
// SVD Line: 60593

//  <rtree> SFDITEM_REG__MODEM_FREQOFFEST
//    <name> FREQOFFEST </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40086008) FREQOFFEST </i>
//    <loc> ( (unsigned int)((MODEM_FREQOFFEST >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MODEM_FREQOFFEST_FREQOFFEST </item>
//    <item> SFDITEM_FIELD__MODEM_FREQOFFEST_POE </item>
//    <item> SFDITEM_FIELD__MODEM_FREQOFFEST_CORRVAL </item>
//    <item> SFDITEM_FIELD__MODEM_FREQOFFEST_SOFTVAL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_AFCADJRX  -----------------------------
// SVD Line: 60632

unsigned int MODEM_AFCADJRX __AT (0x4008600C);



// ---------------------------  Field Item: MODEM_AFCADJRX_AFCADJRX  ------------------------------
// SVD Line: 60641

//  <item> SFDITEM_FIELD__MODEM_AFCADJRX_AFCADJRX
//    <name> AFCADJRX </name>
//    <r> 
//    <i> [Bits 18..0] RO (@ 0x4008600C) AFCADJRX </i>
//    <edit> 
//      <loc> ( (unsigned int)((MODEM_AFCADJRX >> 0) & 0x7FFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_AFCADJRX  ---------------------------------
// SVD Line: 60632

//  <rtree> SFDITEM_REG__MODEM_AFCADJRX
//    <name> AFCADJRX </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008600C) AFCADJRX </i>
//    <loc> ( (unsigned int)((MODEM_AFCADJRX >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MODEM_AFCADJRX_AFCADJRX </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_AFCADJTX  -----------------------------
// SVD Line: 60650

unsigned int MODEM_AFCADJTX __AT (0x40086010);



// ---------------------------  Field Item: MODEM_AFCADJTX_AFCADJTX  ------------------------------
// SVD Line: 60659

//  <item> SFDITEM_FIELD__MODEM_AFCADJTX_AFCADJTX
//    <name> AFCADJTX </name>
//    <r> 
//    <i> [Bits 18..0] RO (@ 0x40086010) AFCADJTX </i>
//    <edit> 
//      <loc> ( (unsigned int)((MODEM_AFCADJTX >> 0) & 0x7FFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_AFCADJTX  ---------------------------------
// SVD Line: 60650

//  <rtree> SFDITEM_REG__MODEM_AFCADJTX
//    <name> AFCADJTX </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40086010) AFCADJTX </i>
//    <loc> ( (unsigned int)((MODEM_AFCADJTX >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MODEM_AFCADJTX_AFCADJTX </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_MIXCTRL  ------------------------------
// SVD Line: 60668

unsigned int MODEM_MIXCTRL __AT (0x40086014);



// -----------------------------  Field Item: MODEM_MIXCTRL_MODE  ---------------------------------
// SVD Line: 60677

//  <item> SFDITEM_FIELD__MODEM_MIXCTRL_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40086014) MODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_MIXCTRL >> 0) & 0xF), ((MODEM_MIXCTRL = (MODEM_MIXCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_MIXCTRL_DIGIQSWAPEN  -----------------------------
// SVD Line: 60684

//  <item> SFDITEM_FIELD__MODEM_MIXCTRL_DIGIQSWAPEN
//    <name> DIGIQSWAPEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40086014) DIGIQSWAPEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_MIXCTRL ) </loc>
//      <o.4..4> DIGIQSWAPEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: MODEM_MIXCTRL  ---------------------------------
// SVD Line: 60668

//  <rtree> SFDITEM_REG__MODEM_MIXCTRL
//    <name> MIXCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086014) MIXCTRL </i>
//    <loc> ( (unsigned int)((MODEM_MIXCTRL >> 0) & 0xFFFFFFFF), ((MODEM_MIXCTRL = (MODEM_MIXCTRL & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_MIXCTRL_MODE </item>
//    <item> SFDITEM_FIELD__MODEM_MIXCTRL_DIGIQSWAPEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_CTRL0  -------------------------------
// SVD Line: 60693

unsigned int MODEM_CTRL0 __AT (0x40086018);



// ---------------------------  Field Item: MODEM_CTRL0_FDM0DIFFDIS  ------------------------------
// SVD Line: 60702

//  <item> SFDITEM_FIELD__MODEM_CTRL0_FDM0DIFFDIS
//    <name> FDM0DIFFDIS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40086018) FDM0DIFFDIS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL0 ) </loc>
//      <o.0..0> FDM0DIFFDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL0_MAPFSK  ---------------------------------
// SVD Line: 60709

//  <item> SFDITEM_FIELD__MODEM_CTRL0_MAPFSK
//    <name> MAPFSK </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40086018) MAPFSK </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 1) & 0x7), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL0_CODING  ---------------------------------
// SVD Line: 60716

//  <item> SFDITEM_FIELD__MODEM_CTRL0_CODING
//    <name> CODING </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40086018) CODING </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 4) & 0x3), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL0_MODFORMAT  -------------------------------
// SVD Line: 60723

//  <item> SFDITEM_FIELD__MODEM_CTRL0_MODFORMAT
//    <name> MODFORMAT </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x40086018) MODFORMAT </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 6) & 0x7), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: MODEM_CTRL0_DUALCORROPTDIS  -----------------------------
// SVD Line: 60730

//  <item> SFDITEM_FIELD__MODEM_CTRL0_DUALCORROPTDIS
//    <name> DUALCORROPTDIS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40086018) DUALCORROPTDIS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL0 ) </loc>
//      <o.9..9> DUALCORROPTDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL0_DSSSLEN  --------------------------------
// SVD Line: 60737

//  <item> SFDITEM_FIELD__MODEM_CTRL0_DSSSLEN
//    <name> DSSSLEN </name>
//    <rw> 
//    <i> [Bits 15..11] RW (@ 0x40086018) DSSSLEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 11) & 0x1F), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x1FUL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL0_DSSSSHIFTS  -------------------------------
// SVD Line: 60744

//  <item> SFDITEM_FIELD__MODEM_CTRL0_DSSSSHIFTS
//    <name> DSSSSHIFTS </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40086018) DSSSSHIFTS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 16) & 0x7), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL0_DSSSDOUBLE  -------------------------------
// SVD Line: 60751

//  <item> SFDITEM_FIELD__MODEM_CTRL0_DSSSDOUBLE
//    <name> DSSSDOUBLE </name>
//    <rw> 
//    <i> [Bits 20..19] RW (@ 0x40086018) DSSSDOUBLE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 19) & 0x3), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x3UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL0_DETDIS  ---------------------------------
// SVD Line: 60758

//  <item> SFDITEM_FIELD__MODEM_CTRL0_DETDIS
//    <name> DETDIS </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40086018) DETDIS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL0 ) </loc>
//      <o.21..21> DETDIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL0_DIFFENCMODE  ------------------------------
// SVD Line: 60765

//  <item> SFDITEM_FIELD__MODEM_CTRL0_DIFFENCMODE
//    <name> DIFFENCMODE </name>
//    <rw> 
//    <i> [Bits 24..22] RW (@ 0x40086018) DIFFENCMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 22) & 0x7), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x7UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL0_SHAPING  --------------------------------
// SVD Line: 60772

//  <item> SFDITEM_FIELD__MODEM_CTRL0_SHAPING
//    <name> SHAPING </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40086018) SHAPING </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 25) & 0x3), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: MODEM_CTRL0_DEMODRAWDATASEL  ----------------------------
// SVD Line: 60779

//  <item> SFDITEM_FIELD__MODEM_CTRL0_DEMODRAWDATASEL
//    <name> DEMODRAWDATASEL </name>
//    <rw> 
//    <i> [Bits 29..27] RW (@ 0x40086018) DEMODRAWDATASEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 27) & 0x7), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x7UL << 27 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 27 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL0_FRAMEDETDEL  ------------------------------
// SVD Line: 60786

//  <item> SFDITEM_FIELD__MODEM_CTRL0_FRAMEDETDEL
//    <name> FRAMEDETDEL </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x40086018) FRAMEDETDEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL0 >> 30) & 0x3), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_CTRL0  ----------------------------------
// SVD Line: 60693

//  <rtree> SFDITEM_REG__MODEM_CTRL0
//    <name> CTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086018) CTRL0 </i>
//    <loc> ( (unsigned int)((MODEM_CTRL0 >> 0) & 0xFFFFFFFF), ((MODEM_CTRL0 = (MODEM_CTRL0 & ~(0xFFFFFBFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFBFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_FDM0DIFFDIS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_MAPFSK </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_CODING </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_MODFORMAT </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_DUALCORROPTDIS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_DSSSLEN </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_DSSSSHIFTS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_DSSSDOUBLE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_DETDIS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_DIFFENCMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_SHAPING </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_DEMODRAWDATASEL </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL0_FRAMEDETDEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_CTRL1  -------------------------------
// SVD Line: 60795

unsigned int MODEM_CTRL1 __AT (0x4008601C);



// ----------------------------  Field Item: MODEM_CTRL1_SYNCBITS  --------------------------------
// SVD Line: 60804

//  <item> SFDITEM_FIELD__MODEM_CTRL1_SYNCBITS
//    <name> SYNCBITS </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4008601C) SYNCBITS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL1 >> 0) & 0x1F), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL1_SYNCERRORS  -------------------------------
// SVD Line: 60811

//  <item> SFDITEM_FIELD__MODEM_CTRL1_SYNCERRORS
//    <name> SYNCERRORS </name>
//    <rw> 
//    <i> [Bits 8..5] RW (@ 0x4008601C) SYNCERRORS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL1 >> 5) & 0xF), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0xFUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL1_DUALSYNC  --------------------------------
// SVD Line: 60818

//  <item> SFDITEM_FIELD__MODEM_CTRL1_DUALSYNC
//    <name> DUALSYNC </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008601C) DUALSYNC </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL1 ) </loc>
//      <o.9..9> DUALSYNC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL1_TXSYNC  ---------------------------------
// SVD Line: 60825

//  <item> SFDITEM_FIELD__MODEM_CTRL1_TXSYNC
//    <name> TXSYNC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4008601C) TXSYNC </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL1 ) </loc>
//      <o.10..10> TXSYNC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL1_SYNCDATA  --------------------------------
// SVD Line: 60832

//  <item> SFDITEM_FIELD__MODEM_CTRL1_SYNCDATA
//    <name> SYNCDATA </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4008601C) SYNCDATA </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL1 ) </loc>
//      <o.11..11> SYNCDATA
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL1_SYNC1INV  --------------------------------
// SVD Line: 60839

//  <item> SFDITEM_FIELD__MODEM_CTRL1_SYNC1INV
//    <name> SYNC1INV </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4008601C) SYNC1INV </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL1 ) </loc>
//      <o.12..12> SYNC1INV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL1_COMPMODE  --------------------------------
// SVD Line: 60846

//  <item> SFDITEM_FIELD__MODEM_CTRL1_COMPMODE
//    <name> COMPMODE </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x4008601C) COMPMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL1 >> 14) & 0x3), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL1_RESYNCPER  -------------------------------
// SVD Line: 60853

//  <item> SFDITEM_FIELD__MODEM_CTRL1_RESYNCPER
//    <name> RESYNCPER </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4008601C) RESYNCPER </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL1 >> 16) & 0xF), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL1_PHASEDEMOD  -------------------------------
// SVD Line: 60860

//  <item> SFDITEM_FIELD__MODEM_CTRL1_PHASEDEMOD
//    <name> PHASEDEMOD </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x4008601C) PHASEDEMOD </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL1 >> 20) & 0x3), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_CTRL1_FREQOFFESTPER  -----------------------------
// SVD Line: 60867

//  <item> SFDITEM_FIELD__MODEM_CTRL1_FREQOFFESTPER
//    <name> FREQOFFESTPER </name>
//    <rw> 
//    <i> [Bits 24..22] RW (@ 0x4008601C) FREQOFFESTPER </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL1 >> 22) & 0x7), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0x7UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_CTRL1_FREQOFFESTLIM  -----------------------------
// SVD Line: 60874

//  <item> SFDITEM_FIELD__MODEM_CTRL1_FREQOFFESTLIM
//    <name> FREQOFFESTLIM </name>
//    <rw> 
//    <i> [Bits 31..25] RW (@ 0x4008601C) FREQOFFESTLIM </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL1 >> 25) & 0x7F), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0x7FUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_CTRL1  ----------------------------------
// SVD Line: 60795

//  <rtree> SFDITEM_REG__MODEM_CTRL1
//    <name> CTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008601C) CTRL1 </i>
//    <loc> ( (unsigned int)((MODEM_CTRL1 >> 0) & 0xFFFFFFFF), ((MODEM_CTRL1 = (MODEM_CTRL1 & ~(0xFFFFDFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFDFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_SYNCBITS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_SYNCERRORS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_DUALSYNC </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_TXSYNC </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_SYNCDATA </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_SYNC1INV </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_COMPMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_RESYNCPER </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_PHASEDEMOD </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_FREQOFFESTPER </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL1_FREQOFFESTLIM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_CTRL2  -------------------------------
// SVD Line: 60883

unsigned int MODEM_CTRL2 __AT (0x40086020);



// ----------------------------  Field Item: MODEM_CTRL2_SQITHRESH  -------------------------------
// SVD Line: 60892

//  <item> SFDITEM_FIELD__MODEM_CTRL2_SQITHRESH
//    <name> SQITHRESH </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086020) SQITHRESH </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 0) & 0xFF), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL2_RXFRCDIS  --------------------------------
// SVD Line: 60899

//  <item> SFDITEM_FIELD__MODEM_CTRL2_RXFRCDIS
//    <name> RXFRCDIS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40086020) RXFRCDIS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL2 ) </loc>
//      <o.8..8> RXFRCDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL2_RXPINMODE  -------------------------------
// SVD Line: 60906

//  <item> SFDITEM_FIELD__MODEM_CTRL2_RXPINMODE
//    <name> RXPINMODE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40086020) RXPINMODE </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL2 ) </loc>
//      <o.9..9> RXPINMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL2_TXPINMODE  -------------------------------
// SVD Line: 60913

//  <item> SFDITEM_FIELD__MODEM_CTRL2_TXPINMODE
//    <name> TXPINMODE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40086020) TXPINMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 10) & 0x3), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL2_DATAFILTER  -------------------------------
// SVD Line: 60920

//  <item> SFDITEM_FIELD__MODEM_CTRL2_DATAFILTER
//    <name> DATAFILTER </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40086020) DATAFILTER </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 12) & 0x3), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL2_BRDIVA  ---------------------------------
// SVD Line: 60927

//  <item> SFDITEM_FIELD__MODEM_CTRL2_BRDIVA
//    <name> BRDIVA </name>
//    <rw> 
//    <i> [Bits 17..14] RW (@ 0x40086020) BRDIVA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 14) & 0xF), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0xFUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL2_BRDIVB  ---------------------------------
// SVD Line: 60934

//  <item> SFDITEM_FIELD__MODEM_CTRL2_BRDIVB
//    <name> BRDIVB </name>
//    <rw> 
//    <i> [Bits 21..18] RW (@ 0x40086020) BRDIVB </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 18) & 0xF), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0xFUL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL2_DEVMULA  --------------------------------
// SVD Line: 60941

//  <item> SFDITEM_FIELD__MODEM_CTRL2_DEVMULA
//    <name> DEVMULA </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x40086020) DEVMULA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 22) & 0x3), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL2_DEVMULB  --------------------------------
// SVD Line: 60948

//  <item> SFDITEM_FIELD__MODEM_CTRL2_DEVMULB
//    <name> DEVMULB </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40086020) DEVMULB </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 24) & 0x3), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL2_RATESELMODE  ------------------------------
// SVD Line: 60955

//  <item> SFDITEM_FIELD__MODEM_CTRL2_RATESELMODE
//    <name> RATESELMODE </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40086020) RATESELMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 26) & 0x3), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL2_PRSDEBUG  --------------------------------
// SVD Line: 60962

//  <item> SFDITEM_FIELD__MODEM_CTRL2_PRSDEBUG
//    <name> PRSDEBUG </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40086020) PRSDEBUG </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL2 ) </loc>
//      <o.28..28> PRSDEBUG
//    </check>
//  </item>
//  


// --------------------------  Field Item: MODEM_CTRL2_DEVWEIGHTDIS  ------------------------------
// SVD Line: 60969

//  <item> SFDITEM_FIELD__MODEM_CTRL2_DEVWEIGHTDIS
//    <name> DEVWEIGHTDIS </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40086020) DEVWEIGHTDIS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL2 ) </loc>
//      <o.29..29> DEVWEIGHTDIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL2_DMASEL  ---------------------------------
// SVD Line: 60976

//  <item> SFDITEM_FIELD__MODEM_CTRL2_DMASEL
//    <name> DMASEL </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x40086020) DMASEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL2 >> 30) & 0x3), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_CTRL2  ----------------------------------
// SVD Line: 60883

//  <rtree> SFDITEM_REG__MODEM_CTRL2
//    <name> CTRL2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086020) CTRL2 </i>
//    <loc> ( (unsigned int)((MODEM_CTRL2 >> 0) & 0xFFFFFFFF), ((MODEM_CTRL2 = (MODEM_CTRL2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_SQITHRESH </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_RXFRCDIS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_RXPINMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_TXPINMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_DATAFILTER </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_BRDIVA </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_BRDIVB </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_DEVMULA </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_DEVMULB </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_RATESELMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_PRSDEBUG </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_DEVWEIGHTDIS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL2_DMASEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_CTRL3  -------------------------------
// SVD Line: 60985

unsigned int MODEM_CTRL3 __AT (0x40086024);



// ----------------------------  Field Item: MODEM_CTRL3_PRSDINEN  --------------------------------
// SVD Line: 60994

//  <item> SFDITEM_FIELD__MODEM_CTRL3_PRSDINEN
//    <name> PRSDINEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40086024) PRSDINEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL3 ) </loc>
//      <o.0..0> PRSDINEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL3_PRSDINSEL  -------------------------------
// SVD Line: 61001

//  <item> SFDITEM_FIELD__MODEM_CTRL3_PRSDINSEL
//    <name> PRSDINSEL </name>
//    <rw> 
//    <i> [Bits 4..1] RW (@ 0x40086024) PRSDINSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL3 >> 1) & 0xF), ((MODEM_CTRL3 = (MODEM_CTRL3 & ~(0xFUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL3_RAMTESTEN  -------------------------------
// SVD Line: 61008

//  <item> SFDITEM_FIELD__MODEM_CTRL3_RAMTESTEN
//    <name> RAMTESTEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40086024) RAMTESTEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL3 ) </loc>
//      <o.7..7> RAMTESTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL3_ANTDIVMODE  -------------------------------
// SVD Line: 61015

//  <item> SFDITEM_FIELD__MODEM_CTRL3_ANTDIVMODE
//    <name> ANTDIVMODE </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40086024) ANTDIVMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL3 >> 8) & 0x7), ((MODEM_CTRL3 = (MODEM_CTRL3 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: MODEM_CTRL3_ANTDIVREPEATDIS  ----------------------------
// SVD Line: 61022

//  <item> SFDITEM_FIELD__MODEM_CTRL3_ANTDIVREPEATDIS
//    <name> ANTDIVREPEATDIS </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40086024) ANTDIVREPEATDIS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL3 ) </loc>
//      <o.11..11> ANTDIVREPEATDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL3_TSAMPMODE  -------------------------------
// SVD Line: 61029

//  <item> SFDITEM_FIELD__MODEM_CTRL3_TSAMPMODE
//    <name> TSAMPMODE </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40086024) TSAMPMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL3 >> 12) & 0x3), ((MODEM_CTRL3 = (MODEM_CTRL3 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL3_TSAMPDEL  --------------------------------
// SVD Line: 61036

//  <item> SFDITEM_FIELD__MODEM_CTRL3_TSAMPDEL
//    <name> TSAMPDEL </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40086024) TSAMPDEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL3 >> 14) & 0x3), ((MODEM_CTRL3 = (MODEM_CTRL3 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL3_TSAMPLIM  --------------------------------
// SVD Line: 61043

//  <item> SFDITEM_FIELD__MODEM_CTRL3_TSAMPLIM
//    <name> TSAMPLIM </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40086024) TSAMPLIM </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_CTRL3 >> 16) & 0xFFFF), ((MODEM_CTRL3 = (MODEM_CTRL3 & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_CTRL3  ----------------------------------
// SVD Line: 60985

//  <rtree> SFDITEM_REG__MODEM_CTRL3
//    <name> CTRL3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086024) CTRL3 </i>
//    <loc> ( (unsigned int)((MODEM_CTRL3 >> 0) & 0xFFFFFFFF), ((MODEM_CTRL3 = (MODEM_CTRL3 & ~(0xFFFFFF9FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF9F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_PRSDINEN </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_PRSDINSEL </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_RAMTESTEN </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_ANTDIVMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_ANTDIVREPEATDIS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_TSAMPMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_TSAMPDEL </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL3_TSAMPLIM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_CTRL4  -------------------------------
// SVD Line: 61052

unsigned int MODEM_CTRL4 __AT (0x40086028);



// -----------------------------  Field Item: MODEM_CTRL4_ISICOMP  --------------------------------
// SVD Line: 61061

//  <item> SFDITEM_FIELD__MODEM_CTRL4_ISICOMP
//    <name> ISICOMP </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40086028) ISICOMP </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL4 >> 0) & 0xF), ((MODEM_CTRL4 = (MODEM_CTRL4 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_DEVOFFCOMP  -------------------------------
// SVD Line: 61068

//  <item> SFDITEM_FIELD__MODEM_CTRL4_DEVOFFCOMP
//    <name> DEVOFFCOMP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40086028) DEVOFFCOMP </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL4 ) </loc>
//      <o.4..4> DEVOFFCOMP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_PREDISTGAIN  ------------------------------
// SVD Line: 61075

//  <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTGAIN
//    <name> PREDISTGAIN </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40086028) PREDISTGAIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL4 >> 5) & 0x1F), ((MODEM_CTRL4 = (MODEM_CTRL4 & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_PREDISTDEB  -------------------------------
// SVD Line: 61082

//  <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTDEB
//    <name> PREDISTDEB </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40086028) PREDISTDEB </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL4 >> 10) & 0x7), ((MODEM_CTRL4 = (MODEM_CTRL4 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_PREDISTAVG  -------------------------------
// SVD Line: 61089

//  <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTAVG
//    <name> PREDISTAVG </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40086028) PREDISTAVG </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL4 ) </loc>
//      <o.13..13> PREDISTAVG
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_PREDISTRST  -------------------------------
// SVD Line: 61096

//  <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTRST
//    <name> PREDISTRST </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40086028) PREDISTRST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL4 ) </loc>
//      <o.14..14> PREDISTRST
//    </check>
//  </item>
//  


// -------------------------  Field Item: MODEM_CTRL4_PHASECLICKFILT  -----------------------------
// SVD Line: 61103

//  <item> SFDITEM_FIELD__MODEM_CTRL4_PHASECLICKFILT
//    <name> PHASECLICKFILT </name>
//    <rw> 
//    <i> [Bits 21..15] RW (@ 0x40086028) PHASECLICKFILT </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL4 >> 15) & 0x7F), ((MODEM_CTRL4 = (MODEM_CTRL4 & ~(0x7FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_CTRL4_SOFTDSSSMODE  ------------------------------
// SVD Line: 61110

//  <item> SFDITEM_FIELD__MODEM_CTRL4_SOFTDSSSMODE
//    <name> SOFTDSSSMODE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40086028) SOFTDSSSMODE </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL4 ) </loc>
//      <o.22..22> SOFTDSSSMODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_ADCSATLEVEL  ------------------------------
// SVD Line: 61117

//  <item> SFDITEM_FIELD__MODEM_CTRL4_ADCSATLEVEL
//    <name> ADCSATLEVEL </name>
//    <rw> 
//    <i> [Bits 25..23] RW (@ 0x40086028) ADCSATLEVEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL4 >> 23) & 0x7), ((MODEM_CTRL4 = (MODEM_CTRL4 & ~(0x7UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_ADCSATDENS  -------------------------------
// SVD Line: 61124

//  <item> SFDITEM_FIELD__MODEM_CTRL4_ADCSATDENS
//    <name> ADCSATDENS </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40086028) ADCSATDENS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL4 >> 26) & 0x3), ((MODEM_CTRL4 = (MODEM_CTRL4 & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: MODEM_CTRL4_OFFSETPHASEMASKING  ---------------------------
// SVD Line: 61131

//  <item> SFDITEM_FIELD__MODEM_CTRL4_OFFSETPHASEMASKING
//    <name> OFFSETPHASEMASKING </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40086028) OFFSETPHASEMASKING </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL4 ) </loc>
//      <o.28..28> OFFSETPHASEMASKING
//    </check>
//  </item>
//  


// -----------------------  Field Item: MODEM_CTRL4_OFFSETPHASESCALING  ---------------------------
// SVD Line: 61138

//  <item> SFDITEM_FIELD__MODEM_CTRL4_OFFSETPHASESCALING
//    <name> OFFSETPHASESCALING </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40086028) OFFSETPHASESCALING </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL4 ) </loc>
//      <o.29..29> OFFSETPHASESCALING
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_CTRL4_CLKUNDIVREQ  ------------------------------
// SVD Line: 61145

//  <item> SFDITEM_FIELD__MODEM_CTRL4_CLKUNDIVREQ
//    <name> CLKUNDIVREQ </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40086028) CLKUNDIVREQ </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL4 ) </loc>
//      <o.31..31> CLKUNDIVREQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_CTRL4  ----------------------------------
// SVD Line: 61052

//  <rtree> SFDITEM_REG__MODEM_CTRL4
//    <name> CTRL4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086028) CTRL4 </i>
//    <loc> ( (unsigned int)((MODEM_CTRL4 >> 0) & 0xFFFFFFFF), ((MODEM_CTRL4 = (MODEM_CTRL4 & ~(0xBFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_ISICOMP </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_DEVOFFCOMP </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTGAIN </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTDEB </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTAVG </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_PREDISTRST </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_PHASECLICKFILT </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_SOFTDSSSMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_ADCSATLEVEL </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_ADCSATDENS </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_OFFSETPHASEMASKING </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_OFFSETPHASESCALING </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL4_CLKUNDIVREQ </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_CTRL5  -------------------------------
// SVD Line: 61154

unsigned int MODEM_CTRL5 __AT (0x4008602C);



// -----------------------------  Field Item: MODEM_CTRL5_BRCALEN  --------------------------------
// SVD Line: 61163

//  <item> SFDITEM_FIELD__MODEM_CTRL5_BRCALEN
//    <name> BRCALEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008602C) BRCALEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL5 ) </loc>
//      <o.1..1> BRCALEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL5_BRCALMODE  -------------------------------
// SVD Line: 61170

//  <item> SFDITEM_FIELD__MODEM_CTRL5_BRCALMODE
//    <name> BRCALMODE </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x4008602C) BRCALMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL5 >> 2) & 0x3), ((MODEM_CTRL5 = (MODEM_CTRL5 & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CTRL5_BRCALAVG  --------------------------------
// SVD Line: 61177

//  <item> SFDITEM_FIELD__MODEM_CTRL5_BRCALAVG
//    <name> BRCALAVG </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4008602C) BRCALAVG </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL5 >> 4) & 0x3), ((MODEM_CTRL5 = (MODEM_CTRL5 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL5_DETDEL  ---------------------------------
// SVD Line: 61184

//  <item> SFDITEM_FIELD__MODEM_CTRL5_DETDEL
//    <name> DETDEL </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x4008602C) DETDEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CTRL5 >> 6) & 0x7), ((MODEM_CTRL5 = (MODEM_CTRL5 & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL5_TDEDGE  ---------------------------------
// SVD Line: 61191

//  <item> SFDITEM_FIELD__MODEM_CTRL5_TDEDGE
//    <name> TDEDGE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008602C) TDEDGE </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL5 ) </loc>
//      <o.9..9> TDEDGE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CTRL5_TREDGE  ---------------------------------
// SVD Line: 61198

//  <item> SFDITEM_FIELD__MODEM_CTRL5_TREDGE
//    <name> TREDGE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4008602C) TREDGE </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CTRL5 ) </loc>
//      <o.10..10> TREDGE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_CTRL5  ----------------------------------
// SVD Line: 61154

//  <rtree> SFDITEM_REG__MODEM_CTRL5
//    <name> CTRL5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008602C) CTRL5 </i>
//    <loc> ( (unsigned int)((MODEM_CTRL5 >> 0) & 0xFFFFFFFF), ((MODEM_CTRL5 = (MODEM_CTRL5 & ~(0x7FEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CTRL5_BRCALEN </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL5_BRCALMODE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL5_BRCALAVG </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL5_DETDEL </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL5_TDEDGE </item>
//    <item> SFDITEM_FIELD__MODEM_CTRL5_TREDGE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_TXBR  -------------------------------
// SVD Line: 61207

unsigned int MODEM_TXBR __AT (0x40086030);



// -----------------------------  Field Item: MODEM_TXBR_TXBRNUM  ---------------------------------
// SVD Line: 61216

//  <item> SFDITEM_FIELD__MODEM_TXBR_TXBRNUM
//    <name> TXBRNUM </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40086030) TXBRNUM </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_TXBR >> 0) & 0xFFFF), ((MODEM_TXBR = (MODEM_TXBR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_TXBR_TXBRDEN  ---------------------------------
// SVD Line: 61223

//  <item> SFDITEM_FIELD__MODEM_TXBR_TXBRDEN
//    <name> TXBRDEN </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40086030) TXBRDEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TXBR >> 16) & 0xFF), ((MODEM_TXBR = (MODEM_TXBR & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_TXBR  -----------------------------------
// SVD Line: 61207

//  <rtree> SFDITEM_REG__MODEM_TXBR
//    <name> TXBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086030) TXBR </i>
//    <loc> ( (unsigned int)((MODEM_TXBR >> 0) & 0xFFFFFFFF), ((MODEM_TXBR = (MODEM_TXBR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_TXBR_TXBRNUM </item>
//    <item> SFDITEM_FIELD__MODEM_TXBR_TXBRDEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_RXBR  -------------------------------
// SVD Line: 61232

unsigned int MODEM_RXBR __AT (0x40086034);



// -----------------------------  Field Item: MODEM_RXBR_RXBRNUM  ---------------------------------
// SVD Line: 61241

//  <item> SFDITEM_FIELD__MODEM_RXBR_RXBRNUM
//    <name> RXBRNUM </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40086034) RXBRNUM </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RXBR >> 0) & 0x1F), ((MODEM_RXBR = (MODEM_RXBR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_RXBR_RXBRDEN  ---------------------------------
// SVD Line: 61248

//  <item> SFDITEM_FIELD__MODEM_RXBR_RXBRDEN
//    <name> RXBRDEN </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40086034) RXBRDEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RXBR >> 5) & 0x1F), ((MODEM_RXBR = (MODEM_RXBR & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_RXBR_RXBRINT  ---------------------------------
// SVD Line: 61255

//  <item> SFDITEM_FIELD__MODEM_RXBR_RXBRINT
//    <name> RXBRINT </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40086034) RXBRINT </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RXBR >> 10) & 0x7), ((MODEM_RXBR = (MODEM_RXBR & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_RXBR  -----------------------------------
// SVD Line: 61232

//  <rtree> SFDITEM_REG__MODEM_RXBR
//    <name> RXBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086034) RXBR </i>
//    <loc> ( (unsigned int)((MODEM_RXBR >> 0) & 0xFFFFFFFF), ((MODEM_RXBR = (MODEM_RXBR & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RXBR_RXBRNUM </item>
//    <item> SFDITEM_FIELD__MODEM_RXBR_RXBRDEN </item>
//    <item> SFDITEM_FIELD__MODEM_RXBR_RXBRINT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MODEM_CF  --------------------------------
// SVD Line: 61264

unsigned int MODEM_CF __AT (0x40086038);



// --------------------------------  Field Item: MODEM_CF_DEC0  -----------------------------------
// SVD Line: 61273

//  <item> SFDITEM_FIELD__MODEM_CF_DEC0
//    <name> DEC0 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40086038) DEC0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CF >> 0) & 0x7), ((MODEM_CF = (MODEM_CF & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: MODEM_CF_DEC1  -----------------------------------
// SVD Line: 61280

//  <item> SFDITEM_FIELD__MODEM_CF_DEC1
//    <name> DEC1 </name>
//    <rw> 
//    <i> [Bits 16..3] RW (@ 0x40086038) DEC1 </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_CF >> 3) & 0x3FFF), ((MODEM_CF = (MODEM_CF & ~(0x3FFFUL << 3 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FFF) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: MODEM_CF_DEC2  -----------------------------------
// SVD Line: 61287

//  <item> SFDITEM_FIELD__MODEM_CF_DEC2
//    <name> DEC2 </name>
//    <rw> 
//    <i> [Bits 22..17] RW (@ 0x40086038) DEC2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CF >> 17) & 0x3F), ((MODEM_CF = (MODEM_CF & ~(0x3FUL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: MODEM_CF_CFOSR  -----------------------------------
// SVD Line: 61294

//  <item> SFDITEM_FIELD__MODEM_CF_CFOSR
//    <name> CFOSR </name>
//    <rw> 
//    <i> [Bits 25..23] RW (@ 0x40086038) CFOSR </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CF >> 23) & 0x7), ((MODEM_CF = (MODEM_CF & ~(0x7UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: MODEM_CF_DEC1GAIN  ---------------------------------
// SVD Line: 61301

//  <item> SFDITEM_FIELD__MODEM_CF_DEC1GAIN
//    <name> DEC1GAIN </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40086038) DEC1GAIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_CF >> 26) & 0x3), ((MODEM_CF = (MODEM_CF & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: MODEM_CF_RESYNCRESETTIMING  -----------------------------
// SVD Line: 61308

//  <item> SFDITEM_FIELD__MODEM_CF_RESYNCRESETTIMING
//    <name> RESYNCRESETTIMING </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40086038) RESYNCRESETTIMING </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CF ) </loc>
//      <o.28..28> RESYNCRESETTIMING
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CF_RESYNCBYPASS  -------------------------------
// SVD Line: 61315

//  <item> SFDITEM_FIELD__MODEM_CF_RESYNCBYPASS
//    <name> RESYNCBYPASS </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40086038) RESYNCBYPASS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CF ) </loc>
//      <o.29..29> RESYNCBYPASS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_CF  ------------------------------------
// SVD Line: 61264

//  <rtree> SFDITEM_REG__MODEM_CF
//    <name> CF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086038) CF </i>
//    <loc> ( (unsigned int)((MODEM_CF >> 0) & 0xFFFFFFFF), ((MODEM_CF = (MODEM_CF & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CF_DEC0 </item>
//    <item> SFDITEM_FIELD__MODEM_CF_DEC1 </item>
//    <item> SFDITEM_FIELD__MODEM_CF_DEC2 </item>
//    <item> SFDITEM_FIELD__MODEM_CF_CFOSR </item>
//    <item> SFDITEM_FIELD__MODEM_CF_DEC1GAIN </item>
//    <item> SFDITEM_FIELD__MODEM_CF_RESYNCRESETTIMING </item>
//    <item> SFDITEM_FIELD__MODEM_CF_RESYNCBYPASS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_PRE  --------------------------------
// SVD Line: 61324

unsigned int MODEM_PRE __AT (0x4008603C);



// -------------------------------  Field Item: MODEM_PRE_BASE  -----------------------------------
// SVD Line: 61333

//  <item> SFDITEM_FIELD__MODEM_PRE_BASE
//    <name> BASE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4008603C) BASE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_PRE >> 0) & 0xF), ((MODEM_PRE = (MODEM_PRE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_PRE_BASEBITS  ---------------------------------
// SVD Line: 61340

//  <item> SFDITEM_FIELD__MODEM_PRE_BASEBITS
//    <name> BASEBITS </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4008603C) BASEBITS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_PRE >> 4) & 0x3), ((MODEM_PRE = (MODEM_PRE & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_PRE_PRESYMB4FSK  -------------------------------
// SVD Line: 61347

//  <item> SFDITEM_FIELD__MODEM_PRE_PRESYMB4FSK
//    <name> PRESYMB4FSK </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008603C) PRESYMB4FSK </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_PRE ) </loc>
//      <o.6..6> PRESYMB4FSK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_PRE_PREERRORS  --------------------------------
// SVD Line: 61354

//  <item> SFDITEM_FIELD__MODEM_PRE_PREERRORS
//    <name> PREERRORS </name>
//    <rw> 
//    <i> [Bits 10..7] RW (@ 0x4008603C) PREERRORS </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_PRE >> 7) & 0xF), ((MODEM_PRE = (MODEM_PRE & ~(0xFUL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: MODEM_PRE_DSSSPRE  ---------------------------------
// SVD Line: 61361

//  <item> SFDITEM_FIELD__MODEM_PRE_DSSSPRE
//    <name> DSSSPRE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4008603C) DSSSPRE </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_PRE ) </loc>
//      <o.11..11> DSSSPRE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_PRE_SYNCSYMB4FSK  -------------------------------
// SVD Line: 61368

//  <item> SFDITEM_FIELD__MODEM_PRE_SYNCSYMB4FSK
//    <name> SYNCSYMB4FSK </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4008603C) SYNCSYMB4FSK </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_PRE ) </loc>
//      <o.12..12> SYNCSYMB4FSK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_PRE_TXBASES  ---------------------------------
// SVD Line: 61375

//  <item> SFDITEM_FIELD__MODEM_PRE_TXBASES
//    <name> TXBASES </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4008603C) TXBASES </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_PRE >> 16) & 0xFFFF), ((MODEM_PRE = (MODEM_PRE & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_PRE  -----------------------------------
// SVD Line: 61324

//  <rtree> SFDITEM_REG__MODEM_PRE
//    <name> PRE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008603C) PRE </i>
//    <loc> ( (unsigned int)((MODEM_PRE >> 0) & 0xFFFFFFFF), ((MODEM_PRE = (MODEM_PRE & ~(0xFFFF1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_PRE_BASE </item>
//    <item> SFDITEM_FIELD__MODEM_PRE_BASEBITS </item>
//    <item> SFDITEM_FIELD__MODEM_PRE_PRESYMB4FSK </item>
//    <item> SFDITEM_FIELD__MODEM_PRE_PREERRORS </item>
//    <item> SFDITEM_FIELD__MODEM_PRE_DSSSPRE </item>
//    <item> SFDITEM_FIELD__MODEM_PRE_SYNCSYMB4FSK </item>
//    <item> SFDITEM_FIELD__MODEM_PRE_TXBASES </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_SYNC0  -------------------------------
// SVD Line: 61384

unsigned int MODEM_SYNC0 __AT (0x40086040);



// ------------------------------  Field Item: MODEM_SYNC0_SYNC0  ---------------------------------
// SVD Line: 61393

//  <item> SFDITEM_FIELD__MODEM_SYNC0_SYNC0
//    <name> SYNC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086040) SYNC0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((MODEM_SYNC0 >> 0) & 0xFFFFFFFF), ((MODEM_SYNC0 = (MODEM_SYNC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_SYNC0  ----------------------------------
// SVD Line: 61384

//  <rtree> SFDITEM_REG__MODEM_SYNC0
//    <name> SYNC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086040) SYNC0 </i>
//    <loc> ( (unsigned int)((MODEM_SYNC0 >> 0) & 0xFFFFFFFF), ((MODEM_SYNC0 = (MODEM_SYNC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_SYNC0_SYNC0 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_SYNC1  -------------------------------
// SVD Line: 61402

unsigned int MODEM_SYNC1 __AT (0x40086044);



// ------------------------------  Field Item: MODEM_SYNC1_SYNC1  ---------------------------------
// SVD Line: 61411

//  <item> SFDITEM_FIELD__MODEM_SYNC1_SYNC1
//    <name> SYNC1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086044) SYNC1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((MODEM_SYNC1 >> 0) & 0xFFFFFFFF), ((MODEM_SYNC1 = (MODEM_SYNC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_SYNC1  ----------------------------------
// SVD Line: 61402

//  <rtree> SFDITEM_REG__MODEM_SYNC1
//    <name> SYNC1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086044) SYNC1 </i>
//    <loc> ( (unsigned int)((MODEM_SYNC1 >> 0) & 0xFFFFFFFF), ((MODEM_SYNC1 = (MODEM_SYNC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_SYNC1_SYNC1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_TIMING  ------------------------------
// SVD Line: 61420

unsigned int MODEM_TIMING __AT (0x40086048);



// ---------------------------  Field Item: MODEM_TIMING_TIMTHRESH  -------------------------------
// SVD Line: 61429

//  <item> SFDITEM_FIELD__MODEM_TIMING_TIMTHRESH
//    <name> TIMTHRESH </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086048) TIMTHRESH </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMING >> 0) & 0xFF), ((MODEM_TIMING = (MODEM_TIMING & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_TIMING_TIMINGBASES  ------------------------------
// SVD Line: 61436

//  <item> SFDITEM_FIELD__MODEM_TIMING_TIMINGBASES
//    <name> TIMINGBASES </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40086048) TIMINGBASES </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMING >> 8) & 0xF), ((MODEM_TIMING = (MODEM_TIMING & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_TIMING_ADDTIMSEQ  -------------------------------
// SVD Line: 61443

//  <item> SFDITEM_FIELD__MODEM_TIMING_ADDTIMSEQ
//    <name> ADDTIMSEQ </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40086048) ADDTIMSEQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMING >> 12) & 0xF), ((MODEM_TIMING = (MODEM_TIMING & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_TIMING_TIMSEQINVEN  ------------------------------
// SVD Line: 61450

//  <item> SFDITEM_FIELD__MODEM_TIMING_TIMSEQINVEN
//    <name> TIMSEQINVEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40086048) TIMSEQINVEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_TIMING ) </loc>
//      <o.16..16> TIMSEQINVEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_TIMING_TIMSEQSYNC  ------------------------------
// SVD Line: 61457

//  <item> SFDITEM_FIELD__MODEM_TIMING_TIMSEQSYNC
//    <name> TIMSEQSYNC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40086048) TIMSEQSYNC </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_TIMING ) </loc>
//      <o.17..17> TIMSEQSYNC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_TIMING_FDM0THRESH  ------------------------------
// SVD Line: 61464

//  <item> SFDITEM_FIELD__MODEM_TIMING_FDM0THRESH
//    <name> FDM0THRESH </name>
//    <rw> 
//    <i> [Bits 20..18] RW (@ 0x40086048) FDM0THRESH </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMING >> 18) & 0x7), ((MODEM_TIMING = (MODEM_TIMING & ~(0x7UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_TIMING_OFFSUBNUM  -------------------------------
// SVD Line: 61471

//  <item> SFDITEM_FIELD__MODEM_TIMING_OFFSUBNUM
//    <name> OFFSUBNUM </name>
//    <rw> 
//    <i> [Bits 24..21] RW (@ 0x40086048) OFFSUBNUM </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMING >> 21) & 0xF), ((MODEM_TIMING = (MODEM_TIMING & ~(0xFUL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_TIMING_OFFSUBDEN  -------------------------------
// SVD Line: 61478

//  <item> SFDITEM_FIELD__MODEM_TIMING_OFFSUBDEN
//    <name> OFFSUBDEN </name>
//    <rw> 
//    <i> [Bits 28..25] RW (@ 0x40086048) OFFSUBDEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMING >> 25) & 0xF), ((MODEM_TIMING = (MODEM_TIMING & ~(0xFUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_TIMING_TSAGCDEL  -------------------------------
// SVD Line: 61485

//  <item> SFDITEM_FIELD__MODEM_TIMING_TSAGCDEL
//    <name> TSAGCDEL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40086048) TSAGCDEL </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_TIMING ) </loc>
//      <o.29..29> TSAGCDEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_TIMING_FASTRESYNC  ------------------------------
// SVD Line: 61492

//  <item> SFDITEM_FIELD__MODEM_TIMING_FASTRESYNC
//    <name> FASTRESYNC </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x40086048) FASTRESYNC </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_TIMING >> 30) & 0x3), ((MODEM_TIMING = (MODEM_TIMING & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MODEM_TIMING  ----------------------------------
// SVD Line: 61420

//  <rtree> SFDITEM_REG__MODEM_TIMING
//    <name> TIMING </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086048) TIMING </i>
//    <loc> ( (unsigned int)((MODEM_TIMING >> 0) & 0xFFFFFFFF), ((MODEM_TIMING = (MODEM_TIMING & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_TIMING_TIMTHRESH </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_TIMINGBASES </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_ADDTIMSEQ </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_TIMSEQINVEN </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_TIMSEQSYNC </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_FDM0THRESH </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_OFFSUBNUM </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_OFFSUBDEN </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_TSAGCDEL </item>
//    <item> SFDITEM_FIELD__MODEM_TIMING_FASTRESYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_DSSS0  -------------------------------
// SVD Line: 61501

unsigned int MODEM_DSSS0 __AT (0x4008604C);



// ------------------------------  Field Item: MODEM_DSSS0_DSSS0  ---------------------------------
// SVD Line: 61510

//  <item> SFDITEM_FIELD__MODEM_DSSS0_DSSS0
//    <name> DSSS0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008604C) DSSS0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((MODEM_DSSS0 >> 0) & 0xFFFFFFFF), ((MODEM_DSSS0 = (MODEM_DSSS0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: MODEM_DSSS0  ----------------------------------
// SVD Line: 61501

//  <rtree> SFDITEM_REG__MODEM_DSSS0
//    <name> DSSS0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008604C) DSSS0 </i>
//    <loc> ( (unsigned int)((MODEM_DSSS0 >> 0) & 0xFFFFFFFF), ((MODEM_DSSS0 = (MODEM_DSSS0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_DSSS0_DSSS0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_MODINDEX  -----------------------------
// SVD Line: 61519

unsigned int MODEM_MODINDEX __AT (0x40086050);



// --------------------------  Field Item: MODEM_MODINDEX_MODINDEXM  ------------------------------
// SVD Line: 61528

//  <item> SFDITEM_FIELD__MODEM_MODINDEX_MODINDEXM
//    <name> MODINDEXM </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40086050) MODINDEXM </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_MODINDEX >> 0) & 0x1F), ((MODEM_MODINDEX = (MODEM_MODINDEX & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_MODINDEX_MODINDEXE  ------------------------------
// SVD Line: 61535

//  <item> SFDITEM_FIELD__MODEM_MODINDEX_MODINDEXE
//    <name> MODINDEXE </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40086050) MODINDEXE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_MODINDEX >> 5) & 0x1F), ((MODEM_MODINDEX = (MODEM_MODINDEX & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_MODINDEX_FREQGAINE  ------------------------------
// SVD Line: 61542

//  <item> SFDITEM_FIELD__MODEM_MODINDEX_FREQGAINE
//    <name> FREQGAINE </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40086050) FREQGAINE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_MODINDEX >> 16) & 0x7), ((MODEM_MODINDEX = (MODEM_MODINDEX & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_MODINDEX_FREQGAINM  ------------------------------
// SVD Line: 61549

//  <item> SFDITEM_FIELD__MODEM_MODINDEX_FREQGAINM
//    <name> FREQGAINM </name>
//    <rw> 
//    <i> [Bits 21..19] RW (@ 0x40086050) FREQGAINM </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_MODINDEX >> 19) & 0x7), ((MODEM_MODINDEX = (MODEM_MODINDEX & ~(0x7UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_MODINDEX  ---------------------------------
// SVD Line: 61519

//  <rtree> SFDITEM_REG__MODEM_MODINDEX
//    <name> MODINDEX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086050) MODINDEX </i>
//    <loc> ( (unsigned int)((MODEM_MODINDEX >> 0) & 0xFFFFFFFF), ((MODEM_MODINDEX = (MODEM_MODINDEX & ~(0x3F03FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F03FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_MODINDEX_MODINDEXM </item>
//    <item> SFDITEM_FIELD__MODEM_MODINDEX_MODINDEXE </item>
//    <item> SFDITEM_FIELD__MODEM_MODINDEX_FREQGAINE </item>
//    <item> SFDITEM_FIELD__MODEM_MODINDEX_FREQGAINM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_AFC  --------------------------------
// SVD Line: 61558

unsigned int MODEM_AFC __AT (0x40086054);



// -----------------------------  Field Item: MODEM_AFC_AFCSCALEM  --------------------------------
// SVD Line: 61567

//  <item> SFDITEM_FIELD__MODEM_AFC_AFCSCALEM
//    <name> AFCSCALEM </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40086054) AFCSCALEM </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_AFC >> 0) & 0x1F), ((MODEM_AFC = (MODEM_AFC & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_AFC_AFCSCALEE  --------------------------------
// SVD Line: 61574

//  <item> SFDITEM_FIELD__MODEM_AFC_AFCSCALEE
//    <name> AFCSCALEE </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40086054) AFCSCALEE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_AFC >> 5) & 0x7), ((MODEM_AFC = (MODEM_AFC & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_AFC_AFCRXMODE  --------------------------------
// SVD Line: 61581

//  <item> SFDITEM_FIELD__MODEM_AFC_AFCRXMODE
//    <name> AFCRXMODE </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40086054) AFCRXMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_AFC >> 10) & 0x7), ((MODEM_AFC = (MODEM_AFC & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_AFC_AFCTXMODE  --------------------------------
// SVD Line: 61588

//  <item> SFDITEM_FIELD__MODEM_AFC_AFCTXMODE
//    <name> AFCTXMODE </name>
//    <rw> 
//    <i> [Bits 14..13] RW (@ 0x40086054) AFCTXMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_AFC >> 13) & 0x3), ((MODEM_AFC = (MODEM_AFC & ~(0x3UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_AFC_AFCRXCLR  ---------------------------------
// SVD Line: 61595

//  <item> SFDITEM_FIELD__MODEM_AFC_AFCRXCLR
//    <name> AFCRXCLR </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40086054) AFCRXCLR </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_AFC ) </loc>
//      <o.15..15> AFCRXCLR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_AFC_AFCDEL  ----------------------------------
// SVD Line: 61602

//  <item> SFDITEM_FIELD__MODEM_AFC_AFCDEL
//    <name> AFCDEL </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x40086054) AFCDEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_AFC >> 16) & 0x1F), ((MODEM_AFC = (MODEM_AFC & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: MODEM_AFC_AFCAVGPER  --------------------------------
// SVD Line: 61609

//  <item> SFDITEM_FIELD__MODEM_AFC_AFCAVGPER
//    <name> AFCAVGPER </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x40086054) AFCAVGPER </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_AFC >> 21) & 0x7), ((MODEM_AFC = (MODEM_AFC & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_AFC  -----------------------------------
// SVD Line: 61558

//  <rtree> SFDITEM_REG__MODEM_AFC
//    <name> AFC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086054) AFC </i>
//    <loc> ( (unsigned int)((MODEM_AFC >> 0) & 0xFFFFFFFF), ((MODEM_AFC = (MODEM_AFC & ~(0xFFFCFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFCFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_AFC_AFCSCALEM </item>
//    <item> SFDITEM_FIELD__MODEM_AFC_AFCSCALEE </item>
//    <item> SFDITEM_FIELD__MODEM_AFC_AFCRXMODE </item>
//    <item> SFDITEM_FIELD__MODEM_AFC_AFCTXMODE </item>
//    <item> SFDITEM_FIELD__MODEM_AFC_AFCRXCLR </item>
//    <item> SFDITEM_FIELD__MODEM_AFC_AFCDEL </item>
//    <item> SFDITEM_FIELD__MODEM_AFC_AFCAVGPER </item>
//  </rtree>
//  


// -------------------------  Register Item Address: MODEM_AFCADJLIM  -----------------------------
// SVD Line: 61618

unsigned int MODEM_AFCADJLIM __AT (0x40086058);



// --------------------------  Field Item: MODEM_AFCADJLIM_AFCADJLIM  -----------------------------
// SVD Line: 61627

//  <item> SFDITEM_FIELD__MODEM_AFCADJLIM_AFCADJLIM
//    <name> AFCADJLIM </name>
//    <rw> 
//    <i> [Bits 17..0] RW (@ 0x40086058) AFCADJLIM </i>
//    <edit> 
//      <loc> ( (unsigned int)((MODEM_AFCADJLIM >> 0) & 0x3FFFF), ((MODEM_AFCADJLIM = (MODEM_AFCADJLIM & ~(0x3FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_AFCADJLIM  --------------------------------
// SVD Line: 61618

//  <rtree> SFDITEM_REG__MODEM_AFCADJLIM
//    <name> AFCADJLIM </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086058) AFCADJLIM </i>
//    <loc> ( (unsigned int)((MODEM_AFCADJLIM >> 0) & 0xFFFFFFFF), ((MODEM_AFCADJLIM = (MODEM_AFCADJLIM & ~(0x3FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_AFCADJLIM_AFCADJLIM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_SHAPING0  -----------------------------
// SVD Line: 61636

unsigned int MODEM_SHAPING0 __AT (0x4008605C);



// ----------------------------  Field Item: MODEM_SHAPING0_COEFF0  -------------------------------
// SVD Line: 61645

//  <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF0
//    <name> COEFF0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008605C) COEFF0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING0 >> 0) & 0xFF), ((MODEM_SHAPING0 = (MODEM_SHAPING0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_SHAPING0_COEFF1  -------------------------------
// SVD Line: 61652

//  <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF1
//    <name> COEFF1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4008605C) COEFF1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING0 >> 8) & 0xFF), ((MODEM_SHAPING0 = (MODEM_SHAPING0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_SHAPING0_COEFF2  -------------------------------
// SVD Line: 61659

//  <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF2
//    <name> COEFF2 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x4008605C) COEFF2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING0 >> 16) & 0xFF), ((MODEM_SHAPING0 = (MODEM_SHAPING0 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_SHAPING0_COEFF3  -------------------------------
// SVD Line: 61666

//  <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF3
//    <name> COEFF3 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x4008605C) COEFF3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING0 >> 24) & 0xFF), ((MODEM_SHAPING0 = (MODEM_SHAPING0 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_SHAPING0  ---------------------------------
// SVD Line: 61636

//  <rtree> SFDITEM_REG__MODEM_SHAPING0
//    <name> SHAPING0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008605C) SHAPING0 </i>
//    <loc> ( (unsigned int)((MODEM_SHAPING0 >> 0) & 0xFFFFFFFF), ((MODEM_SHAPING0 = (MODEM_SHAPING0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF0 </item>
//    <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF1 </item>
//    <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF2 </item>
//    <item> SFDITEM_FIELD__MODEM_SHAPING0_COEFF3 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_SHAPING1  -----------------------------
// SVD Line: 61675

unsigned int MODEM_SHAPING1 __AT (0x40086060);



// ----------------------------  Field Item: MODEM_SHAPING1_COEFF4  -------------------------------
// SVD Line: 61684

//  <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF4
//    <name> COEFF4 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086060) COEFF4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING1 >> 0) & 0xFF), ((MODEM_SHAPING1 = (MODEM_SHAPING1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_SHAPING1_COEFF5  -------------------------------
// SVD Line: 61691

//  <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF5
//    <name> COEFF5 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40086060) COEFF5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING1 >> 8) & 0xFF), ((MODEM_SHAPING1 = (MODEM_SHAPING1 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_SHAPING1_COEFF6  -------------------------------
// SVD Line: 61698

//  <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF6
//    <name> COEFF6 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40086060) COEFF6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING1 >> 16) & 0xFF), ((MODEM_SHAPING1 = (MODEM_SHAPING1 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_SHAPING1_COEFF7  -------------------------------
// SVD Line: 61705

//  <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF7
//    <name> COEFF7 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40086060) COEFF7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING1 >> 24) & 0xFF), ((MODEM_SHAPING1 = (MODEM_SHAPING1 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_SHAPING1  ---------------------------------
// SVD Line: 61675

//  <rtree> SFDITEM_REG__MODEM_SHAPING1
//    <name> SHAPING1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086060) SHAPING1 </i>
//    <loc> ( (unsigned int)((MODEM_SHAPING1 >> 0) & 0xFFFFFFFF), ((MODEM_SHAPING1 = (MODEM_SHAPING1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF4 </item>
//    <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF5 </item>
//    <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF6 </item>
//    <item> SFDITEM_FIELD__MODEM_SHAPING1_COEFF7 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_SHAPING2  -----------------------------
// SVD Line: 61714

unsigned int MODEM_SHAPING2 __AT (0x40086064);



// ----------------------------  Field Item: MODEM_SHAPING2_COEFF8  -------------------------------
// SVD Line: 61723

//  <item> SFDITEM_FIELD__MODEM_SHAPING2_COEFF8
//    <name> COEFF8 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086064) COEFF8 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_SHAPING2 >> 0) & 0xFF), ((MODEM_SHAPING2 = (MODEM_SHAPING2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_SHAPING2  ---------------------------------
// SVD Line: 61714

//  <rtree> SFDITEM_REG__MODEM_SHAPING2
//    <name> SHAPING2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086064) SHAPING2 </i>
//    <loc> ( (unsigned int)((MODEM_SHAPING2 >> 0) & 0xFFFFFFFF), ((MODEM_SHAPING2 = (MODEM_SHAPING2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_SHAPING2_COEFF8 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_RAMPCTRL  -----------------------------
// SVD Line: 61732

unsigned int MODEM_RAMPCTRL __AT (0x40086068);



// --------------------------  Field Item: MODEM_RAMPCTRL_RAMPRATE0  ------------------------------
// SVD Line: 61741

//  <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPRATE0
//    <name> RAMPRATE0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40086068) RAMPRATE0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAMPCTRL >> 0) & 0xF), ((MODEM_RAMPCTRL = (MODEM_RAMPCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_RAMPCTRL_RAMPRATE1  ------------------------------
// SVD Line: 61748

//  <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPRATE1
//    <name> RAMPRATE1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40086068) RAMPRATE1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAMPCTRL >> 4) & 0xF), ((MODEM_RAMPCTRL = (MODEM_RAMPCTRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: MODEM_RAMPCTRL_RAMPRATE2  ------------------------------
// SVD Line: 61755

//  <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPRATE2
//    <name> RAMPRATE2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40086068) RAMPRATE2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAMPCTRL >> 8) & 0xF), ((MODEM_RAMPCTRL = (MODEM_RAMPCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_RAMPCTRL_RAMPDIS  -------------------------------
// SVD Line: 61762

//  <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPDIS
//    <name> RAMPDIS </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40086068) RAMPDIS </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_RAMPCTRL ) </loc>
//      <o.23..23> RAMPDIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_RAMPCTRL_RAMPVAL  -------------------------------
// SVD Line: 61769

//  <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPVAL
//    <name> RAMPVAL </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40086068) RAMPVAL </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAMPCTRL >> 24) & 0xFF), ((MODEM_RAMPCTRL = (MODEM_RAMPCTRL & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_RAMPCTRL  ---------------------------------
// SVD Line: 61732

//  <rtree> SFDITEM_REG__MODEM_RAMPCTRL
//    <name> RAMPCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086068) RAMPCTRL </i>
//    <loc> ( (unsigned int)((MODEM_RAMPCTRL >> 0) & 0xFFFFFFFF), ((MODEM_RAMPCTRL = (MODEM_RAMPCTRL & ~(0xFF800FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF800FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPRATE0 </item>
//    <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPRATE1 </item>
//    <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPRATE2 </item>
//    <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPDIS </item>
//    <item> SFDITEM_FIELD__MODEM_RAMPCTRL_RAMPVAL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_RAMPLEV  ------------------------------
// SVD Line: 61778

unsigned int MODEM_RAMPLEV __AT (0x4008606C);



// ---------------------------  Field Item: MODEM_RAMPLEV_RAMPLEV0  -------------------------------
// SVD Line: 61787

//  <item> SFDITEM_FIELD__MODEM_RAMPLEV_RAMPLEV0
//    <name> RAMPLEV0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008606C) RAMPLEV0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAMPLEV >> 0) & 0xFF), ((MODEM_RAMPLEV = (MODEM_RAMPLEV & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_RAMPLEV_RAMPLEV1  -------------------------------
// SVD Line: 61794

//  <item> SFDITEM_FIELD__MODEM_RAMPLEV_RAMPLEV1
//    <name> RAMPLEV1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4008606C) RAMPLEV1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAMPLEV >> 8) & 0xFF), ((MODEM_RAMPLEV = (MODEM_RAMPLEV & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_RAMPLEV_RAMPLEV2  -------------------------------
// SVD Line: 61801

//  <item> SFDITEM_FIELD__MODEM_RAMPLEV_RAMPLEV2
//    <name> RAMPLEV2 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x4008606C) RAMPLEV2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAMPLEV >> 16) & 0xFF), ((MODEM_RAMPLEV = (MODEM_RAMPLEV & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MODEM_RAMPLEV  ---------------------------------
// SVD Line: 61778

//  <rtree> SFDITEM_REG__MODEM_RAMPLEV
//    <name> RAMPLEV </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008606C) RAMPLEV </i>
//    <loc> ( (unsigned int)((MODEM_RAMPLEV >> 0) & 0xFFFFFFFF), ((MODEM_RAMPLEV = (MODEM_RAMPLEV & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAMPLEV_RAMPLEV0 </item>
//    <item> SFDITEM_FIELD__MODEM_RAMPLEV_RAMPLEV1 </item>
//    <item> SFDITEM_FIELD__MODEM_RAMPLEV_RAMPLEV2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: MODEM_ROUTEPEN  -----------------------------
// SVD Line: 61810

unsigned int MODEM_ROUTEPEN __AT (0x40086070);



// ----------------------------  Field Item: MODEM_ROUTEPEN_DINPEN  -------------------------------
// SVD Line: 61819

//  <item> SFDITEM_FIELD__MODEM_ROUTEPEN_DINPEN
//    <name> DINPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40086070) DINPEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_ROUTEPEN ) </loc>
//      <o.0..0> DINPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_ROUTEPEN_DOUTPEN  -------------------------------
// SVD Line: 61826

//  <item> SFDITEM_FIELD__MODEM_ROUTEPEN_DOUTPEN
//    <name> DOUTPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40086070) DOUTPEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_ROUTEPEN ) </loc>
//      <o.1..1> DOUTPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_ROUTEPEN_DCLKPEN  -------------------------------
// SVD Line: 61833

//  <item> SFDITEM_FIELD__MODEM_ROUTEPEN_DCLKPEN
//    <name> DCLKPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40086070) DCLKPEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_ROUTEPEN ) </loc>
//      <o.2..2> DCLKPEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_ROUTEPEN_ANT0PEN  -------------------------------
// SVD Line: 61840

//  <item> SFDITEM_FIELD__MODEM_ROUTEPEN_ANT0PEN
//    <name> ANT0PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40086070) ANT0PEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_ROUTEPEN ) </loc>
//      <o.3..3> ANT0PEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_ROUTEPEN_ANT1PEN  -------------------------------
// SVD Line: 61847

//  <item> SFDITEM_FIELD__MODEM_ROUTEPEN_ANT1PEN
//    <name> ANT1PEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40086070) ANT1PEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_ROUTEPEN ) </loc>
//      <o.4..4> ANT1PEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_ROUTEPEN  ---------------------------------
// SVD Line: 61810

//  <rtree> SFDITEM_REG__MODEM_ROUTEPEN
//    <name> ROUTEPEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086070) ROUTEPEN </i>
//    <loc> ( (unsigned int)((MODEM_ROUTEPEN >> 0) & 0xFFFFFFFF), ((MODEM_ROUTEPEN = (MODEM_ROUTEPEN & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_ROUTEPEN_DINPEN </item>
//    <item> SFDITEM_FIELD__MODEM_ROUTEPEN_DOUTPEN </item>
//    <item> SFDITEM_FIELD__MODEM_ROUTEPEN_DCLKPEN </item>
//    <item> SFDITEM_FIELD__MODEM_ROUTEPEN_ANT0PEN </item>
//    <item> SFDITEM_FIELD__MODEM_ROUTEPEN_ANT1PEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: MODEM_ROUTELOC0  -----------------------------
// SVD Line: 61856

unsigned int MODEM_ROUTELOC0 __AT (0x40086074);



// ---------------------------  Field Item: MODEM_ROUTELOC0_DINLOC  -------------------------------
// SVD Line: 61865

//  <item> SFDITEM_FIELD__MODEM_ROUTELOC0_DINLOC
//    <name> DINLOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40086074) DINLOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_ROUTELOC0 >> 0) & 0x3F), ((MODEM_ROUTELOC0 = (MODEM_ROUTELOC0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_ROUTELOC0_DOUTLOC  ------------------------------
// SVD Line: 61872

//  <item> SFDITEM_FIELD__MODEM_ROUTELOC0_DOUTLOC
//    <name> DOUTLOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40086074) DOUTLOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_ROUTELOC0 >> 8) & 0x3F), ((MODEM_ROUTELOC0 = (MODEM_ROUTELOC0 & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_ROUTELOC0_DCLKLOC  ------------------------------
// SVD Line: 61879

//  <item> SFDITEM_FIELD__MODEM_ROUTELOC0_DCLKLOC
//    <name> DCLKLOC </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40086074) DCLKLOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_ROUTELOC0 >> 16) & 0x3F), ((MODEM_ROUTELOC0 = (MODEM_ROUTELOC0 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_ROUTELOC0  --------------------------------
// SVD Line: 61856

//  <rtree> SFDITEM_REG__MODEM_ROUTELOC0
//    <name> ROUTELOC0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086074) ROUTELOC0 </i>
//    <loc> ( (unsigned int)((MODEM_ROUTELOC0 >> 0) & 0xFFFFFFFF), ((MODEM_ROUTELOC0 = (MODEM_ROUTELOC0 & ~(0x3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_ROUTELOC0_DINLOC </item>
//    <item> SFDITEM_FIELD__MODEM_ROUTELOC0_DOUTLOC </item>
//    <item> SFDITEM_FIELD__MODEM_ROUTELOC0_DCLKLOC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: MODEM_ROUTELOC1  -----------------------------
// SVD Line: 61888

unsigned int MODEM_ROUTELOC1 __AT (0x40086078);



// ---------------------------  Field Item: MODEM_ROUTELOC1_ANT0LOC  ------------------------------
// SVD Line: 61897

//  <item> SFDITEM_FIELD__MODEM_ROUTELOC1_ANT0LOC
//    <name> ANT0LOC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40086078) ANT0LOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_ROUTELOC1 >> 0) & 0x3F), ((MODEM_ROUTELOC1 = (MODEM_ROUTELOC1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: MODEM_ROUTELOC1_ANT1LOC  ------------------------------
// SVD Line: 61904

//  <item> SFDITEM_FIELD__MODEM_ROUTELOC1_ANT1LOC
//    <name> ANT1LOC </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40086078) ANT1LOC </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_ROUTELOC1 >> 8) & 0x3F), ((MODEM_ROUTELOC1 = (MODEM_ROUTELOC1 & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: MODEM_ROUTELOC1  --------------------------------
// SVD Line: 61888

//  <rtree> SFDITEM_REG__MODEM_ROUTELOC1
//    <name> ROUTELOC1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086078) ROUTELOC1 </i>
//    <loc> ( (unsigned int)((MODEM_ROUTELOC1 >> 0) & 0xFFFFFFFF), ((MODEM_ROUTELOC1 = (MODEM_ROUTELOC1 & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_ROUTELOC1_ANT0LOC </item>
//    <item> SFDITEM_FIELD__MODEM_ROUTELOC1_ANT1LOC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MODEM_IF  --------------------------------
// SVD Line: 61913

unsigned int MODEM_IF __AT (0x40086080);



// ----------------------------  Field Item: MODEM_IF_TXFRAMESENT  --------------------------------
// SVD Line: 61922

//  <item> SFDITEM_FIELD__MODEM_IF_TXFRAMESENT
//    <name> TXFRAMESENT </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40086080) TXFRAMESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.0..0> TXFRAMESENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IF_TXSYNCSENT  --------------------------------
// SVD Line: 61929

//  <item> SFDITEM_FIELD__MODEM_IF_TXSYNCSENT
//    <name> TXSYNCSENT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40086080) TXSYNCSENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.1..1> TXSYNCSENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IF_TXPRESENT  ---------------------------------
// SVD Line: 61936

//  <item> SFDITEM_FIELD__MODEM_IF_TXPRESENT
//    <name> TXPRESENT </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40086080) TXPRESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.2..2> TXPRESENT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_IF_RXTIMDET  ---------------------------------
// SVD Line: 61943

//  <item> SFDITEM_FIELD__MODEM_IF_RXTIMDET
//    <name> RXTIMDET </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40086080) RXTIMDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.8..8> RXTIMDET
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_IF_RXPREDET  ---------------------------------
// SVD Line: 61950

//  <item> SFDITEM_FIELD__MODEM_IF_RXPREDET
//    <name> RXPREDET </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40086080) RXPREDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.9..9> RXPREDET
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IF_RXFRAMEDET0  --------------------------------
// SVD Line: 61957

//  <item> SFDITEM_FIELD__MODEM_IF_RXFRAMEDET0
//    <name> RXFRAMEDET0 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40086080) RXFRAMEDET0 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.10..10> RXFRAMEDET0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IF_RXFRAMEDET1  --------------------------------
// SVD Line: 61964

//  <item> SFDITEM_FIELD__MODEM_IF_RXFRAMEDET1
//    <name> RXFRAMEDET1 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40086080) RXFRAMEDET1 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.11..11> RXFRAMEDET1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IF_RXTIMLOST  ---------------------------------
// SVD Line: 61971

//  <item> SFDITEM_FIELD__MODEM_IF_RXTIMLOST
//    <name> RXTIMLOST </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40086080) RXTIMLOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.12..12> RXTIMLOST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IF_RXPRELOST  ---------------------------------
// SVD Line: 61978

//  <item> SFDITEM_FIELD__MODEM_IF_RXPRELOST
//    <name> RXPRELOST </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40086080) RXPRELOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.13..13> RXPRELOST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IF_RXFRAMEDETOF  -------------------------------
// SVD Line: 61985

//  <item> SFDITEM_FIELD__MODEM_IF_RXFRAMEDETOF
//    <name> RXFRAMEDETOF </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40086080) RXFRAMEDETOF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.14..14> RXFRAMEDETOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_IF_RXTIMNF  ----------------------------------
// SVD Line: 61992

//  <item> SFDITEM_FIELD__MODEM_IF_RXTIMNF
//    <name> RXTIMNF </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40086080) RXTIMNF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IF ) </loc>
//      <o.15..15> RXTIMNF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_IF  ------------------------------------
// SVD Line: 61913

//  <rtree> SFDITEM_REG__MODEM_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40086080) IF </i>
//    <loc> ( (unsigned int)((MODEM_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MODEM_IF_TXFRAMESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IF_TXSYNCSENT </item>
//    <item> SFDITEM_FIELD__MODEM_IF_TXPRESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXTIMDET </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXPREDET </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXFRAMEDET0 </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXFRAMEDET1 </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXTIMLOST </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXPRELOST </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXFRAMEDETOF </item>
//    <item> SFDITEM_FIELD__MODEM_IF_RXTIMNF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_IFS  --------------------------------
// SVD Line: 62001

unsigned int MODEM_IFS __AT (0x40086084);



// ----------------------------  Field Item: MODEM_IFS_TXFRAMESENT  -------------------------------
// SVD Line: 62010

//  <item> SFDITEM_FIELD__MODEM_IFS_TXFRAMESENT
//    <name> TXFRAMESENT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40086084) TXFRAMESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.0..0> TXFRAMESENT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IFS_TXSYNCSENT  --------------------------------
// SVD Line: 62017

//  <item> SFDITEM_FIELD__MODEM_IFS_TXSYNCSENT
//    <name> TXSYNCSENT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40086084) TXSYNCSENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.1..1> TXSYNCSENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFS_TXPRESENT  --------------------------------
// SVD Line: 62024

//  <item> SFDITEM_FIELD__MODEM_IFS_TXPRESENT
//    <name> TXPRESENT </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40086084) TXPRESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.2..2> TXPRESENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFS_RXTIMDET  ---------------------------------
// SVD Line: 62031

//  <item> SFDITEM_FIELD__MODEM_IFS_RXTIMDET
//    <name> RXTIMDET </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40086084) RXTIMDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.8..8> RXTIMDET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFS_RXPREDET  ---------------------------------
// SVD Line: 62038

//  <item> SFDITEM_FIELD__MODEM_IFS_RXPREDET
//    <name> RXPREDET </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40086084) RXPREDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.9..9> RXPREDET
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IFS_RXFRAMEDET0  -------------------------------
// SVD Line: 62045

//  <item> SFDITEM_FIELD__MODEM_IFS_RXFRAMEDET0
//    <name> RXFRAMEDET0 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40086084) RXFRAMEDET0 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.10..10> RXFRAMEDET0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IFS_RXFRAMEDET1  -------------------------------
// SVD Line: 62052

//  <item> SFDITEM_FIELD__MODEM_IFS_RXFRAMEDET1
//    <name> RXFRAMEDET1 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40086084) RXFRAMEDET1 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.11..11> RXFRAMEDET1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFS_RXTIMLOST  --------------------------------
// SVD Line: 62059

//  <item> SFDITEM_FIELD__MODEM_IFS_RXTIMLOST
//    <name> RXTIMLOST </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40086084) RXTIMLOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.12..12> RXTIMLOST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFS_RXPRELOST  --------------------------------
// SVD Line: 62066

//  <item> SFDITEM_FIELD__MODEM_IFS_RXPRELOST
//    <name> RXPRELOST </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40086084) RXPRELOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.13..13> RXPRELOST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_IFS_RXFRAMEDETOF  -------------------------------
// SVD Line: 62073

//  <item> SFDITEM_FIELD__MODEM_IFS_RXFRAMEDETOF
//    <name> RXFRAMEDETOF </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40086084) RXFRAMEDETOF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.14..14> RXFRAMEDETOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_IFS_RXTIMNF  ---------------------------------
// SVD Line: 62080

//  <item> SFDITEM_FIELD__MODEM_IFS_RXTIMNF
//    <name> RXTIMNF </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40086084) RXTIMNF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFS ) </loc>
//      <o.15..15> RXTIMNF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_IFS  -----------------------------------
// SVD Line: 62001

//  <rtree> SFDITEM_REG__MODEM_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40086084) IFS </i>
//    <loc> ( (unsigned int)((MODEM_IFS >> 0) & 0xFFFFFFFF), ((MODEM_IFS = (MODEM_IFS & ~(0xFF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_IFS_TXFRAMESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_TXSYNCSENT </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_TXPRESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXTIMDET </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXPREDET </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXFRAMEDET0 </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXFRAMEDET1 </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXTIMLOST </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXPRELOST </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXFRAMEDETOF </item>
//    <item> SFDITEM_FIELD__MODEM_IFS_RXTIMNF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_IFC  --------------------------------
// SVD Line: 62089

unsigned int MODEM_IFC __AT (0x40086088);



// ----------------------------  Field Item: MODEM_IFC_TXFRAMESENT  -------------------------------
// SVD Line: 62098

//  <item> SFDITEM_FIELD__MODEM_IFC_TXFRAMESENT
//    <name> TXFRAMESENT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40086088) TXFRAMESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.0..0> TXFRAMESENT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IFC_TXSYNCSENT  --------------------------------
// SVD Line: 62105

//  <item> SFDITEM_FIELD__MODEM_IFC_TXSYNCSENT
//    <name> TXSYNCSENT </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40086088) TXSYNCSENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.1..1> TXSYNCSENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFC_TXPRESENT  --------------------------------
// SVD Line: 62112

//  <item> SFDITEM_FIELD__MODEM_IFC_TXPRESENT
//    <name> TXPRESENT </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40086088) TXPRESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.2..2> TXPRESENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFC_RXTIMDET  ---------------------------------
// SVD Line: 62119

//  <item> SFDITEM_FIELD__MODEM_IFC_RXTIMDET
//    <name> RXTIMDET </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40086088) RXTIMDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.8..8> RXTIMDET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFC_RXPREDET  ---------------------------------
// SVD Line: 62126

//  <item> SFDITEM_FIELD__MODEM_IFC_RXPREDET
//    <name> RXPREDET </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40086088) RXPREDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.9..9> RXPREDET
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IFC_RXFRAMEDET0  -------------------------------
// SVD Line: 62133

//  <item> SFDITEM_FIELD__MODEM_IFC_RXFRAMEDET0
//    <name> RXFRAMEDET0 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40086088) RXFRAMEDET0 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.10..10> RXFRAMEDET0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IFC_RXFRAMEDET1  -------------------------------
// SVD Line: 62140

//  <item> SFDITEM_FIELD__MODEM_IFC_RXFRAMEDET1
//    <name> RXFRAMEDET1 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40086088) RXFRAMEDET1 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.11..11> RXFRAMEDET1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFC_RXTIMLOST  --------------------------------
// SVD Line: 62147

//  <item> SFDITEM_FIELD__MODEM_IFC_RXTIMLOST
//    <name> RXTIMLOST </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40086088) RXTIMLOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.12..12> RXTIMLOST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IFC_RXPRELOST  --------------------------------
// SVD Line: 62154

//  <item> SFDITEM_FIELD__MODEM_IFC_RXPRELOST
//    <name> RXPRELOST </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40086088) RXPRELOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.13..13> RXPRELOST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_IFC_RXFRAMEDETOF  -------------------------------
// SVD Line: 62161

//  <item> SFDITEM_FIELD__MODEM_IFC_RXFRAMEDETOF
//    <name> RXFRAMEDETOF </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40086088) RXFRAMEDETOF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.14..14> RXFRAMEDETOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_IFC_RXTIMNF  ---------------------------------
// SVD Line: 62168

//  <item> SFDITEM_FIELD__MODEM_IFC_RXTIMNF
//    <name> RXTIMNF </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40086088) RXTIMNF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IFC ) </loc>
//      <o.15..15> RXTIMNF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_IFC  -----------------------------------
// SVD Line: 62089

//  <rtree> SFDITEM_REG__MODEM_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40086088) IFC </i>
//    <loc> ( (unsigned int)((MODEM_IFC >> 0) & 0xFFFFFFFF), ((MODEM_IFC = (MODEM_IFC & ~(0xFF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_IFC_TXFRAMESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_TXSYNCSENT </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_TXPRESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXTIMDET </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXPREDET </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXFRAMEDET0 </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXFRAMEDET1 </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXTIMLOST </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXPRELOST </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXFRAMEDETOF </item>
//    <item> SFDITEM_FIELD__MODEM_IFC_RXTIMNF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_IEN  --------------------------------
// SVD Line: 62177

unsigned int MODEM_IEN __AT (0x4008608C);



// ----------------------------  Field Item: MODEM_IEN_TXFRAMESENT  -------------------------------
// SVD Line: 62186

//  <item> SFDITEM_FIELD__MODEM_IEN_TXFRAMESENT
//    <name> TXFRAMESENT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008608C) TXFRAMESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.0..0> TXFRAMESENT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IEN_TXSYNCSENT  --------------------------------
// SVD Line: 62193

//  <item> SFDITEM_FIELD__MODEM_IEN_TXSYNCSENT
//    <name> TXSYNCSENT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008608C) TXSYNCSENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.1..1> TXSYNCSENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IEN_TXPRESENT  --------------------------------
// SVD Line: 62200

//  <item> SFDITEM_FIELD__MODEM_IEN_TXPRESENT
//    <name> TXPRESENT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008608C) TXPRESENT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.2..2> TXPRESENT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IEN_RXTIMDET  ---------------------------------
// SVD Line: 62207

//  <item> SFDITEM_FIELD__MODEM_IEN_RXTIMDET
//    <name> RXTIMDET </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008608C) RXTIMDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.8..8> RXTIMDET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IEN_RXPREDET  ---------------------------------
// SVD Line: 62214

//  <item> SFDITEM_FIELD__MODEM_IEN_RXPREDET
//    <name> RXPREDET </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008608C) RXPREDET </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.9..9> RXPREDET
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IEN_RXFRAMEDET0  -------------------------------
// SVD Line: 62221

//  <item> SFDITEM_FIELD__MODEM_IEN_RXFRAMEDET0
//    <name> RXFRAMEDET0 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4008608C) RXFRAMEDET0 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.10..10> RXFRAMEDET0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_IEN_RXFRAMEDET1  -------------------------------
// SVD Line: 62228

//  <item> SFDITEM_FIELD__MODEM_IEN_RXFRAMEDET1
//    <name> RXFRAMEDET1 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4008608C) RXFRAMEDET1 </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.11..11> RXFRAMEDET1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IEN_RXTIMLOST  --------------------------------
// SVD Line: 62235

//  <item> SFDITEM_FIELD__MODEM_IEN_RXTIMLOST
//    <name> RXTIMLOST </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4008608C) RXTIMLOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.12..12> RXTIMLOST
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_IEN_RXPRELOST  --------------------------------
// SVD Line: 62242

//  <item> SFDITEM_FIELD__MODEM_IEN_RXPRELOST
//    <name> RXPRELOST </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4008608C) RXPRELOST </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.13..13> RXPRELOST
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_IEN_RXFRAMEDETOF  -------------------------------
// SVD Line: 62249

//  <item> SFDITEM_FIELD__MODEM_IEN_RXFRAMEDETOF
//    <name> RXFRAMEDETOF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4008608C) RXFRAMEDETOF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.14..14> RXFRAMEDETOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: MODEM_IEN_RXTIMNF  ---------------------------------
// SVD Line: 62256

//  <item> SFDITEM_FIELD__MODEM_IEN_RXTIMNF
//    <name> RXTIMNF </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4008608C) RXTIMNF </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_IEN ) </loc>
//      <o.15..15> RXTIMNF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_IEN  -----------------------------------
// SVD Line: 62177

//  <rtree> SFDITEM_REG__MODEM_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008608C) IEN </i>
//    <loc> ( (unsigned int)((MODEM_IEN >> 0) & 0xFFFFFFFF), ((MODEM_IEN = (MODEM_IEN & ~(0xFF07UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF07) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_IEN_TXFRAMESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_TXSYNCSENT </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_TXPRESENT </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXTIMDET </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXPREDET </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXFRAMEDET0 </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXFRAMEDET1 </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXTIMLOST </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXPRELOST </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXFRAMEDETOF </item>
//    <item> SFDITEM_FIELD__MODEM_IEN_RXTIMNF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MODEM_CMD  --------------------------------
// SVD Line: 62265

unsigned int MODEM_CMD __AT (0x40086090);



// ------------------------------  Field Item: MODEM_CMD_PRESTOP  ---------------------------------
// SVD Line: 62274

//  <item> SFDITEM_FIELD__MODEM_CMD_PRESTOP
//    <name> PRESTOP </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40086090) PRESTOP </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CMD ) </loc>
//      <o.0..0> PRESTOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MODEM_CMD_AFCTXLOCK  --------------------------------
// SVD Line: 62281

//  <item> SFDITEM_FIELD__MODEM_CMD_AFCTXLOCK
//    <name> AFCTXLOCK </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40086090) AFCTXLOCK </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CMD ) </loc>
//      <o.3..3> AFCTXLOCK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CMD_AFCTXCLEAR  --------------------------------
// SVD Line: 62288

//  <item> SFDITEM_FIELD__MODEM_CMD_AFCTXCLEAR
//    <name> AFCTXCLEAR </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40086090) AFCTXCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CMD ) </loc>
//      <o.4..4> AFCTXCLEAR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_CMD_AFCRXCLEAR  --------------------------------
// SVD Line: 62295

//  <item> SFDITEM_FIELD__MODEM_CMD_AFCRXCLEAR
//    <name> AFCRXCLEAR </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40086090) AFCRXCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_CMD ) </loc>
//      <o.5..5> AFCRXCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: MODEM_CMD  -----------------------------------
// SVD Line: 62265

//  <rtree> SFDITEM_REG__MODEM_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40086090) CMD </i>
//    <loc> ( (unsigned int)((MODEM_CMD >> 0) & 0xFFFFFFFF), ((MODEM_CMD = (MODEM_CMD & ~(0x39UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x39) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_CMD_PRESTOP </item>
//    <item> SFDITEM_FIELD__MODEM_CMD_AFCTXLOCK </item>
//    <item> SFDITEM_FIELD__MODEM_CMD_AFCTXCLEAR </item>
//    <item> SFDITEM_FIELD__MODEM_CMD_AFCRXCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_DCCOMP  ------------------------------
// SVD Line: 62304

unsigned int MODEM_DCCOMP __AT (0x40086098);



// ----------------------------  Field Item: MODEM_DCCOMP_DCESTIEN  -------------------------------
// SVD Line: 62313

//  <item> SFDITEM_FIELD__MODEM_DCCOMP_DCESTIEN
//    <name> DCESTIEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40086098) DCESTIEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_DCCOMP ) </loc>
//      <o.0..0> DCESTIEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_DCCOMP_DCCOMPEN  -------------------------------
// SVD Line: 62320

//  <item> SFDITEM_FIELD__MODEM_DCCOMP_DCCOMPEN
//    <name> DCCOMPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40086098) DCCOMPEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_DCCOMP ) </loc>
//      <o.1..1> DCCOMPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: MODEM_DCCOMP_DCRSTEN  --------------------------------
// SVD Line: 62327

//  <item> SFDITEM_FIELD__MODEM_DCCOMP_DCRSTEN
//    <name> DCRSTEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40086098) DCRSTEN </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_DCCOMP ) </loc>
//      <o.2..2> DCRSTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: MODEM_DCCOMP_DCCOMPFREEZE  -----------------------------
// SVD Line: 62334

//  <item> SFDITEM_FIELD__MODEM_DCCOMP_DCCOMPFREEZE
//    <name> DCCOMPFREEZE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40086098) DCCOMPFREEZE </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_DCCOMP ) </loc>
//      <o.3..3> DCCOMPFREEZE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: MODEM_DCCOMP_DCCOMPGEAR  ------------------------------
// SVD Line: 62341

//  <item> SFDITEM_FIELD__MODEM_DCCOMP_DCCOMPGEAR
//    <name> DCCOMPGEAR </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40086098) DCCOMPGEAR </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_DCCOMP >> 4) & 0x7), ((MODEM_DCCOMP = (MODEM_DCCOMP & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: MODEM_DCCOMP_DCLIMIT  --------------------------------
// SVD Line: 62348

//  <item> SFDITEM_FIELD__MODEM_DCCOMP_DCLIMIT
//    <name> DCLIMIT </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40086098) DCLIMIT </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_DCCOMP >> 7) & 0x3), ((MODEM_DCCOMP = (MODEM_DCCOMP & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MODEM_DCCOMP  ----------------------------------
// SVD Line: 62304

//  <rtree> SFDITEM_REG__MODEM_DCCOMP
//    <name> DCCOMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086098) DCCOMP </i>
//    <loc> ( (unsigned int)((MODEM_DCCOMP >> 0) & 0xFFFFFFFF), ((MODEM_DCCOMP = (MODEM_DCCOMP & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_DCCOMP_DCESTIEN </item>
//    <item> SFDITEM_FIELD__MODEM_DCCOMP_DCCOMPEN </item>
//    <item> SFDITEM_FIELD__MODEM_DCCOMP_DCRSTEN </item>
//    <item> SFDITEM_FIELD__MODEM_DCCOMP_DCCOMPFREEZE </item>
//    <item> SFDITEM_FIELD__MODEM_DCCOMP_DCCOMPGEAR </item>
//    <item> SFDITEM_FIELD__MODEM_DCCOMP_DCLIMIT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_DCCOMPFILTINIT  --------------------------
// SVD Line: 62357

unsigned int MODEM_DCCOMPFILTINIT __AT (0x4008609C);



// ---------------------  Field Item: MODEM_DCCOMPFILTINIT_DCCOMPINITVALI  ------------------------
// SVD Line: 62366

//  <item> SFDITEM_FIELD__MODEM_DCCOMPFILTINIT_DCCOMPINITVALI
//    <name> DCCOMPINITVALI </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x4008609C) DCCOMPINITVALI </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_DCCOMPFILTINIT >> 0) & 0x7FFF), ((MODEM_DCCOMPFILTINIT = (MODEM_DCCOMPFILTINIT & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: MODEM_DCCOMPFILTINIT_DCCOMPINITVALQ  ------------------------
// SVD Line: 62373

//  <item> SFDITEM_FIELD__MODEM_DCCOMPFILTINIT_DCCOMPINITVALQ
//    <name> DCCOMPINITVALQ </name>
//    <rw> 
//    <i> [Bits 29..15] RW (@ 0x4008609C) DCCOMPINITVALQ </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_DCCOMPFILTINIT >> 15) & 0x7FFF), ((MODEM_DCCOMPFILTINIT = (MODEM_DCCOMPFILTINIT & ~(0x7FFFUL << 15 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: MODEM_DCCOMPFILTINIT_DCCOMPINIT  --------------------------
// SVD Line: 62380

//  <item> SFDITEM_FIELD__MODEM_DCCOMPFILTINIT_DCCOMPINIT
//    <name> DCCOMPINIT </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4008609C) DCCOMPINIT </i>
//    <check> 
//      <loc> ( (unsigned int) MODEM_DCCOMPFILTINIT ) </loc>
//      <o.30..30> DCCOMPINIT
//    </check>
//  </item>
//  


// --------------------------  Register RTree: MODEM_DCCOMPFILTINIT  ------------------------------
// SVD Line: 62357

//  <rtree> SFDITEM_REG__MODEM_DCCOMPFILTINIT
//    <name> DCCOMPFILTINIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008609C) DCCOMPFILTINIT </i>
//    <loc> ( (unsigned int)((MODEM_DCCOMPFILTINIT >> 0) & 0xFFFFFFFF), ((MODEM_DCCOMPFILTINIT = (MODEM_DCCOMPFILTINIT & ~(0x7FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_DCCOMPFILTINIT_DCCOMPINITVALI </item>
//    <item> SFDITEM_FIELD__MODEM_DCCOMPFILTINIT_DCCOMPINITVALQ </item>
//    <item> SFDITEM_FIELD__MODEM_DCCOMPFILTINIT_DCCOMPINIT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: MODEM_DCESTI  ------------------------------
// SVD Line: 62389

unsigned int MODEM_DCESTI __AT (0x40086100);



// -------------------------  Field Item: MODEM_DCESTI_DCCOMPESTIVALI  ----------------------------
// SVD Line: 62398

//  <item> SFDITEM_FIELD__MODEM_DCESTI_DCCOMPESTIVALI
//    <name> DCCOMPESTIVALI </name>
//    <r> 
//    <i> [Bits 14..0] RO (@ 0x40086100) DCCOMPESTIVALI </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_DCESTI >> 0) & 0x7FFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: MODEM_DCESTI_DCCOMPESTIVALQ  ----------------------------
// SVD Line: 62405

//  <item> SFDITEM_FIELD__MODEM_DCESTI_DCCOMPESTIVALQ
//    <name> DCCOMPESTIVALQ </name>
//    <r> 
//    <i> [Bits 29..15] RO (@ 0x40086100) DCCOMPESTIVALQ </i>
//    <edit> 
//      <loc> ( (unsigned short)((MODEM_DCESTI >> 15) & 0x7FFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: MODEM_DCESTI  ----------------------------------
// SVD Line: 62389

//  <rtree> SFDITEM_REG__MODEM_DCESTI
//    <name> DCESTI </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40086100) DCESTI </i>
//    <loc> ( (unsigned int)((MODEM_DCESTI >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__MODEM_DCESTI_DCCOMPESTIVALI </item>
//    <item> SFDITEM_FIELD__MODEM_DCESTI_DCCOMPESTIVALQ </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM0_RAMDATA  ---------------------------
// SVD Line: 62414

unsigned int MODEM_RAM0_RAMDATA __AT (0x40086400);



// ---------------------------  Field Item: MODEM_RAM0_RAMDATA_DATA  ------------------------------
// SVD Line: 62423

//  <item> SFDITEM_FIELD__MODEM_RAM0_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086400) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM0_RAMDATA >> 0) & 0xFF), ((MODEM_RAM0_RAMDATA = (MODEM_RAM0_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM0_RAMDATA  -------------------------------
// SVD Line: 62414

//  <rtree> SFDITEM_REG__MODEM_RAM0_RAMDATA
//    <name> RAM0_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086400) RAM0_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM0_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM0_RAMDATA = (MODEM_RAM0_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM0_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM1_RAMDATA  ---------------------------
// SVD Line: 62432

unsigned int MODEM_RAM1_RAMDATA __AT (0x40086404);



// ---------------------------  Field Item: MODEM_RAM1_RAMDATA_DATA  ------------------------------
// SVD Line: 62441

//  <item> SFDITEM_FIELD__MODEM_RAM1_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086404) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM1_RAMDATA >> 0) & 0xFF), ((MODEM_RAM1_RAMDATA = (MODEM_RAM1_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM1_RAMDATA  -------------------------------
// SVD Line: 62432

//  <rtree> SFDITEM_REG__MODEM_RAM1_RAMDATA
//    <name> RAM1_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086404) RAM1_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM1_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM1_RAMDATA = (MODEM_RAM1_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM1_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM2_RAMDATA  ---------------------------
// SVD Line: 62450

unsigned int MODEM_RAM2_RAMDATA __AT (0x40086408);



// ---------------------------  Field Item: MODEM_RAM2_RAMDATA_DATA  ------------------------------
// SVD Line: 62459

//  <item> SFDITEM_FIELD__MODEM_RAM2_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086408) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM2_RAMDATA >> 0) & 0xFF), ((MODEM_RAM2_RAMDATA = (MODEM_RAM2_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM2_RAMDATA  -------------------------------
// SVD Line: 62450

//  <rtree> SFDITEM_REG__MODEM_RAM2_RAMDATA
//    <name> RAM2_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086408) RAM2_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM2_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM2_RAMDATA = (MODEM_RAM2_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM2_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM3_RAMDATA  ---------------------------
// SVD Line: 62468

unsigned int MODEM_RAM3_RAMDATA __AT (0x4008640C);



// ---------------------------  Field Item: MODEM_RAM3_RAMDATA_DATA  ------------------------------
// SVD Line: 62477

//  <item> SFDITEM_FIELD__MODEM_RAM3_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008640C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM3_RAMDATA >> 0) & 0xFF), ((MODEM_RAM3_RAMDATA = (MODEM_RAM3_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM3_RAMDATA  -------------------------------
// SVD Line: 62468

//  <rtree> SFDITEM_REG__MODEM_RAM3_RAMDATA
//    <name> RAM3_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008640C) RAM3_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM3_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM3_RAMDATA = (MODEM_RAM3_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM3_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM4_RAMDATA  ---------------------------
// SVD Line: 62486

unsigned int MODEM_RAM4_RAMDATA __AT (0x40086410);



// ---------------------------  Field Item: MODEM_RAM4_RAMDATA_DATA  ------------------------------
// SVD Line: 62495

//  <item> SFDITEM_FIELD__MODEM_RAM4_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086410) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM4_RAMDATA >> 0) & 0xFF), ((MODEM_RAM4_RAMDATA = (MODEM_RAM4_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM4_RAMDATA  -------------------------------
// SVD Line: 62486

//  <rtree> SFDITEM_REG__MODEM_RAM4_RAMDATA
//    <name> RAM4_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086410) RAM4_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM4_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM4_RAMDATA = (MODEM_RAM4_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM4_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM5_RAMDATA  ---------------------------
// SVD Line: 62504

unsigned int MODEM_RAM5_RAMDATA __AT (0x40086414);



// ---------------------------  Field Item: MODEM_RAM5_RAMDATA_DATA  ------------------------------
// SVD Line: 62513

//  <item> SFDITEM_FIELD__MODEM_RAM5_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086414) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM5_RAMDATA >> 0) & 0xFF), ((MODEM_RAM5_RAMDATA = (MODEM_RAM5_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM5_RAMDATA  -------------------------------
// SVD Line: 62504

//  <rtree> SFDITEM_REG__MODEM_RAM5_RAMDATA
//    <name> RAM5_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086414) RAM5_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM5_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM5_RAMDATA = (MODEM_RAM5_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM5_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM6_RAMDATA  ---------------------------
// SVD Line: 62522

unsigned int MODEM_RAM6_RAMDATA __AT (0x40086418);



// ---------------------------  Field Item: MODEM_RAM6_RAMDATA_DATA  ------------------------------
// SVD Line: 62531

//  <item> SFDITEM_FIELD__MODEM_RAM6_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086418) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM6_RAMDATA >> 0) & 0xFF), ((MODEM_RAM6_RAMDATA = (MODEM_RAM6_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM6_RAMDATA  -------------------------------
// SVD Line: 62522

//  <rtree> SFDITEM_REG__MODEM_RAM6_RAMDATA
//    <name> RAM6_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086418) RAM6_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM6_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM6_RAMDATA = (MODEM_RAM6_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM6_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM7_RAMDATA  ---------------------------
// SVD Line: 62540

unsigned int MODEM_RAM7_RAMDATA __AT (0x4008641C);



// ---------------------------  Field Item: MODEM_RAM7_RAMDATA_DATA  ------------------------------
// SVD Line: 62549

//  <item> SFDITEM_FIELD__MODEM_RAM7_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008641C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM7_RAMDATA >> 0) & 0xFF), ((MODEM_RAM7_RAMDATA = (MODEM_RAM7_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM7_RAMDATA  -------------------------------
// SVD Line: 62540

//  <rtree> SFDITEM_REG__MODEM_RAM7_RAMDATA
//    <name> RAM7_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008641C) RAM7_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM7_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM7_RAMDATA = (MODEM_RAM7_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM7_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM8_RAMDATA  ---------------------------
// SVD Line: 62558

unsigned int MODEM_RAM8_RAMDATA __AT (0x40086420);



// ---------------------------  Field Item: MODEM_RAM8_RAMDATA_DATA  ------------------------------
// SVD Line: 62567

//  <item> SFDITEM_FIELD__MODEM_RAM8_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086420) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM8_RAMDATA >> 0) & 0xFF), ((MODEM_RAM8_RAMDATA = (MODEM_RAM8_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM8_RAMDATA  -------------------------------
// SVD Line: 62558

//  <rtree> SFDITEM_REG__MODEM_RAM8_RAMDATA
//    <name> RAM8_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086420) RAM8_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM8_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM8_RAMDATA = (MODEM_RAM8_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM8_RAMDATA_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: MODEM_RAM9_RAMDATA  ---------------------------
// SVD Line: 62576

unsigned int MODEM_RAM9_RAMDATA __AT (0x40086424);



// ---------------------------  Field Item: MODEM_RAM9_RAMDATA_DATA  ------------------------------
// SVD Line: 62585

//  <item> SFDITEM_FIELD__MODEM_RAM9_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086424) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM9_RAMDATA >> 0) & 0xFF), ((MODEM_RAM9_RAMDATA = (MODEM_RAM9_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM9_RAMDATA  -------------------------------
// SVD Line: 62576

//  <rtree> SFDITEM_REG__MODEM_RAM9_RAMDATA
//    <name> RAM9_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086424) RAM9_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM9_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM9_RAMDATA = (MODEM_RAM9_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM9_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM10_RAMDATA  ---------------------------
// SVD Line: 62594

unsigned int MODEM_RAM10_RAMDATA __AT (0x40086428);



// --------------------------  Field Item: MODEM_RAM10_RAMDATA_DATA  ------------------------------
// SVD Line: 62603

//  <item> SFDITEM_FIELD__MODEM_RAM10_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086428) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM10_RAMDATA >> 0) & 0xFF), ((MODEM_RAM10_RAMDATA = (MODEM_RAM10_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM10_RAMDATA  ------------------------------
// SVD Line: 62594

//  <rtree> SFDITEM_REG__MODEM_RAM10_RAMDATA
//    <name> RAM10_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086428) RAM10_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM10_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM10_RAMDATA = (MODEM_RAM10_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM10_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM11_RAMDATA  ---------------------------
// SVD Line: 62612

unsigned int MODEM_RAM11_RAMDATA __AT (0x4008642C);



// --------------------------  Field Item: MODEM_RAM11_RAMDATA_DATA  ------------------------------
// SVD Line: 62621

//  <item> SFDITEM_FIELD__MODEM_RAM11_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008642C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM11_RAMDATA >> 0) & 0xFF), ((MODEM_RAM11_RAMDATA = (MODEM_RAM11_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM11_RAMDATA  ------------------------------
// SVD Line: 62612

//  <rtree> SFDITEM_REG__MODEM_RAM11_RAMDATA
//    <name> RAM11_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008642C) RAM11_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM11_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM11_RAMDATA = (MODEM_RAM11_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM11_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM12_RAMDATA  ---------------------------
// SVD Line: 62630

unsigned int MODEM_RAM12_RAMDATA __AT (0x40086430);



// --------------------------  Field Item: MODEM_RAM12_RAMDATA_DATA  ------------------------------
// SVD Line: 62639

//  <item> SFDITEM_FIELD__MODEM_RAM12_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086430) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM12_RAMDATA >> 0) & 0xFF), ((MODEM_RAM12_RAMDATA = (MODEM_RAM12_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM12_RAMDATA  ------------------------------
// SVD Line: 62630

//  <rtree> SFDITEM_REG__MODEM_RAM12_RAMDATA
//    <name> RAM12_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086430) RAM12_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM12_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM12_RAMDATA = (MODEM_RAM12_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM12_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM13_RAMDATA  ---------------------------
// SVD Line: 62648

unsigned int MODEM_RAM13_RAMDATA __AT (0x40086434);



// --------------------------  Field Item: MODEM_RAM13_RAMDATA_DATA  ------------------------------
// SVD Line: 62657

//  <item> SFDITEM_FIELD__MODEM_RAM13_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086434) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM13_RAMDATA >> 0) & 0xFF), ((MODEM_RAM13_RAMDATA = (MODEM_RAM13_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM13_RAMDATA  ------------------------------
// SVD Line: 62648

//  <rtree> SFDITEM_REG__MODEM_RAM13_RAMDATA
//    <name> RAM13_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086434) RAM13_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM13_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM13_RAMDATA = (MODEM_RAM13_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM13_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM14_RAMDATA  ---------------------------
// SVD Line: 62666

unsigned int MODEM_RAM14_RAMDATA __AT (0x40086438);



// --------------------------  Field Item: MODEM_RAM14_RAMDATA_DATA  ------------------------------
// SVD Line: 62675

//  <item> SFDITEM_FIELD__MODEM_RAM14_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086438) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM14_RAMDATA >> 0) & 0xFF), ((MODEM_RAM14_RAMDATA = (MODEM_RAM14_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM14_RAMDATA  ------------------------------
// SVD Line: 62666

//  <rtree> SFDITEM_REG__MODEM_RAM14_RAMDATA
//    <name> RAM14_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086438) RAM14_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM14_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM14_RAMDATA = (MODEM_RAM14_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM14_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM15_RAMDATA  ---------------------------
// SVD Line: 62684

unsigned int MODEM_RAM15_RAMDATA __AT (0x4008643C);



// --------------------------  Field Item: MODEM_RAM15_RAMDATA_DATA  ------------------------------
// SVD Line: 62693

//  <item> SFDITEM_FIELD__MODEM_RAM15_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008643C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM15_RAMDATA >> 0) & 0xFF), ((MODEM_RAM15_RAMDATA = (MODEM_RAM15_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM15_RAMDATA  ------------------------------
// SVD Line: 62684

//  <rtree> SFDITEM_REG__MODEM_RAM15_RAMDATA
//    <name> RAM15_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008643C) RAM15_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM15_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM15_RAMDATA = (MODEM_RAM15_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM15_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM16_RAMDATA  ---------------------------
// SVD Line: 62702

unsigned int MODEM_RAM16_RAMDATA __AT (0x40086440);



// --------------------------  Field Item: MODEM_RAM16_RAMDATA_DATA  ------------------------------
// SVD Line: 62711

//  <item> SFDITEM_FIELD__MODEM_RAM16_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086440) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM16_RAMDATA >> 0) & 0xFF), ((MODEM_RAM16_RAMDATA = (MODEM_RAM16_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM16_RAMDATA  ------------------------------
// SVD Line: 62702

//  <rtree> SFDITEM_REG__MODEM_RAM16_RAMDATA
//    <name> RAM16_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086440) RAM16_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM16_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM16_RAMDATA = (MODEM_RAM16_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM16_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM17_RAMDATA  ---------------------------
// SVD Line: 62720

unsigned int MODEM_RAM17_RAMDATA __AT (0x40086444);



// --------------------------  Field Item: MODEM_RAM17_RAMDATA_DATA  ------------------------------
// SVD Line: 62729

//  <item> SFDITEM_FIELD__MODEM_RAM17_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086444) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM17_RAMDATA >> 0) & 0xFF), ((MODEM_RAM17_RAMDATA = (MODEM_RAM17_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM17_RAMDATA  ------------------------------
// SVD Line: 62720

//  <rtree> SFDITEM_REG__MODEM_RAM17_RAMDATA
//    <name> RAM17_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086444) RAM17_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM17_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM17_RAMDATA = (MODEM_RAM17_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM17_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM18_RAMDATA  ---------------------------
// SVD Line: 62738

unsigned int MODEM_RAM18_RAMDATA __AT (0x40086448);



// --------------------------  Field Item: MODEM_RAM18_RAMDATA_DATA  ------------------------------
// SVD Line: 62747

//  <item> SFDITEM_FIELD__MODEM_RAM18_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086448) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM18_RAMDATA >> 0) & 0xFF), ((MODEM_RAM18_RAMDATA = (MODEM_RAM18_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM18_RAMDATA  ------------------------------
// SVD Line: 62738

//  <rtree> SFDITEM_REG__MODEM_RAM18_RAMDATA
//    <name> RAM18_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086448) RAM18_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM18_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM18_RAMDATA = (MODEM_RAM18_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM18_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM19_RAMDATA  ---------------------------
// SVD Line: 62756

unsigned int MODEM_RAM19_RAMDATA __AT (0x4008644C);



// --------------------------  Field Item: MODEM_RAM19_RAMDATA_DATA  ------------------------------
// SVD Line: 62765

//  <item> SFDITEM_FIELD__MODEM_RAM19_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008644C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM19_RAMDATA >> 0) & 0xFF), ((MODEM_RAM19_RAMDATA = (MODEM_RAM19_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM19_RAMDATA  ------------------------------
// SVD Line: 62756

//  <rtree> SFDITEM_REG__MODEM_RAM19_RAMDATA
//    <name> RAM19_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008644C) RAM19_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM19_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM19_RAMDATA = (MODEM_RAM19_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM19_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM20_RAMDATA  ---------------------------
// SVD Line: 62774

unsigned int MODEM_RAM20_RAMDATA __AT (0x40086450);



// --------------------------  Field Item: MODEM_RAM20_RAMDATA_DATA  ------------------------------
// SVD Line: 62783

//  <item> SFDITEM_FIELD__MODEM_RAM20_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086450) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM20_RAMDATA >> 0) & 0xFF), ((MODEM_RAM20_RAMDATA = (MODEM_RAM20_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM20_RAMDATA  ------------------------------
// SVD Line: 62774

//  <rtree> SFDITEM_REG__MODEM_RAM20_RAMDATA
//    <name> RAM20_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086450) RAM20_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM20_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM20_RAMDATA = (MODEM_RAM20_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM20_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM21_RAMDATA  ---------------------------
// SVD Line: 62792

unsigned int MODEM_RAM21_RAMDATA __AT (0x40086454);



// --------------------------  Field Item: MODEM_RAM21_RAMDATA_DATA  ------------------------------
// SVD Line: 62801

//  <item> SFDITEM_FIELD__MODEM_RAM21_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086454) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM21_RAMDATA >> 0) & 0xFF), ((MODEM_RAM21_RAMDATA = (MODEM_RAM21_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM21_RAMDATA  ------------------------------
// SVD Line: 62792

//  <rtree> SFDITEM_REG__MODEM_RAM21_RAMDATA
//    <name> RAM21_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086454) RAM21_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM21_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM21_RAMDATA = (MODEM_RAM21_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM21_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM22_RAMDATA  ---------------------------
// SVD Line: 62810

unsigned int MODEM_RAM22_RAMDATA __AT (0x40086458);



// --------------------------  Field Item: MODEM_RAM22_RAMDATA_DATA  ------------------------------
// SVD Line: 62819

//  <item> SFDITEM_FIELD__MODEM_RAM22_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086458) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM22_RAMDATA >> 0) & 0xFF), ((MODEM_RAM22_RAMDATA = (MODEM_RAM22_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM22_RAMDATA  ------------------------------
// SVD Line: 62810

//  <rtree> SFDITEM_REG__MODEM_RAM22_RAMDATA
//    <name> RAM22_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086458) RAM22_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM22_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM22_RAMDATA = (MODEM_RAM22_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM22_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM23_RAMDATA  ---------------------------
// SVD Line: 62828

unsigned int MODEM_RAM23_RAMDATA __AT (0x4008645C);



// --------------------------  Field Item: MODEM_RAM23_RAMDATA_DATA  ------------------------------
// SVD Line: 62837

//  <item> SFDITEM_FIELD__MODEM_RAM23_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008645C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM23_RAMDATA >> 0) & 0xFF), ((MODEM_RAM23_RAMDATA = (MODEM_RAM23_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM23_RAMDATA  ------------------------------
// SVD Line: 62828

//  <rtree> SFDITEM_REG__MODEM_RAM23_RAMDATA
//    <name> RAM23_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008645C) RAM23_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM23_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM23_RAMDATA = (MODEM_RAM23_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM23_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM24_RAMDATA  ---------------------------
// SVD Line: 62846

unsigned int MODEM_RAM24_RAMDATA __AT (0x40086460);



// --------------------------  Field Item: MODEM_RAM24_RAMDATA_DATA  ------------------------------
// SVD Line: 62855

//  <item> SFDITEM_FIELD__MODEM_RAM24_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086460) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM24_RAMDATA >> 0) & 0xFF), ((MODEM_RAM24_RAMDATA = (MODEM_RAM24_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM24_RAMDATA  ------------------------------
// SVD Line: 62846

//  <rtree> SFDITEM_REG__MODEM_RAM24_RAMDATA
//    <name> RAM24_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086460) RAM24_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM24_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM24_RAMDATA = (MODEM_RAM24_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM24_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM25_RAMDATA  ---------------------------
// SVD Line: 62864

unsigned int MODEM_RAM25_RAMDATA __AT (0x40086464);



// --------------------------  Field Item: MODEM_RAM25_RAMDATA_DATA  ------------------------------
// SVD Line: 62873

//  <item> SFDITEM_FIELD__MODEM_RAM25_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086464) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM25_RAMDATA >> 0) & 0xFF), ((MODEM_RAM25_RAMDATA = (MODEM_RAM25_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM25_RAMDATA  ------------------------------
// SVD Line: 62864

//  <rtree> SFDITEM_REG__MODEM_RAM25_RAMDATA
//    <name> RAM25_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086464) RAM25_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM25_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM25_RAMDATA = (MODEM_RAM25_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM25_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM26_RAMDATA  ---------------------------
// SVD Line: 62882

unsigned int MODEM_RAM26_RAMDATA __AT (0x40086468);



// --------------------------  Field Item: MODEM_RAM26_RAMDATA_DATA  ------------------------------
// SVD Line: 62891

//  <item> SFDITEM_FIELD__MODEM_RAM26_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086468) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM26_RAMDATA >> 0) & 0xFF), ((MODEM_RAM26_RAMDATA = (MODEM_RAM26_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM26_RAMDATA  ------------------------------
// SVD Line: 62882

//  <rtree> SFDITEM_REG__MODEM_RAM26_RAMDATA
//    <name> RAM26_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086468) RAM26_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM26_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM26_RAMDATA = (MODEM_RAM26_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM26_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM27_RAMDATA  ---------------------------
// SVD Line: 62900

unsigned int MODEM_RAM27_RAMDATA __AT (0x4008646C);



// --------------------------  Field Item: MODEM_RAM27_RAMDATA_DATA  ------------------------------
// SVD Line: 62909

//  <item> SFDITEM_FIELD__MODEM_RAM27_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008646C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM27_RAMDATA >> 0) & 0xFF), ((MODEM_RAM27_RAMDATA = (MODEM_RAM27_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM27_RAMDATA  ------------------------------
// SVD Line: 62900

//  <rtree> SFDITEM_REG__MODEM_RAM27_RAMDATA
//    <name> RAM27_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008646C) RAM27_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM27_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM27_RAMDATA = (MODEM_RAM27_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM27_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM28_RAMDATA  ---------------------------
// SVD Line: 62918

unsigned int MODEM_RAM28_RAMDATA __AT (0x40086470);



// --------------------------  Field Item: MODEM_RAM28_RAMDATA_DATA  ------------------------------
// SVD Line: 62927

//  <item> SFDITEM_FIELD__MODEM_RAM28_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086470) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM28_RAMDATA >> 0) & 0xFF), ((MODEM_RAM28_RAMDATA = (MODEM_RAM28_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM28_RAMDATA  ------------------------------
// SVD Line: 62918

//  <rtree> SFDITEM_REG__MODEM_RAM28_RAMDATA
//    <name> RAM28_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086470) RAM28_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM28_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM28_RAMDATA = (MODEM_RAM28_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM28_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM29_RAMDATA  ---------------------------
// SVD Line: 62936

unsigned int MODEM_RAM29_RAMDATA __AT (0x40086474);



// --------------------------  Field Item: MODEM_RAM29_RAMDATA_DATA  ------------------------------
// SVD Line: 62945

//  <item> SFDITEM_FIELD__MODEM_RAM29_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086474) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM29_RAMDATA >> 0) & 0xFF), ((MODEM_RAM29_RAMDATA = (MODEM_RAM29_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM29_RAMDATA  ------------------------------
// SVD Line: 62936

//  <rtree> SFDITEM_REG__MODEM_RAM29_RAMDATA
//    <name> RAM29_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086474) RAM29_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM29_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM29_RAMDATA = (MODEM_RAM29_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM29_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM30_RAMDATA  ---------------------------
// SVD Line: 62954

unsigned int MODEM_RAM30_RAMDATA __AT (0x40086478);



// --------------------------  Field Item: MODEM_RAM30_RAMDATA_DATA  ------------------------------
// SVD Line: 62963

//  <item> SFDITEM_FIELD__MODEM_RAM30_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086478) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM30_RAMDATA >> 0) & 0xFF), ((MODEM_RAM30_RAMDATA = (MODEM_RAM30_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM30_RAMDATA  ------------------------------
// SVD Line: 62954

//  <rtree> SFDITEM_REG__MODEM_RAM30_RAMDATA
//    <name> RAM30_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086478) RAM30_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM30_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM30_RAMDATA = (MODEM_RAM30_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM30_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM31_RAMDATA  ---------------------------
// SVD Line: 62972

unsigned int MODEM_RAM31_RAMDATA __AT (0x4008647C);



// --------------------------  Field Item: MODEM_RAM31_RAMDATA_DATA  ------------------------------
// SVD Line: 62981

//  <item> SFDITEM_FIELD__MODEM_RAM31_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008647C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM31_RAMDATA >> 0) & 0xFF), ((MODEM_RAM31_RAMDATA = (MODEM_RAM31_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM31_RAMDATA  ------------------------------
// SVD Line: 62972

//  <rtree> SFDITEM_REG__MODEM_RAM31_RAMDATA
//    <name> RAM31_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008647C) RAM31_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM31_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM31_RAMDATA = (MODEM_RAM31_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM31_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM32_RAMDATA  ---------------------------
// SVD Line: 62990

unsigned int MODEM_RAM32_RAMDATA __AT (0x40086480);



// --------------------------  Field Item: MODEM_RAM32_RAMDATA_DATA  ------------------------------
// SVD Line: 62999

//  <item> SFDITEM_FIELD__MODEM_RAM32_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086480) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM32_RAMDATA >> 0) & 0xFF), ((MODEM_RAM32_RAMDATA = (MODEM_RAM32_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM32_RAMDATA  ------------------------------
// SVD Line: 62990

//  <rtree> SFDITEM_REG__MODEM_RAM32_RAMDATA
//    <name> RAM32_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086480) RAM32_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM32_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM32_RAMDATA = (MODEM_RAM32_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM32_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM33_RAMDATA  ---------------------------
// SVD Line: 63008

unsigned int MODEM_RAM33_RAMDATA __AT (0x40086484);



// --------------------------  Field Item: MODEM_RAM33_RAMDATA_DATA  ------------------------------
// SVD Line: 63017

//  <item> SFDITEM_FIELD__MODEM_RAM33_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086484) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM33_RAMDATA >> 0) & 0xFF), ((MODEM_RAM33_RAMDATA = (MODEM_RAM33_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM33_RAMDATA  ------------------------------
// SVD Line: 63008

//  <rtree> SFDITEM_REG__MODEM_RAM33_RAMDATA
//    <name> RAM33_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086484) RAM33_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM33_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM33_RAMDATA = (MODEM_RAM33_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM33_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM34_RAMDATA  ---------------------------
// SVD Line: 63026

unsigned int MODEM_RAM34_RAMDATA __AT (0x40086488);



// --------------------------  Field Item: MODEM_RAM34_RAMDATA_DATA  ------------------------------
// SVD Line: 63035

//  <item> SFDITEM_FIELD__MODEM_RAM34_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086488) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM34_RAMDATA >> 0) & 0xFF), ((MODEM_RAM34_RAMDATA = (MODEM_RAM34_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM34_RAMDATA  ------------------------------
// SVD Line: 63026

//  <rtree> SFDITEM_REG__MODEM_RAM34_RAMDATA
//    <name> RAM34_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086488) RAM34_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM34_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM34_RAMDATA = (MODEM_RAM34_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM34_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM35_RAMDATA  ---------------------------
// SVD Line: 63044

unsigned int MODEM_RAM35_RAMDATA __AT (0x4008648C);



// --------------------------  Field Item: MODEM_RAM35_RAMDATA_DATA  ------------------------------
// SVD Line: 63053

//  <item> SFDITEM_FIELD__MODEM_RAM35_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008648C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM35_RAMDATA >> 0) & 0xFF), ((MODEM_RAM35_RAMDATA = (MODEM_RAM35_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM35_RAMDATA  ------------------------------
// SVD Line: 63044

//  <rtree> SFDITEM_REG__MODEM_RAM35_RAMDATA
//    <name> RAM35_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008648C) RAM35_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM35_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM35_RAMDATA = (MODEM_RAM35_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM35_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM36_RAMDATA  ---------------------------
// SVD Line: 63062

unsigned int MODEM_RAM36_RAMDATA __AT (0x40086490);



// --------------------------  Field Item: MODEM_RAM36_RAMDATA_DATA  ------------------------------
// SVD Line: 63071

//  <item> SFDITEM_FIELD__MODEM_RAM36_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086490) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM36_RAMDATA >> 0) & 0xFF), ((MODEM_RAM36_RAMDATA = (MODEM_RAM36_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM36_RAMDATA  ------------------------------
// SVD Line: 63062

//  <rtree> SFDITEM_REG__MODEM_RAM36_RAMDATA
//    <name> RAM36_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086490) RAM36_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM36_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM36_RAMDATA = (MODEM_RAM36_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM36_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM37_RAMDATA  ---------------------------
// SVD Line: 63080

unsigned int MODEM_RAM37_RAMDATA __AT (0x40086494);



// --------------------------  Field Item: MODEM_RAM37_RAMDATA_DATA  ------------------------------
// SVD Line: 63089

//  <item> SFDITEM_FIELD__MODEM_RAM37_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086494) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM37_RAMDATA >> 0) & 0xFF), ((MODEM_RAM37_RAMDATA = (MODEM_RAM37_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM37_RAMDATA  ------------------------------
// SVD Line: 63080

//  <rtree> SFDITEM_REG__MODEM_RAM37_RAMDATA
//    <name> RAM37_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086494) RAM37_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM37_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM37_RAMDATA = (MODEM_RAM37_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM37_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM38_RAMDATA  ---------------------------
// SVD Line: 63098

unsigned int MODEM_RAM38_RAMDATA __AT (0x40086498);



// --------------------------  Field Item: MODEM_RAM38_RAMDATA_DATA  ------------------------------
// SVD Line: 63107

//  <item> SFDITEM_FIELD__MODEM_RAM38_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086498) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM38_RAMDATA >> 0) & 0xFF), ((MODEM_RAM38_RAMDATA = (MODEM_RAM38_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM38_RAMDATA  ------------------------------
// SVD Line: 63098

//  <rtree> SFDITEM_REG__MODEM_RAM38_RAMDATA
//    <name> RAM38_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086498) RAM38_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM38_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM38_RAMDATA = (MODEM_RAM38_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM38_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM39_RAMDATA  ---------------------------
// SVD Line: 63116

unsigned int MODEM_RAM39_RAMDATA __AT (0x4008649C);



// --------------------------  Field Item: MODEM_RAM39_RAMDATA_DATA  ------------------------------
// SVD Line: 63125

//  <item> SFDITEM_FIELD__MODEM_RAM39_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008649C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM39_RAMDATA >> 0) & 0xFF), ((MODEM_RAM39_RAMDATA = (MODEM_RAM39_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM39_RAMDATA  ------------------------------
// SVD Line: 63116

//  <rtree> SFDITEM_REG__MODEM_RAM39_RAMDATA
//    <name> RAM39_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008649C) RAM39_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM39_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM39_RAMDATA = (MODEM_RAM39_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM39_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM40_RAMDATA  ---------------------------
// SVD Line: 63134

unsigned int MODEM_RAM40_RAMDATA __AT (0x400864A0);



// --------------------------  Field Item: MODEM_RAM40_RAMDATA_DATA  ------------------------------
// SVD Line: 63143

//  <item> SFDITEM_FIELD__MODEM_RAM40_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864A0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM40_RAMDATA >> 0) & 0xFF), ((MODEM_RAM40_RAMDATA = (MODEM_RAM40_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM40_RAMDATA  ------------------------------
// SVD Line: 63134

//  <rtree> SFDITEM_REG__MODEM_RAM40_RAMDATA
//    <name> RAM40_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864A0) RAM40_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM40_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM40_RAMDATA = (MODEM_RAM40_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM40_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM41_RAMDATA  ---------------------------
// SVD Line: 63152

unsigned int MODEM_RAM41_RAMDATA __AT (0x400864A4);



// --------------------------  Field Item: MODEM_RAM41_RAMDATA_DATA  ------------------------------
// SVD Line: 63161

//  <item> SFDITEM_FIELD__MODEM_RAM41_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864A4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM41_RAMDATA >> 0) & 0xFF), ((MODEM_RAM41_RAMDATA = (MODEM_RAM41_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM41_RAMDATA  ------------------------------
// SVD Line: 63152

//  <rtree> SFDITEM_REG__MODEM_RAM41_RAMDATA
//    <name> RAM41_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864A4) RAM41_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM41_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM41_RAMDATA = (MODEM_RAM41_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM41_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM42_RAMDATA  ---------------------------
// SVD Line: 63170

unsigned int MODEM_RAM42_RAMDATA __AT (0x400864A8);



// --------------------------  Field Item: MODEM_RAM42_RAMDATA_DATA  ------------------------------
// SVD Line: 63179

//  <item> SFDITEM_FIELD__MODEM_RAM42_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864A8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM42_RAMDATA >> 0) & 0xFF), ((MODEM_RAM42_RAMDATA = (MODEM_RAM42_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM42_RAMDATA  ------------------------------
// SVD Line: 63170

//  <rtree> SFDITEM_REG__MODEM_RAM42_RAMDATA
//    <name> RAM42_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864A8) RAM42_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM42_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM42_RAMDATA = (MODEM_RAM42_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM42_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM43_RAMDATA  ---------------------------
// SVD Line: 63188

unsigned int MODEM_RAM43_RAMDATA __AT (0x400864AC);



// --------------------------  Field Item: MODEM_RAM43_RAMDATA_DATA  ------------------------------
// SVD Line: 63197

//  <item> SFDITEM_FIELD__MODEM_RAM43_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864AC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM43_RAMDATA >> 0) & 0xFF), ((MODEM_RAM43_RAMDATA = (MODEM_RAM43_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM43_RAMDATA  ------------------------------
// SVD Line: 63188

//  <rtree> SFDITEM_REG__MODEM_RAM43_RAMDATA
//    <name> RAM43_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864AC) RAM43_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM43_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM43_RAMDATA = (MODEM_RAM43_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM43_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM44_RAMDATA  ---------------------------
// SVD Line: 63206

unsigned int MODEM_RAM44_RAMDATA __AT (0x400864B0);



// --------------------------  Field Item: MODEM_RAM44_RAMDATA_DATA  ------------------------------
// SVD Line: 63215

//  <item> SFDITEM_FIELD__MODEM_RAM44_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864B0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM44_RAMDATA >> 0) & 0xFF), ((MODEM_RAM44_RAMDATA = (MODEM_RAM44_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM44_RAMDATA  ------------------------------
// SVD Line: 63206

//  <rtree> SFDITEM_REG__MODEM_RAM44_RAMDATA
//    <name> RAM44_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864B0) RAM44_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM44_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM44_RAMDATA = (MODEM_RAM44_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM44_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM45_RAMDATA  ---------------------------
// SVD Line: 63224

unsigned int MODEM_RAM45_RAMDATA __AT (0x400864B4);



// --------------------------  Field Item: MODEM_RAM45_RAMDATA_DATA  ------------------------------
// SVD Line: 63233

//  <item> SFDITEM_FIELD__MODEM_RAM45_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864B4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM45_RAMDATA >> 0) & 0xFF), ((MODEM_RAM45_RAMDATA = (MODEM_RAM45_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM45_RAMDATA  ------------------------------
// SVD Line: 63224

//  <rtree> SFDITEM_REG__MODEM_RAM45_RAMDATA
//    <name> RAM45_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864B4) RAM45_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM45_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM45_RAMDATA = (MODEM_RAM45_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM45_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM46_RAMDATA  ---------------------------
// SVD Line: 63242

unsigned int MODEM_RAM46_RAMDATA __AT (0x400864B8);



// --------------------------  Field Item: MODEM_RAM46_RAMDATA_DATA  ------------------------------
// SVD Line: 63251

//  <item> SFDITEM_FIELD__MODEM_RAM46_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864B8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM46_RAMDATA >> 0) & 0xFF), ((MODEM_RAM46_RAMDATA = (MODEM_RAM46_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM46_RAMDATA  ------------------------------
// SVD Line: 63242

//  <rtree> SFDITEM_REG__MODEM_RAM46_RAMDATA
//    <name> RAM46_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864B8) RAM46_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM46_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM46_RAMDATA = (MODEM_RAM46_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM46_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM47_RAMDATA  ---------------------------
// SVD Line: 63260

unsigned int MODEM_RAM47_RAMDATA __AT (0x400864BC);



// --------------------------  Field Item: MODEM_RAM47_RAMDATA_DATA  ------------------------------
// SVD Line: 63269

//  <item> SFDITEM_FIELD__MODEM_RAM47_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864BC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM47_RAMDATA >> 0) & 0xFF), ((MODEM_RAM47_RAMDATA = (MODEM_RAM47_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM47_RAMDATA  ------------------------------
// SVD Line: 63260

//  <rtree> SFDITEM_REG__MODEM_RAM47_RAMDATA
//    <name> RAM47_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864BC) RAM47_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM47_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM47_RAMDATA = (MODEM_RAM47_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM47_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM48_RAMDATA  ---------------------------
// SVD Line: 63278

unsigned int MODEM_RAM48_RAMDATA __AT (0x400864C0);



// --------------------------  Field Item: MODEM_RAM48_RAMDATA_DATA  ------------------------------
// SVD Line: 63287

//  <item> SFDITEM_FIELD__MODEM_RAM48_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864C0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM48_RAMDATA >> 0) & 0xFF), ((MODEM_RAM48_RAMDATA = (MODEM_RAM48_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM48_RAMDATA  ------------------------------
// SVD Line: 63278

//  <rtree> SFDITEM_REG__MODEM_RAM48_RAMDATA
//    <name> RAM48_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864C0) RAM48_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM48_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM48_RAMDATA = (MODEM_RAM48_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM48_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM49_RAMDATA  ---------------------------
// SVD Line: 63296

unsigned int MODEM_RAM49_RAMDATA __AT (0x400864C4);



// --------------------------  Field Item: MODEM_RAM49_RAMDATA_DATA  ------------------------------
// SVD Line: 63305

//  <item> SFDITEM_FIELD__MODEM_RAM49_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864C4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM49_RAMDATA >> 0) & 0xFF), ((MODEM_RAM49_RAMDATA = (MODEM_RAM49_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM49_RAMDATA  ------------------------------
// SVD Line: 63296

//  <rtree> SFDITEM_REG__MODEM_RAM49_RAMDATA
//    <name> RAM49_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864C4) RAM49_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM49_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM49_RAMDATA = (MODEM_RAM49_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM49_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM50_RAMDATA  ---------------------------
// SVD Line: 63314

unsigned int MODEM_RAM50_RAMDATA __AT (0x400864C8);



// --------------------------  Field Item: MODEM_RAM50_RAMDATA_DATA  ------------------------------
// SVD Line: 63323

//  <item> SFDITEM_FIELD__MODEM_RAM50_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864C8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM50_RAMDATA >> 0) & 0xFF), ((MODEM_RAM50_RAMDATA = (MODEM_RAM50_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM50_RAMDATA  ------------------------------
// SVD Line: 63314

//  <rtree> SFDITEM_REG__MODEM_RAM50_RAMDATA
//    <name> RAM50_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864C8) RAM50_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM50_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM50_RAMDATA = (MODEM_RAM50_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM50_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM51_RAMDATA  ---------------------------
// SVD Line: 63332

unsigned int MODEM_RAM51_RAMDATA __AT (0x400864CC);



// --------------------------  Field Item: MODEM_RAM51_RAMDATA_DATA  ------------------------------
// SVD Line: 63341

//  <item> SFDITEM_FIELD__MODEM_RAM51_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864CC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM51_RAMDATA >> 0) & 0xFF), ((MODEM_RAM51_RAMDATA = (MODEM_RAM51_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM51_RAMDATA  ------------------------------
// SVD Line: 63332

//  <rtree> SFDITEM_REG__MODEM_RAM51_RAMDATA
//    <name> RAM51_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864CC) RAM51_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM51_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM51_RAMDATA = (MODEM_RAM51_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM51_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM52_RAMDATA  ---------------------------
// SVD Line: 63350

unsigned int MODEM_RAM52_RAMDATA __AT (0x400864D0);



// --------------------------  Field Item: MODEM_RAM52_RAMDATA_DATA  ------------------------------
// SVD Line: 63359

//  <item> SFDITEM_FIELD__MODEM_RAM52_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864D0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM52_RAMDATA >> 0) & 0xFF), ((MODEM_RAM52_RAMDATA = (MODEM_RAM52_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM52_RAMDATA  ------------------------------
// SVD Line: 63350

//  <rtree> SFDITEM_REG__MODEM_RAM52_RAMDATA
//    <name> RAM52_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864D0) RAM52_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM52_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM52_RAMDATA = (MODEM_RAM52_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM52_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM53_RAMDATA  ---------------------------
// SVD Line: 63368

unsigned int MODEM_RAM53_RAMDATA __AT (0x400864D4);



// --------------------------  Field Item: MODEM_RAM53_RAMDATA_DATA  ------------------------------
// SVD Line: 63377

//  <item> SFDITEM_FIELD__MODEM_RAM53_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864D4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM53_RAMDATA >> 0) & 0xFF), ((MODEM_RAM53_RAMDATA = (MODEM_RAM53_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM53_RAMDATA  ------------------------------
// SVD Line: 63368

//  <rtree> SFDITEM_REG__MODEM_RAM53_RAMDATA
//    <name> RAM53_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864D4) RAM53_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM53_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM53_RAMDATA = (MODEM_RAM53_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM53_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM54_RAMDATA  ---------------------------
// SVD Line: 63386

unsigned int MODEM_RAM54_RAMDATA __AT (0x400864D8);



// --------------------------  Field Item: MODEM_RAM54_RAMDATA_DATA  ------------------------------
// SVD Line: 63395

//  <item> SFDITEM_FIELD__MODEM_RAM54_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864D8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM54_RAMDATA >> 0) & 0xFF), ((MODEM_RAM54_RAMDATA = (MODEM_RAM54_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM54_RAMDATA  ------------------------------
// SVD Line: 63386

//  <rtree> SFDITEM_REG__MODEM_RAM54_RAMDATA
//    <name> RAM54_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864D8) RAM54_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM54_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM54_RAMDATA = (MODEM_RAM54_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM54_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM55_RAMDATA  ---------------------------
// SVD Line: 63404

unsigned int MODEM_RAM55_RAMDATA __AT (0x400864DC);



// --------------------------  Field Item: MODEM_RAM55_RAMDATA_DATA  ------------------------------
// SVD Line: 63413

//  <item> SFDITEM_FIELD__MODEM_RAM55_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864DC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM55_RAMDATA >> 0) & 0xFF), ((MODEM_RAM55_RAMDATA = (MODEM_RAM55_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM55_RAMDATA  ------------------------------
// SVD Line: 63404

//  <rtree> SFDITEM_REG__MODEM_RAM55_RAMDATA
//    <name> RAM55_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864DC) RAM55_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM55_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM55_RAMDATA = (MODEM_RAM55_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM55_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM56_RAMDATA  ---------------------------
// SVD Line: 63422

unsigned int MODEM_RAM56_RAMDATA __AT (0x400864E0);



// --------------------------  Field Item: MODEM_RAM56_RAMDATA_DATA  ------------------------------
// SVD Line: 63431

//  <item> SFDITEM_FIELD__MODEM_RAM56_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864E0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM56_RAMDATA >> 0) & 0xFF), ((MODEM_RAM56_RAMDATA = (MODEM_RAM56_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM56_RAMDATA  ------------------------------
// SVD Line: 63422

//  <rtree> SFDITEM_REG__MODEM_RAM56_RAMDATA
//    <name> RAM56_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864E0) RAM56_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM56_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM56_RAMDATA = (MODEM_RAM56_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM56_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM57_RAMDATA  ---------------------------
// SVD Line: 63440

unsigned int MODEM_RAM57_RAMDATA __AT (0x400864E4);



// --------------------------  Field Item: MODEM_RAM57_RAMDATA_DATA  ------------------------------
// SVD Line: 63449

//  <item> SFDITEM_FIELD__MODEM_RAM57_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864E4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM57_RAMDATA >> 0) & 0xFF), ((MODEM_RAM57_RAMDATA = (MODEM_RAM57_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM57_RAMDATA  ------------------------------
// SVD Line: 63440

//  <rtree> SFDITEM_REG__MODEM_RAM57_RAMDATA
//    <name> RAM57_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864E4) RAM57_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM57_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM57_RAMDATA = (MODEM_RAM57_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM57_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM58_RAMDATA  ---------------------------
// SVD Line: 63458

unsigned int MODEM_RAM58_RAMDATA __AT (0x400864E8);



// --------------------------  Field Item: MODEM_RAM58_RAMDATA_DATA  ------------------------------
// SVD Line: 63467

//  <item> SFDITEM_FIELD__MODEM_RAM58_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864E8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM58_RAMDATA >> 0) & 0xFF), ((MODEM_RAM58_RAMDATA = (MODEM_RAM58_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM58_RAMDATA  ------------------------------
// SVD Line: 63458

//  <rtree> SFDITEM_REG__MODEM_RAM58_RAMDATA
//    <name> RAM58_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864E8) RAM58_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM58_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM58_RAMDATA = (MODEM_RAM58_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM58_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM59_RAMDATA  ---------------------------
// SVD Line: 63476

unsigned int MODEM_RAM59_RAMDATA __AT (0x400864EC);



// --------------------------  Field Item: MODEM_RAM59_RAMDATA_DATA  ------------------------------
// SVD Line: 63485

//  <item> SFDITEM_FIELD__MODEM_RAM59_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864EC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM59_RAMDATA >> 0) & 0xFF), ((MODEM_RAM59_RAMDATA = (MODEM_RAM59_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM59_RAMDATA  ------------------------------
// SVD Line: 63476

//  <rtree> SFDITEM_REG__MODEM_RAM59_RAMDATA
//    <name> RAM59_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864EC) RAM59_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM59_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM59_RAMDATA = (MODEM_RAM59_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM59_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM60_RAMDATA  ---------------------------
// SVD Line: 63494

unsigned int MODEM_RAM60_RAMDATA __AT (0x400864F0);



// --------------------------  Field Item: MODEM_RAM60_RAMDATA_DATA  ------------------------------
// SVD Line: 63503

//  <item> SFDITEM_FIELD__MODEM_RAM60_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864F0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM60_RAMDATA >> 0) & 0xFF), ((MODEM_RAM60_RAMDATA = (MODEM_RAM60_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM60_RAMDATA  ------------------------------
// SVD Line: 63494

//  <rtree> SFDITEM_REG__MODEM_RAM60_RAMDATA
//    <name> RAM60_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864F0) RAM60_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM60_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM60_RAMDATA = (MODEM_RAM60_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM60_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM61_RAMDATA  ---------------------------
// SVD Line: 63512

unsigned int MODEM_RAM61_RAMDATA __AT (0x400864F4);



// --------------------------  Field Item: MODEM_RAM61_RAMDATA_DATA  ------------------------------
// SVD Line: 63521

//  <item> SFDITEM_FIELD__MODEM_RAM61_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864F4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM61_RAMDATA >> 0) & 0xFF), ((MODEM_RAM61_RAMDATA = (MODEM_RAM61_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM61_RAMDATA  ------------------------------
// SVD Line: 63512

//  <rtree> SFDITEM_REG__MODEM_RAM61_RAMDATA
//    <name> RAM61_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864F4) RAM61_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM61_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM61_RAMDATA = (MODEM_RAM61_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM61_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM62_RAMDATA  ---------------------------
// SVD Line: 63530

unsigned int MODEM_RAM62_RAMDATA __AT (0x400864F8);



// --------------------------  Field Item: MODEM_RAM62_RAMDATA_DATA  ------------------------------
// SVD Line: 63539

//  <item> SFDITEM_FIELD__MODEM_RAM62_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864F8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM62_RAMDATA >> 0) & 0xFF), ((MODEM_RAM62_RAMDATA = (MODEM_RAM62_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM62_RAMDATA  ------------------------------
// SVD Line: 63530

//  <rtree> SFDITEM_REG__MODEM_RAM62_RAMDATA
//    <name> RAM62_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864F8) RAM62_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM62_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM62_RAMDATA = (MODEM_RAM62_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM62_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM63_RAMDATA  ---------------------------
// SVD Line: 63548

unsigned int MODEM_RAM63_RAMDATA __AT (0x400864FC);



// --------------------------  Field Item: MODEM_RAM63_RAMDATA_DATA  ------------------------------
// SVD Line: 63557

//  <item> SFDITEM_FIELD__MODEM_RAM63_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400864FC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM63_RAMDATA >> 0) & 0xFF), ((MODEM_RAM63_RAMDATA = (MODEM_RAM63_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM63_RAMDATA  ------------------------------
// SVD Line: 63548

//  <rtree> SFDITEM_REG__MODEM_RAM63_RAMDATA
//    <name> RAM63_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400864FC) RAM63_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM63_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM63_RAMDATA = (MODEM_RAM63_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM63_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM64_RAMDATA  ---------------------------
// SVD Line: 63566

unsigned int MODEM_RAM64_RAMDATA __AT (0x40086500);



// --------------------------  Field Item: MODEM_RAM64_RAMDATA_DATA  ------------------------------
// SVD Line: 63575

//  <item> SFDITEM_FIELD__MODEM_RAM64_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086500) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM64_RAMDATA >> 0) & 0xFF), ((MODEM_RAM64_RAMDATA = (MODEM_RAM64_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM64_RAMDATA  ------------------------------
// SVD Line: 63566

//  <rtree> SFDITEM_REG__MODEM_RAM64_RAMDATA
//    <name> RAM64_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086500) RAM64_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM64_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM64_RAMDATA = (MODEM_RAM64_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM64_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM65_RAMDATA  ---------------------------
// SVD Line: 63584

unsigned int MODEM_RAM65_RAMDATA __AT (0x40086504);



// --------------------------  Field Item: MODEM_RAM65_RAMDATA_DATA  ------------------------------
// SVD Line: 63593

//  <item> SFDITEM_FIELD__MODEM_RAM65_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086504) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM65_RAMDATA >> 0) & 0xFF), ((MODEM_RAM65_RAMDATA = (MODEM_RAM65_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM65_RAMDATA  ------------------------------
// SVD Line: 63584

//  <rtree> SFDITEM_REG__MODEM_RAM65_RAMDATA
//    <name> RAM65_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086504) RAM65_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM65_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM65_RAMDATA = (MODEM_RAM65_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM65_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM66_RAMDATA  ---------------------------
// SVD Line: 63602

unsigned int MODEM_RAM66_RAMDATA __AT (0x40086508);



// --------------------------  Field Item: MODEM_RAM66_RAMDATA_DATA  ------------------------------
// SVD Line: 63611

//  <item> SFDITEM_FIELD__MODEM_RAM66_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086508) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM66_RAMDATA >> 0) & 0xFF), ((MODEM_RAM66_RAMDATA = (MODEM_RAM66_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM66_RAMDATA  ------------------------------
// SVD Line: 63602

//  <rtree> SFDITEM_REG__MODEM_RAM66_RAMDATA
//    <name> RAM66_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086508) RAM66_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM66_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM66_RAMDATA = (MODEM_RAM66_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM66_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM67_RAMDATA  ---------------------------
// SVD Line: 63620

unsigned int MODEM_RAM67_RAMDATA __AT (0x4008650C);



// --------------------------  Field Item: MODEM_RAM67_RAMDATA_DATA  ------------------------------
// SVD Line: 63629

//  <item> SFDITEM_FIELD__MODEM_RAM67_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008650C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM67_RAMDATA >> 0) & 0xFF), ((MODEM_RAM67_RAMDATA = (MODEM_RAM67_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM67_RAMDATA  ------------------------------
// SVD Line: 63620

//  <rtree> SFDITEM_REG__MODEM_RAM67_RAMDATA
//    <name> RAM67_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008650C) RAM67_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM67_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM67_RAMDATA = (MODEM_RAM67_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM67_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM68_RAMDATA  ---------------------------
// SVD Line: 63638

unsigned int MODEM_RAM68_RAMDATA __AT (0x40086510);



// --------------------------  Field Item: MODEM_RAM68_RAMDATA_DATA  ------------------------------
// SVD Line: 63647

//  <item> SFDITEM_FIELD__MODEM_RAM68_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086510) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM68_RAMDATA >> 0) & 0xFF), ((MODEM_RAM68_RAMDATA = (MODEM_RAM68_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM68_RAMDATA  ------------------------------
// SVD Line: 63638

//  <rtree> SFDITEM_REG__MODEM_RAM68_RAMDATA
//    <name> RAM68_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086510) RAM68_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM68_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM68_RAMDATA = (MODEM_RAM68_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM68_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM69_RAMDATA  ---------------------------
// SVD Line: 63656

unsigned int MODEM_RAM69_RAMDATA __AT (0x40086514);



// --------------------------  Field Item: MODEM_RAM69_RAMDATA_DATA  ------------------------------
// SVD Line: 63665

//  <item> SFDITEM_FIELD__MODEM_RAM69_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086514) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM69_RAMDATA >> 0) & 0xFF), ((MODEM_RAM69_RAMDATA = (MODEM_RAM69_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM69_RAMDATA  ------------------------------
// SVD Line: 63656

//  <rtree> SFDITEM_REG__MODEM_RAM69_RAMDATA
//    <name> RAM69_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086514) RAM69_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM69_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM69_RAMDATA = (MODEM_RAM69_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM69_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM70_RAMDATA  ---------------------------
// SVD Line: 63674

unsigned int MODEM_RAM70_RAMDATA __AT (0x40086518);



// --------------------------  Field Item: MODEM_RAM70_RAMDATA_DATA  ------------------------------
// SVD Line: 63683

//  <item> SFDITEM_FIELD__MODEM_RAM70_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086518) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM70_RAMDATA >> 0) & 0xFF), ((MODEM_RAM70_RAMDATA = (MODEM_RAM70_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM70_RAMDATA  ------------------------------
// SVD Line: 63674

//  <rtree> SFDITEM_REG__MODEM_RAM70_RAMDATA
//    <name> RAM70_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086518) RAM70_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM70_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM70_RAMDATA = (MODEM_RAM70_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM70_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM71_RAMDATA  ---------------------------
// SVD Line: 63692

unsigned int MODEM_RAM71_RAMDATA __AT (0x4008651C);



// --------------------------  Field Item: MODEM_RAM71_RAMDATA_DATA  ------------------------------
// SVD Line: 63701

//  <item> SFDITEM_FIELD__MODEM_RAM71_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008651C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM71_RAMDATA >> 0) & 0xFF), ((MODEM_RAM71_RAMDATA = (MODEM_RAM71_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM71_RAMDATA  ------------------------------
// SVD Line: 63692

//  <rtree> SFDITEM_REG__MODEM_RAM71_RAMDATA
//    <name> RAM71_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008651C) RAM71_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM71_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM71_RAMDATA = (MODEM_RAM71_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM71_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM72_RAMDATA  ---------------------------
// SVD Line: 63710

unsigned int MODEM_RAM72_RAMDATA __AT (0x40086520);



// --------------------------  Field Item: MODEM_RAM72_RAMDATA_DATA  ------------------------------
// SVD Line: 63719

//  <item> SFDITEM_FIELD__MODEM_RAM72_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086520) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM72_RAMDATA >> 0) & 0xFF), ((MODEM_RAM72_RAMDATA = (MODEM_RAM72_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM72_RAMDATA  ------------------------------
// SVD Line: 63710

//  <rtree> SFDITEM_REG__MODEM_RAM72_RAMDATA
//    <name> RAM72_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086520) RAM72_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM72_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM72_RAMDATA = (MODEM_RAM72_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM72_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM73_RAMDATA  ---------------------------
// SVD Line: 63728

unsigned int MODEM_RAM73_RAMDATA __AT (0x40086524);



// --------------------------  Field Item: MODEM_RAM73_RAMDATA_DATA  ------------------------------
// SVD Line: 63737

//  <item> SFDITEM_FIELD__MODEM_RAM73_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086524) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM73_RAMDATA >> 0) & 0xFF), ((MODEM_RAM73_RAMDATA = (MODEM_RAM73_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM73_RAMDATA  ------------------------------
// SVD Line: 63728

//  <rtree> SFDITEM_REG__MODEM_RAM73_RAMDATA
//    <name> RAM73_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086524) RAM73_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM73_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM73_RAMDATA = (MODEM_RAM73_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM73_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM74_RAMDATA  ---------------------------
// SVD Line: 63746

unsigned int MODEM_RAM74_RAMDATA __AT (0x40086528);



// --------------------------  Field Item: MODEM_RAM74_RAMDATA_DATA  ------------------------------
// SVD Line: 63755

//  <item> SFDITEM_FIELD__MODEM_RAM74_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086528) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM74_RAMDATA >> 0) & 0xFF), ((MODEM_RAM74_RAMDATA = (MODEM_RAM74_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM74_RAMDATA  ------------------------------
// SVD Line: 63746

//  <rtree> SFDITEM_REG__MODEM_RAM74_RAMDATA
//    <name> RAM74_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086528) RAM74_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM74_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM74_RAMDATA = (MODEM_RAM74_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM74_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM75_RAMDATA  ---------------------------
// SVD Line: 63764

unsigned int MODEM_RAM75_RAMDATA __AT (0x4008652C);



// --------------------------  Field Item: MODEM_RAM75_RAMDATA_DATA  ------------------------------
// SVD Line: 63773

//  <item> SFDITEM_FIELD__MODEM_RAM75_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008652C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM75_RAMDATA >> 0) & 0xFF), ((MODEM_RAM75_RAMDATA = (MODEM_RAM75_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM75_RAMDATA  ------------------------------
// SVD Line: 63764

//  <rtree> SFDITEM_REG__MODEM_RAM75_RAMDATA
//    <name> RAM75_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008652C) RAM75_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM75_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM75_RAMDATA = (MODEM_RAM75_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM75_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM76_RAMDATA  ---------------------------
// SVD Line: 63782

unsigned int MODEM_RAM76_RAMDATA __AT (0x40086530);



// --------------------------  Field Item: MODEM_RAM76_RAMDATA_DATA  ------------------------------
// SVD Line: 63791

//  <item> SFDITEM_FIELD__MODEM_RAM76_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086530) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM76_RAMDATA >> 0) & 0xFF), ((MODEM_RAM76_RAMDATA = (MODEM_RAM76_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM76_RAMDATA  ------------------------------
// SVD Line: 63782

//  <rtree> SFDITEM_REG__MODEM_RAM76_RAMDATA
//    <name> RAM76_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086530) RAM76_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM76_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM76_RAMDATA = (MODEM_RAM76_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM76_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM77_RAMDATA  ---------------------------
// SVD Line: 63800

unsigned int MODEM_RAM77_RAMDATA __AT (0x40086534);



// --------------------------  Field Item: MODEM_RAM77_RAMDATA_DATA  ------------------------------
// SVD Line: 63809

//  <item> SFDITEM_FIELD__MODEM_RAM77_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086534) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM77_RAMDATA >> 0) & 0xFF), ((MODEM_RAM77_RAMDATA = (MODEM_RAM77_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM77_RAMDATA  ------------------------------
// SVD Line: 63800

//  <rtree> SFDITEM_REG__MODEM_RAM77_RAMDATA
//    <name> RAM77_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086534) RAM77_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM77_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM77_RAMDATA = (MODEM_RAM77_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM77_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM78_RAMDATA  ---------------------------
// SVD Line: 63818

unsigned int MODEM_RAM78_RAMDATA __AT (0x40086538);



// --------------------------  Field Item: MODEM_RAM78_RAMDATA_DATA  ------------------------------
// SVD Line: 63827

//  <item> SFDITEM_FIELD__MODEM_RAM78_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086538) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM78_RAMDATA >> 0) & 0xFF), ((MODEM_RAM78_RAMDATA = (MODEM_RAM78_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM78_RAMDATA  ------------------------------
// SVD Line: 63818

//  <rtree> SFDITEM_REG__MODEM_RAM78_RAMDATA
//    <name> RAM78_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086538) RAM78_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM78_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM78_RAMDATA = (MODEM_RAM78_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM78_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM79_RAMDATA  ---------------------------
// SVD Line: 63836

unsigned int MODEM_RAM79_RAMDATA __AT (0x4008653C);



// --------------------------  Field Item: MODEM_RAM79_RAMDATA_DATA  ------------------------------
// SVD Line: 63845

//  <item> SFDITEM_FIELD__MODEM_RAM79_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008653C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM79_RAMDATA >> 0) & 0xFF), ((MODEM_RAM79_RAMDATA = (MODEM_RAM79_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM79_RAMDATA  ------------------------------
// SVD Line: 63836

//  <rtree> SFDITEM_REG__MODEM_RAM79_RAMDATA
//    <name> RAM79_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008653C) RAM79_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM79_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM79_RAMDATA = (MODEM_RAM79_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM79_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM80_RAMDATA  ---------------------------
// SVD Line: 63854

unsigned int MODEM_RAM80_RAMDATA __AT (0x40086540);



// --------------------------  Field Item: MODEM_RAM80_RAMDATA_DATA  ------------------------------
// SVD Line: 63863

//  <item> SFDITEM_FIELD__MODEM_RAM80_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086540) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM80_RAMDATA >> 0) & 0xFF), ((MODEM_RAM80_RAMDATA = (MODEM_RAM80_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM80_RAMDATA  ------------------------------
// SVD Line: 63854

//  <rtree> SFDITEM_REG__MODEM_RAM80_RAMDATA
//    <name> RAM80_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086540) RAM80_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM80_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM80_RAMDATA = (MODEM_RAM80_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM80_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM81_RAMDATA  ---------------------------
// SVD Line: 63872

unsigned int MODEM_RAM81_RAMDATA __AT (0x40086544);



// --------------------------  Field Item: MODEM_RAM81_RAMDATA_DATA  ------------------------------
// SVD Line: 63881

//  <item> SFDITEM_FIELD__MODEM_RAM81_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086544) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM81_RAMDATA >> 0) & 0xFF), ((MODEM_RAM81_RAMDATA = (MODEM_RAM81_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM81_RAMDATA  ------------------------------
// SVD Line: 63872

//  <rtree> SFDITEM_REG__MODEM_RAM81_RAMDATA
//    <name> RAM81_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086544) RAM81_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM81_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM81_RAMDATA = (MODEM_RAM81_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM81_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM82_RAMDATA  ---------------------------
// SVD Line: 63890

unsigned int MODEM_RAM82_RAMDATA __AT (0x40086548);



// --------------------------  Field Item: MODEM_RAM82_RAMDATA_DATA  ------------------------------
// SVD Line: 63899

//  <item> SFDITEM_FIELD__MODEM_RAM82_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086548) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM82_RAMDATA >> 0) & 0xFF), ((MODEM_RAM82_RAMDATA = (MODEM_RAM82_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM82_RAMDATA  ------------------------------
// SVD Line: 63890

//  <rtree> SFDITEM_REG__MODEM_RAM82_RAMDATA
//    <name> RAM82_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086548) RAM82_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM82_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM82_RAMDATA = (MODEM_RAM82_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM82_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM83_RAMDATA  ---------------------------
// SVD Line: 63908

unsigned int MODEM_RAM83_RAMDATA __AT (0x4008654C);



// --------------------------  Field Item: MODEM_RAM83_RAMDATA_DATA  ------------------------------
// SVD Line: 63917

//  <item> SFDITEM_FIELD__MODEM_RAM83_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008654C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM83_RAMDATA >> 0) & 0xFF), ((MODEM_RAM83_RAMDATA = (MODEM_RAM83_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM83_RAMDATA  ------------------------------
// SVD Line: 63908

//  <rtree> SFDITEM_REG__MODEM_RAM83_RAMDATA
//    <name> RAM83_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008654C) RAM83_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM83_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM83_RAMDATA = (MODEM_RAM83_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM83_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM84_RAMDATA  ---------------------------
// SVD Line: 63926

unsigned int MODEM_RAM84_RAMDATA __AT (0x40086550);



// --------------------------  Field Item: MODEM_RAM84_RAMDATA_DATA  ------------------------------
// SVD Line: 63935

//  <item> SFDITEM_FIELD__MODEM_RAM84_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086550) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM84_RAMDATA >> 0) & 0xFF), ((MODEM_RAM84_RAMDATA = (MODEM_RAM84_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM84_RAMDATA  ------------------------------
// SVD Line: 63926

//  <rtree> SFDITEM_REG__MODEM_RAM84_RAMDATA
//    <name> RAM84_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086550) RAM84_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM84_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM84_RAMDATA = (MODEM_RAM84_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM84_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM85_RAMDATA  ---------------------------
// SVD Line: 63944

unsigned int MODEM_RAM85_RAMDATA __AT (0x40086554);



// --------------------------  Field Item: MODEM_RAM85_RAMDATA_DATA  ------------------------------
// SVD Line: 63953

//  <item> SFDITEM_FIELD__MODEM_RAM85_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086554) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM85_RAMDATA >> 0) & 0xFF), ((MODEM_RAM85_RAMDATA = (MODEM_RAM85_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM85_RAMDATA  ------------------------------
// SVD Line: 63944

//  <rtree> SFDITEM_REG__MODEM_RAM85_RAMDATA
//    <name> RAM85_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086554) RAM85_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM85_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM85_RAMDATA = (MODEM_RAM85_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM85_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM86_RAMDATA  ---------------------------
// SVD Line: 63962

unsigned int MODEM_RAM86_RAMDATA __AT (0x40086558);



// --------------------------  Field Item: MODEM_RAM86_RAMDATA_DATA  ------------------------------
// SVD Line: 63971

//  <item> SFDITEM_FIELD__MODEM_RAM86_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086558) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM86_RAMDATA >> 0) & 0xFF), ((MODEM_RAM86_RAMDATA = (MODEM_RAM86_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM86_RAMDATA  ------------------------------
// SVD Line: 63962

//  <rtree> SFDITEM_REG__MODEM_RAM86_RAMDATA
//    <name> RAM86_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086558) RAM86_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM86_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM86_RAMDATA = (MODEM_RAM86_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM86_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM87_RAMDATA  ---------------------------
// SVD Line: 63980

unsigned int MODEM_RAM87_RAMDATA __AT (0x4008655C);



// --------------------------  Field Item: MODEM_RAM87_RAMDATA_DATA  ------------------------------
// SVD Line: 63989

//  <item> SFDITEM_FIELD__MODEM_RAM87_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008655C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM87_RAMDATA >> 0) & 0xFF), ((MODEM_RAM87_RAMDATA = (MODEM_RAM87_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM87_RAMDATA  ------------------------------
// SVD Line: 63980

//  <rtree> SFDITEM_REG__MODEM_RAM87_RAMDATA
//    <name> RAM87_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008655C) RAM87_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM87_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM87_RAMDATA = (MODEM_RAM87_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM87_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM88_RAMDATA  ---------------------------
// SVD Line: 63998

unsigned int MODEM_RAM88_RAMDATA __AT (0x40086560);



// --------------------------  Field Item: MODEM_RAM88_RAMDATA_DATA  ------------------------------
// SVD Line: 64007

//  <item> SFDITEM_FIELD__MODEM_RAM88_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086560) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM88_RAMDATA >> 0) & 0xFF), ((MODEM_RAM88_RAMDATA = (MODEM_RAM88_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM88_RAMDATA  ------------------------------
// SVD Line: 63998

//  <rtree> SFDITEM_REG__MODEM_RAM88_RAMDATA
//    <name> RAM88_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086560) RAM88_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM88_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM88_RAMDATA = (MODEM_RAM88_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM88_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM89_RAMDATA  ---------------------------
// SVD Line: 64016

unsigned int MODEM_RAM89_RAMDATA __AT (0x40086564);



// --------------------------  Field Item: MODEM_RAM89_RAMDATA_DATA  ------------------------------
// SVD Line: 64025

//  <item> SFDITEM_FIELD__MODEM_RAM89_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086564) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM89_RAMDATA >> 0) & 0xFF), ((MODEM_RAM89_RAMDATA = (MODEM_RAM89_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM89_RAMDATA  ------------------------------
// SVD Line: 64016

//  <rtree> SFDITEM_REG__MODEM_RAM89_RAMDATA
//    <name> RAM89_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086564) RAM89_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM89_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM89_RAMDATA = (MODEM_RAM89_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM89_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM90_RAMDATA  ---------------------------
// SVD Line: 64034

unsigned int MODEM_RAM90_RAMDATA __AT (0x40086568);



// --------------------------  Field Item: MODEM_RAM90_RAMDATA_DATA  ------------------------------
// SVD Line: 64043

//  <item> SFDITEM_FIELD__MODEM_RAM90_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086568) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM90_RAMDATA >> 0) & 0xFF), ((MODEM_RAM90_RAMDATA = (MODEM_RAM90_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM90_RAMDATA  ------------------------------
// SVD Line: 64034

//  <rtree> SFDITEM_REG__MODEM_RAM90_RAMDATA
//    <name> RAM90_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086568) RAM90_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM90_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM90_RAMDATA = (MODEM_RAM90_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM90_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM91_RAMDATA  ---------------------------
// SVD Line: 64052

unsigned int MODEM_RAM91_RAMDATA __AT (0x4008656C);



// --------------------------  Field Item: MODEM_RAM91_RAMDATA_DATA  ------------------------------
// SVD Line: 64061

//  <item> SFDITEM_FIELD__MODEM_RAM91_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008656C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM91_RAMDATA >> 0) & 0xFF), ((MODEM_RAM91_RAMDATA = (MODEM_RAM91_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM91_RAMDATA  ------------------------------
// SVD Line: 64052

//  <rtree> SFDITEM_REG__MODEM_RAM91_RAMDATA
//    <name> RAM91_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008656C) RAM91_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM91_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM91_RAMDATA = (MODEM_RAM91_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM91_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM92_RAMDATA  ---------------------------
// SVD Line: 64070

unsigned int MODEM_RAM92_RAMDATA __AT (0x40086570);



// --------------------------  Field Item: MODEM_RAM92_RAMDATA_DATA  ------------------------------
// SVD Line: 64079

//  <item> SFDITEM_FIELD__MODEM_RAM92_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086570) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM92_RAMDATA >> 0) & 0xFF), ((MODEM_RAM92_RAMDATA = (MODEM_RAM92_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM92_RAMDATA  ------------------------------
// SVD Line: 64070

//  <rtree> SFDITEM_REG__MODEM_RAM92_RAMDATA
//    <name> RAM92_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086570) RAM92_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM92_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM92_RAMDATA = (MODEM_RAM92_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM92_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM93_RAMDATA  ---------------------------
// SVD Line: 64088

unsigned int MODEM_RAM93_RAMDATA __AT (0x40086574);



// --------------------------  Field Item: MODEM_RAM93_RAMDATA_DATA  ------------------------------
// SVD Line: 64097

//  <item> SFDITEM_FIELD__MODEM_RAM93_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086574) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM93_RAMDATA >> 0) & 0xFF), ((MODEM_RAM93_RAMDATA = (MODEM_RAM93_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM93_RAMDATA  ------------------------------
// SVD Line: 64088

//  <rtree> SFDITEM_REG__MODEM_RAM93_RAMDATA
//    <name> RAM93_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086574) RAM93_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM93_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM93_RAMDATA = (MODEM_RAM93_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM93_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM94_RAMDATA  ---------------------------
// SVD Line: 64106

unsigned int MODEM_RAM94_RAMDATA __AT (0x40086578);



// --------------------------  Field Item: MODEM_RAM94_RAMDATA_DATA  ------------------------------
// SVD Line: 64115

//  <item> SFDITEM_FIELD__MODEM_RAM94_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086578) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM94_RAMDATA >> 0) & 0xFF), ((MODEM_RAM94_RAMDATA = (MODEM_RAM94_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM94_RAMDATA  ------------------------------
// SVD Line: 64106

//  <rtree> SFDITEM_REG__MODEM_RAM94_RAMDATA
//    <name> RAM94_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086578) RAM94_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM94_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM94_RAMDATA = (MODEM_RAM94_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM94_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM95_RAMDATA  ---------------------------
// SVD Line: 64124

unsigned int MODEM_RAM95_RAMDATA __AT (0x4008657C);



// --------------------------  Field Item: MODEM_RAM95_RAMDATA_DATA  ------------------------------
// SVD Line: 64133

//  <item> SFDITEM_FIELD__MODEM_RAM95_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008657C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM95_RAMDATA >> 0) & 0xFF), ((MODEM_RAM95_RAMDATA = (MODEM_RAM95_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM95_RAMDATA  ------------------------------
// SVD Line: 64124

//  <rtree> SFDITEM_REG__MODEM_RAM95_RAMDATA
//    <name> RAM95_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008657C) RAM95_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM95_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM95_RAMDATA = (MODEM_RAM95_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM95_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM96_RAMDATA  ---------------------------
// SVD Line: 64142

unsigned int MODEM_RAM96_RAMDATA __AT (0x40086580);



// --------------------------  Field Item: MODEM_RAM96_RAMDATA_DATA  ------------------------------
// SVD Line: 64151

//  <item> SFDITEM_FIELD__MODEM_RAM96_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086580) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM96_RAMDATA >> 0) & 0xFF), ((MODEM_RAM96_RAMDATA = (MODEM_RAM96_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM96_RAMDATA  ------------------------------
// SVD Line: 64142

//  <rtree> SFDITEM_REG__MODEM_RAM96_RAMDATA
//    <name> RAM96_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086580) RAM96_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM96_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM96_RAMDATA = (MODEM_RAM96_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM96_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM97_RAMDATA  ---------------------------
// SVD Line: 64160

unsigned int MODEM_RAM97_RAMDATA __AT (0x40086584);



// --------------------------  Field Item: MODEM_RAM97_RAMDATA_DATA  ------------------------------
// SVD Line: 64169

//  <item> SFDITEM_FIELD__MODEM_RAM97_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086584) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM97_RAMDATA >> 0) & 0xFF), ((MODEM_RAM97_RAMDATA = (MODEM_RAM97_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM97_RAMDATA  ------------------------------
// SVD Line: 64160

//  <rtree> SFDITEM_REG__MODEM_RAM97_RAMDATA
//    <name> RAM97_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086584) RAM97_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM97_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM97_RAMDATA = (MODEM_RAM97_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM97_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM98_RAMDATA  ---------------------------
// SVD Line: 64178

unsigned int MODEM_RAM98_RAMDATA __AT (0x40086588);



// --------------------------  Field Item: MODEM_RAM98_RAMDATA_DATA  ------------------------------
// SVD Line: 64187

//  <item> SFDITEM_FIELD__MODEM_RAM98_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086588) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM98_RAMDATA >> 0) & 0xFF), ((MODEM_RAM98_RAMDATA = (MODEM_RAM98_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM98_RAMDATA  ------------------------------
// SVD Line: 64178

//  <rtree> SFDITEM_REG__MODEM_RAM98_RAMDATA
//    <name> RAM98_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086588) RAM98_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM98_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM98_RAMDATA = (MODEM_RAM98_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM98_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM99_RAMDATA  ---------------------------
// SVD Line: 64196

unsigned int MODEM_RAM99_RAMDATA __AT (0x4008658C);



// --------------------------  Field Item: MODEM_RAM99_RAMDATA_DATA  ------------------------------
// SVD Line: 64205

//  <item> SFDITEM_FIELD__MODEM_RAM99_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008658C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM99_RAMDATA >> 0) & 0xFF), ((MODEM_RAM99_RAMDATA = (MODEM_RAM99_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: MODEM_RAM99_RAMDATA  ------------------------------
// SVD Line: 64196

//  <rtree> SFDITEM_REG__MODEM_RAM99_RAMDATA
//    <name> RAM99_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008658C) RAM99_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM99_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM99_RAMDATA = (MODEM_RAM99_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM99_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM100_RAMDATA  --------------------------
// SVD Line: 64214

unsigned int MODEM_RAM100_RAMDATA __AT (0x40086590);



// --------------------------  Field Item: MODEM_RAM100_RAMDATA_DATA  -----------------------------
// SVD Line: 64223

//  <item> SFDITEM_FIELD__MODEM_RAM100_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086590) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM100_RAMDATA >> 0) & 0xFF), ((MODEM_RAM100_RAMDATA = (MODEM_RAM100_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM100_RAMDATA  ------------------------------
// SVD Line: 64214

//  <rtree> SFDITEM_REG__MODEM_RAM100_RAMDATA
//    <name> RAM100_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086590) RAM100_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM100_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM100_RAMDATA = (MODEM_RAM100_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM100_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM101_RAMDATA  --------------------------
// SVD Line: 64232

unsigned int MODEM_RAM101_RAMDATA __AT (0x40086594);



// --------------------------  Field Item: MODEM_RAM101_RAMDATA_DATA  -----------------------------
// SVD Line: 64241

//  <item> SFDITEM_FIELD__MODEM_RAM101_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086594) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM101_RAMDATA >> 0) & 0xFF), ((MODEM_RAM101_RAMDATA = (MODEM_RAM101_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM101_RAMDATA  ------------------------------
// SVD Line: 64232

//  <rtree> SFDITEM_REG__MODEM_RAM101_RAMDATA
//    <name> RAM101_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086594) RAM101_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM101_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM101_RAMDATA = (MODEM_RAM101_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM101_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM102_RAMDATA  --------------------------
// SVD Line: 64250

unsigned int MODEM_RAM102_RAMDATA __AT (0x40086598);



// --------------------------  Field Item: MODEM_RAM102_RAMDATA_DATA  -----------------------------
// SVD Line: 64259

//  <item> SFDITEM_FIELD__MODEM_RAM102_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086598) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM102_RAMDATA >> 0) & 0xFF), ((MODEM_RAM102_RAMDATA = (MODEM_RAM102_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM102_RAMDATA  ------------------------------
// SVD Line: 64250

//  <rtree> SFDITEM_REG__MODEM_RAM102_RAMDATA
//    <name> RAM102_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086598) RAM102_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM102_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM102_RAMDATA = (MODEM_RAM102_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM102_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM103_RAMDATA  --------------------------
// SVD Line: 64268

unsigned int MODEM_RAM103_RAMDATA __AT (0x4008659C);



// --------------------------  Field Item: MODEM_RAM103_RAMDATA_DATA  -----------------------------
// SVD Line: 64277

//  <item> SFDITEM_FIELD__MODEM_RAM103_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008659C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM103_RAMDATA >> 0) & 0xFF), ((MODEM_RAM103_RAMDATA = (MODEM_RAM103_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM103_RAMDATA  ------------------------------
// SVD Line: 64268

//  <rtree> SFDITEM_REG__MODEM_RAM103_RAMDATA
//    <name> RAM103_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008659C) RAM103_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM103_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM103_RAMDATA = (MODEM_RAM103_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM103_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM104_RAMDATA  --------------------------
// SVD Line: 64286

unsigned int MODEM_RAM104_RAMDATA __AT (0x400865A0);



// --------------------------  Field Item: MODEM_RAM104_RAMDATA_DATA  -----------------------------
// SVD Line: 64295

//  <item> SFDITEM_FIELD__MODEM_RAM104_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865A0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM104_RAMDATA >> 0) & 0xFF), ((MODEM_RAM104_RAMDATA = (MODEM_RAM104_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM104_RAMDATA  ------------------------------
// SVD Line: 64286

//  <rtree> SFDITEM_REG__MODEM_RAM104_RAMDATA
//    <name> RAM104_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865A0) RAM104_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM104_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM104_RAMDATA = (MODEM_RAM104_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM104_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM105_RAMDATA  --------------------------
// SVD Line: 64304

unsigned int MODEM_RAM105_RAMDATA __AT (0x400865A4);



// --------------------------  Field Item: MODEM_RAM105_RAMDATA_DATA  -----------------------------
// SVD Line: 64313

//  <item> SFDITEM_FIELD__MODEM_RAM105_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865A4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM105_RAMDATA >> 0) & 0xFF), ((MODEM_RAM105_RAMDATA = (MODEM_RAM105_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM105_RAMDATA  ------------------------------
// SVD Line: 64304

//  <rtree> SFDITEM_REG__MODEM_RAM105_RAMDATA
//    <name> RAM105_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865A4) RAM105_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM105_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM105_RAMDATA = (MODEM_RAM105_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM105_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM106_RAMDATA  --------------------------
// SVD Line: 64322

unsigned int MODEM_RAM106_RAMDATA __AT (0x400865A8);



// --------------------------  Field Item: MODEM_RAM106_RAMDATA_DATA  -----------------------------
// SVD Line: 64331

//  <item> SFDITEM_FIELD__MODEM_RAM106_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865A8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM106_RAMDATA >> 0) & 0xFF), ((MODEM_RAM106_RAMDATA = (MODEM_RAM106_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM106_RAMDATA  ------------------------------
// SVD Line: 64322

//  <rtree> SFDITEM_REG__MODEM_RAM106_RAMDATA
//    <name> RAM106_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865A8) RAM106_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM106_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM106_RAMDATA = (MODEM_RAM106_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM106_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM107_RAMDATA  --------------------------
// SVD Line: 64340

unsigned int MODEM_RAM107_RAMDATA __AT (0x400865AC);



// --------------------------  Field Item: MODEM_RAM107_RAMDATA_DATA  -----------------------------
// SVD Line: 64349

//  <item> SFDITEM_FIELD__MODEM_RAM107_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865AC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM107_RAMDATA >> 0) & 0xFF), ((MODEM_RAM107_RAMDATA = (MODEM_RAM107_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM107_RAMDATA  ------------------------------
// SVD Line: 64340

//  <rtree> SFDITEM_REG__MODEM_RAM107_RAMDATA
//    <name> RAM107_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865AC) RAM107_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM107_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM107_RAMDATA = (MODEM_RAM107_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM107_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM108_RAMDATA  --------------------------
// SVD Line: 64358

unsigned int MODEM_RAM108_RAMDATA __AT (0x400865B0);



// --------------------------  Field Item: MODEM_RAM108_RAMDATA_DATA  -----------------------------
// SVD Line: 64367

//  <item> SFDITEM_FIELD__MODEM_RAM108_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865B0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM108_RAMDATA >> 0) & 0xFF), ((MODEM_RAM108_RAMDATA = (MODEM_RAM108_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM108_RAMDATA  ------------------------------
// SVD Line: 64358

//  <rtree> SFDITEM_REG__MODEM_RAM108_RAMDATA
//    <name> RAM108_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865B0) RAM108_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM108_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM108_RAMDATA = (MODEM_RAM108_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM108_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM109_RAMDATA  --------------------------
// SVD Line: 64376

unsigned int MODEM_RAM109_RAMDATA __AT (0x400865B4);



// --------------------------  Field Item: MODEM_RAM109_RAMDATA_DATA  -----------------------------
// SVD Line: 64385

//  <item> SFDITEM_FIELD__MODEM_RAM109_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865B4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM109_RAMDATA >> 0) & 0xFF), ((MODEM_RAM109_RAMDATA = (MODEM_RAM109_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM109_RAMDATA  ------------------------------
// SVD Line: 64376

//  <rtree> SFDITEM_REG__MODEM_RAM109_RAMDATA
//    <name> RAM109_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865B4) RAM109_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM109_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM109_RAMDATA = (MODEM_RAM109_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM109_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM110_RAMDATA  --------------------------
// SVD Line: 64394

unsigned int MODEM_RAM110_RAMDATA __AT (0x400865B8);



// --------------------------  Field Item: MODEM_RAM110_RAMDATA_DATA  -----------------------------
// SVD Line: 64403

//  <item> SFDITEM_FIELD__MODEM_RAM110_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865B8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM110_RAMDATA >> 0) & 0xFF), ((MODEM_RAM110_RAMDATA = (MODEM_RAM110_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM110_RAMDATA  ------------------------------
// SVD Line: 64394

//  <rtree> SFDITEM_REG__MODEM_RAM110_RAMDATA
//    <name> RAM110_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865B8) RAM110_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM110_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM110_RAMDATA = (MODEM_RAM110_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM110_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM111_RAMDATA  --------------------------
// SVD Line: 64412

unsigned int MODEM_RAM111_RAMDATA __AT (0x400865BC);



// --------------------------  Field Item: MODEM_RAM111_RAMDATA_DATA  -----------------------------
// SVD Line: 64421

//  <item> SFDITEM_FIELD__MODEM_RAM111_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865BC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM111_RAMDATA >> 0) & 0xFF), ((MODEM_RAM111_RAMDATA = (MODEM_RAM111_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM111_RAMDATA  ------------------------------
// SVD Line: 64412

//  <rtree> SFDITEM_REG__MODEM_RAM111_RAMDATA
//    <name> RAM111_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865BC) RAM111_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM111_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM111_RAMDATA = (MODEM_RAM111_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM111_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM112_RAMDATA  --------------------------
// SVD Line: 64430

unsigned int MODEM_RAM112_RAMDATA __AT (0x400865C0);



// --------------------------  Field Item: MODEM_RAM112_RAMDATA_DATA  -----------------------------
// SVD Line: 64439

//  <item> SFDITEM_FIELD__MODEM_RAM112_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865C0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM112_RAMDATA >> 0) & 0xFF), ((MODEM_RAM112_RAMDATA = (MODEM_RAM112_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM112_RAMDATA  ------------------------------
// SVD Line: 64430

//  <rtree> SFDITEM_REG__MODEM_RAM112_RAMDATA
//    <name> RAM112_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865C0) RAM112_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM112_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM112_RAMDATA = (MODEM_RAM112_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM112_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM113_RAMDATA  --------------------------
// SVD Line: 64448

unsigned int MODEM_RAM113_RAMDATA __AT (0x400865C4);



// --------------------------  Field Item: MODEM_RAM113_RAMDATA_DATA  -----------------------------
// SVD Line: 64457

//  <item> SFDITEM_FIELD__MODEM_RAM113_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865C4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM113_RAMDATA >> 0) & 0xFF), ((MODEM_RAM113_RAMDATA = (MODEM_RAM113_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM113_RAMDATA  ------------------------------
// SVD Line: 64448

//  <rtree> SFDITEM_REG__MODEM_RAM113_RAMDATA
//    <name> RAM113_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865C4) RAM113_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM113_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM113_RAMDATA = (MODEM_RAM113_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM113_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM114_RAMDATA  --------------------------
// SVD Line: 64466

unsigned int MODEM_RAM114_RAMDATA __AT (0x400865C8);



// --------------------------  Field Item: MODEM_RAM114_RAMDATA_DATA  -----------------------------
// SVD Line: 64475

//  <item> SFDITEM_FIELD__MODEM_RAM114_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865C8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM114_RAMDATA >> 0) & 0xFF), ((MODEM_RAM114_RAMDATA = (MODEM_RAM114_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM114_RAMDATA  ------------------------------
// SVD Line: 64466

//  <rtree> SFDITEM_REG__MODEM_RAM114_RAMDATA
//    <name> RAM114_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865C8) RAM114_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM114_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM114_RAMDATA = (MODEM_RAM114_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM114_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM115_RAMDATA  --------------------------
// SVD Line: 64484

unsigned int MODEM_RAM115_RAMDATA __AT (0x400865CC);



// --------------------------  Field Item: MODEM_RAM115_RAMDATA_DATA  -----------------------------
// SVD Line: 64493

//  <item> SFDITEM_FIELD__MODEM_RAM115_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865CC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM115_RAMDATA >> 0) & 0xFF), ((MODEM_RAM115_RAMDATA = (MODEM_RAM115_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM115_RAMDATA  ------------------------------
// SVD Line: 64484

//  <rtree> SFDITEM_REG__MODEM_RAM115_RAMDATA
//    <name> RAM115_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865CC) RAM115_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM115_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM115_RAMDATA = (MODEM_RAM115_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM115_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM116_RAMDATA  --------------------------
// SVD Line: 64502

unsigned int MODEM_RAM116_RAMDATA __AT (0x400865D0);



// --------------------------  Field Item: MODEM_RAM116_RAMDATA_DATA  -----------------------------
// SVD Line: 64511

//  <item> SFDITEM_FIELD__MODEM_RAM116_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865D0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM116_RAMDATA >> 0) & 0xFF), ((MODEM_RAM116_RAMDATA = (MODEM_RAM116_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM116_RAMDATA  ------------------------------
// SVD Line: 64502

//  <rtree> SFDITEM_REG__MODEM_RAM116_RAMDATA
//    <name> RAM116_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865D0) RAM116_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM116_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM116_RAMDATA = (MODEM_RAM116_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM116_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM117_RAMDATA  --------------------------
// SVD Line: 64520

unsigned int MODEM_RAM117_RAMDATA __AT (0x400865D4);



// --------------------------  Field Item: MODEM_RAM117_RAMDATA_DATA  -----------------------------
// SVD Line: 64529

//  <item> SFDITEM_FIELD__MODEM_RAM117_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865D4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM117_RAMDATA >> 0) & 0xFF), ((MODEM_RAM117_RAMDATA = (MODEM_RAM117_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM117_RAMDATA  ------------------------------
// SVD Line: 64520

//  <rtree> SFDITEM_REG__MODEM_RAM117_RAMDATA
//    <name> RAM117_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865D4) RAM117_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM117_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM117_RAMDATA = (MODEM_RAM117_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM117_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM118_RAMDATA  --------------------------
// SVD Line: 64538

unsigned int MODEM_RAM118_RAMDATA __AT (0x400865D8);



// --------------------------  Field Item: MODEM_RAM118_RAMDATA_DATA  -----------------------------
// SVD Line: 64547

//  <item> SFDITEM_FIELD__MODEM_RAM118_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865D8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM118_RAMDATA >> 0) & 0xFF), ((MODEM_RAM118_RAMDATA = (MODEM_RAM118_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM118_RAMDATA  ------------------------------
// SVD Line: 64538

//  <rtree> SFDITEM_REG__MODEM_RAM118_RAMDATA
//    <name> RAM118_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865D8) RAM118_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM118_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM118_RAMDATA = (MODEM_RAM118_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM118_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM119_RAMDATA  --------------------------
// SVD Line: 64556

unsigned int MODEM_RAM119_RAMDATA __AT (0x400865DC);



// --------------------------  Field Item: MODEM_RAM119_RAMDATA_DATA  -----------------------------
// SVD Line: 64565

//  <item> SFDITEM_FIELD__MODEM_RAM119_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865DC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM119_RAMDATA >> 0) & 0xFF), ((MODEM_RAM119_RAMDATA = (MODEM_RAM119_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM119_RAMDATA  ------------------------------
// SVD Line: 64556

//  <rtree> SFDITEM_REG__MODEM_RAM119_RAMDATA
//    <name> RAM119_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865DC) RAM119_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM119_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM119_RAMDATA = (MODEM_RAM119_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM119_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM120_RAMDATA  --------------------------
// SVD Line: 64574

unsigned int MODEM_RAM120_RAMDATA __AT (0x400865E0);



// --------------------------  Field Item: MODEM_RAM120_RAMDATA_DATA  -----------------------------
// SVD Line: 64583

//  <item> SFDITEM_FIELD__MODEM_RAM120_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865E0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM120_RAMDATA >> 0) & 0xFF), ((MODEM_RAM120_RAMDATA = (MODEM_RAM120_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM120_RAMDATA  ------------------------------
// SVD Line: 64574

//  <rtree> SFDITEM_REG__MODEM_RAM120_RAMDATA
//    <name> RAM120_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865E0) RAM120_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM120_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM120_RAMDATA = (MODEM_RAM120_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM120_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM121_RAMDATA  --------------------------
// SVD Line: 64592

unsigned int MODEM_RAM121_RAMDATA __AT (0x400865E4);



// --------------------------  Field Item: MODEM_RAM121_RAMDATA_DATA  -----------------------------
// SVD Line: 64601

//  <item> SFDITEM_FIELD__MODEM_RAM121_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865E4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM121_RAMDATA >> 0) & 0xFF), ((MODEM_RAM121_RAMDATA = (MODEM_RAM121_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM121_RAMDATA  ------------------------------
// SVD Line: 64592

//  <rtree> SFDITEM_REG__MODEM_RAM121_RAMDATA
//    <name> RAM121_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865E4) RAM121_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM121_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM121_RAMDATA = (MODEM_RAM121_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM121_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM122_RAMDATA  --------------------------
// SVD Line: 64610

unsigned int MODEM_RAM122_RAMDATA __AT (0x400865E8);



// --------------------------  Field Item: MODEM_RAM122_RAMDATA_DATA  -----------------------------
// SVD Line: 64619

//  <item> SFDITEM_FIELD__MODEM_RAM122_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865E8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM122_RAMDATA >> 0) & 0xFF), ((MODEM_RAM122_RAMDATA = (MODEM_RAM122_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM122_RAMDATA  ------------------------------
// SVD Line: 64610

//  <rtree> SFDITEM_REG__MODEM_RAM122_RAMDATA
//    <name> RAM122_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865E8) RAM122_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM122_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM122_RAMDATA = (MODEM_RAM122_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM122_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM123_RAMDATA  --------------------------
// SVD Line: 64628

unsigned int MODEM_RAM123_RAMDATA __AT (0x400865EC);



// --------------------------  Field Item: MODEM_RAM123_RAMDATA_DATA  -----------------------------
// SVD Line: 64637

//  <item> SFDITEM_FIELD__MODEM_RAM123_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865EC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM123_RAMDATA >> 0) & 0xFF), ((MODEM_RAM123_RAMDATA = (MODEM_RAM123_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM123_RAMDATA  ------------------------------
// SVD Line: 64628

//  <rtree> SFDITEM_REG__MODEM_RAM123_RAMDATA
//    <name> RAM123_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865EC) RAM123_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM123_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM123_RAMDATA = (MODEM_RAM123_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM123_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM124_RAMDATA  --------------------------
// SVD Line: 64646

unsigned int MODEM_RAM124_RAMDATA __AT (0x400865F0);



// --------------------------  Field Item: MODEM_RAM124_RAMDATA_DATA  -----------------------------
// SVD Line: 64655

//  <item> SFDITEM_FIELD__MODEM_RAM124_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865F0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM124_RAMDATA >> 0) & 0xFF), ((MODEM_RAM124_RAMDATA = (MODEM_RAM124_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM124_RAMDATA  ------------------------------
// SVD Line: 64646

//  <rtree> SFDITEM_REG__MODEM_RAM124_RAMDATA
//    <name> RAM124_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865F0) RAM124_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM124_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM124_RAMDATA = (MODEM_RAM124_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM124_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM125_RAMDATA  --------------------------
// SVD Line: 64664

unsigned int MODEM_RAM125_RAMDATA __AT (0x400865F4);



// --------------------------  Field Item: MODEM_RAM125_RAMDATA_DATA  -----------------------------
// SVD Line: 64673

//  <item> SFDITEM_FIELD__MODEM_RAM125_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865F4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM125_RAMDATA >> 0) & 0xFF), ((MODEM_RAM125_RAMDATA = (MODEM_RAM125_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM125_RAMDATA  ------------------------------
// SVD Line: 64664

//  <rtree> SFDITEM_REG__MODEM_RAM125_RAMDATA
//    <name> RAM125_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865F4) RAM125_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM125_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM125_RAMDATA = (MODEM_RAM125_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM125_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM126_RAMDATA  --------------------------
// SVD Line: 64682

unsigned int MODEM_RAM126_RAMDATA __AT (0x400865F8);



// --------------------------  Field Item: MODEM_RAM126_RAMDATA_DATA  -----------------------------
// SVD Line: 64691

//  <item> SFDITEM_FIELD__MODEM_RAM126_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865F8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM126_RAMDATA >> 0) & 0xFF), ((MODEM_RAM126_RAMDATA = (MODEM_RAM126_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM126_RAMDATA  ------------------------------
// SVD Line: 64682

//  <rtree> SFDITEM_REG__MODEM_RAM126_RAMDATA
//    <name> RAM126_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865F8) RAM126_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM126_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM126_RAMDATA = (MODEM_RAM126_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM126_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM127_RAMDATA  --------------------------
// SVD Line: 64700

unsigned int MODEM_RAM127_RAMDATA __AT (0x400865FC);



// --------------------------  Field Item: MODEM_RAM127_RAMDATA_DATA  -----------------------------
// SVD Line: 64709

//  <item> SFDITEM_FIELD__MODEM_RAM127_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400865FC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM127_RAMDATA >> 0) & 0xFF), ((MODEM_RAM127_RAMDATA = (MODEM_RAM127_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM127_RAMDATA  ------------------------------
// SVD Line: 64700

//  <rtree> SFDITEM_REG__MODEM_RAM127_RAMDATA
//    <name> RAM127_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400865FC) RAM127_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM127_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM127_RAMDATA = (MODEM_RAM127_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM127_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM128_RAMDATA  --------------------------
// SVD Line: 64718

unsigned int MODEM_RAM128_RAMDATA __AT (0x40086600);



// --------------------------  Field Item: MODEM_RAM128_RAMDATA_DATA  -----------------------------
// SVD Line: 64727

//  <item> SFDITEM_FIELD__MODEM_RAM128_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086600) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM128_RAMDATA >> 0) & 0xFF), ((MODEM_RAM128_RAMDATA = (MODEM_RAM128_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM128_RAMDATA  ------------------------------
// SVD Line: 64718

//  <rtree> SFDITEM_REG__MODEM_RAM128_RAMDATA
//    <name> RAM128_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086600) RAM128_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM128_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM128_RAMDATA = (MODEM_RAM128_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM128_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM129_RAMDATA  --------------------------
// SVD Line: 64736

unsigned int MODEM_RAM129_RAMDATA __AT (0x40086604);



// --------------------------  Field Item: MODEM_RAM129_RAMDATA_DATA  -----------------------------
// SVD Line: 64745

//  <item> SFDITEM_FIELD__MODEM_RAM129_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086604) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM129_RAMDATA >> 0) & 0xFF), ((MODEM_RAM129_RAMDATA = (MODEM_RAM129_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM129_RAMDATA  ------------------------------
// SVD Line: 64736

//  <rtree> SFDITEM_REG__MODEM_RAM129_RAMDATA
//    <name> RAM129_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086604) RAM129_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM129_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM129_RAMDATA = (MODEM_RAM129_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM129_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM130_RAMDATA  --------------------------
// SVD Line: 64754

unsigned int MODEM_RAM130_RAMDATA __AT (0x40086608);



// --------------------------  Field Item: MODEM_RAM130_RAMDATA_DATA  -----------------------------
// SVD Line: 64763

//  <item> SFDITEM_FIELD__MODEM_RAM130_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086608) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM130_RAMDATA >> 0) & 0xFF), ((MODEM_RAM130_RAMDATA = (MODEM_RAM130_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM130_RAMDATA  ------------------------------
// SVD Line: 64754

//  <rtree> SFDITEM_REG__MODEM_RAM130_RAMDATA
//    <name> RAM130_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086608) RAM130_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM130_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM130_RAMDATA = (MODEM_RAM130_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM130_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM131_RAMDATA  --------------------------
// SVD Line: 64772

unsigned int MODEM_RAM131_RAMDATA __AT (0x4008660C);



// --------------------------  Field Item: MODEM_RAM131_RAMDATA_DATA  -----------------------------
// SVD Line: 64781

//  <item> SFDITEM_FIELD__MODEM_RAM131_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008660C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM131_RAMDATA >> 0) & 0xFF), ((MODEM_RAM131_RAMDATA = (MODEM_RAM131_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM131_RAMDATA  ------------------------------
// SVD Line: 64772

//  <rtree> SFDITEM_REG__MODEM_RAM131_RAMDATA
//    <name> RAM131_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008660C) RAM131_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM131_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM131_RAMDATA = (MODEM_RAM131_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM131_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM132_RAMDATA  --------------------------
// SVD Line: 64790

unsigned int MODEM_RAM132_RAMDATA __AT (0x40086610);



// --------------------------  Field Item: MODEM_RAM132_RAMDATA_DATA  -----------------------------
// SVD Line: 64799

//  <item> SFDITEM_FIELD__MODEM_RAM132_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086610) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM132_RAMDATA >> 0) & 0xFF), ((MODEM_RAM132_RAMDATA = (MODEM_RAM132_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM132_RAMDATA  ------------------------------
// SVD Line: 64790

//  <rtree> SFDITEM_REG__MODEM_RAM132_RAMDATA
//    <name> RAM132_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086610) RAM132_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM132_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM132_RAMDATA = (MODEM_RAM132_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM132_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM133_RAMDATA  --------------------------
// SVD Line: 64808

unsigned int MODEM_RAM133_RAMDATA __AT (0x40086614);



// --------------------------  Field Item: MODEM_RAM133_RAMDATA_DATA  -----------------------------
// SVD Line: 64817

//  <item> SFDITEM_FIELD__MODEM_RAM133_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086614) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM133_RAMDATA >> 0) & 0xFF), ((MODEM_RAM133_RAMDATA = (MODEM_RAM133_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM133_RAMDATA  ------------------------------
// SVD Line: 64808

//  <rtree> SFDITEM_REG__MODEM_RAM133_RAMDATA
//    <name> RAM133_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086614) RAM133_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM133_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM133_RAMDATA = (MODEM_RAM133_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM133_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM134_RAMDATA  --------------------------
// SVD Line: 64826

unsigned int MODEM_RAM134_RAMDATA __AT (0x40086618);



// --------------------------  Field Item: MODEM_RAM134_RAMDATA_DATA  -----------------------------
// SVD Line: 64835

//  <item> SFDITEM_FIELD__MODEM_RAM134_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086618) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM134_RAMDATA >> 0) & 0xFF), ((MODEM_RAM134_RAMDATA = (MODEM_RAM134_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM134_RAMDATA  ------------------------------
// SVD Line: 64826

//  <rtree> SFDITEM_REG__MODEM_RAM134_RAMDATA
//    <name> RAM134_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086618) RAM134_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM134_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM134_RAMDATA = (MODEM_RAM134_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM134_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM135_RAMDATA  --------------------------
// SVD Line: 64844

unsigned int MODEM_RAM135_RAMDATA __AT (0x4008661C);



// --------------------------  Field Item: MODEM_RAM135_RAMDATA_DATA  -----------------------------
// SVD Line: 64853

//  <item> SFDITEM_FIELD__MODEM_RAM135_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008661C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM135_RAMDATA >> 0) & 0xFF), ((MODEM_RAM135_RAMDATA = (MODEM_RAM135_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM135_RAMDATA  ------------------------------
// SVD Line: 64844

//  <rtree> SFDITEM_REG__MODEM_RAM135_RAMDATA
//    <name> RAM135_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008661C) RAM135_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM135_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM135_RAMDATA = (MODEM_RAM135_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM135_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM136_RAMDATA  --------------------------
// SVD Line: 64862

unsigned int MODEM_RAM136_RAMDATA __AT (0x40086620);



// --------------------------  Field Item: MODEM_RAM136_RAMDATA_DATA  -----------------------------
// SVD Line: 64871

//  <item> SFDITEM_FIELD__MODEM_RAM136_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086620) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM136_RAMDATA >> 0) & 0xFF), ((MODEM_RAM136_RAMDATA = (MODEM_RAM136_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM136_RAMDATA  ------------------------------
// SVD Line: 64862

//  <rtree> SFDITEM_REG__MODEM_RAM136_RAMDATA
//    <name> RAM136_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086620) RAM136_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM136_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM136_RAMDATA = (MODEM_RAM136_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM136_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM137_RAMDATA  --------------------------
// SVD Line: 64880

unsigned int MODEM_RAM137_RAMDATA __AT (0x40086624);



// --------------------------  Field Item: MODEM_RAM137_RAMDATA_DATA  -----------------------------
// SVD Line: 64889

//  <item> SFDITEM_FIELD__MODEM_RAM137_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086624) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM137_RAMDATA >> 0) & 0xFF), ((MODEM_RAM137_RAMDATA = (MODEM_RAM137_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM137_RAMDATA  ------------------------------
// SVD Line: 64880

//  <rtree> SFDITEM_REG__MODEM_RAM137_RAMDATA
//    <name> RAM137_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086624) RAM137_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM137_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM137_RAMDATA = (MODEM_RAM137_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM137_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM138_RAMDATA  --------------------------
// SVD Line: 64898

unsigned int MODEM_RAM138_RAMDATA __AT (0x40086628);



// --------------------------  Field Item: MODEM_RAM138_RAMDATA_DATA  -----------------------------
// SVD Line: 64907

//  <item> SFDITEM_FIELD__MODEM_RAM138_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086628) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM138_RAMDATA >> 0) & 0xFF), ((MODEM_RAM138_RAMDATA = (MODEM_RAM138_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM138_RAMDATA  ------------------------------
// SVD Line: 64898

//  <rtree> SFDITEM_REG__MODEM_RAM138_RAMDATA
//    <name> RAM138_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086628) RAM138_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM138_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM138_RAMDATA = (MODEM_RAM138_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM138_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM139_RAMDATA  --------------------------
// SVD Line: 64916

unsigned int MODEM_RAM139_RAMDATA __AT (0x4008662C);



// --------------------------  Field Item: MODEM_RAM139_RAMDATA_DATA  -----------------------------
// SVD Line: 64925

//  <item> SFDITEM_FIELD__MODEM_RAM139_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008662C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM139_RAMDATA >> 0) & 0xFF), ((MODEM_RAM139_RAMDATA = (MODEM_RAM139_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM139_RAMDATA  ------------------------------
// SVD Line: 64916

//  <rtree> SFDITEM_REG__MODEM_RAM139_RAMDATA
//    <name> RAM139_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008662C) RAM139_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM139_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM139_RAMDATA = (MODEM_RAM139_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM139_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM140_RAMDATA  --------------------------
// SVD Line: 64934

unsigned int MODEM_RAM140_RAMDATA __AT (0x40086630);



// --------------------------  Field Item: MODEM_RAM140_RAMDATA_DATA  -----------------------------
// SVD Line: 64943

//  <item> SFDITEM_FIELD__MODEM_RAM140_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086630) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM140_RAMDATA >> 0) & 0xFF), ((MODEM_RAM140_RAMDATA = (MODEM_RAM140_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM140_RAMDATA  ------------------------------
// SVD Line: 64934

//  <rtree> SFDITEM_REG__MODEM_RAM140_RAMDATA
//    <name> RAM140_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086630) RAM140_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM140_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM140_RAMDATA = (MODEM_RAM140_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM140_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM141_RAMDATA  --------------------------
// SVD Line: 64952

unsigned int MODEM_RAM141_RAMDATA __AT (0x40086634);



// --------------------------  Field Item: MODEM_RAM141_RAMDATA_DATA  -----------------------------
// SVD Line: 64961

//  <item> SFDITEM_FIELD__MODEM_RAM141_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086634) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM141_RAMDATA >> 0) & 0xFF), ((MODEM_RAM141_RAMDATA = (MODEM_RAM141_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM141_RAMDATA  ------------------------------
// SVD Line: 64952

//  <rtree> SFDITEM_REG__MODEM_RAM141_RAMDATA
//    <name> RAM141_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086634) RAM141_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM141_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM141_RAMDATA = (MODEM_RAM141_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM141_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM142_RAMDATA  --------------------------
// SVD Line: 64970

unsigned int MODEM_RAM142_RAMDATA __AT (0x40086638);



// --------------------------  Field Item: MODEM_RAM142_RAMDATA_DATA  -----------------------------
// SVD Line: 64979

//  <item> SFDITEM_FIELD__MODEM_RAM142_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086638) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM142_RAMDATA >> 0) & 0xFF), ((MODEM_RAM142_RAMDATA = (MODEM_RAM142_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM142_RAMDATA  ------------------------------
// SVD Line: 64970

//  <rtree> SFDITEM_REG__MODEM_RAM142_RAMDATA
//    <name> RAM142_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086638) RAM142_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM142_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM142_RAMDATA = (MODEM_RAM142_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM142_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM143_RAMDATA  --------------------------
// SVD Line: 64988

unsigned int MODEM_RAM143_RAMDATA __AT (0x4008663C);



// --------------------------  Field Item: MODEM_RAM143_RAMDATA_DATA  -----------------------------
// SVD Line: 64997

//  <item> SFDITEM_FIELD__MODEM_RAM143_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008663C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM143_RAMDATA >> 0) & 0xFF), ((MODEM_RAM143_RAMDATA = (MODEM_RAM143_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM143_RAMDATA  ------------------------------
// SVD Line: 64988

//  <rtree> SFDITEM_REG__MODEM_RAM143_RAMDATA
//    <name> RAM143_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008663C) RAM143_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM143_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM143_RAMDATA = (MODEM_RAM143_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM143_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM144_RAMDATA  --------------------------
// SVD Line: 65006

unsigned int MODEM_RAM144_RAMDATA __AT (0x40086640);



// --------------------------  Field Item: MODEM_RAM144_RAMDATA_DATA  -----------------------------
// SVD Line: 65015

//  <item> SFDITEM_FIELD__MODEM_RAM144_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086640) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM144_RAMDATA >> 0) & 0xFF), ((MODEM_RAM144_RAMDATA = (MODEM_RAM144_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM144_RAMDATA  ------------------------------
// SVD Line: 65006

//  <rtree> SFDITEM_REG__MODEM_RAM144_RAMDATA
//    <name> RAM144_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086640) RAM144_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM144_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM144_RAMDATA = (MODEM_RAM144_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM144_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM145_RAMDATA  --------------------------
// SVD Line: 65024

unsigned int MODEM_RAM145_RAMDATA __AT (0x40086644);



// --------------------------  Field Item: MODEM_RAM145_RAMDATA_DATA  -----------------------------
// SVD Line: 65033

//  <item> SFDITEM_FIELD__MODEM_RAM145_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086644) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM145_RAMDATA >> 0) & 0xFF), ((MODEM_RAM145_RAMDATA = (MODEM_RAM145_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM145_RAMDATA  ------------------------------
// SVD Line: 65024

//  <rtree> SFDITEM_REG__MODEM_RAM145_RAMDATA
//    <name> RAM145_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086644) RAM145_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM145_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM145_RAMDATA = (MODEM_RAM145_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM145_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM146_RAMDATA  --------------------------
// SVD Line: 65042

unsigned int MODEM_RAM146_RAMDATA __AT (0x40086648);



// --------------------------  Field Item: MODEM_RAM146_RAMDATA_DATA  -----------------------------
// SVD Line: 65051

//  <item> SFDITEM_FIELD__MODEM_RAM146_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086648) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM146_RAMDATA >> 0) & 0xFF), ((MODEM_RAM146_RAMDATA = (MODEM_RAM146_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM146_RAMDATA  ------------------------------
// SVD Line: 65042

//  <rtree> SFDITEM_REG__MODEM_RAM146_RAMDATA
//    <name> RAM146_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086648) RAM146_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM146_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM146_RAMDATA = (MODEM_RAM146_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM146_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM147_RAMDATA  --------------------------
// SVD Line: 65060

unsigned int MODEM_RAM147_RAMDATA __AT (0x4008664C);



// --------------------------  Field Item: MODEM_RAM147_RAMDATA_DATA  -----------------------------
// SVD Line: 65069

//  <item> SFDITEM_FIELD__MODEM_RAM147_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008664C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM147_RAMDATA >> 0) & 0xFF), ((MODEM_RAM147_RAMDATA = (MODEM_RAM147_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM147_RAMDATA  ------------------------------
// SVD Line: 65060

//  <rtree> SFDITEM_REG__MODEM_RAM147_RAMDATA
//    <name> RAM147_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008664C) RAM147_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM147_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM147_RAMDATA = (MODEM_RAM147_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM147_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM148_RAMDATA  --------------------------
// SVD Line: 65078

unsigned int MODEM_RAM148_RAMDATA __AT (0x40086650);



// --------------------------  Field Item: MODEM_RAM148_RAMDATA_DATA  -----------------------------
// SVD Line: 65087

//  <item> SFDITEM_FIELD__MODEM_RAM148_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086650) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM148_RAMDATA >> 0) & 0xFF), ((MODEM_RAM148_RAMDATA = (MODEM_RAM148_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM148_RAMDATA  ------------------------------
// SVD Line: 65078

//  <rtree> SFDITEM_REG__MODEM_RAM148_RAMDATA
//    <name> RAM148_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086650) RAM148_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM148_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM148_RAMDATA = (MODEM_RAM148_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM148_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM149_RAMDATA  --------------------------
// SVD Line: 65096

unsigned int MODEM_RAM149_RAMDATA __AT (0x40086654);



// --------------------------  Field Item: MODEM_RAM149_RAMDATA_DATA  -----------------------------
// SVD Line: 65105

//  <item> SFDITEM_FIELD__MODEM_RAM149_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086654) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM149_RAMDATA >> 0) & 0xFF), ((MODEM_RAM149_RAMDATA = (MODEM_RAM149_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM149_RAMDATA  ------------------------------
// SVD Line: 65096

//  <rtree> SFDITEM_REG__MODEM_RAM149_RAMDATA
//    <name> RAM149_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086654) RAM149_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM149_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM149_RAMDATA = (MODEM_RAM149_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM149_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM150_RAMDATA  --------------------------
// SVD Line: 65114

unsigned int MODEM_RAM150_RAMDATA __AT (0x40086658);



// --------------------------  Field Item: MODEM_RAM150_RAMDATA_DATA  -----------------------------
// SVD Line: 65123

//  <item> SFDITEM_FIELD__MODEM_RAM150_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086658) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM150_RAMDATA >> 0) & 0xFF), ((MODEM_RAM150_RAMDATA = (MODEM_RAM150_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM150_RAMDATA  ------------------------------
// SVD Line: 65114

//  <rtree> SFDITEM_REG__MODEM_RAM150_RAMDATA
//    <name> RAM150_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086658) RAM150_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM150_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM150_RAMDATA = (MODEM_RAM150_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM150_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM151_RAMDATA  --------------------------
// SVD Line: 65132

unsigned int MODEM_RAM151_RAMDATA __AT (0x4008665C);



// --------------------------  Field Item: MODEM_RAM151_RAMDATA_DATA  -----------------------------
// SVD Line: 65141

//  <item> SFDITEM_FIELD__MODEM_RAM151_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008665C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM151_RAMDATA >> 0) & 0xFF), ((MODEM_RAM151_RAMDATA = (MODEM_RAM151_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM151_RAMDATA  ------------------------------
// SVD Line: 65132

//  <rtree> SFDITEM_REG__MODEM_RAM151_RAMDATA
//    <name> RAM151_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008665C) RAM151_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM151_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM151_RAMDATA = (MODEM_RAM151_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM151_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM152_RAMDATA  --------------------------
// SVD Line: 65150

unsigned int MODEM_RAM152_RAMDATA __AT (0x40086660);



// --------------------------  Field Item: MODEM_RAM152_RAMDATA_DATA  -----------------------------
// SVD Line: 65159

//  <item> SFDITEM_FIELD__MODEM_RAM152_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086660) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM152_RAMDATA >> 0) & 0xFF), ((MODEM_RAM152_RAMDATA = (MODEM_RAM152_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM152_RAMDATA  ------------------------------
// SVD Line: 65150

//  <rtree> SFDITEM_REG__MODEM_RAM152_RAMDATA
//    <name> RAM152_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086660) RAM152_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM152_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM152_RAMDATA = (MODEM_RAM152_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM152_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM153_RAMDATA  --------------------------
// SVD Line: 65168

unsigned int MODEM_RAM153_RAMDATA __AT (0x40086664);



// --------------------------  Field Item: MODEM_RAM153_RAMDATA_DATA  -----------------------------
// SVD Line: 65177

//  <item> SFDITEM_FIELD__MODEM_RAM153_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086664) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM153_RAMDATA >> 0) & 0xFF), ((MODEM_RAM153_RAMDATA = (MODEM_RAM153_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM153_RAMDATA  ------------------------------
// SVD Line: 65168

//  <rtree> SFDITEM_REG__MODEM_RAM153_RAMDATA
//    <name> RAM153_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086664) RAM153_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM153_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM153_RAMDATA = (MODEM_RAM153_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM153_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM154_RAMDATA  --------------------------
// SVD Line: 65186

unsigned int MODEM_RAM154_RAMDATA __AT (0x40086668);



// --------------------------  Field Item: MODEM_RAM154_RAMDATA_DATA  -----------------------------
// SVD Line: 65195

//  <item> SFDITEM_FIELD__MODEM_RAM154_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086668) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM154_RAMDATA >> 0) & 0xFF), ((MODEM_RAM154_RAMDATA = (MODEM_RAM154_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM154_RAMDATA  ------------------------------
// SVD Line: 65186

//  <rtree> SFDITEM_REG__MODEM_RAM154_RAMDATA
//    <name> RAM154_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086668) RAM154_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM154_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM154_RAMDATA = (MODEM_RAM154_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM154_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM155_RAMDATA  --------------------------
// SVD Line: 65204

unsigned int MODEM_RAM155_RAMDATA __AT (0x4008666C);



// --------------------------  Field Item: MODEM_RAM155_RAMDATA_DATA  -----------------------------
// SVD Line: 65213

//  <item> SFDITEM_FIELD__MODEM_RAM155_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008666C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM155_RAMDATA >> 0) & 0xFF), ((MODEM_RAM155_RAMDATA = (MODEM_RAM155_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM155_RAMDATA  ------------------------------
// SVD Line: 65204

//  <rtree> SFDITEM_REG__MODEM_RAM155_RAMDATA
//    <name> RAM155_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008666C) RAM155_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM155_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM155_RAMDATA = (MODEM_RAM155_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM155_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM156_RAMDATA  --------------------------
// SVD Line: 65222

unsigned int MODEM_RAM156_RAMDATA __AT (0x40086670);



// --------------------------  Field Item: MODEM_RAM156_RAMDATA_DATA  -----------------------------
// SVD Line: 65231

//  <item> SFDITEM_FIELD__MODEM_RAM156_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086670) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM156_RAMDATA >> 0) & 0xFF), ((MODEM_RAM156_RAMDATA = (MODEM_RAM156_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM156_RAMDATA  ------------------------------
// SVD Line: 65222

//  <rtree> SFDITEM_REG__MODEM_RAM156_RAMDATA
//    <name> RAM156_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086670) RAM156_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM156_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM156_RAMDATA = (MODEM_RAM156_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM156_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM157_RAMDATA  --------------------------
// SVD Line: 65240

unsigned int MODEM_RAM157_RAMDATA __AT (0x40086674);



// --------------------------  Field Item: MODEM_RAM157_RAMDATA_DATA  -----------------------------
// SVD Line: 65249

//  <item> SFDITEM_FIELD__MODEM_RAM157_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086674) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM157_RAMDATA >> 0) & 0xFF), ((MODEM_RAM157_RAMDATA = (MODEM_RAM157_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM157_RAMDATA  ------------------------------
// SVD Line: 65240

//  <rtree> SFDITEM_REG__MODEM_RAM157_RAMDATA
//    <name> RAM157_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086674) RAM157_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM157_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM157_RAMDATA = (MODEM_RAM157_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM157_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM158_RAMDATA  --------------------------
// SVD Line: 65258

unsigned int MODEM_RAM158_RAMDATA __AT (0x40086678);



// --------------------------  Field Item: MODEM_RAM158_RAMDATA_DATA  -----------------------------
// SVD Line: 65267

//  <item> SFDITEM_FIELD__MODEM_RAM158_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086678) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM158_RAMDATA >> 0) & 0xFF), ((MODEM_RAM158_RAMDATA = (MODEM_RAM158_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM158_RAMDATA  ------------------------------
// SVD Line: 65258

//  <rtree> SFDITEM_REG__MODEM_RAM158_RAMDATA
//    <name> RAM158_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086678) RAM158_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM158_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM158_RAMDATA = (MODEM_RAM158_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM158_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM159_RAMDATA  --------------------------
// SVD Line: 65276

unsigned int MODEM_RAM159_RAMDATA __AT (0x4008667C);



// --------------------------  Field Item: MODEM_RAM159_RAMDATA_DATA  -----------------------------
// SVD Line: 65285

//  <item> SFDITEM_FIELD__MODEM_RAM159_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008667C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM159_RAMDATA >> 0) & 0xFF), ((MODEM_RAM159_RAMDATA = (MODEM_RAM159_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM159_RAMDATA  ------------------------------
// SVD Line: 65276

//  <rtree> SFDITEM_REG__MODEM_RAM159_RAMDATA
//    <name> RAM159_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008667C) RAM159_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM159_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM159_RAMDATA = (MODEM_RAM159_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM159_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM160_RAMDATA  --------------------------
// SVD Line: 65294

unsigned int MODEM_RAM160_RAMDATA __AT (0x40086680);



// --------------------------  Field Item: MODEM_RAM160_RAMDATA_DATA  -----------------------------
// SVD Line: 65303

//  <item> SFDITEM_FIELD__MODEM_RAM160_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086680) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM160_RAMDATA >> 0) & 0xFF), ((MODEM_RAM160_RAMDATA = (MODEM_RAM160_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM160_RAMDATA  ------------------------------
// SVD Line: 65294

//  <rtree> SFDITEM_REG__MODEM_RAM160_RAMDATA
//    <name> RAM160_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086680) RAM160_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM160_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM160_RAMDATA = (MODEM_RAM160_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM160_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM161_RAMDATA  --------------------------
// SVD Line: 65312

unsigned int MODEM_RAM161_RAMDATA __AT (0x40086684);



// --------------------------  Field Item: MODEM_RAM161_RAMDATA_DATA  -----------------------------
// SVD Line: 65321

//  <item> SFDITEM_FIELD__MODEM_RAM161_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086684) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM161_RAMDATA >> 0) & 0xFF), ((MODEM_RAM161_RAMDATA = (MODEM_RAM161_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM161_RAMDATA  ------------------------------
// SVD Line: 65312

//  <rtree> SFDITEM_REG__MODEM_RAM161_RAMDATA
//    <name> RAM161_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086684) RAM161_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM161_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM161_RAMDATA = (MODEM_RAM161_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM161_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM162_RAMDATA  --------------------------
// SVD Line: 65330

unsigned int MODEM_RAM162_RAMDATA __AT (0x40086688);



// --------------------------  Field Item: MODEM_RAM162_RAMDATA_DATA  -----------------------------
// SVD Line: 65339

//  <item> SFDITEM_FIELD__MODEM_RAM162_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086688) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM162_RAMDATA >> 0) & 0xFF), ((MODEM_RAM162_RAMDATA = (MODEM_RAM162_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM162_RAMDATA  ------------------------------
// SVD Line: 65330

//  <rtree> SFDITEM_REG__MODEM_RAM162_RAMDATA
//    <name> RAM162_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086688) RAM162_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM162_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM162_RAMDATA = (MODEM_RAM162_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM162_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM163_RAMDATA  --------------------------
// SVD Line: 65348

unsigned int MODEM_RAM163_RAMDATA __AT (0x4008668C);



// --------------------------  Field Item: MODEM_RAM163_RAMDATA_DATA  -----------------------------
// SVD Line: 65357

//  <item> SFDITEM_FIELD__MODEM_RAM163_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008668C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM163_RAMDATA >> 0) & 0xFF), ((MODEM_RAM163_RAMDATA = (MODEM_RAM163_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM163_RAMDATA  ------------------------------
// SVD Line: 65348

//  <rtree> SFDITEM_REG__MODEM_RAM163_RAMDATA
//    <name> RAM163_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008668C) RAM163_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM163_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM163_RAMDATA = (MODEM_RAM163_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM163_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM164_RAMDATA  --------------------------
// SVD Line: 65366

unsigned int MODEM_RAM164_RAMDATA __AT (0x40086690);



// --------------------------  Field Item: MODEM_RAM164_RAMDATA_DATA  -----------------------------
// SVD Line: 65375

//  <item> SFDITEM_FIELD__MODEM_RAM164_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086690) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM164_RAMDATA >> 0) & 0xFF), ((MODEM_RAM164_RAMDATA = (MODEM_RAM164_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM164_RAMDATA  ------------------------------
// SVD Line: 65366

//  <rtree> SFDITEM_REG__MODEM_RAM164_RAMDATA
//    <name> RAM164_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086690) RAM164_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM164_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM164_RAMDATA = (MODEM_RAM164_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM164_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM165_RAMDATA  --------------------------
// SVD Line: 65384

unsigned int MODEM_RAM165_RAMDATA __AT (0x40086694);



// --------------------------  Field Item: MODEM_RAM165_RAMDATA_DATA  -----------------------------
// SVD Line: 65393

//  <item> SFDITEM_FIELD__MODEM_RAM165_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086694) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM165_RAMDATA >> 0) & 0xFF), ((MODEM_RAM165_RAMDATA = (MODEM_RAM165_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM165_RAMDATA  ------------------------------
// SVD Line: 65384

//  <rtree> SFDITEM_REG__MODEM_RAM165_RAMDATA
//    <name> RAM165_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086694) RAM165_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM165_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM165_RAMDATA = (MODEM_RAM165_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM165_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM166_RAMDATA  --------------------------
// SVD Line: 65402

unsigned int MODEM_RAM166_RAMDATA __AT (0x40086698);



// --------------------------  Field Item: MODEM_RAM166_RAMDATA_DATA  -----------------------------
// SVD Line: 65411

//  <item> SFDITEM_FIELD__MODEM_RAM166_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086698) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM166_RAMDATA >> 0) & 0xFF), ((MODEM_RAM166_RAMDATA = (MODEM_RAM166_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM166_RAMDATA  ------------------------------
// SVD Line: 65402

//  <rtree> SFDITEM_REG__MODEM_RAM166_RAMDATA
//    <name> RAM166_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086698) RAM166_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM166_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM166_RAMDATA = (MODEM_RAM166_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM166_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM167_RAMDATA  --------------------------
// SVD Line: 65420

unsigned int MODEM_RAM167_RAMDATA __AT (0x4008669C);



// --------------------------  Field Item: MODEM_RAM167_RAMDATA_DATA  -----------------------------
// SVD Line: 65429

//  <item> SFDITEM_FIELD__MODEM_RAM167_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008669C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM167_RAMDATA >> 0) & 0xFF), ((MODEM_RAM167_RAMDATA = (MODEM_RAM167_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM167_RAMDATA  ------------------------------
// SVD Line: 65420

//  <rtree> SFDITEM_REG__MODEM_RAM167_RAMDATA
//    <name> RAM167_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008669C) RAM167_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM167_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM167_RAMDATA = (MODEM_RAM167_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM167_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM168_RAMDATA  --------------------------
// SVD Line: 65438

unsigned int MODEM_RAM168_RAMDATA __AT (0x400866A0);



// --------------------------  Field Item: MODEM_RAM168_RAMDATA_DATA  -----------------------------
// SVD Line: 65447

//  <item> SFDITEM_FIELD__MODEM_RAM168_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866A0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM168_RAMDATA >> 0) & 0xFF), ((MODEM_RAM168_RAMDATA = (MODEM_RAM168_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM168_RAMDATA  ------------------------------
// SVD Line: 65438

//  <rtree> SFDITEM_REG__MODEM_RAM168_RAMDATA
//    <name> RAM168_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866A0) RAM168_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM168_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM168_RAMDATA = (MODEM_RAM168_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM168_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM169_RAMDATA  --------------------------
// SVD Line: 65456

unsigned int MODEM_RAM169_RAMDATA __AT (0x400866A4);



// --------------------------  Field Item: MODEM_RAM169_RAMDATA_DATA  -----------------------------
// SVD Line: 65465

//  <item> SFDITEM_FIELD__MODEM_RAM169_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866A4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM169_RAMDATA >> 0) & 0xFF), ((MODEM_RAM169_RAMDATA = (MODEM_RAM169_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM169_RAMDATA  ------------------------------
// SVD Line: 65456

//  <rtree> SFDITEM_REG__MODEM_RAM169_RAMDATA
//    <name> RAM169_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866A4) RAM169_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM169_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM169_RAMDATA = (MODEM_RAM169_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM169_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM170_RAMDATA  --------------------------
// SVD Line: 65474

unsigned int MODEM_RAM170_RAMDATA __AT (0x400866A8);



// --------------------------  Field Item: MODEM_RAM170_RAMDATA_DATA  -----------------------------
// SVD Line: 65483

//  <item> SFDITEM_FIELD__MODEM_RAM170_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866A8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM170_RAMDATA >> 0) & 0xFF), ((MODEM_RAM170_RAMDATA = (MODEM_RAM170_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM170_RAMDATA  ------------------------------
// SVD Line: 65474

//  <rtree> SFDITEM_REG__MODEM_RAM170_RAMDATA
//    <name> RAM170_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866A8) RAM170_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM170_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM170_RAMDATA = (MODEM_RAM170_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM170_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM171_RAMDATA  --------------------------
// SVD Line: 65492

unsigned int MODEM_RAM171_RAMDATA __AT (0x400866AC);



// --------------------------  Field Item: MODEM_RAM171_RAMDATA_DATA  -----------------------------
// SVD Line: 65501

//  <item> SFDITEM_FIELD__MODEM_RAM171_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866AC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM171_RAMDATA >> 0) & 0xFF), ((MODEM_RAM171_RAMDATA = (MODEM_RAM171_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM171_RAMDATA  ------------------------------
// SVD Line: 65492

//  <rtree> SFDITEM_REG__MODEM_RAM171_RAMDATA
//    <name> RAM171_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866AC) RAM171_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM171_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM171_RAMDATA = (MODEM_RAM171_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM171_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM172_RAMDATA  --------------------------
// SVD Line: 65510

unsigned int MODEM_RAM172_RAMDATA __AT (0x400866B0);



// --------------------------  Field Item: MODEM_RAM172_RAMDATA_DATA  -----------------------------
// SVD Line: 65519

//  <item> SFDITEM_FIELD__MODEM_RAM172_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866B0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM172_RAMDATA >> 0) & 0xFF), ((MODEM_RAM172_RAMDATA = (MODEM_RAM172_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM172_RAMDATA  ------------------------------
// SVD Line: 65510

//  <rtree> SFDITEM_REG__MODEM_RAM172_RAMDATA
//    <name> RAM172_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866B0) RAM172_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM172_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM172_RAMDATA = (MODEM_RAM172_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM172_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM173_RAMDATA  --------------------------
// SVD Line: 65528

unsigned int MODEM_RAM173_RAMDATA __AT (0x400866B4);



// --------------------------  Field Item: MODEM_RAM173_RAMDATA_DATA  -----------------------------
// SVD Line: 65537

//  <item> SFDITEM_FIELD__MODEM_RAM173_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866B4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM173_RAMDATA >> 0) & 0xFF), ((MODEM_RAM173_RAMDATA = (MODEM_RAM173_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM173_RAMDATA  ------------------------------
// SVD Line: 65528

//  <rtree> SFDITEM_REG__MODEM_RAM173_RAMDATA
//    <name> RAM173_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866B4) RAM173_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM173_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM173_RAMDATA = (MODEM_RAM173_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM173_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM174_RAMDATA  --------------------------
// SVD Line: 65546

unsigned int MODEM_RAM174_RAMDATA __AT (0x400866B8);



// --------------------------  Field Item: MODEM_RAM174_RAMDATA_DATA  -----------------------------
// SVD Line: 65555

//  <item> SFDITEM_FIELD__MODEM_RAM174_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866B8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM174_RAMDATA >> 0) & 0xFF), ((MODEM_RAM174_RAMDATA = (MODEM_RAM174_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM174_RAMDATA  ------------------------------
// SVD Line: 65546

//  <rtree> SFDITEM_REG__MODEM_RAM174_RAMDATA
//    <name> RAM174_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866B8) RAM174_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM174_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM174_RAMDATA = (MODEM_RAM174_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM174_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM175_RAMDATA  --------------------------
// SVD Line: 65564

unsigned int MODEM_RAM175_RAMDATA __AT (0x400866BC);



// --------------------------  Field Item: MODEM_RAM175_RAMDATA_DATA  -----------------------------
// SVD Line: 65573

//  <item> SFDITEM_FIELD__MODEM_RAM175_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866BC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM175_RAMDATA >> 0) & 0xFF), ((MODEM_RAM175_RAMDATA = (MODEM_RAM175_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM175_RAMDATA  ------------------------------
// SVD Line: 65564

//  <rtree> SFDITEM_REG__MODEM_RAM175_RAMDATA
//    <name> RAM175_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866BC) RAM175_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM175_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM175_RAMDATA = (MODEM_RAM175_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM175_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM176_RAMDATA  --------------------------
// SVD Line: 65582

unsigned int MODEM_RAM176_RAMDATA __AT (0x400866C0);



// --------------------------  Field Item: MODEM_RAM176_RAMDATA_DATA  -----------------------------
// SVD Line: 65591

//  <item> SFDITEM_FIELD__MODEM_RAM176_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866C0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM176_RAMDATA >> 0) & 0xFF), ((MODEM_RAM176_RAMDATA = (MODEM_RAM176_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM176_RAMDATA  ------------------------------
// SVD Line: 65582

//  <rtree> SFDITEM_REG__MODEM_RAM176_RAMDATA
//    <name> RAM176_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866C0) RAM176_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM176_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM176_RAMDATA = (MODEM_RAM176_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM176_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM177_RAMDATA  --------------------------
// SVD Line: 65600

unsigned int MODEM_RAM177_RAMDATA __AT (0x400866C4);



// --------------------------  Field Item: MODEM_RAM177_RAMDATA_DATA  -----------------------------
// SVD Line: 65609

//  <item> SFDITEM_FIELD__MODEM_RAM177_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866C4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM177_RAMDATA >> 0) & 0xFF), ((MODEM_RAM177_RAMDATA = (MODEM_RAM177_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM177_RAMDATA  ------------------------------
// SVD Line: 65600

//  <rtree> SFDITEM_REG__MODEM_RAM177_RAMDATA
//    <name> RAM177_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866C4) RAM177_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM177_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM177_RAMDATA = (MODEM_RAM177_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM177_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM178_RAMDATA  --------------------------
// SVD Line: 65618

unsigned int MODEM_RAM178_RAMDATA __AT (0x400866C8);



// --------------------------  Field Item: MODEM_RAM178_RAMDATA_DATA  -----------------------------
// SVD Line: 65627

//  <item> SFDITEM_FIELD__MODEM_RAM178_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866C8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM178_RAMDATA >> 0) & 0xFF), ((MODEM_RAM178_RAMDATA = (MODEM_RAM178_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM178_RAMDATA  ------------------------------
// SVD Line: 65618

//  <rtree> SFDITEM_REG__MODEM_RAM178_RAMDATA
//    <name> RAM178_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866C8) RAM178_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM178_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM178_RAMDATA = (MODEM_RAM178_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM178_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM179_RAMDATA  --------------------------
// SVD Line: 65636

unsigned int MODEM_RAM179_RAMDATA __AT (0x400866CC);



// --------------------------  Field Item: MODEM_RAM179_RAMDATA_DATA  -----------------------------
// SVD Line: 65645

//  <item> SFDITEM_FIELD__MODEM_RAM179_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866CC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM179_RAMDATA >> 0) & 0xFF), ((MODEM_RAM179_RAMDATA = (MODEM_RAM179_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM179_RAMDATA  ------------------------------
// SVD Line: 65636

//  <rtree> SFDITEM_REG__MODEM_RAM179_RAMDATA
//    <name> RAM179_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866CC) RAM179_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM179_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM179_RAMDATA = (MODEM_RAM179_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM179_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM180_RAMDATA  --------------------------
// SVD Line: 65654

unsigned int MODEM_RAM180_RAMDATA __AT (0x400866D0);



// --------------------------  Field Item: MODEM_RAM180_RAMDATA_DATA  -----------------------------
// SVD Line: 65663

//  <item> SFDITEM_FIELD__MODEM_RAM180_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866D0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM180_RAMDATA >> 0) & 0xFF), ((MODEM_RAM180_RAMDATA = (MODEM_RAM180_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM180_RAMDATA  ------------------------------
// SVD Line: 65654

//  <rtree> SFDITEM_REG__MODEM_RAM180_RAMDATA
//    <name> RAM180_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866D0) RAM180_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM180_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM180_RAMDATA = (MODEM_RAM180_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM180_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM181_RAMDATA  --------------------------
// SVD Line: 65672

unsigned int MODEM_RAM181_RAMDATA __AT (0x400866D4);



// --------------------------  Field Item: MODEM_RAM181_RAMDATA_DATA  -----------------------------
// SVD Line: 65681

//  <item> SFDITEM_FIELD__MODEM_RAM181_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866D4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM181_RAMDATA >> 0) & 0xFF), ((MODEM_RAM181_RAMDATA = (MODEM_RAM181_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM181_RAMDATA  ------------------------------
// SVD Line: 65672

//  <rtree> SFDITEM_REG__MODEM_RAM181_RAMDATA
//    <name> RAM181_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866D4) RAM181_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM181_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM181_RAMDATA = (MODEM_RAM181_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM181_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM182_RAMDATA  --------------------------
// SVD Line: 65690

unsigned int MODEM_RAM182_RAMDATA __AT (0x400866D8);



// --------------------------  Field Item: MODEM_RAM182_RAMDATA_DATA  -----------------------------
// SVD Line: 65699

//  <item> SFDITEM_FIELD__MODEM_RAM182_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866D8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM182_RAMDATA >> 0) & 0xFF), ((MODEM_RAM182_RAMDATA = (MODEM_RAM182_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM182_RAMDATA  ------------------------------
// SVD Line: 65690

//  <rtree> SFDITEM_REG__MODEM_RAM182_RAMDATA
//    <name> RAM182_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866D8) RAM182_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM182_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM182_RAMDATA = (MODEM_RAM182_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM182_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM183_RAMDATA  --------------------------
// SVD Line: 65708

unsigned int MODEM_RAM183_RAMDATA __AT (0x400866DC);



// --------------------------  Field Item: MODEM_RAM183_RAMDATA_DATA  -----------------------------
// SVD Line: 65717

//  <item> SFDITEM_FIELD__MODEM_RAM183_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866DC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM183_RAMDATA >> 0) & 0xFF), ((MODEM_RAM183_RAMDATA = (MODEM_RAM183_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM183_RAMDATA  ------------------------------
// SVD Line: 65708

//  <rtree> SFDITEM_REG__MODEM_RAM183_RAMDATA
//    <name> RAM183_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866DC) RAM183_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM183_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM183_RAMDATA = (MODEM_RAM183_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM183_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM184_RAMDATA  --------------------------
// SVD Line: 65726

unsigned int MODEM_RAM184_RAMDATA __AT (0x400866E0);



// --------------------------  Field Item: MODEM_RAM184_RAMDATA_DATA  -----------------------------
// SVD Line: 65735

//  <item> SFDITEM_FIELD__MODEM_RAM184_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866E0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM184_RAMDATA >> 0) & 0xFF), ((MODEM_RAM184_RAMDATA = (MODEM_RAM184_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM184_RAMDATA  ------------------------------
// SVD Line: 65726

//  <rtree> SFDITEM_REG__MODEM_RAM184_RAMDATA
//    <name> RAM184_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866E0) RAM184_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM184_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM184_RAMDATA = (MODEM_RAM184_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM184_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM185_RAMDATA  --------------------------
// SVD Line: 65744

unsigned int MODEM_RAM185_RAMDATA __AT (0x400866E4);



// --------------------------  Field Item: MODEM_RAM185_RAMDATA_DATA  -----------------------------
// SVD Line: 65753

//  <item> SFDITEM_FIELD__MODEM_RAM185_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866E4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM185_RAMDATA >> 0) & 0xFF), ((MODEM_RAM185_RAMDATA = (MODEM_RAM185_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM185_RAMDATA  ------------------------------
// SVD Line: 65744

//  <rtree> SFDITEM_REG__MODEM_RAM185_RAMDATA
//    <name> RAM185_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866E4) RAM185_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM185_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM185_RAMDATA = (MODEM_RAM185_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM185_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM186_RAMDATA  --------------------------
// SVD Line: 65762

unsigned int MODEM_RAM186_RAMDATA __AT (0x400866E8);



// --------------------------  Field Item: MODEM_RAM186_RAMDATA_DATA  -----------------------------
// SVD Line: 65771

//  <item> SFDITEM_FIELD__MODEM_RAM186_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866E8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM186_RAMDATA >> 0) & 0xFF), ((MODEM_RAM186_RAMDATA = (MODEM_RAM186_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM186_RAMDATA  ------------------------------
// SVD Line: 65762

//  <rtree> SFDITEM_REG__MODEM_RAM186_RAMDATA
//    <name> RAM186_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866E8) RAM186_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM186_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM186_RAMDATA = (MODEM_RAM186_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM186_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM187_RAMDATA  --------------------------
// SVD Line: 65780

unsigned int MODEM_RAM187_RAMDATA __AT (0x400866EC);



// --------------------------  Field Item: MODEM_RAM187_RAMDATA_DATA  -----------------------------
// SVD Line: 65789

//  <item> SFDITEM_FIELD__MODEM_RAM187_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866EC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM187_RAMDATA >> 0) & 0xFF), ((MODEM_RAM187_RAMDATA = (MODEM_RAM187_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM187_RAMDATA  ------------------------------
// SVD Line: 65780

//  <rtree> SFDITEM_REG__MODEM_RAM187_RAMDATA
//    <name> RAM187_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866EC) RAM187_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM187_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM187_RAMDATA = (MODEM_RAM187_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM187_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM188_RAMDATA  --------------------------
// SVD Line: 65798

unsigned int MODEM_RAM188_RAMDATA __AT (0x400866F0);



// --------------------------  Field Item: MODEM_RAM188_RAMDATA_DATA  -----------------------------
// SVD Line: 65807

//  <item> SFDITEM_FIELD__MODEM_RAM188_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866F0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM188_RAMDATA >> 0) & 0xFF), ((MODEM_RAM188_RAMDATA = (MODEM_RAM188_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM188_RAMDATA  ------------------------------
// SVD Line: 65798

//  <rtree> SFDITEM_REG__MODEM_RAM188_RAMDATA
//    <name> RAM188_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866F0) RAM188_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM188_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM188_RAMDATA = (MODEM_RAM188_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM188_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM189_RAMDATA  --------------------------
// SVD Line: 65816

unsigned int MODEM_RAM189_RAMDATA __AT (0x400866F4);



// --------------------------  Field Item: MODEM_RAM189_RAMDATA_DATA  -----------------------------
// SVD Line: 65825

//  <item> SFDITEM_FIELD__MODEM_RAM189_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866F4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM189_RAMDATA >> 0) & 0xFF), ((MODEM_RAM189_RAMDATA = (MODEM_RAM189_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM189_RAMDATA  ------------------------------
// SVD Line: 65816

//  <rtree> SFDITEM_REG__MODEM_RAM189_RAMDATA
//    <name> RAM189_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866F4) RAM189_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM189_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM189_RAMDATA = (MODEM_RAM189_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM189_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM190_RAMDATA  --------------------------
// SVD Line: 65834

unsigned int MODEM_RAM190_RAMDATA __AT (0x400866F8);



// --------------------------  Field Item: MODEM_RAM190_RAMDATA_DATA  -----------------------------
// SVD Line: 65843

//  <item> SFDITEM_FIELD__MODEM_RAM190_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866F8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM190_RAMDATA >> 0) & 0xFF), ((MODEM_RAM190_RAMDATA = (MODEM_RAM190_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM190_RAMDATA  ------------------------------
// SVD Line: 65834

//  <rtree> SFDITEM_REG__MODEM_RAM190_RAMDATA
//    <name> RAM190_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866F8) RAM190_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM190_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM190_RAMDATA = (MODEM_RAM190_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM190_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM191_RAMDATA  --------------------------
// SVD Line: 65852

unsigned int MODEM_RAM191_RAMDATA __AT (0x400866FC);



// --------------------------  Field Item: MODEM_RAM191_RAMDATA_DATA  -----------------------------
// SVD Line: 65861

//  <item> SFDITEM_FIELD__MODEM_RAM191_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400866FC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM191_RAMDATA >> 0) & 0xFF), ((MODEM_RAM191_RAMDATA = (MODEM_RAM191_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM191_RAMDATA  ------------------------------
// SVD Line: 65852

//  <rtree> SFDITEM_REG__MODEM_RAM191_RAMDATA
//    <name> RAM191_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400866FC) RAM191_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM191_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM191_RAMDATA = (MODEM_RAM191_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM191_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM192_RAMDATA  --------------------------
// SVD Line: 65870

unsigned int MODEM_RAM192_RAMDATA __AT (0x40086700);



// --------------------------  Field Item: MODEM_RAM192_RAMDATA_DATA  -----------------------------
// SVD Line: 65879

//  <item> SFDITEM_FIELD__MODEM_RAM192_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086700) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM192_RAMDATA >> 0) & 0xFF), ((MODEM_RAM192_RAMDATA = (MODEM_RAM192_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM192_RAMDATA  ------------------------------
// SVD Line: 65870

//  <rtree> SFDITEM_REG__MODEM_RAM192_RAMDATA
//    <name> RAM192_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086700) RAM192_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM192_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM192_RAMDATA = (MODEM_RAM192_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM192_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM193_RAMDATA  --------------------------
// SVD Line: 65888

unsigned int MODEM_RAM193_RAMDATA __AT (0x40086704);



// --------------------------  Field Item: MODEM_RAM193_RAMDATA_DATA  -----------------------------
// SVD Line: 65897

//  <item> SFDITEM_FIELD__MODEM_RAM193_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086704) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM193_RAMDATA >> 0) & 0xFF), ((MODEM_RAM193_RAMDATA = (MODEM_RAM193_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM193_RAMDATA  ------------------------------
// SVD Line: 65888

//  <rtree> SFDITEM_REG__MODEM_RAM193_RAMDATA
//    <name> RAM193_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086704) RAM193_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM193_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM193_RAMDATA = (MODEM_RAM193_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM193_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM194_RAMDATA  --------------------------
// SVD Line: 65906

unsigned int MODEM_RAM194_RAMDATA __AT (0x40086708);



// --------------------------  Field Item: MODEM_RAM194_RAMDATA_DATA  -----------------------------
// SVD Line: 65915

//  <item> SFDITEM_FIELD__MODEM_RAM194_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086708) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM194_RAMDATA >> 0) & 0xFF), ((MODEM_RAM194_RAMDATA = (MODEM_RAM194_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM194_RAMDATA  ------------------------------
// SVD Line: 65906

//  <rtree> SFDITEM_REG__MODEM_RAM194_RAMDATA
//    <name> RAM194_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086708) RAM194_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM194_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM194_RAMDATA = (MODEM_RAM194_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM194_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM195_RAMDATA  --------------------------
// SVD Line: 65924

unsigned int MODEM_RAM195_RAMDATA __AT (0x4008670C);



// --------------------------  Field Item: MODEM_RAM195_RAMDATA_DATA  -----------------------------
// SVD Line: 65933

//  <item> SFDITEM_FIELD__MODEM_RAM195_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008670C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM195_RAMDATA >> 0) & 0xFF), ((MODEM_RAM195_RAMDATA = (MODEM_RAM195_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM195_RAMDATA  ------------------------------
// SVD Line: 65924

//  <rtree> SFDITEM_REG__MODEM_RAM195_RAMDATA
//    <name> RAM195_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008670C) RAM195_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM195_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM195_RAMDATA = (MODEM_RAM195_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM195_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM196_RAMDATA  --------------------------
// SVD Line: 65942

unsigned int MODEM_RAM196_RAMDATA __AT (0x40086710);



// --------------------------  Field Item: MODEM_RAM196_RAMDATA_DATA  -----------------------------
// SVD Line: 65951

//  <item> SFDITEM_FIELD__MODEM_RAM196_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086710) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM196_RAMDATA >> 0) & 0xFF), ((MODEM_RAM196_RAMDATA = (MODEM_RAM196_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM196_RAMDATA  ------------------------------
// SVD Line: 65942

//  <rtree> SFDITEM_REG__MODEM_RAM196_RAMDATA
//    <name> RAM196_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086710) RAM196_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM196_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM196_RAMDATA = (MODEM_RAM196_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM196_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM197_RAMDATA  --------------------------
// SVD Line: 65960

unsigned int MODEM_RAM197_RAMDATA __AT (0x40086714);



// --------------------------  Field Item: MODEM_RAM197_RAMDATA_DATA  -----------------------------
// SVD Line: 65969

//  <item> SFDITEM_FIELD__MODEM_RAM197_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086714) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM197_RAMDATA >> 0) & 0xFF), ((MODEM_RAM197_RAMDATA = (MODEM_RAM197_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM197_RAMDATA  ------------------------------
// SVD Line: 65960

//  <rtree> SFDITEM_REG__MODEM_RAM197_RAMDATA
//    <name> RAM197_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086714) RAM197_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM197_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM197_RAMDATA = (MODEM_RAM197_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM197_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM198_RAMDATA  --------------------------
// SVD Line: 65978

unsigned int MODEM_RAM198_RAMDATA __AT (0x40086718);



// --------------------------  Field Item: MODEM_RAM198_RAMDATA_DATA  -----------------------------
// SVD Line: 65987

//  <item> SFDITEM_FIELD__MODEM_RAM198_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086718) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM198_RAMDATA >> 0) & 0xFF), ((MODEM_RAM198_RAMDATA = (MODEM_RAM198_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM198_RAMDATA  ------------------------------
// SVD Line: 65978

//  <rtree> SFDITEM_REG__MODEM_RAM198_RAMDATA
//    <name> RAM198_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086718) RAM198_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM198_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM198_RAMDATA = (MODEM_RAM198_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM198_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM199_RAMDATA  --------------------------
// SVD Line: 65996

unsigned int MODEM_RAM199_RAMDATA __AT (0x4008671C);



// --------------------------  Field Item: MODEM_RAM199_RAMDATA_DATA  -----------------------------
// SVD Line: 66005

//  <item> SFDITEM_FIELD__MODEM_RAM199_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008671C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM199_RAMDATA >> 0) & 0xFF), ((MODEM_RAM199_RAMDATA = (MODEM_RAM199_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM199_RAMDATA  ------------------------------
// SVD Line: 65996

//  <rtree> SFDITEM_REG__MODEM_RAM199_RAMDATA
//    <name> RAM199_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008671C) RAM199_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM199_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM199_RAMDATA = (MODEM_RAM199_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM199_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM200_RAMDATA  --------------------------
// SVD Line: 66014

unsigned int MODEM_RAM200_RAMDATA __AT (0x40086720);



// --------------------------  Field Item: MODEM_RAM200_RAMDATA_DATA  -----------------------------
// SVD Line: 66023

//  <item> SFDITEM_FIELD__MODEM_RAM200_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086720) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM200_RAMDATA >> 0) & 0xFF), ((MODEM_RAM200_RAMDATA = (MODEM_RAM200_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM200_RAMDATA  ------------------------------
// SVD Line: 66014

//  <rtree> SFDITEM_REG__MODEM_RAM200_RAMDATA
//    <name> RAM200_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086720) RAM200_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM200_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM200_RAMDATA = (MODEM_RAM200_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM200_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM201_RAMDATA  --------------------------
// SVD Line: 66032

unsigned int MODEM_RAM201_RAMDATA __AT (0x40086724);



// --------------------------  Field Item: MODEM_RAM201_RAMDATA_DATA  -----------------------------
// SVD Line: 66041

//  <item> SFDITEM_FIELD__MODEM_RAM201_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086724) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM201_RAMDATA >> 0) & 0xFF), ((MODEM_RAM201_RAMDATA = (MODEM_RAM201_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM201_RAMDATA  ------------------------------
// SVD Line: 66032

//  <rtree> SFDITEM_REG__MODEM_RAM201_RAMDATA
//    <name> RAM201_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086724) RAM201_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM201_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM201_RAMDATA = (MODEM_RAM201_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM201_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM202_RAMDATA  --------------------------
// SVD Line: 66050

unsigned int MODEM_RAM202_RAMDATA __AT (0x40086728);



// --------------------------  Field Item: MODEM_RAM202_RAMDATA_DATA  -----------------------------
// SVD Line: 66059

//  <item> SFDITEM_FIELD__MODEM_RAM202_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086728) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM202_RAMDATA >> 0) & 0xFF), ((MODEM_RAM202_RAMDATA = (MODEM_RAM202_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM202_RAMDATA  ------------------------------
// SVD Line: 66050

//  <rtree> SFDITEM_REG__MODEM_RAM202_RAMDATA
//    <name> RAM202_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086728) RAM202_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM202_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM202_RAMDATA = (MODEM_RAM202_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM202_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM203_RAMDATA  --------------------------
// SVD Line: 66068

unsigned int MODEM_RAM203_RAMDATA __AT (0x4008672C);



// --------------------------  Field Item: MODEM_RAM203_RAMDATA_DATA  -----------------------------
// SVD Line: 66077

//  <item> SFDITEM_FIELD__MODEM_RAM203_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008672C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM203_RAMDATA >> 0) & 0xFF), ((MODEM_RAM203_RAMDATA = (MODEM_RAM203_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM203_RAMDATA  ------------------------------
// SVD Line: 66068

//  <rtree> SFDITEM_REG__MODEM_RAM203_RAMDATA
//    <name> RAM203_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008672C) RAM203_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM203_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM203_RAMDATA = (MODEM_RAM203_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM203_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM204_RAMDATA  --------------------------
// SVD Line: 66086

unsigned int MODEM_RAM204_RAMDATA __AT (0x40086730);



// --------------------------  Field Item: MODEM_RAM204_RAMDATA_DATA  -----------------------------
// SVD Line: 66095

//  <item> SFDITEM_FIELD__MODEM_RAM204_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086730) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM204_RAMDATA >> 0) & 0xFF), ((MODEM_RAM204_RAMDATA = (MODEM_RAM204_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM204_RAMDATA  ------------------------------
// SVD Line: 66086

//  <rtree> SFDITEM_REG__MODEM_RAM204_RAMDATA
//    <name> RAM204_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086730) RAM204_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM204_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM204_RAMDATA = (MODEM_RAM204_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM204_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM205_RAMDATA  --------------------------
// SVD Line: 66104

unsigned int MODEM_RAM205_RAMDATA __AT (0x40086734);



// --------------------------  Field Item: MODEM_RAM205_RAMDATA_DATA  -----------------------------
// SVD Line: 66113

//  <item> SFDITEM_FIELD__MODEM_RAM205_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086734) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM205_RAMDATA >> 0) & 0xFF), ((MODEM_RAM205_RAMDATA = (MODEM_RAM205_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM205_RAMDATA  ------------------------------
// SVD Line: 66104

//  <rtree> SFDITEM_REG__MODEM_RAM205_RAMDATA
//    <name> RAM205_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086734) RAM205_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM205_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM205_RAMDATA = (MODEM_RAM205_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM205_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM206_RAMDATA  --------------------------
// SVD Line: 66122

unsigned int MODEM_RAM206_RAMDATA __AT (0x40086738);



// --------------------------  Field Item: MODEM_RAM206_RAMDATA_DATA  -----------------------------
// SVD Line: 66131

//  <item> SFDITEM_FIELD__MODEM_RAM206_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086738) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM206_RAMDATA >> 0) & 0xFF), ((MODEM_RAM206_RAMDATA = (MODEM_RAM206_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM206_RAMDATA  ------------------------------
// SVD Line: 66122

//  <rtree> SFDITEM_REG__MODEM_RAM206_RAMDATA
//    <name> RAM206_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086738) RAM206_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM206_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM206_RAMDATA = (MODEM_RAM206_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM206_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM207_RAMDATA  --------------------------
// SVD Line: 66140

unsigned int MODEM_RAM207_RAMDATA __AT (0x4008673C);



// --------------------------  Field Item: MODEM_RAM207_RAMDATA_DATA  -----------------------------
// SVD Line: 66149

//  <item> SFDITEM_FIELD__MODEM_RAM207_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008673C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM207_RAMDATA >> 0) & 0xFF), ((MODEM_RAM207_RAMDATA = (MODEM_RAM207_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM207_RAMDATA  ------------------------------
// SVD Line: 66140

//  <rtree> SFDITEM_REG__MODEM_RAM207_RAMDATA
//    <name> RAM207_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008673C) RAM207_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM207_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM207_RAMDATA = (MODEM_RAM207_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM207_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM208_RAMDATA  --------------------------
// SVD Line: 66158

unsigned int MODEM_RAM208_RAMDATA __AT (0x40086740);



// --------------------------  Field Item: MODEM_RAM208_RAMDATA_DATA  -----------------------------
// SVD Line: 66167

//  <item> SFDITEM_FIELD__MODEM_RAM208_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086740) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM208_RAMDATA >> 0) & 0xFF), ((MODEM_RAM208_RAMDATA = (MODEM_RAM208_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM208_RAMDATA  ------------------------------
// SVD Line: 66158

//  <rtree> SFDITEM_REG__MODEM_RAM208_RAMDATA
//    <name> RAM208_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086740) RAM208_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM208_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM208_RAMDATA = (MODEM_RAM208_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM208_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM209_RAMDATA  --------------------------
// SVD Line: 66176

unsigned int MODEM_RAM209_RAMDATA __AT (0x40086744);



// --------------------------  Field Item: MODEM_RAM209_RAMDATA_DATA  -----------------------------
// SVD Line: 66185

//  <item> SFDITEM_FIELD__MODEM_RAM209_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086744) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM209_RAMDATA >> 0) & 0xFF), ((MODEM_RAM209_RAMDATA = (MODEM_RAM209_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM209_RAMDATA  ------------------------------
// SVD Line: 66176

//  <rtree> SFDITEM_REG__MODEM_RAM209_RAMDATA
//    <name> RAM209_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086744) RAM209_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM209_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM209_RAMDATA = (MODEM_RAM209_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM209_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM210_RAMDATA  --------------------------
// SVD Line: 66194

unsigned int MODEM_RAM210_RAMDATA __AT (0x40086748);



// --------------------------  Field Item: MODEM_RAM210_RAMDATA_DATA  -----------------------------
// SVD Line: 66203

//  <item> SFDITEM_FIELD__MODEM_RAM210_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086748) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM210_RAMDATA >> 0) & 0xFF), ((MODEM_RAM210_RAMDATA = (MODEM_RAM210_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM210_RAMDATA  ------------------------------
// SVD Line: 66194

//  <rtree> SFDITEM_REG__MODEM_RAM210_RAMDATA
//    <name> RAM210_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086748) RAM210_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM210_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM210_RAMDATA = (MODEM_RAM210_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM210_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM211_RAMDATA  --------------------------
// SVD Line: 66212

unsigned int MODEM_RAM211_RAMDATA __AT (0x4008674C);



// --------------------------  Field Item: MODEM_RAM211_RAMDATA_DATA  -----------------------------
// SVD Line: 66221

//  <item> SFDITEM_FIELD__MODEM_RAM211_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008674C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM211_RAMDATA >> 0) & 0xFF), ((MODEM_RAM211_RAMDATA = (MODEM_RAM211_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM211_RAMDATA  ------------------------------
// SVD Line: 66212

//  <rtree> SFDITEM_REG__MODEM_RAM211_RAMDATA
//    <name> RAM211_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008674C) RAM211_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM211_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM211_RAMDATA = (MODEM_RAM211_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM211_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM212_RAMDATA  --------------------------
// SVD Line: 66230

unsigned int MODEM_RAM212_RAMDATA __AT (0x40086750);



// --------------------------  Field Item: MODEM_RAM212_RAMDATA_DATA  -----------------------------
// SVD Line: 66239

//  <item> SFDITEM_FIELD__MODEM_RAM212_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086750) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM212_RAMDATA >> 0) & 0xFF), ((MODEM_RAM212_RAMDATA = (MODEM_RAM212_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM212_RAMDATA  ------------------------------
// SVD Line: 66230

//  <rtree> SFDITEM_REG__MODEM_RAM212_RAMDATA
//    <name> RAM212_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086750) RAM212_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM212_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM212_RAMDATA = (MODEM_RAM212_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM212_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM213_RAMDATA  --------------------------
// SVD Line: 66248

unsigned int MODEM_RAM213_RAMDATA __AT (0x40086754);



// --------------------------  Field Item: MODEM_RAM213_RAMDATA_DATA  -----------------------------
// SVD Line: 66257

//  <item> SFDITEM_FIELD__MODEM_RAM213_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086754) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM213_RAMDATA >> 0) & 0xFF), ((MODEM_RAM213_RAMDATA = (MODEM_RAM213_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM213_RAMDATA  ------------------------------
// SVD Line: 66248

//  <rtree> SFDITEM_REG__MODEM_RAM213_RAMDATA
//    <name> RAM213_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086754) RAM213_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM213_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM213_RAMDATA = (MODEM_RAM213_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM213_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM214_RAMDATA  --------------------------
// SVD Line: 66266

unsigned int MODEM_RAM214_RAMDATA __AT (0x40086758);



// --------------------------  Field Item: MODEM_RAM214_RAMDATA_DATA  -----------------------------
// SVD Line: 66275

//  <item> SFDITEM_FIELD__MODEM_RAM214_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086758) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM214_RAMDATA >> 0) & 0xFF), ((MODEM_RAM214_RAMDATA = (MODEM_RAM214_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM214_RAMDATA  ------------------------------
// SVD Line: 66266

//  <rtree> SFDITEM_REG__MODEM_RAM214_RAMDATA
//    <name> RAM214_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086758) RAM214_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM214_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM214_RAMDATA = (MODEM_RAM214_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM214_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM215_RAMDATA  --------------------------
// SVD Line: 66284

unsigned int MODEM_RAM215_RAMDATA __AT (0x4008675C);



// --------------------------  Field Item: MODEM_RAM215_RAMDATA_DATA  -----------------------------
// SVD Line: 66293

//  <item> SFDITEM_FIELD__MODEM_RAM215_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008675C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM215_RAMDATA >> 0) & 0xFF), ((MODEM_RAM215_RAMDATA = (MODEM_RAM215_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM215_RAMDATA  ------------------------------
// SVD Line: 66284

//  <rtree> SFDITEM_REG__MODEM_RAM215_RAMDATA
//    <name> RAM215_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008675C) RAM215_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM215_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM215_RAMDATA = (MODEM_RAM215_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM215_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM216_RAMDATA  --------------------------
// SVD Line: 66302

unsigned int MODEM_RAM216_RAMDATA __AT (0x40086760);



// --------------------------  Field Item: MODEM_RAM216_RAMDATA_DATA  -----------------------------
// SVD Line: 66311

//  <item> SFDITEM_FIELD__MODEM_RAM216_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086760) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM216_RAMDATA >> 0) & 0xFF), ((MODEM_RAM216_RAMDATA = (MODEM_RAM216_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM216_RAMDATA  ------------------------------
// SVD Line: 66302

//  <rtree> SFDITEM_REG__MODEM_RAM216_RAMDATA
//    <name> RAM216_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086760) RAM216_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM216_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM216_RAMDATA = (MODEM_RAM216_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM216_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM217_RAMDATA  --------------------------
// SVD Line: 66320

unsigned int MODEM_RAM217_RAMDATA __AT (0x40086764);



// --------------------------  Field Item: MODEM_RAM217_RAMDATA_DATA  -----------------------------
// SVD Line: 66329

//  <item> SFDITEM_FIELD__MODEM_RAM217_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086764) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM217_RAMDATA >> 0) & 0xFF), ((MODEM_RAM217_RAMDATA = (MODEM_RAM217_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM217_RAMDATA  ------------------------------
// SVD Line: 66320

//  <rtree> SFDITEM_REG__MODEM_RAM217_RAMDATA
//    <name> RAM217_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086764) RAM217_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM217_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM217_RAMDATA = (MODEM_RAM217_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM217_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM218_RAMDATA  --------------------------
// SVD Line: 66338

unsigned int MODEM_RAM218_RAMDATA __AT (0x40086768);



// --------------------------  Field Item: MODEM_RAM218_RAMDATA_DATA  -----------------------------
// SVD Line: 66347

//  <item> SFDITEM_FIELD__MODEM_RAM218_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086768) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM218_RAMDATA >> 0) & 0xFF), ((MODEM_RAM218_RAMDATA = (MODEM_RAM218_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM218_RAMDATA  ------------------------------
// SVD Line: 66338

//  <rtree> SFDITEM_REG__MODEM_RAM218_RAMDATA
//    <name> RAM218_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086768) RAM218_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM218_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM218_RAMDATA = (MODEM_RAM218_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM218_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM219_RAMDATA  --------------------------
// SVD Line: 66356

unsigned int MODEM_RAM219_RAMDATA __AT (0x4008676C);



// --------------------------  Field Item: MODEM_RAM219_RAMDATA_DATA  -----------------------------
// SVD Line: 66365

//  <item> SFDITEM_FIELD__MODEM_RAM219_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008676C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM219_RAMDATA >> 0) & 0xFF), ((MODEM_RAM219_RAMDATA = (MODEM_RAM219_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM219_RAMDATA  ------------------------------
// SVD Line: 66356

//  <rtree> SFDITEM_REG__MODEM_RAM219_RAMDATA
//    <name> RAM219_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008676C) RAM219_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM219_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM219_RAMDATA = (MODEM_RAM219_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM219_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM220_RAMDATA  --------------------------
// SVD Line: 66374

unsigned int MODEM_RAM220_RAMDATA __AT (0x40086770);



// --------------------------  Field Item: MODEM_RAM220_RAMDATA_DATA  -----------------------------
// SVD Line: 66383

//  <item> SFDITEM_FIELD__MODEM_RAM220_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086770) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM220_RAMDATA >> 0) & 0xFF), ((MODEM_RAM220_RAMDATA = (MODEM_RAM220_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM220_RAMDATA  ------------------------------
// SVD Line: 66374

//  <rtree> SFDITEM_REG__MODEM_RAM220_RAMDATA
//    <name> RAM220_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086770) RAM220_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM220_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM220_RAMDATA = (MODEM_RAM220_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM220_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM221_RAMDATA  --------------------------
// SVD Line: 66392

unsigned int MODEM_RAM221_RAMDATA __AT (0x40086774);



// --------------------------  Field Item: MODEM_RAM221_RAMDATA_DATA  -----------------------------
// SVD Line: 66401

//  <item> SFDITEM_FIELD__MODEM_RAM221_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086774) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM221_RAMDATA >> 0) & 0xFF), ((MODEM_RAM221_RAMDATA = (MODEM_RAM221_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM221_RAMDATA  ------------------------------
// SVD Line: 66392

//  <rtree> SFDITEM_REG__MODEM_RAM221_RAMDATA
//    <name> RAM221_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086774) RAM221_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM221_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM221_RAMDATA = (MODEM_RAM221_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM221_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM222_RAMDATA  --------------------------
// SVD Line: 66410

unsigned int MODEM_RAM222_RAMDATA __AT (0x40086778);



// --------------------------  Field Item: MODEM_RAM222_RAMDATA_DATA  -----------------------------
// SVD Line: 66419

//  <item> SFDITEM_FIELD__MODEM_RAM222_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086778) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM222_RAMDATA >> 0) & 0xFF), ((MODEM_RAM222_RAMDATA = (MODEM_RAM222_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM222_RAMDATA  ------------------------------
// SVD Line: 66410

//  <rtree> SFDITEM_REG__MODEM_RAM222_RAMDATA
//    <name> RAM222_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086778) RAM222_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM222_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM222_RAMDATA = (MODEM_RAM222_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM222_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM223_RAMDATA  --------------------------
// SVD Line: 66428

unsigned int MODEM_RAM223_RAMDATA __AT (0x4008677C);



// --------------------------  Field Item: MODEM_RAM223_RAMDATA_DATA  -----------------------------
// SVD Line: 66437

//  <item> SFDITEM_FIELD__MODEM_RAM223_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008677C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM223_RAMDATA >> 0) & 0xFF), ((MODEM_RAM223_RAMDATA = (MODEM_RAM223_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM223_RAMDATA  ------------------------------
// SVD Line: 66428

//  <rtree> SFDITEM_REG__MODEM_RAM223_RAMDATA
//    <name> RAM223_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008677C) RAM223_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM223_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM223_RAMDATA = (MODEM_RAM223_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM223_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM224_RAMDATA  --------------------------
// SVD Line: 66446

unsigned int MODEM_RAM224_RAMDATA __AT (0x40086780);



// --------------------------  Field Item: MODEM_RAM224_RAMDATA_DATA  -----------------------------
// SVD Line: 66455

//  <item> SFDITEM_FIELD__MODEM_RAM224_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086780) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM224_RAMDATA >> 0) & 0xFF), ((MODEM_RAM224_RAMDATA = (MODEM_RAM224_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM224_RAMDATA  ------------------------------
// SVD Line: 66446

//  <rtree> SFDITEM_REG__MODEM_RAM224_RAMDATA
//    <name> RAM224_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086780) RAM224_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM224_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM224_RAMDATA = (MODEM_RAM224_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM224_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM225_RAMDATA  --------------------------
// SVD Line: 66464

unsigned int MODEM_RAM225_RAMDATA __AT (0x40086784);



// --------------------------  Field Item: MODEM_RAM225_RAMDATA_DATA  -----------------------------
// SVD Line: 66473

//  <item> SFDITEM_FIELD__MODEM_RAM225_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086784) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM225_RAMDATA >> 0) & 0xFF), ((MODEM_RAM225_RAMDATA = (MODEM_RAM225_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM225_RAMDATA  ------------------------------
// SVD Line: 66464

//  <rtree> SFDITEM_REG__MODEM_RAM225_RAMDATA
//    <name> RAM225_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086784) RAM225_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM225_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM225_RAMDATA = (MODEM_RAM225_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM225_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM226_RAMDATA  --------------------------
// SVD Line: 66482

unsigned int MODEM_RAM226_RAMDATA __AT (0x40086788);



// --------------------------  Field Item: MODEM_RAM226_RAMDATA_DATA  -----------------------------
// SVD Line: 66491

//  <item> SFDITEM_FIELD__MODEM_RAM226_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086788) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM226_RAMDATA >> 0) & 0xFF), ((MODEM_RAM226_RAMDATA = (MODEM_RAM226_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM226_RAMDATA  ------------------------------
// SVD Line: 66482

//  <rtree> SFDITEM_REG__MODEM_RAM226_RAMDATA
//    <name> RAM226_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086788) RAM226_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM226_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM226_RAMDATA = (MODEM_RAM226_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM226_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM227_RAMDATA  --------------------------
// SVD Line: 66500

unsigned int MODEM_RAM227_RAMDATA __AT (0x4008678C);



// --------------------------  Field Item: MODEM_RAM227_RAMDATA_DATA  -----------------------------
// SVD Line: 66509

//  <item> SFDITEM_FIELD__MODEM_RAM227_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008678C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM227_RAMDATA >> 0) & 0xFF), ((MODEM_RAM227_RAMDATA = (MODEM_RAM227_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM227_RAMDATA  ------------------------------
// SVD Line: 66500

//  <rtree> SFDITEM_REG__MODEM_RAM227_RAMDATA
//    <name> RAM227_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008678C) RAM227_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM227_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM227_RAMDATA = (MODEM_RAM227_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM227_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM228_RAMDATA  --------------------------
// SVD Line: 66518

unsigned int MODEM_RAM228_RAMDATA __AT (0x40086790);



// --------------------------  Field Item: MODEM_RAM228_RAMDATA_DATA  -----------------------------
// SVD Line: 66527

//  <item> SFDITEM_FIELD__MODEM_RAM228_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086790) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM228_RAMDATA >> 0) & 0xFF), ((MODEM_RAM228_RAMDATA = (MODEM_RAM228_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM228_RAMDATA  ------------------------------
// SVD Line: 66518

//  <rtree> SFDITEM_REG__MODEM_RAM228_RAMDATA
//    <name> RAM228_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086790) RAM228_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM228_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM228_RAMDATA = (MODEM_RAM228_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM228_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM229_RAMDATA  --------------------------
// SVD Line: 66536

unsigned int MODEM_RAM229_RAMDATA __AT (0x40086794);



// --------------------------  Field Item: MODEM_RAM229_RAMDATA_DATA  -----------------------------
// SVD Line: 66545

//  <item> SFDITEM_FIELD__MODEM_RAM229_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086794) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM229_RAMDATA >> 0) & 0xFF), ((MODEM_RAM229_RAMDATA = (MODEM_RAM229_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM229_RAMDATA  ------------------------------
// SVD Line: 66536

//  <rtree> SFDITEM_REG__MODEM_RAM229_RAMDATA
//    <name> RAM229_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086794) RAM229_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM229_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM229_RAMDATA = (MODEM_RAM229_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM229_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM230_RAMDATA  --------------------------
// SVD Line: 66554

unsigned int MODEM_RAM230_RAMDATA __AT (0x40086798);



// --------------------------  Field Item: MODEM_RAM230_RAMDATA_DATA  -----------------------------
// SVD Line: 66563

//  <item> SFDITEM_FIELD__MODEM_RAM230_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40086798) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM230_RAMDATA >> 0) & 0xFF), ((MODEM_RAM230_RAMDATA = (MODEM_RAM230_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM230_RAMDATA  ------------------------------
// SVD Line: 66554

//  <rtree> SFDITEM_REG__MODEM_RAM230_RAMDATA
//    <name> RAM230_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40086798) RAM230_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM230_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM230_RAMDATA = (MODEM_RAM230_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM230_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM231_RAMDATA  --------------------------
// SVD Line: 66572

unsigned int MODEM_RAM231_RAMDATA __AT (0x4008679C);



// --------------------------  Field Item: MODEM_RAM231_RAMDATA_DATA  -----------------------------
// SVD Line: 66581

//  <item> SFDITEM_FIELD__MODEM_RAM231_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008679C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM231_RAMDATA >> 0) & 0xFF), ((MODEM_RAM231_RAMDATA = (MODEM_RAM231_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM231_RAMDATA  ------------------------------
// SVD Line: 66572

//  <rtree> SFDITEM_REG__MODEM_RAM231_RAMDATA
//    <name> RAM231_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008679C) RAM231_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM231_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM231_RAMDATA = (MODEM_RAM231_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM231_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM232_RAMDATA  --------------------------
// SVD Line: 66590

unsigned int MODEM_RAM232_RAMDATA __AT (0x400867A0);



// --------------------------  Field Item: MODEM_RAM232_RAMDATA_DATA  -----------------------------
// SVD Line: 66599

//  <item> SFDITEM_FIELD__MODEM_RAM232_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867A0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM232_RAMDATA >> 0) & 0xFF), ((MODEM_RAM232_RAMDATA = (MODEM_RAM232_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM232_RAMDATA  ------------------------------
// SVD Line: 66590

//  <rtree> SFDITEM_REG__MODEM_RAM232_RAMDATA
//    <name> RAM232_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867A0) RAM232_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM232_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM232_RAMDATA = (MODEM_RAM232_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM232_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM233_RAMDATA  --------------------------
// SVD Line: 66608

unsigned int MODEM_RAM233_RAMDATA __AT (0x400867A4);



// --------------------------  Field Item: MODEM_RAM233_RAMDATA_DATA  -----------------------------
// SVD Line: 66617

//  <item> SFDITEM_FIELD__MODEM_RAM233_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867A4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM233_RAMDATA >> 0) & 0xFF), ((MODEM_RAM233_RAMDATA = (MODEM_RAM233_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM233_RAMDATA  ------------------------------
// SVD Line: 66608

//  <rtree> SFDITEM_REG__MODEM_RAM233_RAMDATA
//    <name> RAM233_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867A4) RAM233_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM233_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM233_RAMDATA = (MODEM_RAM233_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM233_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM234_RAMDATA  --------------------------
// SVD Line: 66626

unsigned int MODEM_RAM234_RAMDATA __AT (0x400867A8);



// --------------------------  Field Item: MODEM_RAM234_RAMDATA_DATA  -----------------------------
// SVD Line: 66635

//  <item> SFDITEM_FIELD__MODEM_RAM234_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867A8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM234_RAMDATA >> 0) & 0xFF), ((MODEM_RAM234_RAMDATA = (MODEM_RAM234_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM234_RAMDATA  ------------------------------
// SVD Line: 66626

//  <rtree> SFDITEM_REG__MODEM_RAM234_RAMDATA
//    <name> RAM234_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867A8) RAM234_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM234_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM234_RAMDATA = (MODEM_RAM234_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM234_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM235_RAMDATA  --------------------------
// SVD Line: 66644

unsigned int MODEM_RAM235_RAMDATA __AT (0x400867AC);



// --------------------------  Field Item: MODEM_RAM235_RAMDATA_DATA  -----------------------------
// SVD Line: 66653

//  <item> SFDITEM_FIELD__MODEM_RAM235_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867AC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM235_RAMDATA >> 0) & 0xFF), ((MODEM_RAM235_RAMDATA = (MODEM_RAM235_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM235_RAMDATA  ------------------------------
// SVD Line: 66644

//  <rtree> SFDITEM_REG__MODEM_RAM235_RAMDATA
//    <name> RAM235_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867AC) RAM235_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM235_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM235_RAMDATA = (MODEM_RAM235_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM235_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM236_RAMDATA  --------------------------
// SVD Line: 66662

unsigned int MODEM_RAM236_RAMDATA __AT (0x400867B0);



// --------------------------  Field Item: MODEM_RAM236_RAMDATA_DATA  -----------------------------
// SVD Line: 66671

//  <item> SFDITEM_FIELD__MODEM_RAM236_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867B0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM236_RAMDATA >> 0) & 0xFF), ((MODEM_RAM236_RAMDATA = (MODEM_RAM236_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM236_RAMDATA  ------------------------------
// SVD Line: 66662

//  <rtree> SFDITEM_REG__MODEM_RAM236_RAMDATA
//    <name> RAM236_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867B0) RAM236_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM236_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM236_RAMDATA = (MODEM_RAM236_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM236_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM237_RAMDATA  --------------------------
// SVD Line: 66680

unsigned int MODEM_RAM237_RAMDATA __AT (0x400867B4);



// --------------------------  Field Item: MODEM_RAM237_RAMDATA_DATA  -----------------------------
// SVD Line: 66689

//  <item> SFDITEM_FIELD__MODEM_RAM237_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867B4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM237_RAMDATA >> 0) & 0xFF), ((MODEM_RAM237_RAMDATA = (MODEM_RAM237_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM237_RAMDATA  ------------------------------
// SVD Line: 66680

//  <rtree> SFDITEM_REG__MODEM_RAM237_RAMDATA
//    <name> RAM237_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867B4) RAM237_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM237_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM237_RAMDATA = (MODEM_RAM237_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM237_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM238_RAMDATA  --------------------------
// SVD Line: 66698

unsigned int MODEM_RAM238_RAMDATA __AT (0x400867B8);



// --------------------------  Field Item: MODEM_RAM238_RAMDATA_DATA  -----------------------------
// SVD Line: 66707

//  <item> SFDITEM_FIELD__MODEM_RAM238_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867B8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM238_RAMDATA >> 0) & 0xFF), ((MODEM_RAM238_RAMDATA = (MODEM_RAM238_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM238_RAMDATA  ------------------------------
// SVD Line: 66698

//  <rtree> SFDITEM_REG__MODEM_RAM238_RAMDATA
//    <name> RAM238_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867B8) RAM238_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM238_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM238_RAMDATA = (MODEM_RAM238_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM238_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM239_RAMDATA  --------------------------
// SVD Line: 66716

unsigned int MODEM_RAM239_RAMDATA __AT (0x400867BC);



// --------------------------  Field Item: MODEM_RAM239_RAMDATA_DATA  -----------------------------
// SVD Line: 66725

//  <item> SFDITEM_FIELD__MODEM_RAM239_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867BC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM239_RAMDATA >> 0) & 0xFF), ((MODEM_RAM239_RAMDATA = (MODEM_RAM239_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM239_RAMDATA  ------------------------------
// SVD Line: 66716

//  <rtree> SFDITEM_REG__MODEM_RAM239_RAMDATA
//    <name> RAM239_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867BC) RAM239_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM239_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM239_RAMDATA = (MODEM_RAM239_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM239_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM240_RAMDATA  --------------------------
// SVD Line: 66734

unsigned int MODEM_RAM240_RAMDATA __AT (0x400867C0);



// --------------------------  Field Item: MODEM_RAM240_RAMDATA_DATA  -----------------------------
// SVD Line: 66743

//  <item> SFDITEM_FIELD__MODEM_RAM240_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867C0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM240_RAMDATA >> 0) & 0xFF), ((MODEM_RAM240_RAMDATA = (MODEM_RAM240_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM240_RAMDATA  ------------------------------
// SVD Line: 66734

//  <rtree> SFDITEM_REG__MODEM_RAM240_RAMDATA
//    <name> RAM240_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867C0) RAM240_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM240_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM240_RAMDATA = (MODEM_RAM240_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM240_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM241_RAMDATA  --------------------------
// SVD Line: 66752

unsigned int MODEM_RAM241_RAMDATA __AT (0x400867C4);



// --------------------------  Field Item: MODEM_RAM241_RAMDATA_DATA  -----------------------------
// SVD Line: 66761

//  <item> SFDITEM_FIELD__MODEM_RAM241_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867C4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM241_RAMDATA >> 0) & 0xFF), ((MODEM_RAM241_RAMDATA = (MODEM_RAM241_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM241_RAMDATA  ------------------------------
// SVD Line: 66752

//  <rtree> SFDITEM_REG__MODEM_RAM241_RAMDATA
//    <name> RAM241_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867C4) RAM241_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM241_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM241_RAMDATA = (MODEM_RAM241_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM241_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM242_RAMDATA  --------------------------
// SVD Line: 66770

unsigned int MODEM_RAM242_RAMDATA __AT (0x400867C8);



// --------------------------  Field Item: MODEM_RAM242_RAMDATA_DATA  -----------------------------
// SVD Line: 66779

//  <item> SFDITEM_FIELD__MODEM_RAM242_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867C8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM242_RAMDATA >> 0) & 0xFF), ((MODEM_RAM242_RAMDATA = (MODEM_RAM242_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM242_RAMDATA  ------------------------------
// SVD Line: 66770

//  <rtree> SFDITEM_REG__MODEM_RAM242_RAMDATA
//    <name> RAM242_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867C8) RAM242_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM242_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM242_RAMDATA = (MODEM_RAM242_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM242_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM243_RAMDATA  --------------------------
// SVD Line: 66788

unsigned int MODEM_RAM243_RAMDATA __AT (0x400867CC);



// --------------------------  Field Item: MODEM_RAM243_RAMDATA_DATA  -----------------------------
// SVD Line: 66797

//  <item> SFDITEM_FIELD__MODEM_RAM243_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867CC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM243_RAMDATA >> 0) & 0xFF), ((MODEM_RAM243_RAMDATA = (MODEM_RAM243_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM243_RAMDATA  ------------------------------
// SVD Line: 66788

//  <rtree> SFDITEM_REG__MODEM_RAM243_RAMDATA
//    <name> RAM243_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867CC) RAM243_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM243_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM243_RAMDATA = (MODEM_RAM243_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM243_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM244_RAMDATA  --------------------------
// SVD Line: 66806

unsigned int MODEM_RAM244_RAMDATA __AT (0x400867D0);



// --------------------------  Field Item: MODEM_RAM244_RAMDATA_DATA  -----------------------------
// SVD Line: 66815

//  <item> SFDITEM_FIELD__MODEM_RAM244_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867D0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM244_RAMDATA >> 0) & 0xFF), ((MODEM_RAM244_RAMDATA = (MODEM_RAM244_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM244_RAMDATA  ------------------------------
// SVD Line: 66806

//  <rtree> SFDITEM_REG__MODEM_RAM244_RAMDATA
//    <name> RAM244_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867D0) RAM244_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM244_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM244_RAMDATA = (MODEM_RAM244_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM244_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM245_RAMDATA  --------------------------
// SVD Line: 66824

unsigned int MODEM_RAM245_RAMDATA __AT (0x400867D4);



// --------------------------  Field Item: MODEM_RAM245_RAMDATA_DATA  -----------------------------
// SVD Line: 66833

//  <item> SFDITEM_FIELD__MODEM_RAM245_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867D4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM245_RAMDATA >> 0) & 0xFF), ((MODEM_RAM245_RAMDATA = (MODEM_RAM245_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM245_RAMDATA  ------------------------------
// SVD Line: 66824

//  <rtree> SFDITEM_REG__MODEM_RAM245_RAMDATA
//    <name> RAM245_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867D4) RAM245_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM245_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM245_RAMDATA = (MODEM_RAM245_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM245_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM246_RAMDATA  --------------------------
// SVD Line: 66842

unsigned int MODEM_RAM246_RAMDATA __AT (0x400867D8);



// --------------------------  Field Item: MODEM_RAM246_RAMDATA_DATA  -----------------------------
// SVD Line: 66851

//  <item> SFDITEM_FIELD__MODEM_RAM246_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867D8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM246_RAMDATA >> 0) & 0xFF), ((MODEM_RAM246_RAMDATA = (MODEM_RAM246_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM246_RAMDATA  ------------------------------
// SVD Line: 66842

//  <rtree> SFDITEM_REG__MODEM_RAM246_RAMDATA
//    <name> RAM246_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867D8) RAM246_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM246_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM246_RAMDATA = (MODEM_RAM246_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM246_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM247_RAMDATA  --------------------------
// SVD Line: 66860

unsigned int MODEM_RAM247_RAMDATA __AT (0x400867DC);



// --------------------------  Field Item: MODEM_RAM247_RAMDATA_DATA  -----------------------------
// SVD Line: 66869

//  <item> SFDITEM_FIELD__MODEM_RAM247_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867DC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM247_RAMDATA >> 0) & 0xFF), ((MODEM_RAM247_RAMDATA = (MODEM_RAM247_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM247_RAMDATA  ------------------------------
// SVD Line: 66860

//  <rtree> SFDITEM_REG__MODEM_RAM247_RAMDATA
//    <name> RAM247_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867DC) RAM247_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM247_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM247_RAMDATA = (MODEM_RAM247_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM247_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM248_RAMDATA  --------------------------
// SVD Line: 66878

unsigned int MODEM_RAM248_RAMDATA __AT (0x400867E0);



// --------------------------  Field Item: MODEM_RAM248_RAMDATA_DATA  -----------------------------
// SVD Line: 66887

//  <item> SFDITEM_FIELD__MODEM_RAM248_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867E0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM248_RAMDATA >> 0) & 0xFF), ((MODEM_RAM248_RAMDATA = (MODEM_RAM248_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM248_RAMDATA  ------------------------------
// SVD Line: 66878

//  <rtree> SFDITEM_REG__MODEM_RAM248_RAMDATA
//    <name> RAM248_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867E0) RAM248_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM248_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM248_RAMDATA = (MODEM_RAM248_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM248_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM249_RAMDATA  --------------------------
// SVD Line: 66896

unsigned int MODEM_RAM249_RAMDATA __AT (0x400867E4);



// --------------------------  Field Item: MODEM_RAM249_RAMDATA_DATA  -----------------------------
// SVD Line: 66905

//  <item> SFDITEM_FIELD__MODEM_RAM249_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867E4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM249_RAMDATA >> 0) & 0xFF), ((MODEM_RAM249_RAMDATA = (MODEM_RAM249_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM249_RAMDATA  ------------------------------
// SVD Line: 66896

//  <rtree> SFDITEM_REG__MODEM_RAM249_RAMDATA
//    <name> RAM249_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867E4) RAM249_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM249_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM249_RAMDATA = (MODEM_RAM249_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM249_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM250_RAMDATA  --------------------------
// SVD Line: 66914

unsigned int MODEM_RAM250_RAMDATA __AT (0x400867E8);



// --------------------------  Field Item: MODEM_RAM250_RAMDATA_DATA  -----------------------------
// SVD Line: 66923

//  <item> SFDITEM_FIELD__MODEM_RAM250_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867E8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM250_RAMDATA >> 0) & 0xFF), ((MODEM_RAM250_RAMDATA = (MODEM_RAM250_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM250_RAMDATA  ------------------------------
// SVD Line: 66914

//  <rtree> SFDITEM_REG__MODEM_RAM250_RAMDATA
//    <name> RAM250_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867E8) RAM250_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM250_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM250_RAMDATA = (MODEM_RAM250_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM250_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM251_RAMDATA  --------------------------
// SVD Line: 66932

unsigned int MODEM_RAM251_RAMDATA __AT (0x400867EC);



// --------------------------  Field Item: MODEM_RAM251_RAMDATA_DATA  -----------------------------
// SVD Line: 66941

//  <item> SFDITEM_FIELD__MODEM_RAM251_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867EC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM251_RAMDATA >> 0) & 0xFF), ((MODEM_RAM251_RAMDATA = (MODEM_RAM251_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM251_RAMDATA  ------------------------------
// SVD Line: 66932

//  <rtree> SFDITEM_REG__MODEM_RAM251_RAMDATA
//    <name> RAM251_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867EC) RAM251_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM251_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM251_RAMDATA = (MODEM_RAM251_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM251_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM252_RAMDATA  --------------------------
// SVD Line: 66950

unsigned int MODEM_RAM252_RAMDATA __AT (0x400867F0);



// --------------------------  Field Item: MODEM_RAM252_RAMDATA_DATA  -----------------------------
// SVD Line: 66959

//  <item> SFDITEM_FIELD__MODEM_RAM252_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867F0) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM252_RAMDATA >> 0) & 0xFF), ((MODEM_RAM252_RAMDATA = (MODEM_RAM252_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM252_RAMDATA  ------------------------------
// SVD Line: 66950

//  <rtree> SFDITEM_REG__MODEM_RAM252_RAMDATA
//    <name> RAM252_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867F0) RAM252_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM252_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM252_RAMDATA = (MODEM_RAM252_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM252_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM253_RAMDATA  --------------------------
// SVD Line: 66968

unsigned int MODEM_RAM253_RAMDATA __AT (0x400867F4);



// --------------------------  Field Item: MODEM_RAM253_RAMDATA_DATA  -----------------------------
// SVD Line: 66977

//  <item> SFDITEM_FIELD__MODEM_RAM253_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867F4) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM253_RAMDATA >> 0) & 0xFF), ((MODEM_RAM253_RAMDATA = (MODEM_RAM253_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM253_RAMDATA  ------------------------------
// SVD Line: 66968

//  <rtree> SFDITEM_REG__MODEM_RAM253_RAMDATA
//    <name> RAM253_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867F4) RAM253_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM253_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM253_RAMDATA = (MODEM_RAM253_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM253_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM254_RAMDATA  --------------------------
// SVD Line: 66986

unsigned int MODEM_RAM254_RAMDATA __AT (0x400867F8);



// --------------------------  Field Item: MODEM_RAM254_RAMDATA_DATA  -----------------------------
// SVD Line: 66995

//  <item> SFDITEM_FIELD__MODEM_RAM254_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867F8) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM254_RAMDATA >> 0) & 0xFF), ((MODEM_RAM254_RAMDATA = (MODEM_RAM254_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM254_RAMDATA  ------------------------------
// SVD Line: 66986

//  <rtree> SFDITEM_REG__MODEM_RAM254_RAMDATA
//    <name> RAM254_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867F8) RAM254_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM254_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM254_RAMDATA = (MODEM_RAM254_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM254_RAMDATA_DATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: MODEM_RAM255_RAMDATA  --------------------------
// SVD Line: 67004

unsigned int MODEM_RAM255_RAMDATA __AT (0x400867FC);



// --------------------------  Field Item: MODEM_RAM255_RAMDATA_DATA  -----------------------------
// SVD Line: 67013

//  <item> SFDITEM_FIELD__MODEM_RAM255_RAMDATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400867FC) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((MODEM_RAM255_RAMDATA >> 0) & 0xFF), ((MODEM_RAM255_RAMDATA = (MODEM_RAM255_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: MODEM_RAM255_RAMDATA  ------------------------------
// SVD Line: 67004

//  <rtree> SFDITEM_REG__MODEM_RAM255_RAMDATA
//    <name> RAM255_RAMDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400867FC) RAM255_RAMDATA </i>
//    <loc> ( (unsigned int)((MODEM_RAM255_RAMDATA >> 0) & 0xFFFFFFFF), ((MODEM_RAM255_RAMDATA = (MODEM_RAM255_RAMDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MODEM_RAM255_RAMDATA_DATA </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: MODEM  -------------------------------------
// SVD Line: 60473

//  <view> MODEM
//    <name> MODEM </name>
//    <item> SFDITEM_REG__MODEM_STATUS </item>
//    <item> SFDITEM_REG__MODEM_TIMDETSTATUS </item>
//    <item> SFDITEM_REG__MODEM_FREQOFFEST </item>
//    <item> SFDITEM_REG__MODEM_AFCADJRX </item>
//    <item> SFDITEM_REG__MODEM_AFCADJTX </item>
//    <item> SFDITEM_REG__MODEM_MIXCTRL </item>
//    <item> SFDITEM_REG__MODEM_CTRL0 </item>
//    <item> SFDITEM_REG__MODEM_CTRL1 </item>
//    <item> SFDITEM_REG__MODEM_CTRL2 </item>
//    <item> SFDITEM_REG__MODEM_CTRL3 </item>
//    <item> SFDITEM_REG__MODEM_CTRL4 </item>
//    <item> SFDITEM_REG__MODEM_CTRL5 </item>
//    <item> SFDITEM_REG__MODEM_TXBR </item>
//    <item> SFDITEM_REG__MODEM_RXBR </item>
//    <item> SFDITEM_REG__MODEM_CF </item>
//    <item> SFDITEM_REG__MODEM_PRE </item>
//    <item> SFDITEM_REG__MODEM_SYNC0 </item>
//    <item> SFDITEM_REG__MODEM_SYNC1 </item>
//    <item> SFDITEM_REG__MODEM_TIMING </item>
//    <item> SFDITEM_REG__MODEM_DSSS0 </item>
//    <item> SFDITEM_REG__MODEM_MODINDEX </item>
//    <item> SFDITEM_REG__MODEM_AFC </item>
//    <item> SFDITEM_REG__MODEM_AFCADJLIM </item>
//    <item> SFDITEM_REG__MODEM_SHAPING0 </item>
//    <item> SFDITEM_REG__MODEM_SHAPING1 </item>
//    <item> SFDITEM_REG__MODEM_SHAPING2 </item>
//    <item> SFDITEM_REG__MODEM_RAMPCTRL </item>
//    <item> SFDITEM_REG__MODEM_RAMPLEV </item>
//    <item> SFDITEM_REG__MODEM_ROUTEPEN </item>
//    <item> SFDITEM_REG__MODEM_ROUTELOC0 </item>
//    <item> SFDITEM_REG__MODEM_ROUTELOC1 </item>
//    <item> SFDITEM_REG__MODEM_IF </item>
//    <item> SFDITEM_REG__MODEM_IFS </item>
//    <item> SFDITEM_REG__MODEM_IFC </item>
//    <item> SFDITEM_REG__MODEM_IEN </item>
//    <item> SFDITEM_REG__MODEM_CMD </item>
//    <item> SFDITEM_REG__MODEM_DCCOMP </item>
//    <item> SFDITEM_REG__MODEM_DCCOMPFILTINIT </item>
//    <item> SFDITEM_REG__MODEM_DCESTI </item>
//    <item> SFDITEM_REG__MODEM_RAM0_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM1_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM2_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM3_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM4_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM5_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM6_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM7_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM8_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM9_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM10_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM11_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM12_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM13_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM14_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM15_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM16_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM17_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM18_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM19_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM20_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM21_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM22_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM23_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM24_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM25_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM26_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM27_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM28_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM29_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM30_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM31_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM32_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM33_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM34_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM35_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM36_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM37_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM38_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM39_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM40_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM41_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM42_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM43_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM44_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM45_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM46_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM47_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM48_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM49_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM50_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM51_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM52_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM53_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM54_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM55_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM56_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM57_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM58_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM59_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM60_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM61_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM62_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM63_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM64_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM65_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM66_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM67_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM68_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM69_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM70_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM71_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM72_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM73_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM74_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM75_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM76_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM77_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM78_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM79_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM80_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM81_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM82_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM83_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM84_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM85_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM86_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM87_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM88_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM89_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM90_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM91_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM92_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM93_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM94_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM95_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM96_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM97_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM98_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM99_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM100_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM101_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM102_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM103_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM104_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM105_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM106_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM107_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM108_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM109_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM110_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM111_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM112_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM113_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM114_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM115_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM116_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM117_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM118_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM119_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM120_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM121_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM122_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM123_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM124_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM125_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM126_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM127_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM128_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM129_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM130_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM131_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM132_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM133_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM134_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM135_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM136_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM137_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM138_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM139_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM140_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM141_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM142_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM143_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM144_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM145_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM146_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM147_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM148_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM149_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM150_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM151_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM152_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM153_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM154_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM155_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM156_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM157_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM158_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM159_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM160_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM161_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM162_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM163_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM164_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM165_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM166_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM167_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM168_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM169_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM170_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM171_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM172_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM173_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM174_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM175_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM176_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM177_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM178_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM179_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM180_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM181_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM182_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM183_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM184_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM185_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM186_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM187_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM188_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM189_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM190_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM191_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM192_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM193_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM194_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM195_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM196_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM197_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM198_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM199_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM200_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM201_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM202_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM203_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM204_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM205_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM206_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM207_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM208_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM209_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM210_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM211_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM212_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM213_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM214_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM215_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM216_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM217_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM218_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM219_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM220_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM221_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM222_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM223_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM224_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM225_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM226_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM227_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM228_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM229_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM230_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM231_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM232_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM233_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM234_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM235_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM236_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM237_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM238_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM239_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM240_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM241_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM242_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM243_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM244_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM245_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM246_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM247_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM248_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM249_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM250_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM251_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM252_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM253_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM254_RAMDATA </item>
//    <item> SFDITEM_REG__MODEM_RAM255_RAMDATA </item>
//  </view>
//  


// --------------------------  Register Item Address: RAC_RXENSRCEN  ------------------------------
// SVD Line: 67042

unsigned int RAC_RXENSRCEN __AT (0x40084000);



// ----------------------------  Field Item: RAC_RXENSRCEN_SWRXEN  --------------------------------
// SVD Line: 67051

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_SWRXEN
//    <name> SWRXEN </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40084000) SWRXEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RXENSRCEN >> 0) & 0xFF), ((RAC_RXENSRCEN = (RAC_RXENSRCEN & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_RXENSRCEN_CHANNELBUSYEN  ----------------------------
// SVD Line: 67058

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_CHANNELBUSYEN
//    <name> CHANNELBUSYEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40084000) CHANNELBUSYEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RXENSRCEN ) </loc>
//      <o.8..8> CHANNELBUSYEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_RXENSRCEN_TIMDETEN  -------------------------------
// SVD Line: 67065

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_TIMDETEN
//    <name> TIMDETEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40084000) TIMDETEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RXENSRCEN ) </loc>
//      <o.9..9> TIMDETEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_RXENSRCEN_PREDETEN  -------------------------------
// SVD Line: 67072

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_PREDETEN
//    <name> PREDETEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40084000) PREDETEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RXENSRCEN ) </loc>
//      <o.10..10> PREDETEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_RXENSRCEN_FRAMEDETEN  ------------------------------
// SVD Line: 67079

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_FRAMEDETEN
//    <name> FRAMEDETEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40084000) FRAMEDETEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RXENSRCEN ) </loc>
//      <o.11..11> FRAMEDETEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_RXENSRCEN_DEMODRXREQEN  -----------------------------
// SVD Line: 67086

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_DEMODRXREQEN
//    <name> DEMODRXREQEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40084000) DEMODRXREQEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RXENSRCEN ) </loc>
//      <o.12..12> DEMODRXREQEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RXENSRCEN_PRSRXEN  -------------------------------
// SVD Line: 67093

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_PRSRXEN
//    <name> PRSRXEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40084000) PRSRXEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RXENSRCEN ) </loc>
//      <o.13..13> PRSRXEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_RXENSRCEN_PRSRXENSEL  ------------------------------
// SVD Line: 67100

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_PRSRXENSEL
//    <name> PRSRXENSEL </name>
//    <rw> 
//    <i> [Bits 17..14] RW (@ 0x40084000) PRSRXENSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RXENSRCEN >> 14) & 0xF), ((RAC_RXENSRCEN = (RAC_RXENSRCEN & ~(0xFUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_RXENSRCEN_PRSRXENEM2WU  -----------------------------
// SVD Line: 67107

//  <item> SFDITEM_FIELD__RAC_RXENSRCEN_PRSRXENEM2WU
//    <name> PRSRXENEM2WU </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40084000) PRSRXENEM2WU </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RXENSRCEN ) </loc>
//      <o.20..20> PRSRXENEM2WU
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_RXENSRCEN  ---------------------------------
// SVD Line: 67042

//  <rtree> SFDITEM_REG__RAC_RXENSRCEN
//    <name> RXENSRCEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084000) RXENSRCEN </i>
//    <loc> ( (unsigned int)((RAC_RXENSRCEN >> 0) & 0xFFFFFFFF), ((RAC_RXENSRCEN = (RAC_RXENSRCEN & ~(0x13FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x13FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_SWRXEN </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_CHANNELBUSYEN </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_TIMDETEN </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_PREDETEN </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_FRAMEDETEN </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_DEMODRXREQEN </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_PRSRXEN </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_PRSRXENSEL </item>
//    <item> SFDITEM_FIELD__RAC_RXENSRCEN_PRSRXENEM2WU </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RAC_STATUS  -------------------------------
// SVD Line: 67116

unsigned int RAC_STATUS __AT (0x40084004);



// ------------------------------  Field Item: RAC_STATUS_RXMASK  ---------------------------------
// SVD Line: 67125

//  <item> SFDITEM_FIELD__RAC_STATUS_RXMASK
//    <name> RXMASK </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40084004) RXMASK </i>
//    <edit> 
//      <loc> ( (unsigned short)((RAC_STATUS >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_STATUS_FORCESTATEACTIVE  ----------------------------
// SVD Line: 67132

//  <item> SFDITEM_FIELD__RAC_STATUS_FORCESTATEACTIVE
//    <name> FORCESTATEACTIVE </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x40084004) FORCESTATEACTIVE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_STATUS ) </loc>
//      <o.19..19> FORCESTATEACTIVE
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_STATUS_TXAFTERFRAMEPEND  ----------------------------
// SVD Line: 67139

//  <item> SFDITEM_FIELD__RAC_STATUS_TXAFTERFRAMEPEND
//    <name> TXAFTERFRAMEPEND </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40084004) TXAFTERFRAMEPEND </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_STATUS ) </loc>
//      <o.20..20> TXAFTERFRAMEPEND
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_STATUS_TXAFTERFRAMEACTIVE  ---------------------------
// SVD Line: 67146

//  <item> SFDITEM_FIELD__RAC_STATUS_TXAFTERFRAMEACTIVE
//    <name> TXAFTERFRAMEACTIVE </name>
//    <r> 
//    <i> [Bit 21] RO (@ 0x40084004) TXAFTERFRAMEACTIVE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_STATUS ) </loc>
//      <o.21..21> TXAFTERFRAMEACTIVE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_STATUS_STATE  ----------------------------------
// SVD Line: 67153

//  <item> SFDITEM_FIELD__RAC_STATUS_STATE
//    <name> STATE </name>
//    <r> 
//    <i> [Bits 27..24] RO (@ 0x40084004) STATE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_STATUS >> 24) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_STATUS_DEMODENS  --------------------------------
// SVD Line: 67160

//  <item> SFDITEM_FIELD__RAC_STATUS_DEMODENS
//    <name> DEMODENS </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x40084004) DEMODENS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_STATUS ) </loc>
//      <o.29..29> DEMODENS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_STATUS_TXENS  ----------------------------------
// SVD Line: 67167

//  <item> SFDITEM_FIELD__RAC_STATUS_TXENS
//    <name> TXENS </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x40084004) TXENS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_STATUS ) </loc>
//      <o.30..30> TXENS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_STATUS_RXENS  ----------------------------------
// SVD Line: 67174

//  <item> SFDITEM_FIELD__RAC_STATUS_RXENS
//    <name> RXENS </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40084004) RXENS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_STATUS ) </loc>
//      <o.31..31> RXENS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RAC_STATUS  -----------------------------------
// SVD Line: 67116

//  <rtree> SFDITEM_REG__RAC_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40084004) STATUS </i>
//    <loc> ( (unsigned int)((RAC_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_STATUS_RXMASK </item>
//    <item> SFDITEM_FIELD__RAC_STATUS_FORCESTATEACTIVE </item>
//    <item> SFDITEM_FIELD__RAC_STATUS_TXAFTERFRAMEPEND </item>
//    <item> SFDITEM_FIELD__RAC_STATUS_TXAFTERFRAMEACTIVE </item>
//    <item> SFDITEM_FIELD__RAC_STATUS_STATE </item>
//    <item> SFDITEM_FIELD__RAC_STATUS_DEMODENS </item>
//    <item> SFDITEM_FIELD__RAC_STATUS_TXENS </item>
//    <item> SFDITEM_FIELD__RAC_STATUS_RXENS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_CMD  ---------------------------------
// SVD Line: 67183

unsigned int RAC_CMD __AT (0x40084008);



// --------------------------------  Field Item: RAC_CMD_TXEN  ------------------------------------
// SVD Line: 67192

//  <item> SFDITEM_FIELD__RAC_CMD_TXEN
//    <name> TXEN </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40084008) TXEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.0..0> TXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_CMD_FORCETX  ----------------------------------
// SVD Line: 67199

//  <item> SFDITEM_FIELD__RAC_CMD_FORCETX
//    <name> FORCETX </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40084008) FORCETX </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.1..1> FORCETX
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_CMD_TXONCCA  ----------------------------------
// SVD Line: 67206

//  <item> SFDITEM_FIELD__RAC_CMD_TXONCCA
//    <name> TXONCCA </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40084008) TXONCCA </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.2..2> TXONCCA
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CMD_CLEARTXEN  ---------------------------------
// SVD Line: 67213

//  <item> SFDITEM_FIELD__RAC_CMD_CLEARTXEN
//    <name> CLEARTXEN </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40084008) CLEARTXEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.3..3> CLEARTXEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_CMD_TXAFTERFRAME  --------------------------------
// SVD Line: 67220

//  <item> SFDITEM_FIELD__RAC_CMD_TXAFTERFRAME
//    <name> TXAFTERFRAME </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40084008) TXAFTERFRAME </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.4..4> TXAFTERFRAME
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RAC_CMD_TXDIS  -----------------------------------
// SVD Line: 67227

//  <item> SFDITEM_FIELD__RAC_CMD_TXDIS
//    <name> TXDIS </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40084008) TXDIS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.5..5> TXDIS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_CMD_CLEARRXOVERFLOW  ------------------------------
// SVD Line: 67234

//  <item> SFDITEM_FIELD__RAC_CMD_CLEARRXOVERFLOW
//    <name> CLEARRXOVERFLOW </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40084008) CLEARRXOVERFLOW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.6..6> CLEARRXOVERFLOW
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RAC_CMD_RXCAL  -----------------------------------
// SVD Line: 67241

//  <item> SFDITEM_FIELD__RAC_CMD_RXCAL
//    <name> RXCAL </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40084008) RXCAL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.7..7> RXCAL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RAC_CMD_RXDIS  -----------------------------------
// SVD Line: 67248

//  <item> SFDITEM_FIELD__RAC_CMD_RXDIS
//    <name> RXDIS </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40084008) RXDIS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.8..8> RXDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_CMD_PAENSET  ----------------------------------
// SVD Line: 67255

//  <item> SFDITEM_FIELD__RAC_CMD_PAENSET
//    <name> PAENSET </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40084008) PAENSET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.12..12> PAENSET
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CMD_PAENCLEAR  ---------------------------------
// SVD Line: 67262

//  <item> SFDITEM_FIELD__RAC_CMD_PAENCLEAR
//    <name> PAENCLEAR </name>
//    <w> 
//    <i> [Bit 13] WO (@ 0x40084008) PAENCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.13..13> PAENCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CMD_LNAENSET  ----------------------------------
// SVD Line: 67269

//  <item> SFDITEM_FIELD__RAC_CMD_LNAENSET
//    <name> LNAENSET </name>
//    <w> 
//    <i> [Bit 14] WO (@ 0x40084008) LNAENSET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.14..14> LNAENSET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_CMD_LNAENCLEAR  ---------------------------------
// SVD Line: 67276

//  <item> SFDITEM_FIELD__RAC_CMD_LNAENCLEAR
//    <name> LNAENCLEAR </name>
//    <w> 
//    <i> [Bit 15] WO (@ 0x40084008) LNAENCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.15..15> LNAENCLEAR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_CMD_DEMODENSET  ---------------------------------
// SVD Line: 67283

//  <item> SFDITEM_FIELD__RAC_CMD_DEMODENSET
//    <name> DEMODENSET </name>
//    <w> 
//    <i> [Bit 30] WO (@ 0x40084008) DEMODENSET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.30..30> DEMODENSET
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_CMD_DEMODENCLEAR  --------------------------------
// SVD Line: 67290

//  <item> SFDITEM_FIELD__RAC_CMD_DEMODENCLEAR
//    <name> DEMODENCLEAR </name>
//    <w> 
//    <i> [Bit 31] WO (@ 0x40084008) DEMODENCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CMD ) </loc>
//      <o.31..31> DEMODENCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_CMD  ------------------------------------
// SVD Line: 67183

//  <rtree> SFDITEM_REG__RAC_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40084008) CMD </i>
//    <loc> ( (unsigned int)((RAC_CMD >> 0) & 0xFFFFFFFF), ((RAC_CMD = (RAC_CMD & ~(0xC000F1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC000F1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_CMD_TXEN </item>
//    <item> SFDITEM_FIELD__RAC_CMD_FORCETX </item>
//    <item> SFDITEM_FIELD__RAC_CMD_TXONCCA </item>
//    <item> SFDITEM_FIELD__RAC_CMD_CLEARTXEN </item>
//    <item> SFDITEM_FIELD__RAC_CMD_TXAFTERFRAME </item>
//    <item> SFDITEM_FIELD__RAC_CMD_TXDIS </item>
//    <item> SFDITEM_FIELD__RAC_CMD_CLEARRXOVERFLOW </item>
//    <item> SFDITEM_FIELD__RAC_CMD_RXCAL </item>
//    <item> SFDITEM_FIELD__RAC_CMD_RXDIS </item>
//    <item> SFDITEM_FIELD__RAC_CMD_PAENSET </item>
//    <item> SFDITEM_FIELD__RAC_CMD_PAENCLEAR </item>
//    <item> SFDITEM_FIELD__RAC_CMD_LNAENSET </item>
//    <item> SFDITEM_FIELD__RAC_CMD_LNAENCLEAR </item>
//    <item> SFDITEM_FIELD__RAC_CMD_DEMODENSET </item>
//    <item> SFDITEM_FIELD__RAC_CMD_DEMODENCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_CTRL  --------------------------------
// SVD Line: 67299

unsigned int RAC_CTRL __AT (0x4008400C);



// ----------------------------  Field Item: RAC_CTRL_FORCEDISABLE  -------------------------------
// SVD Line: 67308

//  <item> SFDITEM_FIELD__RAC_CTRL_FORCEDISABLE
//    <name> FORCEDISABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008400C) FORCEDISABLE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.0..0> FORCEDISABLE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CTRL_PRSTXEN  ----------------------------------
// SVD Line: 67315

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSTXEN
//    <name> PRSTXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008400C) PRSTXEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.1..1> PRSTXEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_CTRL_TXAFTERRX  ---------------------------------
// SVD Line: 67322

//  <item> SFDITEM_FIELD__RAC_CTRL_TXAFTERRX
//    <name> TXAFTERRX </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008400C) TXAFTERRX </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.2..2> TXAFTERRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CTRL_PRSMODE  ----------------------------------
// SVD Line: 67329

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSMODE
//    <name> PRSMODE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4008400C) PRSMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.3..3> PRSMODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_CTRL_PRSCLR  ----------------------------------
// SVD Line: 67336

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSCLR
//    <name> PRSCLR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008400C) PRSCLR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.5..5> PRSCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_CTRL_TXPOSTPONE  --------------------------------
// SVD Line: 67343

//  <item> SFDITEM_FIELD__RAC_CTRL_TXPOSTPONE
//    <name> TXPOSTPONE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008400C) TXPOSTPONE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.6..6> TXPOSTPONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_CTRL_ACTIVEPOL  ---------------------------------
// SVD Line: 67350

//  <item> SFDITEM_FIELD__RAC_CTRL_ACTIVEPOL
//    <name> ACTIVEPOL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008400C) ACTIVEPOL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.7..7> ACTIVEPOL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CTRL_PAENPOL  ----------------------------------
// SVD Line: 67357

//  <item> SFDITEM_FIELD__RAC_CTRL_PAENPOL
//    <name> PAENPOL </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008400C) PAENPOL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.8..8> PAENPOL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CTRL_LNAENPOL  ---------------------------------
// SVD Line: 67364

//  <item> SFDITEM_FIELD__RAC_CTRL_LNAENPOL
//    <name> LNAENPOL </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008400C) LNAENPOL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.9..9> LNAENPOL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_CTRL_PRSRXDIS  ---------------------------------
// SVD Line: 67371

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSRXDIS
//    <name> PRSRXDIS </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4008400C) PRSRXDIS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.10..10> PRSRXDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_CTRL_PRSRXDISSEL  --------------------------------
// SVD Line: 67378

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSRXDISSEL
//    <name> PRSRXDISSEL </name>
//    <rw> 
//    <i> [Bits 14..11] RW (@ 0x4008400C) PRSRXDISSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CTRL >> 11) & 0xF), ((RAC_CTRL = (RAC_CTRL & ~(0xFUL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_CTRL_PRSFORCETX  --------------------------------
// SVD Line: 67385

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSFORCETX
//    <name> PRSFORCETX </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4008400C) PRSFORCETX </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CTRL ) </loc>
//      <o.16..16> PRSFORCETX
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_CTRL_PRSFORCETXSEL  -------------------------------
// SVD Line: 67392

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSFORCETXSEL
//    <name> PRSFORCETXSEL </name>
//    <rw> 
//    <i> [Bits 20..17] RW (@ 0x4008400C) PRSFORCETXSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CTRL >> 17) & 0xF), ((RAC_CTRL = (RAC_CTRL & ~(0xFUL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_CTRL_PRSTXENSEL  --------------------------------
// SVD Line: 67399

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSTXENSEL
//    <name> PRSTXENSEL </name>
//    <rw> 
//    <i> [Bits 25..22] RW (@ 0x4008400C) PRSTXENSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CTRL >> 22) & 0xF), ((RAC_CTRL = (RAC_CTRL & ~(0xFUL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_CTRL_PRSCLRSEL  ---------------------------------
// SVD Line: 67406

//  <item> SFDITEM_FIELD__RAC_CTRL_PRSCLRSEL
//    <name> PRSCLRSEL </name>
//    <rw> 
//    <i> [Bits 30..27] RW (@ 0x4008400C) PRSCLRSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CTRL >> 27) & 0xF), ((RAC_CTRL = (RAC_CTRL & ~(0xFUL << 27 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 27 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RAC_CTRL  ------------------------------------
// SVD Line: 67299

//  <rtree> SFDITEM_REG__RAC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008400C) CTRL </i>
//    <loc> ( (unsigned int)((RAC_CTRL >> 0) & 0xFFFFFFFF), ((RAC_CTRL = (RAC_CTRL & ~(0x7BDF7FEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7BDF7FEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_CTRL_FORCEDISABLE </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSTXEN </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_TXAFTERRX </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSMODE </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSCLR </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_TXPOSTPONE </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_ACTIVEPOL </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PAENPOL </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_LNAENPOL </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSRXDIS </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSRXDISSEL </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSFORCETX </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSFORCETXSEL </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSTXENSEL </item>
//    <item> SFDITEM_FIELD__RAC_CTRL_PRSCLRSEL </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_FORCESTATE  -----------------------------
// SVD Line: 67415

unsigned int RAC_FORCESTATE __AT (0x40084010);



// --------------------------  Field Item: RAC_FORCESTATE_FORCESTATE  -----------------------------
// SVD Line: 67424

//  <item> SFDITEM_FIELD__RAC_FORCESTATE_FORCESTATE
//    <name> FORCESTATE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40084010) FORCESTATE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_FORCESTATE >> 0) & 0xF), ((RAC_FORCESTATE = (RAC_FORCESTATE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_FORCESTATE  ---------------------------------
// SVD Line: 67415

//  <rtree> SFDITEM_REG__RAC_FORCESTATE
//    <name> FORCESTATE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084010) FORCESTATE </i>
//    <loc> ( (unsigned int)((RAC_FORCESTATE >> 0) & 0xFFFFFFFF), ((RAC_FORCESTATE = (RAC_FORCESTATE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_FORCESTATE_FORCESTATE </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_IF  ---------------------------------
// SVD Line: 67433

unsigned int RAC_IF __AT (0x40084014);



// -----------------------------  Field Item: RAC_IF_STATECHANGE  ---------------------------------
// SVD Line: 67442

//  <item> SFDITEM_FIELD__RAC_IF_STATECHANGE
//    <name> STATECHANGE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40084014) STATECHANGE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IF ) </loc>
//      <o.0..0> STATECHANGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IF_STIMCMPEV  ----------------------------------
// SVD Line: 67449

//  <item> SFDITEM_FIELD__RAC_IF_STIMCMPEV
//    <name> STIMCMPEV </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40084014) STIMCMPEV </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IF ) </loc>
//      <o.1..1> STIMCMPEV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_IF_BUSERROR  ----------------------------------
// SVD Line: 67456

//  <item> SFDITEM_FIELD__RAC_IF_BUSERROR
//    <name> BUSERROR </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40084014) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IF ) </loc>
//      <o.2..2> BUSERROR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RAC_IF_SEQ  -------------------------------------
// SVD Line: 67463

//  <item> SFDITEM_FIELD__RAC_IF_SEQ
//    <name> SEQ </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0x40084014) SEQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IF >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RAC_IF_PAVHIGH  -----------------------------------
// SVD Line: 67470

//  <item> SFDITEM_FIELD__RAC_IF_PAVHIGH
//    <name> PAVHIGH </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x40084014) PAVHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IF ) </loc>
//      <o.25..25> PAVHIGH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RAC_IF_PAVLOW  -----------------------------------
// SVD Line: 67477

//  <item> SFDITEM_FIELD__RAC_IF_PAVLOW
//    <name> PAVLOW </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40084014) PAVLOW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IF ) </loc>
//      <o.26..26> PAVLOW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IF_PABATHIGH  ----------------------------------
// SVD Line: 67484

//  <item> SFDITEM_FIELD__RAC_IF_PABATHIGH
//    <name> PABATHIGH </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x40084014) PABATHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IF ) </loc>
//      <o.27..27> PABATHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_IF  -------------------------------------
// SVD Line: 67433

//  <rtree> SFDITEM_REG__RAC_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40084014) IF </i>
//    <loc> ( (unsigned int)((RAC_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_IF_STATECHANGE </item>
//    <item> SFDITEM_FIELD__RAC_IF_STIMCMPEV </item>
//    <item> SFDITEM_FIELD__RAC_IF_BUSERROR </item>
//    <item> SFDITEM_FIELD__RAC_IF_SEQ </item>
//    <item> SFDITEM_FIELD__RAC_IF_PAVHIGH </item>
//    <item> SFDITEM_FIELD__RAC_IF_PAVLOW </item>
//    <item> SFDITEM_FIELD__RAC_IF_PABATHIGH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_IFS  ---------------------------------
// SVD Line: 67493

unsigned int RAC_IFS __AT (0x40084018);



// -----------------------------  Field Item: RAC_IFS_STATECHANGE  --------------------------------
// SVD Line: 67502

//  <item> SFDITEM_FIELD__RAC_IFS_STATECHANGE
//    <name> STATECHANGE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40084018) STATECHANGE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFS ) </loc>
//      <o.0..0> STATECHANGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IFS_STIMCMPEV  ---------------------------------
// SVD Line: 67509

//  <item> SFDITEM_FIELD__RAC_IFS_STIMCMPEV
//    <name> STIMCMPEV </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40084018) STIMCMPEV </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFS ) </loc>
//      <o.1..1> STIMCMPEV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IFS_BUSERROR  ----------------------------------
// SVD Line: 67516

//  <item> SFDITEM_FIELD__RAC_IFS_BUSERROR
//    <name> BUSERROR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40084018) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFS ) </loc>
//      <o.2..2> BUSERROR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RAC_IFS_SEQ  ------------------------------------
// SVD Line: 67523

//  <item> SFDITEM_FIELD__RAC_IFS_SEQ
//    <name> SEQ </name>
//    <w> 
//    <i> [Bits 23..16] WO (@ 0x40084018) SEQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFS >> 16) & 0x0), ((RAC_IFS = (RAC_IFS & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RAC_IFS_PAVHIGH  ----------------------------------
// SVD Line: 67530

//  <item> SFDITEM_FIELD__RAC_IFS_PAVHIGH
//    <name> PAVHIGH </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x40084018) PAVHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFS ) </loc>
//      <o.25..25> PAVHIGH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_IFS_PAVLOW  -----------------------------------
// SVD Line: 67537

//  <item> SFDITEM_FIELD__RAC_IFS_PAVLOW
//    <name> PAVLOW </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x40084018) PAVLOW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFS ) </loc>
//      <o.26..26> PAVLOW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IFS_PABATHIGH  ---------------------------------
// SVD Line: 67544

//  <item> SFDITEM_FIELD__RAC_IFS_PABATHIGH
//    <name> PABATHIGH </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x40084018) PABATHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFS ) </loc>
//      <o.27..27> PABATHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_IFS  ------------------------------------
// SVD Line: 67493

//  <rtree> SFDITEM_REG__RAC_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40084018) IFS </i>
//    <loc> ( (unsigned int)((RAC_IFS >> 0) & 0xFFFFFFFF), ((RAC_IFS = (RAC_IFS & ~(0xEFF0007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFF0007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IFS_STATECHANGE </item>
//    <item> SFDITEM_FIELD__RAC_IFS_STIMCMPEV </item>
//    <item> SFDITEM_FIELD__RAC_IFS_BUSERROR </item>
//    <item> SFDITEM_FIELD__RAC_IFS_SEQ </item>
//    <item> SFDITEM_FIELD__RAC_IFS_PAVHIGH </item>
//    <item> SFDITEM_FIELD__RAC_IFS_PAVLOW </item>
//    <item> SFDITEM_FIELD__RAC_IFS_PABATHIGH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_IFC  ---------------------------------
// SVD Line: 67553

unsigned int RAC_IFC __AT (0x4008401C);



// -----------------------------  Field Item: RAC_IFC_STATECHANGE  --------------------------------
// SVD Line: 67562

//  <item> SFDITEM_FIELD__RAC_IFC_STATECHANGE
//    <name> STATECHANGE </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4008401C) STATECHANGE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFC ) </loc>
//      <o.0..0> STATECHANGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IFC_STIMCMPEV  ---------------------------------
// SVD Line: 67569

//  <item> SFDITEM_FIELD__RAC_IFC_STIMCMPEV
//    <name> STIMCMPEV </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4008401C) STIMCMPEV </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFC ) </loc>
//      <o.1..1> STIMCMPEV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IFC_BUSERROR  ----------------------------------
// SVD Line: 67576

//  <item> SFDITEM_FIELD__RAC_IFC_BUSERROR
//    <name> BUSERROR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4008401C) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFC ) </loc>
//      <o.2..2> BUSERROR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RAC_IFC_SEQ  ------------------------------------
// SVD Line: 67583

//  <item> SFDITEM_FIELD__RAC_IFC_SEQ
//    <name> SEQ </name>
//    <w> 
//    <i> [Bits 23..16] WO (@ 0x4008401C) SEQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFC >> 16) & 0x0), ((RAC_IFC = (RAC_IFC & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RAC_IFC_PAVHIGH  ----------------------------------
// SVD Line: 67590

//  <item> SFDITEM_FIELD__RAC_IFC_PAVHIGH
//    <name> PAVHIGH </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x4008401C) PAVHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFC ) </loc>
//      <o.25..25> PAVHIGH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_IFC_PAVLOW  -----------------------------------
// SVD Line: 67597

//  <item> SFDITEM_FIELD__RAC_IFC_PAVLOW
//    <name> PAVLOW </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x4008401C) PAVLOW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFC ) </loc>
//      <o.26..26> PAVLOW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IFC_PABATHIGH  ---------------------------------
// SVD Line: 67604

//  <item> SFDITEM_FIELD__RAC_IFC_PABATHIGH
//    <name> PABATHIGH </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x4008401C) PABATHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFC ) </loc>
//      <o.27..27> PABATHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_IFC  ------------------------------------
// SVD Line: 67553

//  <rtree> SFDITEM_REG__RAC_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4008401C) IFC </i>
//    <loc> ( (unsigned int)((RAC_IFC >> 0) & 0xFFFFFFFF), ((RAC_IFC = (RAC_IFC & ~(0xEFF0007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFF0007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IFC_STATECHANGE </item>
//    <item> SFDITEM_FIELD__RAC_IFC_STIMCMPEV </item>
//    <item> SFDITEM_FIELD__RAC_IFC_BUSERROR </item>
//    <item> SFDITEM_FIELD__RAC_IFC_SEQ </item>
//    <item> SFDITEM_FIELD__RAC_IFC_PAVHIGH </item>
//    <item> SFDITEM_FIELD__RAC_IFC_PAVLOW </item>
//    <item> SFDITEM_FIELD__RAC_IFC_PABATHIGH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_IEN  ---------------------------------
// SVD Line: 67613

unsigned int RAC_IEN __AT (0x40084020);



// -----------------------------  Field Item: RAC_IEN_STATECHANGE  --------------------------------
// SVD Line: 67622

//  <item> SFDITEM_FIELD__RAC_IEN_STATECHANGE
//    <name> STATECHANGE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084020) STATECHANGE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IEN ) </loc>
//      <o.0..0> STATECHANGE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IEN_STIMCMPEV  ---------------------------------
// SVD Line: 67629

//  <item> SFDITEM_FIELD__RAC_IEN_STIMCMPEV
//    <name> STIMCMPEV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084020) STIMCMPEV </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IEN ) </loc>
//      <o.1..1> STIMCMPEV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IEN_BUSERROR  ----------------------------------
// SVD Line: 67636

//  <item> SFDITEM_FIELD__RAC_IEN_BUSERROR
//    <name> BUSERROR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40084020) BUSERROR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IEN ) </loc>
//      <o.2..2> BUSERROR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RAC_IEN_SEQ  ------------------------------------
// SVD Line: 67643

//  <item> SFDITEM_FIELD__RAC_IEN_SEQ
//    <name> SEQ </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40084020) SEQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IEN >> 16) & 0xFF), ((RAC_IEN = (RAC_IEN & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RAC_IEN_PAVHIGH  ----------------------------------
// SVD Line: 67650

//  <item> SFDITEM_FIELD__RAC_IEN_PAVHIGH
//    <name> PAVHIGH </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40084020) PAVHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IEN ) </loc>
//      <o.25..25> PAVHIGH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_IEN_PAVLOW  -----------------------------------
// SVD Line: 67657

//  <item> SFDITEM_FIELD__RAC_IEN_PAVLOW
//    <name> PAVLOW </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40084020) PAVLOW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IEN ) </loc>
//      <o.26..26> PAVLOW
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_IEN_PABATHIGH  ---------------------------------
// SVD Line: 67664

//  <item> SFDITEM_FIELD__RAC_IEN_PABATHIGH
//    <name> PABATHIGH </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40084020) PABATHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IEN ) </loc>
//      <o.27..27> PABATHIGH
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_IEN  ------------------------------------
// SVD Line: 67613

//  <rtree> SFDITEM_REG__RAC_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084020) IEN </i>
//    <loc> ( (unsigned int)((RAC_IEN >> 0) & 0xFFFFFFFF), ((RAC_IEN = (RAC_IEN & ~(0xEFF0007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFF0007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IEN_STATECHANGE </item>
//    <item> SFDITEM_FIELD__RAC_IEN_STIMCMPEV </item>
//    <item> SFDITEM_FIELD__RAC_IEN_BUSERROR </item>
//    <item> SFDITEM_FIELD__RAC_IEN_SEQ </item>
//    <item> SFDITEM_FIELD__RAC_IEN_PAVHIGH </item>
//    <item> SFDITEM_FIELD__RAC_IEN_PAVLOW </item>
//    <item> SFDITEM_FIELD__RAC_IEN_PABATHIGH </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_LVDSCTRL  ------------------------------
// SVD Line: 67673

unsigned int RAC_LVDSCTRL __AT (0x40084024);



// -----------------------------  Field Item: RAC_LVDSCTRL_LVDSEN  --------------------------------
// SVD Line: 67682

//  <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSEN
//    <name> LVDSEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084024) LVDSEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LVDSCTRL ) </loc>
//      <o.0..0> LVDSEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_LVDSCTRL_LVDSCURR  -------------------------------
// SVD Line: 67689

//  <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSCURR
//    <name> LVDSCURR </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40084024) LVDSCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LVDSCTRL >> 2) & 0x3), ((RAC_LVDSCTRL = (RAC_LVDSCTRL & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_LVDSCTRL_LVDSTESTMODE  -----------------------------
// SVD Line: 67696

//  <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSTESTMODE
//    <name> LVDSTESTMODE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40084024) LVDSTESTMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LVDSCTRL ) </loc>
//      <o.4..4> LVDSTESTMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_LVDSCTRL_LVDSTESTDATA  -----------------------------
// SVD Line: 67703

//  <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSTESTDATA
//    <name> LVDSTESTDATA </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40084024) LVDSTESTDATA </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LVDSCTRL ) </loc>
//      <o.5..5> LVDSTESTDATA
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_LVDSCTRL_LVDSCMCONFIG  -----------------------------
// SVD Line: 67710

//  <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSCMCONFIG
//    <name> LVDSCMCONFIG </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40084024) LVDSCMCONFIG </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LVDSCTRL >> 6) & 0x3), ((RAC_LVDSCTRL = (RAC_LVDSCTRL & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RAC_LVDSCTRL  ----------------------------------
// SVD Line: 67673

//  <rtree> SFDITEM_REG__RAC_LVDSCTRL
//    <name> LVDSCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084024) LVDSCTRL </i>
//    <loc> ( (unsigned int)((RAC_LVDSCTRL >> 0) & 0xFFFFFFFF), ((RAC_LVDSCTRL = (RAC_LVDSCTRL & ~(0xFDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSEN </item>
//    <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSCURR </item>
//    <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSTESTMODE </item>
//    <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSTESTDATA </item>
//    <item> SFDITEM_FIELD__RAC_LVDSCTRL_LVDSCMCONFIG </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_LVDSIDLESEQ  -----------------------------
// SVD Line: 67719

unsigned int RAC_LVDSIDLESEQ __AT (0x40084028);



// -------------------------  Field Item: RAC_LVDSIDLESEQ_LVDSIDLESEQ  ----------------------------
// SVD Line: 67728

//  <item> SFDITEM_FIELD__RAC_LVDSIDLESEQ_LVDSIDLESEQ
//    <name> LVDSIDLESEQ </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40084028) LVDSIDLESEQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LVDSIDLESEQ >> 0) & 0xFF), ((RAC_LVDSIDLESEQ = (RAC_LVDSIDLESEQ & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_LVDSIDLESEQ  --------------------------------
// SVD Line: 67719

//  <rtree> SFDITEM_REG__RAC_LVDSIDLESEQ
//    <name> LVDSIDLESEQ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084028) LVDSIDLESEQ </i>
//    <loc> ( (unsigned int)((RAC_LVDSIDLESEQ >> 0) & 0xFFFFFFFF), ((RAC_LVDSIDLESEQ = (RAC_LVDSIDLESEQ & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_LVDSIDLESEQ_LVDSIDLESEQ </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_LVDSROUTE  ------------------------------
// SVD Line: 67737

unsigned int RAC_LVDSROUTE __AT (0x4008402C);



// ----------------------------  Field Item: RAC_LVDSROUTE_LVDSPEN  -------------------------------
// SVD Line: 67746

//  <item> SFDITEM_FIELD__RAC_LVDSROUTE_LVDSPEN
//    <name> LVDSPEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008402C) LVDSPEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LVDSROUTE ) </loc>
//      <o.0..0> LVDSPEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_LVDSROUTE_LVDSLOCATION  -----------------------------
// SVD Line: 67753

//  <item> SFDITEM_FIELD__RAC_LVDSROUTE_LVDSLOCATION
//    <name> LVDSLOCATION </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008402C) LVDSLOCATION </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LVDSROUTE ) </loc>
//      <o.8..8> LVDSLOCATION
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_LVDSROUTE  ---------------------------------
// SVD Line: 67737

//  <rtree> SFDITEM_REG__RAC_LVDSROUTE
//    <name> LVDSROUTE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008402C) LVDSROUTE </i>
//    <loc> ( (unsigned int)((RAC_LVDSROUTE >> 0) & 0xFFFFFFFF), ((RAC_LVDSROUTE = (RAC_LVDSROUTE & ~(0x101UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_LVDSROUTE_LVDSPEN </item>
//    <item> SFDITEM_FIELD__RAC_LVDSROUTE_LVDSLOCATION </item>
//  </rtree>
//  


// ------------------------  Register Item Address: RAC_HFXORETIMECTRL  ---------------------------
// SVD Line: 67762

unsigned int RAC_HFXORETIMECTRL __AT (0x40084030);



// ----------------------------  Field Item: RAC_HFXORETIMECTRL_EN  -------------------------------
// SVD Line: 67771

//  <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084030) EN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_HFXORETIMECTRL ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_HFXORETIMECTRL_DIS  -------------------------------
// SVD Line: 67778

//  <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_DIS
//    <name> DIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084030) DIS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_HFXORETIMECTRL ) </loc>
//      <o.1..1> DIS
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_HFXORETIMECTRL_RESET  ------------------------------
// SVD Line: 67785

//  <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_RESET
//    <name> RESET </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40084030) RESET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_HFXORETIMECTRL ) </loc>
//      <o.2..2> RESET
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_HFXORETIMECTRL_LIMITH  -----------------------------
// SVD Line: 67792

//  <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_LIMITH
//    <name> LIMITH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40084030) LIMITH </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_HFXORETIMECTRL >> 4) & 0x7), ((RAC_HFXORETIMECTRL = (RAC_HFXORETIMECTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_HFXORETIMECTRL_LIMITL  -----------------------------
// SVD Line: 67799

//  <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_LIMITL
//    <name> LIMITL </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40084030) LIMITL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_HFXORETIMECTRL >> 8) & 0x7), ((RAC_HFXORETIMECTRL = (RAC_HFXORETIMECTRL & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: RAC_HFXORETIMECTRL  -------------------------------
// SVD Line: 67762

//  <rtree> SFDITEM_REG__RAC_HFXORETIMECTRL
//    <name> HFXORETIMECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084030) HFXORETIMECTRL </i>
//    <loc> ( (unsigned int)((RAC_HFXORETIMECTRL >> 0) & 0xFFFFFFFF), ((RAC_HFXORETIMECTRL = (RAC_HFXORETIMECTRL & ~(0x777UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x777) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_EN </item>
//    <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_DIS </item>
//    <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_RESET </item>
//    <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_LIMITH </item>
//    <item> SFDITEM_FIELD__RAC_HFXORETIMECTRL_LIMITL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: RAC_HFXORETIMESTATUS  --------------------------
// SVD Line: 67808

unsigned int RAC_HFXORETIMESTATUS __AT (0x40084034);



// -------------------------  Field Item: RAC_HFXORETIMESTATUS_CLKSEL  ----------------------------
// SVD Line: 67817

//  <item> SFDITEM_FIELD__RAC_HFXORETIMESTATUS_CLKSEL
//    <name> CLKSEL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40084034) CLKSEL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_HFXORETIMESTATUS ) </loc>
//      <o.0..0> CLKSEL
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_HFXORETIMESTATUS_RERESETN  ---------------------------
// SVD Line: 67824

//  <item> SFDITEM_FIELD__RAC_HFXORETIMESTATUS_RERESETN
//    <name> RERESETN </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40084034) RERESETN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_HFXORETIMESTATUS ) </loc>
//      <o.1..1> RERESETN
//    </check>
//  </item>
//  


// --------------------------  Register RTree: RAC_HFXORETIMESTATUS  ------------------------------
// SVD Line: 67808

//  <rtree> SFDITEM_REG__RAC_HFXORETIMESTATUS
//    <name> HFXORETIMESTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40084034) HFXORETIMESTATUS </i>
//    <loc> ( (unsigned int)((RAC_HFXORETIMESTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_HFXORETIMESTATUS_CLKSEL </item>
//    <item> SFDITEM_FIELD__RAC_HFXORETIMESTATUS_RERESETN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_TESTCTRL  ------------------------------
// SVD Line: 67833

unsigned int RAC_TESTCTRL __AT (0x40084038);



// -----------------------------  Field Item: RAC_TESTCTRL_MODEN  ---------------------------------
// SVD Line: 67842

//  <item> SFDITEM_FIELD__RAC_TESTCTRL_MODEN
//    <name> MODEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084038) MODEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_TESTCTRL ) </loc>
//      <o.0..0> MODEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_TESTCTRL_DEMODEN  --------------------------------
// SVD Line: 67849

//  <item> SFDITEM_FIELD__RAC_TESTCTRL_DEMODEN
//    <name> DEMODEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084038) DEMODEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_TESTCTRL ) </loc>
//      <o.1..1> DEMODEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_TESTCTRL_AUX2RFSENSE  ------------------------------
// SVD Line: 67856

//  <item> SFDITEM_FIELD__RAC_TESTCTRL_AUX2RFSENSE
//    <name> AUX2RFSENSE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40084038) AUX2RFSENSE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_TESTCTRL ) </loc>
//      <o.2..2> AUX2RFSENSE
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_TESTCTRL_LOOPBACK2LNAINPUT  ---------------------------
// SVD Line: 67863

//  <item> SFDITEM_FIELD__RAC_TESTCTRL_LOOPBACK2LNAINPUT
//    <name> LOOPBACK2LNAINPUT </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40084038) LOOPBACK2LNAINPUT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_TESTCTRL ) </loc>
//      <o.3..3> LOOPBACK2LNAINPUT
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_TESTCTRL_LOOPBACK2LNAOUTPUT  --------------------------
// SVD Line: 67870

//  <item> SFDITEM_FIELD__RAC_TESTCTRL_LOOPBACK2LNAOUTPUT
//    <name> LOOPBACK2LNAOUTPUT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40084038) LOOPBACK2LNAOUTPUT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_TESTCTRL ) </loc>
//      <o.4..4> LOOPBACK2LNAOUTPUT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_TESTCTRL  ----------------------------------
// SVD Line: 67833

//  <rtree> SFDITEM_REG__RAC_TESTCTRL
//    <name> TESTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084038) TESTCTRL </i>
//    <loc> ( (unsigned int)((RAC_TESTCTRL >> 0) & 0xFFFFFFFF), ((RAC_TESTCTRL = (RAC_TESTCTRL & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_TESTCTRL_MODEN </item>
//    <item> SFDITEM_FIELD__RAC_TESTCTRL_DEMODEN </item>
//    <item> SFDITEM_FIELD__RAC_TESTCTRL_AUX2RFSENSE </item>
//    <item> SFDITEM_FIELD__RAC_TESTCTRL_LOOPBACK2LNAINPUT </item>
//    <item> SFDITEM_FIELD__RAC_TESTCTRL_LOOPBACK2LNAOUTPUT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_SEQSTATUS  ------------------------------
// SVD Line: 67879

unsigned int RAC_SEQSTATUS __AT (0x4008403C);



// ----------------------------  Field Item: RAC_SEQSTATUS_STOPPED  -------------------------------
// SVD Line: 67888

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_STOPPED
//    <name> STOPPED </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4008403C) STOPPED </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.0..0> STOPPED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_SEQSTATUS_BKPT  ---------------------------------
// SVD Line: 67895

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_BKPT
//    <name> BKPT </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4008403C) BKPT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.1..1> BKPT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SEQSTATUS_WAITING  -------------------------------
// SVD Line: 67902

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_WAITING
//    <name> WAITING </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4008403C) WAITING </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.2..2> WAITING
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SEQSTATUS_WAITMODE  -------------------------------
// SVD Line: 67909

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_WAITMODE
//    <name> WAITMODE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4008403C) WAITMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.3..3> WAITMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_SEQSTATUS_DONE  ---------------------------------
// SVD Line: 67916

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_DONE
//    <name> DONE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4008403C) DONE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.4..4> DONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_SEQSTATUS_NEG  ---------------------------------
// SVD Line: 67923

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_NEG
//    <name> NEG </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4008403C) NEG </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.5..5> NEG
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_SEQSTATUS_POS  ---------------------------------
// SVD Line: 67930

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_POS
//    <name> POS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4008403C) POS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.6..6> POS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_SEQSTATUS_ZERO  ---------------------------------
// SVD Line: 67937

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_ZERO
//    <name> ZERO </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4008403C) ZERO </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.7..7> ZERO
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_SEQSTATUS_CARRY  --------------------------------
// SVD Line: 67944

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_CARRY
//    <name> CARRY </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4008403C) CARRY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.8..8> CARRY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SEQSTATUS_ABORTEN  -------------------------------
// SVD Line: 67951

//  <item> SFDITEM_FIELD__RAC_SEQSTATUS_ABORTEN
//    <name> ABORTEN </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4008403C) ABORTEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQSTATUS ) </loc>
//      <o.10..10> ABORTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_SEQSTATUS  ---------------------------------
// SVD Line: 67879

//  <rtree> SFDITEM_REG__RAC_SEQSTATUS
//    <name> SEQSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008403C) SEQSTATUS </i>
//    <loc> ( (unsigned int)((RAC_SEQSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_STOPPED </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_BKPT </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_WAITING </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_WAITMODE </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_DONE </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_NEG </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_POS </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_ZERO </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_CARRY </item>
//    <item> SFDITEM_FIELD__RAC_SEQSTATUS_ABORTEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RAC_SEQCMD  -------------------------------
// SVD Line: 67960

unsigned int RAC_SEQCMD __AT (0x40084040);



// -------------------------------  Field Item: RAC_SEQCMD_HALT  ----------------------------------
// SVD Line: 67969

//  <item> SFDITEM_FIELD__RAC_SEQCMD_HALT
//    <name> HALT </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40084040) HALT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.0..0> HALT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_SEQCMD_STEP  ----------------------------------
// SVD Line: 67976

//  <item> SFDITEM_FIELD__RAC_SEQCMD_STEP
//    <name> STEP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40084040) STEP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.1..1> STEP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_SEQCMD_RESUME  ---------------------------------
// SVD Line: 67983

//  <item> SFDITEM_FIELD__RAC_SEQCMD_RESUME
//    <name> RESUME </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40084040) RESUME </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.2..2> RESUME
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_SEQCMD_BKPTEN  ---------------------------------
// SVD Line: 67990

//  <item> SFDITEM_FIELD__RAC_SEQCMD_BKPTEN
//    <name> BKPTEN </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40084040) BKPTEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.3..3> BKPTEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_SEQCMD_BKPTDIS  ---------------------------------
// SVD Line: 67997

//  <item> SFDITEM_FIELD__RAC_SEQCMD_BKPTDIS
//    <name> BKPTDIS </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40084040) BKPTDIS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.4..4> BKPTDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_SEQCMD_ABORT  ----------------------------------
// SVD Line: 68004

//  <item> SFDITEM_FIELD__RAC_SEQCMD_ABORT
//    <name> ABORT </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40084040) ABORT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.5..5> ABORT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SEQCMD_ABORTENSET  -------------------------------
// SVD Line: 68011

//  <item> SFDITEM_FIELD__RAC_SEQCMD_ABORTENSET
//    <name> ABORTENSET </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40084040) ABORTENSET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.6..6> ABORTENSET
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SEQCMD_ABORTENCLEAR  ------------------------------
// SVD Line: 68018

//  <item> SFDITEM_FIELD__RAC_SEQCMD_ABORTENCLEAR
//    <name> ABORTENCLEAR </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40084040) ABORTENCLEAR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCMD ) </loc>
//      <o.7..7> ABORTENCLEAR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RAC_SEQCMD  -----------------------------------
// SVD Line: 67960

//  <rtree> SFDITEM_REG__RAC_SEQCMD
//    <name> SEQCMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40084040) SEQCMD </i>
//    <loc> ( (unsigned int)((RAC_SEQCMD >> 0) & 0xFFFFFFFF), ((RAC_SEQCMD = (RAC_SEQCMD & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_HALT </item>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_STEP </item>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_RESUME </item>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_BKPTEN </item>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_BKPTDIS </item>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_ABORT </item>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_ABORTENSET </item>
//    <item> SFDITEM_FIELD__RAC_SEQCMD_ABORTENCLEAR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_BREAKPOINT  -----------------------------
// SVD Line: 68027

unsigned int RAC_BREAKPOINT __AT (0x40084044);



// ---------------------------  Field Item: RAC_BREAKPOINT_BKPADDR  -------------------------------
// SVD Line: 68036

//  <item> SFDITEM_FIELD__RAC_BREAKPOINT_BKPADDR
//    <name> BKPADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084044) BKPADDR </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_BREAKPOINT >> 0) & 0xFFFFFFFF), ((RAC_BREAKPOINT = (RAC_BREAKPOINT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_BREAKPOINT  ---------------------------------
// SVD Line: 68027

//  <rtree> SFDITEM_REG__RAC_BREAKPOINT
//    <name> BREAKPOINT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084044) BREAKPOINT </i>
//    <loc> ( (unsigned int)((RAC_BREAKPOINT >> 0) & 0xFFFFFFFF), ((RAC_BREAKPOINT = (RAC_BREAKPOINT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_BREAKPOINT_BKPADDR </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R0  ---------------------------------
// SVD Line: 68045

unsigned int RAC_R0 __AT (0x40084048);



// ----------------------------------  Field Item: RAC_R0_R0  -------------------------------------
// SVD Line: 68054

//  <item> SFDITEM_FIELD__RAC_R0_R0
//    <name> R0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084048) R0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R0 >> 0) & 0xFFFFFFFF), ((RAC_R0 = (RAC_R0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R0  -------------------------------------
// SVD Line: 68045

//  <rtree> SFDITEM_REG__RAC_R0
//    <name> R0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084048) R0 </i>
//    <loc> ( (unsigned int)((RAC_R0 >> 0) & 0xFFFFFFFF), ((RAC_R0 = (RAC_R0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R0_R0 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R1  ---------------------------------
// SVD Line: 68063

unsigned int RAC_R1 __AT (0x4008404C);



// ----------------------------------  Field Item: RAC_R1_R1  -------------------------------------
// SVD Line: 68072

//  <item> SFDITEM_FIELD__RAC_R1_R1
//    <name> R1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008404C) R1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R1 >> 0) & 0xFFFFFFFF), ((RAC_R1 = (RAC_R1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R1  -------------------------------------
// SVD Line: 68063

//  <rtree> SFDITEM_REG__RAC_R1
//    <name> R1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008404C) R1 </i>
//    <loc> ( (unsigned int)((RAC_R1 >> 0) & 0xFFFFFFFF), ((RAC_R1 = (RAC_R1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R1_R1 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R2  ---------------------------------
// SVD Line: 68081

unsigned int RAC_R2 __AT (0x40084050);



// ----------------------------------  Field Item: RAC_R2_R2  -------------------------------------
// SVD Line: 68090

//  <item> SFDITEM_FIELD__RAC_R2_R2
//    <name> R2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084050) R2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R2 >> 0) & 0xFFFFFFFF), ((RAC_R2 = (RAC_R2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R2  -------------------------------------
// SVD Line: 68081

//  <rtree> SFDITEM_REG__RAC_R2
//    <name> R2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084050) R2 </i>
//    <loc> ( (unsigned int)((RAC_R2 >> 0) & 0xFFFFFFFF), ((RAC_R2 = (RAC_R2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R2_R2 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R3  ---------------------------------
// SVD Line: 68099

unsigned int RAC_R3 __AT (0x40084054);



// ----------------------------------  Field Item: RAC_R3_R3  -------------------------------------
// SVD Line: 68108

//  <item> SFDITEM_FIELD__RAC_R3_R3
//    <name> R3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084054) R3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R3 >> 0) & 0xFFFFFFFF), ((RAC_R3 = (RAC_R3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R3  -------------------------------------
// SVD Line: 68099

//  <rtree> SFDITEM_REG__RAC_R3
//    <name> R3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084054) R3 </i>
//    <loc> ( (unsigned int)((RAC_R3 >> 0) & 0xFFFFFFFF), ((RAC_R3 = (RAC_R3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R3_R3 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R4  ---------------------------------
// SVD Line: 68117

unsigned int RAC_R4 __AT (0x40084058);



// ----------------------------------  Field Item: RAC_R4_R4  -------------------------------------
// SVD Line: 68126

//  <item> SFDITEM_FIELD__RAC_R4_R4
//    <name> R4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084058) R4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R4 >> 0) & 0xFFFFFFFF), ((RAC_R4 = (RAC_R4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R4  -------------------------------------
// SVD Line: 68117

//  <rtree> SFDITEM_REG__RAC_R4
//    <name> R4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084058) R4 </i>
//    <loc> ( (unsigned int)((RAC_R4 >> 0) & 0xFFFFFFFF), ((RAC_R4 = (RAC_R4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R4_R4 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R5  ---------------------------------
// SVD Line: 68135

unsigned int RAC_R5 __AT (0x4008405C);



// ----------------------------------  Field Item: RAC_R5_R5  -------------------------------------
// SVD Line: 68144

//  <item> SFDITEM_FIELD__RAC_R5_R5
//    <name> R5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008405C) R5 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R5 >> 0) & 0xFFFFFFFF), ((RAC_R5 = (RAC_R5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R5  -------------------------------------
// SVD Line: 68135

//  <rtree> SFDITEM_REG__RAC_R5
//    <name> R5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008405C) R5 </i>
//    <loc> ( (unsigned int)((RAC_R5 >> 0) & 0xFFFFFFFF), ((RAC_R5 = (RAC_R5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R5_R5 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R6  ---------------------------------
// SVD Line: 68153

unsigned int RAC_R6 __AT (0x40084060);



// ----------------------------------  Field Item: RAC_R6_R6  -------------------------------------
// SVD Line: 68162

//  <item> SFDITEM_FIELD__RAC_R6_R6
//    <name> R6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084060) R6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R6 >> 0) & 0xFFFFFFFF), ((RAC_R6 = (RAC_R6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R6  -------------------------------------
// SVD Line: 68153

//  <rtree> SFDITEM_REG__RAC_R6
//    <name> R6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084060) R6 </i>
//    <loc> ( (unsigned int)((RAC_R6 >> 0) & 0xFFFFFFFF), ((RAC_R6 = (RAC_R6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R6_R6 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RAC_R7  ---------------------------------
// SVD Line: 68171

unsigned int RAC_R7 __AT (0x40084064);



// ----------------------------------  Field Item: RAC_R7_R7  -------------------------------------
// SVD Line: 68180

//  <item> SFDITEM_FIELD__RAC_R7_R7
//    <name> R7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084064) R7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_R7 >> 0) & 0xFFFFFFFF), ((RAC_R7 = (RAC_R7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_R7  -------------------------------------
// SVD Line: 68171

//  <rtree> SFDITEM_REG__RAC_R7
//    <name> R7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084064) R7 </i>
//    <loc> ( (unsigned int)((RAC_R7 >> 0) & 0xFFFFFFFF), ((RAC_R7 = (RAC_R7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_R7_R7 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_WAITMASK  ------------------------------
// SVD Line: 68189

unsigned int RAC_WAITMASK __AT (0x4008406C);



// -----------------------------  Field Item: RAC_WAITMASK_STCMP  ---------------------------------
// SVD Line: 68198

//  <item> SFDITEM_FIELD__RAC_WAITMASK_STCMP
//    <name> STCMP </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4008406C) STCMP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.0..0> STCMP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_WAITMASK_FRCRX  ---------------------------------
// SVD Line: 68205

//  <item> SFDITEM_FIELD__RAC_WAITMASK_FRCRX
//    <name> FRCRX </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4008406C) FRCRX </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.1..1> FRCRX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_WAITMASK_FRCTX  ---------------------------------
// SVD Line: 68212

//  <item> SFDITEM_FIELD__RAC_WAITMASK_FRCTX
//    <name> FRCTX </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4008406C) FRCTX </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.2..2> FRCTX
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_WAITMASK_PRSEVENT  -------------------------------
// SVD Line: 68219

//  <item> SFDITEM_FIELD__RAC_WAITMASK_PRSEVENT
//    <name> PRSEVENT </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4008406C) PRSEVENT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.3..3> PRSEVENT
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_WAITMASK_DEMODRXREQCLR  -----------------------------
// SVD Line: 68226

//  <item> SFDITEM_FIELD__RAC_WAITMASK_DEMODRXREQCLR
//    <name> DEMODRXREQCLR </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4008406C) DEMODRXREQCLR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.4..4> DEMODRXREQCLR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_WAITMASK_SYNTHRDY  -------------------------------
// SVD Line: 68233

//  <item> SFDITEM_FIELD__RAC_WAITMASK_SYNTHRDY
//    <name> SYNTHRDY </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4008406C) SYNTHRDY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.5..5> SYNTHRDY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_WAITMASK_RAMPDONE  -------------------------------
// SVD Line: 68240

//  <item> SFDITEM_FIELD__RAC_WAITMASK_RAMPDONE
//    <name> RAMPDONE </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4008406C) RAMPDONE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.6..6> RAMPDONE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_WAITMASK_HFXORDY  --------------------------------
// SVD Line: 68247

//  <item> SFDITEM_FIELD__RAC_WAITMASK_HFXORDY
//    <name> HFXORDY </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4008406C) HFXORDY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.7..7> HFXORDY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_WAITMASK_FRCPAUSED  -------------------------------
// SVD Line: 68254

//  <item> SFDITEM_FIELD__RAC_WAITMASK_FRCPAUSED
//    <name> FRCPAUSED </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4008406C) FRCPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_WAITMASK ) </loc>
//      <o.8..8> FRCPAUSED
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_WAITMASK  ----------------------------------
// SVD Line: 68189

//  <rtree> SFDITEM_REG__RAC_WAITMASK
//    <name> WAITMASK </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008406C) WAITMASK </i>
//    <loc> ( (unsigned int)((RAC_WAITMASK >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_STCMP </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_FRCRX </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_FRCTX </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_PRSEVENT </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_DEMODRXREQCLR </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_SYNTHRDY </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_RAMPDONE </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_HFXORDY </item>
//    <item> SFDITEM_FIELD__RAC_WAITMASK_FRCPAUSED </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_WAITSNSH  ------------------------------
// SVD Line: 68263

unsigned int RAC_WAITSNSH __AT (0x40084070);



// ----------------------------  Field Item: RAC_WAITSNSH_WAITSNSH  -------------------------------
// SVD Line: 68272

//  <item> SFDITEM_FIELD__RAC_WAITSNSH_WAITSNSH
//    <name> WAITSNSH </name>
//    <r> 
//    <i> [Bits 9..0] RO (@ 0x40084070) WAITSNSH </i>
//    <edit> 
//      <loc> ( (unsigned short)((RAC_WAITSNSH >> 0) & 0x3FF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RAC_WAITSNSH  ----------------------------------
// SVD Line: 68263

//  <rtree> SFDITEM_REG__RAC_WAITSNSH
//    <name> WAITSNSH </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40084070) WAITSNSH </i>
//    <loc> ( (unsigned int)((RAC_WAITSNSH >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_WAITSNSH_WAITSNSH </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RAC_STIMER  -------------------------------
// SVD Line: 68281

unsigned int RAC_STIMER __AT (0x40084074);



// ------------------------------  Field Item: RAC_STIMER_STIMER  ---------------------------------
// SVD Line: 68290

//  <item> SFDITEM_FIELD__RAC_STIMER_STIMER
//    <name> STIMER </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40084074) STIMER </i>
//    <edit> 
//      <loc> ( (unsigned short)((RAC_STIMER >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RAC_STIMER  -----------------------------------
// SVD Line: 68281

//  <rtree> SFDITEM_REG__RAC_STIMER
//    <name> STIMER </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40084074) STIMER </i>
//    <loc> ( (unsigned int)((RAC_STIMER >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_STIMER_STIMER </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_STIMERCOMP  -----------------------------
// SVD Line: 68299

unsigned int RAC_STIMERCOMP __AT (0x40084078);



// --------------------------  Field Item: RAC_STIMERCOMP_STIMERCOMP  -----------------------------
// SVD Line: 68308

//  <item> SFDITEM_FIELD__RAC_STIMERCOMP_STIMERCOMP
//    <name> STIMERCOMP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40084078) STIMERCOMP </i>
//    <edit> 
//      <loc> ( (unsigned short)((RAC_STIMERCOMP >> 0) & 0xFFFF), ((RAC_STIMERCOMP = (RAC_STIMERCOMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_STIMERCOMP  ---------------------------------
// SVD Line: 68299

//  <rtree> SFDITEM_REG__RAC_STIMERCOMP
//    <name> STIMERCOMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084078) STIMERCOMP </i>
//    <loc> ( (unsigned int)((RAC_STIMERCOMP >> 0) & 0xFFFFFFFF), ((RAC_STIMERCOMP = (RAC_STIMERCOMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_STIMERCOMP_STIMERCOMP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_VECTADDR  ------------------------------
// SVD Line: 68317

unsigned int RAC_VECTADDR __AT (0x4008407C);



// ----------------------------  Field Item: RAC_VECTADDR_VECTADDR  -------------------------------
// SVD Line: 68326

//  <item> SFDITEM_FIELD__RAC_VECTADDR_VECTADDR
//    <name> VECTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008407C) VECTADDR </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_VECTADDR >> 0) & 0xFFFFFFFF), ((RAC_VECTADDR = (RAC_VECTADDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RAC_VECTADDR  ----------------------------------
// SVD Line: 68317

//  <rtree> SFDITEM_REG__RAC_VECTADDR
//    <name> VECTADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008407C) VECTADDR </i>
//    <loc> ( (unsigned int)((RAC_VECTADDR >> 0) & 0xFFFFFFFF), ((RAC_VECTADDR = (RAC_VECTADDR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_VECTADDR_VECTADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_SEQCTRL  -------------------------------
// SVD Line: 68335

unsigned int RAC_SEQCTRL __AT (0x40084080);



// -----------------------------  Field Item: RAC_SEQCTRL_COMPACT  --------------------------------
// SVD Line: 68344

//  <item> SFDITEM_FIELD__RAC_SEQCTRL_COMPACT
//    <name> COMPACT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084080) COMPACT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCTRL ) </loc>
//      <o.0..0> COMPACT
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SEQCTRL_COMPINVALMODE  -----------------------------
// SVD Line: 68351

//  <item> SFDITEM_FIELD__RAC_SEQCTRL_COMPINVALMODE
//    <name> COMPINVALMODE </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40084080) COMPINVALMODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SEQCTRL >> 1) & 0x3), ((RAC_SEQCTRL = (RAC_SEQCTRL & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_SEQCTRL_PRSSEL  ---------------------------------
// SVD Line: 68358

//  <item> SFDITEM_FIELD__RAC_SEQCTRL_PRSSEL
//    <name> PRSSEL </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40084080) PRSSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SEQCTRL >> 4) & 0xF), ((RAC_SEQCTRL = (RAC_SEQCTRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_SEQCTRL_STIMERDEBUGRUN  -----------------------------
// SVD Line: 68365

//  <item> SFDITEM_FIELD__RAC_SEQCTRL_STIMERDEBUGRUN
//    <name> STIMERDEBUGRUN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40084080) STIMERDEBUGRUN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCTRL ) </loc>
//      <o.10..10> STIMERDEBUGRUN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SEQCTRL_CPUHALTREQEN  ------------------------------
// SVD Line: 68372

//  <item> SFDITEM_FIELD__RAC_SEQCTRL_CPUHALTREQEN
//    <name> CPUHALTREQEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40084080) CPUHALTREQEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCTRL ) </loc>
//      <o.11..11> CPUHALTREQEN
//    </check>
//  </item>
//  


// ----------------------  Field Item: RAC_SEQCTRL_SEQHALTUPONCPUHALTEN  --------------------------
// SVD Line: 68379

//  <item> SFDITEM_FIELD__RAC_SEQCTRL_SEQHALTUPONCPUHALTEN
//    <name> SEQHALTUPONCPUHALTEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40084080) SEQHALTUPONCPUHALTEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SEQCTRL ) </loc>
//      <o.12..12> SEQHALTUPONCPUHALTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RAC_SEQCTRL  ----------------------------------
// SVD Line: 68335

//  <rtree> SFDITEM_REG__RAC_SEQCTRL
//    <name> SEQCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084080) SEQCTRL </i>
//    <loc> ( (unsigned int)((RAC_SEQCTRL >> 0) & 0xFFFFFFFF), ((RAC_SEQCTRL = (RAC_SEQCTRL & ~(0x1CF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1CF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SEQCTRL_COMPACT </item>
//    <item> SFDITEM_FIELD__RAC_SEQCTRL_COMPINVALMODE </item>
//    <item> SFDITEM_FIELD__RAC_SEQCTRL_PRSSEL </item>
//    <item> SFDITEM_FIELD__RAC_SEQCTRL_STIMERDEBUGRUN </item>
//    <item> SFDITEM_FIELD__RAC_SEQCTRL_CPUHALTREQEN </item>
//    <item> SFDITEM_FIELD__RAC_SEQCTRL_SEQHALTUPONCPUHALTEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RAC_PRESC  --------------------------------
// SVD Line: 68388

unsigned int RAC_PRESC __AT (0x40084084);



// ------------------------------  Field Item: RAC_PRESC_STIMER  ----------------------------------
// SVD Line: 68397

//  <item> SFDITEM_FIELD__RAC_PRESC_STIMER
//    <name> STIMER </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40084084) STIMER </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PRESC >> 0) & 0x7F), ((RAC_PRESC = (RAC_PRESC & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RAC_PRESC  -----------------------------------
// SVD Line: 68388

//  <rtree> SFDITEM_REG__RAC_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084084) PRESC </i>
//    <loc> ( (unsigned int)((RAC_PRESC >> 0) & 0xFFFFFFFF), ((RAC_PRESC = (RAC_PRESC & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_PRESC_STIMER </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_SR0  ---------------------------------
// SVD Line: 68406

unsigned int RAC_SR0 __AT (0x40084088);



// ---------------------------------  Field Item: RAC_SR0_SR0  ------------------------------------
// SVD Line: 68415

//  <item> SFDITEM_FIELD__RAC_SR0_SR0
//    <name> SR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084088) SR0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_SR0 >> 0) & 0xFFFFFFFF), ((RAC_SR0 = (RAC_SR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_SR0  ------------------------------------
// SVD Line: 68406

//  <rtree> SFDITEM_REG__RAC_SR0
//    <name> SR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084088) SR0 </i>
//    <loc> ( (unsigned int)((RAC_SR0 >> 0) & 0xFFFFFFFF), ((RAC_SR0 = (RAC_SR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SR0_SR0 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_SR1  ---------------------------------
// SVD Line: 68424

unsigned int RAC_SR1 __AT (0x4008408C);



// ---------------------------------  Field Item: RAC_SR1_SR1  ------------------------------------
// SVD Line: 68433

//  <item> SFDITEM_FIELD__RAC_SR1_SR1
//    <name> SR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008408C) SR1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_SR1 >> 0) & 0xFFFFFFFF), ((RAC_SR1 = (RAC_SR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_SR1  ------------------------------------
// SVD Line: 68424

//  <rtree> SFDITEM_REG__RAC_SR1
//    <name> SR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008408C) SR1 </i>
//    <loc> ( (unsigned int)((RAC_SR1 >> 0) & 0xFFFFFFFF), ((RAC_SR1 = (RAC_SR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SR1_SR1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_SR2  ---------------------------------
// SVD Line: 68442

unsigned int RAC_SR2 __AT (0x40084090);



// ---------------------------------  Field Item: RAC_SR2_SR2  ------------------------------------
// SVD Line: 68451

//  <item> SFDITEM_FIELD__RAC_SR2_SR2
//    <name> SR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084090) SR2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_SR2 >> 0) & 0xFFFFFFFF), ((RAC_SR2 = (RAC_SR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_SR2  ------------------------------------
// SVD Line: 68442

//  <rtree> SFDITEM_REG__RAC_SR2
//    <name> SR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084090) SR2 </i>
//    <loc> ( (unsigned int)((RAC_SR2 >> 0) & 0xFFFFFFFF), ((RAC_SR2 = (RAC_SR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SR2_SR2 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_SR3  ---------------------------------
// SVD Line: 68460

unsigned int RAC_SR3 __AT (0x40084094);



// ---------------------------------  Field Item: RAC_SR3_SR3  ------------------------------------
// SVD Line: 68469

//  <item> SFDITEM_FIELD__RAC_SR3_SR3
//    <name> SR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084094) SR3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((RAC_SR3 >> 0) & 0xFFFFFFFF), ((RAC_SR3 = (RAC_SR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_SR3  ------------------------------------
// SVD Line: 68460

//  <rtree> SFDITEM_REG__RAC_SR3
//    <name> SR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084094) SR3 </i>
//    <loc> ( (unsigned int)((RAC_SR3 >> 0) & 0xFFFFFFFF), ((RAC_SR3 = (RAC_SR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SR3_SR3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_SYNTHENCTRL  -----------------------------
// SVD Line: 68478

unsigned int RAC_SYNTHENCTRL __AT (0x40084098);



// ----------------------------  Field Item: RAC_SYNTHENCTRL_VCOEN  -------------------------------
// SVD Line: 68487

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCOEN
//    <name> VCOEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084098) VCOEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.0..0> VCOEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_SYNTHENCTRL_VCOSTARTUP  -----------------------------
// SVD Line: 68494

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCOSTARTUP
//    <name> VCOSTARTUP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084098) VCOSTARTUP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.1..1> VCOSTARTUP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SYNTHENCTRL_LODIVEN  ------------------------------
// SVD Line: 68501

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LODIVEN
//    <name> LODIVEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40084098) LODIVEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.3..3> LODIVEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SYNTHENCTRL_CHPEN  -------------------------------
// SVD Line: 68508

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_CHPEN
//    <name> CHPEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40084098) CHPEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.4..4> CHPEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SYNTHENCTRL_LPFEN  -------------------------------
// SVD Line: 68515

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LPFEN
//    <name> LPFEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40084098) LPFEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.5..5> LPFEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_SYNTHENCTRL_LPFQUICKSTART  ---------------------------
// SVD Line: 68522

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LPFQUICKSTART
//    <name> LPFQUICKSTART </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40084098) LPFQUICKSTART </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.6..6> LPFQUICKSTART
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SYNTHENCTRL_VCBUFEN  ------------------------------
// SVD Line: 68529

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCBUFEN
//    <name> VCBUFEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40084098) VCBUFEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.7..7> VCBUFEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_SYNTHENCTRL_SYNTHCLKEN  -----------------------------
// SVD Line: 68536

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_SYNTHCLKEN
//    <name> SYNTHCLKEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40084098) SYNTHCLKEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.8..8> SYNTHCLKEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_SYNTHENCTRL_SYNTHSTARTREQ  ---------------------------
// SVD Line: 68543

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_SYNTHSTARTREQ
//    <name> SYNTHSTARTREQ </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40084098) SYNTHSTARTREQ </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.9..9> SYNTHSTARTREQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SYNTHENCTRL_CHPLDOEN  ------------------------------
// SVD Line: 68550

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_CHPLDOEN
//    <name> CHPLDOEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40084098) CHPLDOEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.10..10> CHPLDOEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHENCTRL_LODIVSYNCCLKEN  ---------------------------
// SVD Line: 68557

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LODIVSYNCCLKEN
//    <name> LODIVSYNCCLKEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40084098) LODIVSYNCCLKEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.11..11> LODIVSYNCCLKEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SYNTHENCTRL_MMDLDOEN  ------------------------------
// SVD Line: 68564

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_MMDLDOEN
//    <name> MMDLDOEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40084098) MMDLDOEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.13..13> MMDLDOEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SYNTHENCTRL_VCOLDOEN  ------------------------------
// SVD Line: 68571

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCOLDOEN
//    <name> VCOLDOEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40084098) VCOLDOEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.14..14> VCOLDOEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SYNTHENCTRL_VCODIVEN  ------------------------------
// SVD Line: 68578

//  <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCODIVEN
//    <name> VCODIVEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40084098) VCODIVEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHENCTRL ) </loc>
//      <o.15..15> VCODIVEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: RAC_SYNTHENCTRL  --------------------------------
// SVD Line: 68478

//  <rtree> SFDITEM_REG__RAC_SYNTHENCTRL
//    <name> SYNTHENCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084098) SYNTHENCTRL </i>
//    <loc> ( (unsigned int)((RAC_SYNTHENCTRL >> 0) & 0xFFFFFFFF), ((RAC_SYNTHENCTRL = (RAC_SYNTHENCTRL & ~(0xEFFBUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFFB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCOEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCOSTARTUP </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LODIVEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_CHPEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LPFEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LPFQUICKSTART </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCBUFEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_SYNTHCLKEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_SYNTHSTARTREQ </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_CHPLDOEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_LODIVSYNCCLKEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_MMDLDOEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCOLDOEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHENCTRL_VCODIVEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_SYNTHREGCTRL  ----------------------------
// SVD Line: 68587

unsigned int RAC_SYNTHREGCTRL __AT (0x4008409C);



// --------------------------  Field Item: RAC_SYNTHREGCTRL_UNUSED3  ------------------------------
// SVD Line: 68596

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_UNUSED3
//    <name> UNUSED3 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008409C) UNUSED3 </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHREGCTRL ) </loc>
//      <o.0..0> UNUSED3
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SYNTHREGCTRL_UNUSED1  ------------------------------
// SVD Line: 68603

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_UNUSED1
//    <name> UNUSED1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008409C) UNUSED1 </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHREGCTRL ) </loc>
//      <o.1..1> UNUSED1
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SYNTHREGCTRL_UNUSED2  ------------------------------
// SVD Line: 68610

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_UNUSED2
//    <name> UNUSED2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008409C) UNUSED2 </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHREGCTRL ) </loc>
//      <o.2..2> UNUSED2
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_MMDLDOAMPBWRED  --------------------------
// SVD Line: 68617

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_MMDLDOAMPBWRED
//    <name> MMDLDOAMPBWRED </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4008409C) MMDLDOAMPBWRED </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 5) & 0x3), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_MMDLDOAMPCURR  ---------------------------
// SVD Line: 68624

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_MMDLDOAMPCURR
//    <name> MMDLDOAMPCURR </name>
//    <rw> 
//    <i> [Bits 9..7] RW (@ 0x4008409C) MMDLDOAMPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 7) & 0x7), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x7UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_MMDLDOVREFTRIM  --------------------------
// SVD Line: 68631

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_MMDLDOVREFTRIM
//    <name> MMDLDOVREFTRIM </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x4008409C) MMDLDOVREFTRIM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 10) & 0x7), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_VCOLDOAMPCURR  ---------------------------
// SVD Line: 68638

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_VCOLDOAMPCURR
//    <name> VCOLDOAMPCURR </name>
//    <rw> 
//    <i> [Bits 15..13] RW (@ 0x4008409C) VCOLDOAMPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 13) & 0x7), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x7UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_VCOLDOVREFTRIM  --------------------------
// SVD Line: 68645

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_VCOLDOVREFTRIM
//    <name> VCOLDOVREFTRIM </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x4008409C) VCOLDOVREFTRIM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 16) & 0x7), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_CHPLDOAMPBWRED  --------------------------
// SVD Line: 68652

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_CHPLDOAMPBWRED
//    <name> CHPLDOAMPBWRED </name>
//    <rw> 
//    <i> [Bits 20..19] RW (@ 0x4008409C) CHPLDOAMPBWRED </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 19) & 0x3), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x3UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_CHPLDOAMPCURR  ---------------------------
// SVD Line: 68659

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_CHPLDOAMPCURR
//    <name> CHPLDOAMPCURR </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x4008409C) CHPLDOAMPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 21) & 0x7), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_SYNTHREGCTRL_CHPLDOVREFTRIM  --------------------------
// SVD Line: 68666

//  <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_CHPLDOVREFTRIM
//    <name> CHPLDOVREFTRIM </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x4008409C) CHPLDOVREFTRIM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SYNTHREGCTRL >> 24) & 0x7), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: RAC_SYNTHREGCTRL  --------------------------------
// SVD Line: 68587

//  <rtree> SFDITEM_REG__RAC_SYNTHREGCTRL
//    <name> SYNTHREGCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008409C) SYNTHREGCTRL </i>
//    <loc> ( (unsigned int)((RAC_SYNTHREGCTRL >> 0) & 0xFFFFFFFF), ((RAC_SYNTHREGCTRL = (RAC_SYNTHREGCTRL & ~(0x7FFFFE7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFE7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_UNUSED3 </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_UNUSED1 </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_UNUSED2 </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_MMDLDOAMPBWRED </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_MMDLDOAMPCURR </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_MMDLDOVREFTRIM </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_VCOLDOAMPCURR </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_VCOLDOVREFTRIM </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_CHPLDOAMPBWRED </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_CHPLDOAMPCURR </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHREGCTRL_CHPLDOVREFTRIM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_VCOCTRL  -------------------------------
// SVD Line: 68675

unsigned int RAC_VCOCTRL __AT (0x400840A0);



// --------------------------  Field Item: RAC_VCOCTRL_VCOAMPLITUDE  ------------------------------
// SVD Line: 68684

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_VCOAMPLITUDE
//    <name> VCOAMPLITUDE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400840A0) VCOAMPLITUDE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_VCOCTRL >> 0) & 0xF), ((RAC_VCOCTRL = (RAC_VCOCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_VCOCTRL_VCODETAMPLITUDE  ----------------------------
// SVD Line: 68691

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODETAMPLITUDE
//    <name> VCODETAMPLITUDE </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400840A0) VCODETAMPLITUDE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_VCOCTRL >> 4) & 0xF), ((RAC_VCOCTRL = (RAC_VCOCTRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_VCOCTRL_VCODETEN  --------------------------------
// SVD Line: 68698

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODETEN
//    <name> VCODETEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400840A0) VCODETEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_VCOCTRL ) </loc>
//      <o.8..8> VCODETEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_VCOCTRL_VCODETMODE  -------------------------------
// SVD Line: 68705

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODETMODE
//    <name> VCODETMODE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400840A0) VCODETMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_VCOCTRL ) </loc>
//      <o.9..9> VCODETMODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_VCOCTRL_VCOAREGCURR  ------------------------------
// SVD Line: 68712

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_VCOAREGCURR
//    <name> VCOAREGCURR </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x400840A0) VCOAREGCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_VCOCTRL >> 10) & 0x3), ((RAC_VCOCTRL = (RAC_VCOCTRL & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_VCOCTRL_VCOCREGCURR  ------------------------------
// SVD Line: 68719

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_VCOCREGCURR
//    <name> VCOCREGCURR </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x400840A0) VCOCREGCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_VCOCTRL >> 12) & 0x7), ((RAC_VCOCTRL = (RAC_VCOCTRL & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_VCOCTRL_UNUSED4  --------------------------------
// SVD Line: 68726

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_UNUSED4
//    <name> UNUSED4 </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x400840A0) UNUSED4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_VCOCTRL >> 22) & 0x3), ((RAC_VCOCTRL = (RAC_VCOCTRL & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_VCOCTRL_VCODIVCURR  -------------------------------
// SVD Line: 68733

//  <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODIVCURR
//    <name> VCODIVCURR </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x400840A0) VCODIVCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_VCOCTRL >> 24) & 0xF), ((RAC_VCOCTRL = (RAC_VCOCTRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RAC_VCOCTRL  ----------------------------------
// SVD Line: 68675

//  <rtree> SFDITEM_REG__RAC_VCOCTRL
//    <name> VCOCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840A0) VCOCTRL </i>
//    <loc> ( (unsigned int)((RAC_VCOCTRL >> 0) & 0xFFFFFFFF), ((RAC_VCOCTRL = (RAC_VCOCTRL & ~(0xFC07FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFC07FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_VCOAMPLITUDE </item>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODETAMPLITUDE </item>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODETEN </item>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODETMODE </item>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_VCOAREGCURR </item>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_VCOCREGCURR </item>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_UNUSED4 </item>
//    <item> SFDITEM_FIELD__RAC_VCOCTRL_VCODIVCURR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_MMDCTRL  -------------------------------
// SVD Line: 68742

unsigned int RAC_MMDCTRL __AT (0x400840A4);



// ---------------------------  Field Item: RAC_MMDCTRL_MMDDIVDCDC  -------------------------------
// SVD Line: 68751

//  <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDDIVDCDC
//    <name> MMDDIVDCDC </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x400840A4) MMDDIVDCDC </i>
//    <edit> 
//      <loc> ( (unsigned short)((RAC_MMDCTRL >> 0) & 0x1FF), ((RAC_MMDCTRL = (RAC_MMDCTRL & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_MMDCTRL_MMDDIVRSDCDC  ------------------------------
// SVD Line: 68758

//  <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDDIVRSDCDC
//    <name> MMDDIVRSDCDC </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x400840A4) MMDDIVRSDCDC </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_MMDCTRL >> 10) & 0x3), ((RAC_MMDCTRL = (RAC_MMDCTRL & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_MMDCTRL_MMDDIVRSDIG  ------------------------------
// SVD Line: 68765

//  <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDDIVRSDIG
//    <name> MMDDIVRSDIG </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400840A4) MMDDIVRSDIG </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_MMDCTRL >> 12) & 0x3), ((RAC_MMDCTRL = (RAC_MMDCTRL & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_MMDCTRL_MMDENDCDC  -------------------------------
// SVD Line: 68772

//  <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDENDCDC
//    <name> MMDENDCDC </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400840A4) MMDENDCDC </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_MMDCTRL ) </loc>
//      <o.14..14> MMDENDCDC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_MMDCTRL_MMDENRSDCDC  ------------------------------
// SVD Line: 68779

//  <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDENRSDCDC
//    <name> MMDENRSDCDC </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400840A4) MMDENRSDCDC </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_MMDCTRL ) </loc>
//      <o.15..15> MMDENRSDCDC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_MMDCTRL_MMDENRSDIG  -------------------------------
// SVD Line: 68786

//  <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDENRSDIG
//    <name> MMDENRSDIG </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400840A4) MMDENRSDIG </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_MMDCTRL ) </loc>
//      <o.16..16> MMDENRSDIG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RAC_MMDCTRL  ----------------------------------
// SVD Line: 68742

//  <rtree> SFDITEM_REG__RAC_MMDCTRL
//    <name> MMDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840A4) MMDCTRL </i>
//    <loc> ( (unsigned int)((RAC_MMDCTRL >> 0) & 0xFFFFFFFF), ((RAC_MMDCTRL = (RAC_MMDCTRL & ~(0x1FDFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FDFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDDIVDCDC </item>
//    <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDDIVRSDCDC </item>
//    <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDDIVRSDIG </item>
//    <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDENDCDC </item>
//    <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDENRSDCDC </item>
//    <item> SFDITEM_FIELD__RAC_MMDCTRL_MMDENRSDIG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_CHPCTRL  -------------------------------
// SVD Line: 68795

unsigned int RAC_CHPCTRL __AT (0x400840B0);



// -----------------------------  Field Item: RAC_CHPCTRL_CHPBIAS  --------------------------------
// SVD Line: 68804

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPBIAS
//    <name> CHPBIAS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400840B0) CHPBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CHPCTRL >> 0) & 0x7), ((RAC_CHPCTRL = (RAC_CHPCTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_CHPCTRL_CHPCURR  --------------------------------
// SVD Line: 68811

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPCURR
//    <name> CHPCURR </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x400840B0) CHPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CHPCTRL >> 3) & 0x7), ((RAC_CHPCTRL = (RAC_CHPCTRL & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_CHPCTRL_UNUSED8  --------------------------------
// SVD Line: 68818

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED8
//    <name> UNUSED8 </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x400840B0) UNUSED8 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CHPCTRL >> 6) & 0x7), ((RAC_CHPCTRL = (RAC_CHPCTRL & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_CHPCTRL_UNUSED7  --------------------------------
// SVD Line: 68825

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED7
//    <name> UNUSED7 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400840B0) UNUSED7 </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CHPCTRL ) </loc>
//      <o.9..9> UNUSED7
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_CHPCTRL_UNUSED1  --------------------------------
// SVD Line: 68832

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED1
//    <name> UNUSED1 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400840B0) UNUSED1 </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CHPCTRL ) </loc>
//      <o.10..10> UNUSED1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_CHPCTRL_UNUSED5  --------------------------------
// SVD Line: 68839

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED5
//    <name> UNUSED5 </name>
//    <rw> 
//    <i> [Bits 12..11] RW (@ 0x400840B0) UNUSED5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CHPCTRL >> 11) & 0x3), ((RAC_CHPCTRL = (RAC_CHPCTRL & ~(0x3UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_CHPCTRL_UNUSED6  --------------------------------
// SVD Line: 68846

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED6
//    <name> UNUSED6 </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400840B0) UNUSED6 </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CHPCTRL ) </loc>
//      <o.13..13> UNUSED6
//    </check>
//  </item>
//  


// ----------------------  Field Item: RAC_CHPCTRL_CHPOUTPUTTRISTATEMODE  -------------------------
// SVD Line: 68853

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPOUTPUTTRISTATEMODE
//    <name> CHPOUTPUTTRISTATEMODE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400840B0) CHPOUTPUTTRISTATEMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CHPCTRL ) </loc>
//      <o.14..14> CHPOUTPUTTRISTATEMODE
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_CHPCTRL_CHPSWITCHEDBIASEN  ---------------------------
// SVD Line: 68860

//  <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPSWITCHEDBIASEN
//    <name> CHPSWITCHEDBIASEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400840B0) CHPSWITCHEDBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_CHPCTRL ) </loc>
//      <o.15..15> CHPSWITCHEDBIASEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RAC_CHPCTRL  ----------------------------------
// SVD Line: 68795

//  <rtree> SFDITEM_REG__RAC_CHPCTRL
//    <name> CHPCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840B0) CHPCTRL </i>
//    <loc> ( (unsigned int)((RAC_CHPCTRL >> 0) & 0xFFFFFFFF), ((RAC_CHPCTRL = (RAC_CHPCTRL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPBIAS </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPCURR </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED8 </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED7 </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED1 </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED5 </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_UNUSED6 </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPOUTPUTTRISTATEMODE </item>
//    <item> SFDITEM_FIELD__RAC_CHPCTRL_CHPSWITCHEDBIASEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RAC_CHPCAL  -------------------------------
// SVD Line: 68869

unsigned int RAC_CHPCAL __AT (0x400840B4);



// -------------------------------  Field Item: RAC_CHPCAL_PSRC  ----------------------------------
// SVD Line: 68878

//  <item> SFDITEM_FIELD__RAC_CHPCAL_PSRC
//    <name> PSRC </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x400840B4) PSRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CHPCAL >> 0) & 0x7), ((RAC_CHPCAL = (RAC_CHPCAL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RAC_CHPCAL_NSRC  ----------------------------------
// SVD Line: 68885

//  <item> SFDITEM_FIELD__RAC_CHPCAL_NSRC
//    <name> NSRC </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x400840B4) NSRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_CHPCAL >> 3) & 0x7), ((RAC_CHPCAL = (RAC_CHPCAL & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RAC_CHPCAL  -----------------------------------
// SVD Line: 68869

//  <rtree> SFDITEM_REG__RAC_CHPCAL
//    <name> CHPCAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840B4) CHPCAL </i>
//    <loc> ( (unsigned int)((RAC_CHPCAL >> 0) & 0xFFFFFFFF), ((RAC_CHPCAL = (RAC_CHPCAL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_CHPCAL_PSRC </item>
//    <item> SFDITEM_FIELD__RAC_CHPCAL_NSRC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_LPFCTRL  -------------------------------
// SVD Line: 68894

unsigned int RAC_LPFCTRL __AT (0x400840B8);



// ------------------------------  Field Item: RAC_LPFCTRL_LPFBW  ---------------------------------
// SVD Line: 68903

//  <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFBW
//    <name> LPFBW </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400840B8) LPFBW </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LPFCTRL >> 0) & 0xF), ((RAC_LPFCTRL = (RAC_LPFCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_LPFCTRL_MIRACLEMODE  ------------------------------
// SVD Line: 68910

//  <item> SFDITEM_FIELD__RAC_LPFCTRL_MIRACLEMODE
//    <name> MIRACLEMODE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400840B8) MIRACLEMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LPFCTRL ) </loc>
//      <o.4..4> MIRACLEMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_LPFCTRL_UNUSED9  --------------------------------
// SVD Line: 68917

//  <item> SFDITEM_FIELD__RAC_LPFCTRL_UNUSED9
//    <name> UNUSED9 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x400840B8) UNUSED9 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LPFCTRL >> 8) & 0xF), ((RAC_LPFCTRL = (RAC_LPFCTRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_LPFCTRL_UNUSED10  --------------------------------
// SVD Line: 68924

//  <item> SFDITEM_FIELD__RAC_LPFCTRL_UNUSED10
//    <name> UNUSED10 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400840B8) UNUSED10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LPFCTRL >> 12) & 0x3), ((RAC_LPFCTRL = (RAC_LPFCTRL & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_LPFCTRL_LPFINPUTCAP  ------------------------------
// SVD Line: 68931

//  <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFINPUTCAP
//    <name> LPFINPUTCAP </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x400840B8) LPFINPUTCAP </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LPFCTRL >> 14) & 0x3), ((RAC_LPFCTRL = (RAC_LPFCTRL & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_LPFCTRL_LPFSWITCHINGEN  -----------------------------
// SVD Line: 68938

//  <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFSWITCHINGEN
//    <name> LPFSWITCHINGEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400840B8) LPFSWITCHINGEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LPFCTRL ) </loc>
//      <o.16..16> LPFSWITCHINGEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_LPFCTRL_LPFGNDSWITCHINGEN  ---------------------------
// SVD Line: 68945

//  <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFGNDSWITCHINGEN
//    <name> LPFGNDSWITCHINGEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400840B8) LPFGNDSWITCHINGEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LPFCTRL ) </loc>
//      <o.17..17> LPFGNDSWITCHINGEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RAC_LPFCTRL  ----------------------------------
// SVD Line: 68894

//  <rtree> SFDITEM_REG__RAC_LPFCTRL
//    <name> LPFCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840B8) LPFCTRL </i>
//    <loc> ( (unsigned int)((RAC_LPFCTRL >> 0) & 0xFFFFFFFF), ((RAC_LPFCTRL = (RAC_LPFCTRL & ~(0x3FF1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFBW </item>
//    <item> SFDITEM_FIELD__RAC_LPFCTRL_MIRACLEMODE </item>
//    <item> SFDITEM_FIELD__RAC_LPFCTRL_UNUSED9 </item>
//    <item> SFDITEM_FIELD__RAC_LPFCTRL_UNUSED10 </item>
//    <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFINPUTCAP </item>
//    <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFSWITCHINGEN </item>
//    <item> SFDITEM_FIELD__RAC_LPFCTRL_LPFGNDSWITCHINGEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_SYNTHCTRL  ------------------------------
// SVD Line: 68954

unsigned int RAC_SYNTHCTRL __AT (0x400840BC);



// -------------------------  Field Item: RAC_SYNTHCTRL_LODIVTXEN0DBM  ----------------------------
// SVD Line: 68963

//  <item> SFDITEM_FIELD__RAC_SYNTHCTRL_LODIVTXEN0DBM
//    <name> LODIVTXEN0DBM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400840BC) LODIVTXEN0DBM </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHCTRL ) </loc>
//      <o.1..1> LODIVTXEN0DBM
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SYNTHCTRL_LODIVTXEN  ------------------------------
// SVD Line: 68970

//  <item> SFDITEM_FIELD__RAC_SYNTHCTRL_LODIVTXEN
//    <name> LODIVTXEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400840BC) LODIVTXEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHCTRL ) </loc>
//      <o.2..2> LODIVTXEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SYNTHCTRL_PFDTRADMODE  -----------------------------
// SVD Line: 68977

//  <item> SFDITEM_FIELD__RAC_SYNTHCTRL_PFDTRADMODE
//    <name> PFDTRADMODE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400840BC) PFDTRADMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHCTRL ) </loc>
//      <o.3..3> PFDTRADMODE
//    </check>
//  </item>
//  


// --------------------  Field Item: RAC_SYNTHCTRL_MMDPOWERBALANCEDISABLE  ------------------------
// SVD Line: 68984

//  <item> SFDITEM_FIELD__RAC_SYNTHCTRL_MMDPOWERBALANCEDISABLE
//    <name> MMDPOWERBALANCEDISABLE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400840BC) MMDPOWERBALANCEDISABLE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SYNTHCTRL ) </loc>
//      <o.10..10> MMDPOWERBALANCEDISABLE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_SYNTHCTRL  ---------------------------------
// SVD Line: 68954

//  <rtree> SFDITEM_REG__RAC_SYNTHCTRL
//    <name> SYNTHCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840BC) SYNTHCTRL </i>
//    <loc> ( (unsigned int)((RAC_SYNTHCTRL >> 0) & 0xFFFFFFFF), ((RAC_SYNTHCTRL = (RAC_SYNTHCTRL & ~(0x40EUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x40E) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SYNTHCTRL_LODIVTXEN0DBM </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHCTRL_LODIVTXEN </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHCTRL_PFDTRADMODE </item>
//    <item> SFDITEM_FIELD__RAC_SYNTHCTRL_MMDPOWERBALANCEDISABLE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_AUXCTRL  -------------------------------
// SVD Line: 68993

unsigned int RAC_AUXCTRL __AT (0x400840C0);



// ----------------------------  Field Item: RAC_AUXCTRL_AUXREGEN  --------------------------------
// SVD Line: 69002

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_AUXREGEN
//    <name> AUXREGEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400840C0) AUXREGEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXCTRL ) </loc>
//      <o.0..0> AUXREGEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_AUXCTRL_VCOEN  ---------------------------------
// SVD Line: 69009

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_VCOEN
//    <name> VCOEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400840C0) VCOEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXCTRL ) </loc>
//      <o.1..1> VCOEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_AUXCTRL_VCOSTARTUP  -------------------------------
// SVD Line: 69016

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_VCOSTARTUP
//    <name> VCOSTARTUP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400840C0) VCOSTARTUP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXCTRL ) </loc>
//      <o.2..2> VCOSTARTUP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RAC_AUXCTRL_CHPEN  ---------------------------------
// SVD Line: 69023

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_CHPEN
//    <name> CHPEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400840C0) CHPEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXCTRL ) </loc>
//      <o.3..3> CHPEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_AUXCTRL_CHPCURR  --------------------------------
// SVD Line: 69030

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_CHPCURR
//    <name> CHPCURR </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x400840C0) CHPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_AUXCTRL >> 4) & 0x3), ((RAC_AUXCTRL = (RAC_AUXCTRL & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_AUXCTRL_LODIVEN  --------------------------------
// SVD Line: 69037

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_LODIVEN
//    <name> LODIVEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400840C0) LODIVEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXCTRL ) </loc>
//      <o.6..6> LODIVEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_AUXCTRL_AUXSYNTHCLKEN  -----------------------------
// SVD Line: 69044

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_AUXSYNTHCLKEN
//    <name> AUXSYNTHCLKEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400840C0) AUXSYNTHCLKEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXCTRL ) </loc>
//      <o.7..7> AUXSYNTHCLKEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_AUXCTRL_LODIVSEL  --------------------------------
// SVD Line: 69051

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_LODIVSEL
//    <name> LODIVSEL </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x400840C0) LODIVSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_AUXCTRL >> 8) & 0x7), ((RAC_AUXCTRL = (RAC_AUXCTRL & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RAC_AUXCTRL_RXAMP  ---------------------------------
// SVD Line: 69058

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_RXAMP
//    <name> RXAMP </name>
//    <rw> 
//    <i> [Bits 16..11] RW (@ 0x400840C0) RXAMP </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_AUXCTRL >> 11) & 0x3F), ((RAC_AUXCTRL = (RAC_AUXCTRL & ~(0x3FUL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_AUXCTRL_LDOAMPCURR  -------------------------------
// SVD Line: 69065

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_LDOAMPCURR
//    <name> LDOAMPCURR </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x400840C0) LDOAMPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_AUXCTRL >> 17) & 0x7), ((RAC_AUXCTRL = (RAC_AUXCTRL & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_AUXCTRL_LDOVREFTRIM  ------------------------------
// SVD Line: 69072

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_LDOVREFTRIM
//    <name> LDOVREFTRIM </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x400840C0) LDOVREFTRIM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_AUXCTRL >> 20) & 0x7), ((RAC_AUXCTRL = (RAC_AUXCTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_AUXCTRL_FPLLDIGEN  -------------------------------
// SVD Line: 69079

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_FPLLDIGEN
//    <name> FPLLDIGEN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400840C0) FPLLDIGEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXCTRL ) </loc>
//      <o.23..23> FPLLDIGEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_AUXCTRL_LPFRES  ---------------------------------
// SVD Line: 69086

//  <item> SFDITEM_FIELD__RAC_AUXCTRL_LPFRES
//    <name> LPFRES </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x400840C0) LPFRES </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_AUXCTRL >> 24) & 0x3), ((RAC_AUXCTRL = (RAC_AUXCTRL & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RAC_AUXCTRL  ----------------------------------
// SVD Line: 68993

//  <rtree> SFDITEM_REG__RAC_AUXCTRL
//    <name> AUXCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840C0) AUXCTRL </i>
//    <loc> ( (unsigned int)((RAC_AUXCTRL >> 0) & 0xFFFFFFFF), ((RAC_AUXCTRL = (RAC_AUXCTRL & ~(0x3FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_AUXREGEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_VCOEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_VCOSTARTUP </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_CHPEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_CHPCURR </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_LODIVEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_AUXSYNTHCLKEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_LODIVSEL </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_RXAMP </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_LDOAMPCURR </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_LDOVREFTRIM </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_FPLLDIGEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXCTRL_LPFRES </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_AUXENCTRL  ------------------------------
// SVD Line: 69095

unsigned int RAC_AUXENCTRL __AT (0x400840C4);



// -----------------------------  Field Item: RAC_AUXENCTRL_LDOEN  --------------------------------
// SVD Line: 69104

//  <item> SFDITEM_FIELD__RAC_AUXENCTRL_LDOEN
//    <name> LDOEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400840C4) LDOEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXENCTRL ) </loc>
//      <o.0..0> LDOEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_AUXENCTRL_VCBUFEN  -------------------------------
// SVD Line: 69111

//  <item> SFDITEM_FIELD__RAC_AUXENCTRL_VCBUFEN
//    <name> VCBUFEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400840C4) VCBUFEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXENCTRL ) </loc>
//      <o.1..1> VCBUFEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_AUXENCTRL_LODIVAUXEN  ------------------------------
// SVD Line: 69118

//  <item> SFDITEM_FIELD__RAC_AUXENCTRL_LODIVAUXEN
//    <name> LODIVAUXEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400840C4) LODIVAUXEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXENCTRL ) </loc>
//      <o.2..2> LODIVAUXEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_AUXENCTRL_LODIVAUXEN0DBM  ----------------------------
// SVD Line: 69125

//  <item> SFDITEM_FIELD__RAC_AUXENCTRL_LODIVAUXEN0DBM
//    <name> LODIVAUXEN0DBM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400840C4) LODIVAUXEN0DBM </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_AUXENCTRL ) </loc>
//      <o.3..3> LODIVAUXEN0DBM
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_AUXENCTRL  ---------------------------------
// SVD Line: 69095

//  <rtree> SFDITEM_REG__RAC_AUXENCTRL
//    <name> AUXENCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840C4) AUXENCTRL </i>
//    <loc> ( (unsigned int)((RAC_AUXENCTRL >> 0) & 0xFFFFFFFF), ((RAC_AUXENCTRL = (RAC_AUXENCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_AUXENCTRL_LDOEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXENCTRL_VCBUFEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXENCTRL_LODIVAUXEN </item>
//    <item> SFDITEM_FIELD__RAC_AUXENCTRL_LODIVAUXEN0DBM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_RFENCTRL  ------------------------------
// SVD Line: 69134

unsigned int RAC_RFENCTRL __AT (0x400840F4);



// -------------------------  Field Item: RAC_RFENCTRL_IFFILTSTANDBY  -----------------------------
// SVD Line: 69143

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_IFFILTSTANDBY
//    <name> IFFILTSTANDBY </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400840F4) IFFILTSTANDBY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.0..0> IFFILTSTANDBY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_RFENCTRL_IFFILTEREN  ------------------------------
// SVD Line: 69150

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_IFFILTEREN
//    <name> IFFILTEREN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400840F4) IFFILTEREN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.1..1> IFFILTEREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_RFENCTRL_PKDEN  ---------------------------------
// SVD Line: 69157

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_PKDEN
//    <name> PKDEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400840F4) PKDEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.2..2> PKDEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFENCTRL_IFPGAEN  --------------------------------
// SVD Line: 69164

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_IFPGAEN
//    <name> IFPGAEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400840F4) IFPGAEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.3..3> IFPGAEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFENCTRL_IFADCEN  --------------------------------
// SVD Line: 69171

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_IFADCEN
//    <name> IFADCEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400840F4) IFADCEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.4..4> IFADCEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_RFENCTRL_IFADCCAPRESET  -----------------------------
// SVD Line: 69178

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_IFADCCAPRESET
//    <name> IFADCCAPRESET </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400840F4) IFADCCAPRESET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.5..5> IFADCCAPRESET
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_RFENCTRL_IFADCCLKEN  ------------------------------
// SVD Line: 69185

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_IFADCCLKEN
//    <name> IFADCCLKEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400840F4) IFADCCLKEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.6..6> IFADCCLKEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFENCTRL_RFBIASEN  -------------------------------
// SVD Line: 69192

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_RFBIASEN
//    <name> RFBIASEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400840F4) RFBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.11..11> RFBIASEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_RFENCTRL_DEMEN  ---------------------------------
// SVD Line: 69199

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_DEMEN
//    <name> DEMEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x400840F4) DEMEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.12..12> DEMEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFENCTRL_ENABLEI  --------------------------------
// SVD Line: 69206

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENABLEI
//    <name> ENABLEI </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400840F4) ENABLEI </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.13..13> ENABLEI
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFENCTRL_ENABLEQ  --------------------------------
// SVD Line: 69213

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENABLEQ
//    <name> ENABLEQ </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400840F4) ENABLEQ </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.14..14> ENABLEQ
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFENCTRL_ENLDOCLK  -------------------------------
// SVD Line: 69220

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOCLK
//    <name> ENLDOCLK </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400840F4) ENLDOCLK </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.15..15> ENLDOCLK
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_RFENCTRL_ENLDOSERIES  ------------------------------
// SVD Line: 69227

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOSERIES
//    <name> ENLDOSERIES </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400840F4) ENLDOSERIES </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.16..16> ENLDOSERIES
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_RFENCTRL_ENLDOSHUNTI  ------------------------------
// SVD Line: 69234

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOSHUNTI
//    <name> ENLDOSHUNTI </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400840F4) ENLDOSHUNTI </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.17..17> ENLDOSHUNTI
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_RFENCTRL_ENLDOSHUNTQ  ------------------------------
// SVD Line: 69241

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOSHUNTQ
//    <name> ENLDOSHUNTQ </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400840F4) ENLDOSHUNTQ </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.18..18> ENLDOSHUNTQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_RFENCTRL_ENLDOPGALNA  ------------------------------
// SVD Line: 69248

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOPGALNA
//    <name> ENLDOPGALNA </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400840F4) ENLDOPGALNA </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.19..19> ENLDOPGALNA
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_RFENCTRL_ENPGA  ---------------------------------
// SVD Line: 69255

//  <item> SFDITEM_FIELD__RAC_RFENCTRL_ENPGA
//    <name> ENPGA </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400840F4) ENPGA </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL ) </loc>
//      <o.20..20> ENPGA
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_RFENCTRL  ----------------------------------
// SVD Line: 69134

//  <rtree> SFDITEM_REG__RAC_RFENCTRL
//    <name> RFENCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840F4) RFENCTRL </i>
//    <loc> ( (unsigned int)((RAC_RFENCTRL >> 0) & 0xFFFFFFFF), ((RAC_RFENCTRL = (RAC_RFENCTRL & ~(0x1FF87FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF87F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_IFFILTSTANDBY </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_IFFILTEREN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_PKDEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_IFPGAEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_IFADCEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_IFADCCAPRESET </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_IFADCCLKEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_RFBIASEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_DEMEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENABLEI </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENABLEQ </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOCLK </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOSERIES </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOSHUNTI </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOSHUNTQ </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENLDOPGALNA </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL_ENPGA </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_RFENCTRL0  ------------------------------
// SVD Line: 69264

unsigned int RAC_RFENCTRL0 __AT (0x400840F8);



// -------------------------  Field Item: RAC_RFENCTRL0_LNAMIXSTANDBY  ----------------------------
// SVD Line: 69273

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXSTANDBY
//    <name> LNAMIXSTANDBY </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400840F8) LNAMIXSTANDBY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.0..0> LNAMIXSTANDBY
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_RFENCTRL0_LNAMIXBIASEN  -----------------------------
// SVD Line: 69280

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXBIASEN
//    <name> LNAMIXBIASEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400840F8) LNAMIXBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.1..1> LNAMIXBIASEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_RFENCTRL0_LNAMIXLOBIASEN  ----------------------------
// SVD Line: 69287

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXLOBIASEN
//    <name> LNAMIXLOBIASEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400840F8) LNAMIXLOBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.2..2> LNAMIXLOBIASEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_RFENCTRL0_LNAMIXRFBIASEN  ----------------------------
// SVD Line: 69294

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXRFBIASEN
//    <name> LNAMIXRFBIASEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400840F8) LNAMIXRFBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.3..3> LNAMIXRFBIASEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_RFENCTRL0_PASTANDBY  ------------------------------
// SVD Line: 69301

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_PASTANDBY
//    <name> PASTANDBY </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400840F8) PASTANDBY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.16..16> PASTANDBY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_RFENCTRL0_PAEN  ---------------------------------
// SVD Line: 69308

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_PAEN
//    <name> PAEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400840F8) PAEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.17..17> PAEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFENCTRL0_PAOUTEN  -------------------------------
// SVD Line: 69315

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_PAOUTEN
//    <name> PAOUTEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400840F8) PAOUTEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.18..18> PAOUTEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_RFENCTRL0_TRSW  ---------------------------------
// SVD Line: 69322

//  <item> SFDITEM_FIELD__RAC_RFENCTRL0_TRSW
//    <name> TRSW </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400840F8) TRSW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFENCTRL0 ) </loc>
//      <o.19..19> TRSW
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_RFENCTRL0  ---------------------------------
// SVD Line: 69264

//  <rtree> SFDITEM_REG__RAC_RFENCTRL0
//    <name> RFENCTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840F8) RFENCTRL0 </i>
//    <loc> ( (unsigned int)((RAC_RFENCTRL0 >> 0) & 0xFFFFFFFF), ((RAC_RFENCTRL0 = (RAC_RFENCTRL0 & ~(0xF000FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF000F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXSTANDBY </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXBIASEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXLOBIASEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_LNAMIXRFBIASEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_PASTANDBY </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_PAEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_PAOUTEN </item>
//    <item> SFDITEM_FIELD__RAC_RFENCTRL0_TRSW </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_LNAMIXCTRL  -----------------------------
// SVD Line: 69331

unsigned int RAC_LNAMIXCTRL __AT (0x400840FC);



// ------------------------  Field Item: RAC_LNAMIXCTRL_RF2P4BANDWIDTH  ---------------------------
// SVD Line: 69340

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_RF2P4BANDWIDTH
//    <name> RF2P4BANDWIDTH </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x400840FC) RF2P4BANDWIDTH </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL >> 0) & 0x1F), ((RAC_LNAMIXCTRL = (RAC_LNAMIXCTRL & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_LNAMIXCTRL_CASCODEBIAS  -----------------------------
// SVD Line: 69347

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_CASCODEBIAS
//    <name> CASCODEBIAS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x400840FC) CASCODEBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL >> 8) & 0x7), ((RAC_LNAMIXCTRL = (RAC_LNAMIXCTRL & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_LNAMIXCTRL_LOBIAS  -------------------------------
// SVD Line: 69354

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_LOBIAS
//    <name> LOBIAS </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x400840FC) LOBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL >> 11) & 0x7), ((RAC_LNAMIXCTRL = (RAC_LNAMIXCTRL & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_LNAMIXCTRL_VREG  --------------------------------
// SVD Line: 69361

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_VREG
//    <name> VREG </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x400840FC) VREG </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL >> 14) & 0x7), ((RAC_LNAMIXCTRL = (RAC_LNAMIXCTRL & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_LNAMIXCTRL_RFBIAS  -------------------------------
// SVD Line: 69368

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_RFBIAS
//    <name> RFBIAS </name>
//    <rw> 
//    <i> [Bits 20..17] RW (@ 0x400840FC) RFBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL >> 17) & 0xF), ((RAC_LNAMIXCTRL = (RAC_LNAMIXCTRL & ~(0xFUL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_LNAMIXCTRL_RISEFALLATT  -----------------------------
// SVD Line: 69375

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_RISEFALLATT
//    <name> RISEFALLATT </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x400840FC) RISEFALLATT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL >> 21) & 0x7), ((RAC_LNAMIXCTRL = (RAC_LNAMIXCTRL & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: RAC_LNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN  ------------------------
// SVD Line: 69382

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN
//    <name> LNAMIXAUXSYNTHINPUTEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400840FC) LNAMIXAUXSYNTHINPUTEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LNAMIXCTRL ) </loc>
//      <o.26..26> LNAMIXAUXSYNTHINPUTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_LNAMIXCTRL_ENLOAD  -------------------------------
// SVD Line: 69389

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_ENLOAD
//    <name> ENLOAD </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400840FC) ENLOAD </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LNAMIXCTRL ) </loc>
//      <o.30..30> ENLOAD
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: RAC_LNAMIXCTRL  ---------------------------------
// SVD Line: 69331

//  <rtree> SFDITEM_REG__RAC_LNAMIXCTRL
//    <name> LNAMIXCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400840FC) LNAMIXCTRL </i>
//    <loc> ( (unsigned int)((RAC_LNAMIXCTRL >> 0) & 0xFFFFFFFF), ((RAC_LNAMIXCTRL = (RAC_LNAMIXCTRL & ~(0x44FFFF1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x44FFFF1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_RF2P4BANDWIDTH </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_CASCODEBIAS </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_LOBIAS </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_VREG </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_RFBIAS </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_RISEFALLATT </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL_ENLOAD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_PACTRL0  -------------------------------
// SVD Line: 69398

unsigned int RAC_PACTRL0 __AT (0x40084100);



// ---------------------------  Field Item: RAC_PACTRL0_RF2P4PASEL  -------------------------------
// SVD Line: 69407

//  <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4PASEL
//    <name> RF2P4PASEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084100) RF2P4PASEL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PACTRL0 ) </loc>
//      <o.0..0> RF2P4PASEL
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_PACTRL0_RF2P4PAVDDSEL  -----------------------------
// SVD Line: 69414

//  <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4PAVDDSEL
//    <name> RF2P4PAVDDSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084100) RF2P4PAVDDSEL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PACTRL0 ) </loc>
//      <o.1..1> RF2P4PAVDDSEL
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_PACTRL0_RF2P4RFVDDSEL  -----------------------------
// SVD Line: 69421

//  <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4RFVDDSEL
//    <name> RF2P4RFVDDSEL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40084100) RF2P4RFVDDSEL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PACTRL0 ) </loc>
//      <o.2..2> RF2P4RFVDDSEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_PACTRL0_BOOTSTRAP  -------------------------------
// SVD Line: 69428

//  <item> SFDITEM_FIELD__RAC_PACTRL0_BOOTSTRAP
//    <name> BOOTSTRAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40084100) BOOTSTRAP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PACTRL0 ) </loc>
//      <o.3..3> BOOTSTRAP
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_PACTRL0_RF2P4VDDPADET  -----------------------------
// SVD Line: 69435

//  <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4VDDPADET
//    <name> RF2P4VDDPADET </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40084100) RF2P4VDDPADET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PACTRL0 ) </loc>
//      <o.4..4> RF2P4VDDPADET
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_PACTRL0_CASCODE  --------------------------------
// SVD Line: 69442

//  <item> SFDITEM_FIELD__RAC_PACTRL0_CASCODE
//    <name> CASCODE </name>
//    <rw> 
//    <i> [Bits 13..6] RW (@ 0x40084100) CASCODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PACTRL0 >> 6) & 0xFF), ((RAC_PACTRL0 = (RAC_PACTRL0 & ~(0xFFUL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RAC_PACTRL0_SLICE  ---------------------------------
// SVD Line: 69449

//  <item> SFDITEM_FIELD__RAC_PACTRL0_SLICE
//    <name> SLICE </name>
//    <rw> 
//    <i> [Bits 21..14] RW (@ 0x40084100) SLICE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PACTRL0 >> 14) & 0xFF), ((RAC_PACTRL0 = (RAC_PACTRL0 & ~(0xFFUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_PACTRL0_STRIPE  ---------------------------------
// SVD Line: 69456

//  <item> SFDITEM_FIELD__RAC_PACTRL0_STRIPE
//    <name> STRIPE </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40084100) STRIPE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PACTRL0 >> 24) & 0x1F), ((RAC_PACTRL0 = (RAC_PACTRL0 & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_PACTRL0_DACGLITCHCTRL  -----------------------------
// SVD Line: 69463

//  <item> SFDITEM_FIELD__RAC_PACTRL0_DACGLITCHCTRL
//    <name> DACGLITCHCTRL </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40084100) DACGLITCHCTRL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PACTRL0 ) </loc>
//      <o.30..30> DACGLITCHCTRL
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_PACTRL0_CASCODEBYPASSEN  ----------------------------
// SVD Line: 69470

//  <item> SFDITEM_FIELD__RAC_PACTRL0_CASCODEBYPASSEN
//    <name> CASCODEBYPASSEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40084100) CASCODEBYPASSEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PACTRL0 ) </loc>
//      <o.31..31> CASCODEBYPASSEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RAC_PACTRL0  ----------------------------------
// SVD Line: 69398

//  <rtree> SFDITEM_REG__RAC_PACTRL0
//    <name> PACTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084100) PACTRL0 </i>
//    <loc> ( (unsigned int)((RAC_PACTRL0 >> 0) & 0xFFFFFFFF), ((RAC_PACTRL0 = (RAC_PACTRL0 & ~(0xDF3FFFDFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xDF3FFFDF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4PASEL </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4PAVDDSEL </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4RFVDDSEL </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_BOOTSTRAP </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_RF2P4VDDPADET </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_CASCODE </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_SLICE </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_STRIPE </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_DACGLITCHCTRL </item>
//    <item> SFDITEM_FIELD__RAC_PACTRL0_CASCODEBYPASSEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_PAPKDCTRL  ------------------------------
// SVD Line: 69479

unsigned int RAC_PAPKDCTRL __AT (0x40084104);



// -----------------------------  Field Item: RAC_PAPKDCTRL_PKDEN  --------------------------------
// SVD Line: 69488

//  <item> SFDITEM_FIELD__RAC_PAPKDCTRL_PKDEN
//    <name> PKDEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084104) PKDEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PAPKDCTRL ) </loc>
//      <o.0..0> PKDEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_PAPKDCTRL_VTLSEL  --------------------------------
// SVD Line: 69495

//  <item> SFDITEM_FIELD__RAC_PAPKDCTRL_VTLSEL
//    <name> VTLSEL </name>
//    <rw> 
//    <i> [Bits 6..2] RW (@ 0x40084104) VTLSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PAPKDCTRL >> 2) & 0x1F), ((RAC_PAPKDCTRL = (RAC_PAPKDCTRL & ~(0x1FUL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_PAPKDCTRL_VTHSEL  --------------------------------
// SVD Line: 69502

//  <item> SFDITEM_FIELD__RAC_PAPKDCTRL_VTHSEL
//    <name> VTHSEL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40084104) VTHSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PAPKDCTRL >> 8) & 0x1F), ((RAC_PAPKDCTRL = (RAC_PAPKDCTRL & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_PAPKDCTRL_CAPSEL  --------------------------------
// SVD Line: 69509

//  <item> SFDITEM_FIELD__RAC_PAPKDCTRL_CAPSEL
//    <name> CAPSEL </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40084104) CAPSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PAPKDCTRL >> 14) & 0x3), ((RAC_PAPKDCTRL = (RAC_PAPKDCTRL & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_PAPKDCTRL_I2VCM  --------------------------------
// SVD Line: 69516

//  <item> SFDITEM_FIELD__RAC_PAPKDCTRL_I2VCM
//    <name> I2VCM </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40084104) I2VCM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PAPKDCTRL >> 18) & 0x3), ((RAC_PAPKDCTRL = (RAC_PAPKDCTRL & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_PAPKDCTRL_PKDBIASTH  ------------------------------
// SVD Line: 69523

//  <item> SFDITEM_FIELD__RAC_PAPKDCTRL_PKDBIASTH
//    <name> PKDBIASTH </name>
//    <rw> 
//    <i> [Bits 24..22] RW (@ 0x40084104) PKDBIASTH </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PAPKDCTRL >> 22) & 0x7), ((RAC_PAPKDCTRL = (RAC_PAPKDCTRL & ~(0x7UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RAC_PAPKDCTRL  ---------------------------------
// SVD Line: 69479

//  <rtree> SFDITEM_REG__RAC_PAPKDCTRL
//    <name> PAPKDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084104) PAPKDCTRL </i>
//    <loc> ( (unsigned int)((RAC_PAPKDCTRL >> 0) & 0xFFFFFFFF), ((RAC_PAPKDCTRL = (RAC_PAPKDCTRL & ~(0x1CCDF7DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1CCDF7D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_PAPKDCTRL_PKDEN </item>
//    <item> SFDITEM_FIELD__RAC_PAPKDCTRL_VTLSEL </item>
//    <item> SFDITEM_FIELD__RAC_PAPKDCTRL_VTHSEL </item>
//    <item> SFDITEM_FIELD__RAC_PAPKDCTRL_CAPSEL </item>
//    <item> SFDITEM_FIELD__RAC_PAPKDCTRL_I2VCM </item>
//    <item> SFDITEM_FIELD__RAC_PAPKDCTRL_PKDBIASTH </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_PABIASCTRL0  -----------------------------
// SVD Line: 69532

unsigned int RAC_PABIASCTRL0 __AT (0x40084108);



// ---------------------------  Field Item: RAC_PABIASCTRL0_LDOBIAS  ------------------------------
// SVD Line: 69541

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL0_LDOBIAS
//    <name> LDOBIAS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084108) LDOBIAS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PABIASCTRL0 ) </loc>
//      <o.0..0> LDOBIAS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_PABIASCTRL0_PABIAS  -------------------------------
// SVD Line: 69548

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL0_PABIAS
//    <name> PABIAS </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40084108) PABIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL0 >> 2) & 0x3), ((RAC_PABIASCTRL0 = (RAC_PABIASCTRL0 & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_PABIASCTRL0_BUF0BIAS  ------------------------------
// SVD Line: 69555

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL0_BUF0BIAS
//    <name> BUF0BIAS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40084108) BUF0BIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL0 >> 6) & 0x3), ((RAC_PABIASCTRL0 = (RAC_PABIASCTRL0 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_PABIASCTRL0_BUF12BIAS  -----------------------------
// SVD Line: 69562

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL0_BUF12BIAS
//    <name> BUF12BIAS </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40084108) BUF12BIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL0 >> 10) & 0x3), ((RAC_PABIASCTRL0 = (RAC_PABIASCTRL0 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_PABIASCTRL0_TXPOWER  ------------------------------
// SVD Line: 69569

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL0_TXPOWER
//    <name> TXPOWER </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40084108) TXPOWER </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PABIASCTRL0 ) </loc>
//      <o.22..22> TXPOWER
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_PABIASCTRL0_CMGAIN  -------------------------------
// SVD Line: 69576

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL0_CMGAIN
//    <name> CMGAIN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40084108) CMGAIN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PABIASCTRL0 ) </loc>
//      <o.23..23> CMGAIN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: RAC_PABIASCTRL0  --------------------------------
// SVD Line: 69532

//  <rtree> SFDITEM_REG__RAC_PABIASCTRL0
//    <name> PABIASCTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084108) PABIASCTRL0 </i>
//    <loc> ( (unsigned int)((RAC_PABIASCTRL0 >> 0) & 0xFFFFFFFF), ((RAC_PABIASCTRL0 = (RAC_PABIASCTRL0 & ~(0xC00CCDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC00CCD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL0_LDOBIAS </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL0_PABIAS </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL0_BUF0BIAS </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL0_BUF12BIAS </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL0_TXPOWER </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL0_CMGAIN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_PABIASCTRL1  -----------------------------
// SVD Line: 69585

unsigned int RAC_PABIASCTRL1 __AT (0x4008410C);



// ----------------------------  Field Item: RAC_PABIASCTRL1_VLDO  --------------------------------
// SVD Line: 69594

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VLDO
//    <name> VLDO </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4008410C) VLDO </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL1 >> 0) & 0x7), ((RAC_PABIASCTRL1 = (RAC_PABIASCTRL1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_PABIASCTRL1_VLDOFB  -------------------------------
// SVD Line: 69601

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VLDOFB
//    <name> VLDOFB </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4008410C) VLDOFB </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL1 >> 4) & 0x3), ((RAC_PABIASCTRL1 = (RAC_PABIASCTRL1 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_PABIASCTRL1_VCASCODEHV  -----------------------------
// SVD Line: 69608

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VCASCODEHV
//    <name> VCASCODEHV </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x4008410C) VCASCODEHV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL1 >> 8) & 0x7), ((RAC_PABIASCTRL1 = (RAC_PABIASCTRL1 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_PABIASCTRL1_VCASCODELV  -----------------------------
// SVD Line: 69615

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VCASCODELV
//    <name> VCASCODELV </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4008410C) VCASCODELV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL1 >> 12) & 0x7), ((RAC_PABIASCTRL1 = (RAC_PABIASCTRL1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: RAC_PABIASCTRL1_RF2P4VDDPATHRESHOLD  ------------------------
// SVD Line: 69622

//  <item> SFDITEM_FIELD__RAC_PABIASCTRL1_RF2P4VDDPATHRESHOLD
//    <name> RF2P4VDDPATHRESHOLD </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x4008410C) RF2P4VDDPATHRESHOLD </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PABIASCTRL1 >> 16) & 0x3), ((RAC_PABIASCTRL1 = (RAC_PABIASCTRL1 & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_PABIASCTRL1  --------------------------------
// SVD Line: 69585

//  <rtree> SFDITEM_REG__RAC_PABIASCTRL1
//    <name> PABIASCTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008410C) PABIASCTRL1 </i>
//    <loc> ( (unsigned int)((RAC_PABIASCTRL1 >> 0) & 0xFFFFFFFF), ((RAC_PABIASCTRL1 = (RAC_PABIASCTRL1 & ~(0x37737UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x37737) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VLDO </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VLDOFB </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VCASCODEHV </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL1_VCASCODELV </item>
//    <item> SFDITEM_FIELD__RAC_PABIASCTRL1_RF2P4VDDPATHRESHOLD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_SGRFENCTRL0  -----------------------------
// SVD Line: 69631

unsigned int RAC_SGRFENCTRL0 __AT (0x40084110);



// ------------------------  Field Item: RAC_SGRFENCTRL0_LNAMIXBIASEN  ----------------------------
// SVD Line: 69640

//  <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_LNAMIXBIASEN
//    <name> LNAMIXBIASEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084110) LNAMIXBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGRFENCTRL0 ) </loc>
//      <o.1..1> LNAMIXBIASEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_SGRFENCTRL0_LNAMIXLOBIASEN  ---------------------------
// SVD Line: 69647

//  <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_LNAMIXLOBIASEN
//    <name> LNAMIXLOBIASEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40084110) LNAMIXLOBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGRFENCTRL0 ) </loc>
//      <o.2..2> LNAMIXLOBIASEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_SGRFENCTRL0_LNAMIXRFBIASEN  ---------------------------
// SVD Line: 69654

//  <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_LNAMIXRFBIASEN
//    <name> LNAMIXRFBIASEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40084110) LNAMIXRFBIASEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGRFENCTRL0 ) </loc>
//      <o.3..3> LNAMIXRFBIASEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SGRFENCTRL0_PASTANDBY  -----------------------------
// SVD Line: 69661

//  <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_PASTANDBY
//    <name> PASTANDBY </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40084110) PASTANDBY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGRFENCTRL0 ) </loc>
//      <o.16..16> PASTANDBY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SGRFENCTRL0_PAEN  --------------------------------
// SVD Line: 69668

//  <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_PAEN
//    <name> PAEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40084110) PAEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGRFENCTRL0 ) </loc>
//      <o.17..17> PAEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGRFENCTRL0_PAOUTEN  ------------------------------
// SVD Line: 69675

//  <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_PAOUTEN
//    <name> PAOUTEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40084110) PAOUTEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGRFENCTRL0 ) </loc>
//      <o.18..18> PAOUTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SGRFENCTRL0_TRSW  --------------------------------
// SVD Line: 69682

//  <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_TRSW
//    <name> TRSW </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40084110) TRSW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGRFENCTRL0 ) </loc>
//      <o.19..19> TRSW
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: RAC_SGRFENCTRL0  --------------------------------
// SVD Line: 69631

//  <rtree> SFDITEM_REG__RAC_SGRFENCTRL0
//    <name> SGRFENCTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084110) SGRFENCTRL0 </i>
//    <loc> ( (unsigned int)((RAC_SGRFENCTRL0 >> 0) & 0xFFFFFFFF), ((RAC_SGRFENCTRL0 = (RAC_SGRFENCTRL0 & ~(0xF000EUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF000E) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_LNAMIXBIASEN </item>
//    <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_LNAMIXLOBIASEN </item>
//    <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_LNAMIXRFBIASEN </item>
//    <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_PASTANDBY </item>
//    <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_PAEN </item>
//    <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_PAOUTEN </item>
//    <item> SFDITEM_FIELD__RAC_SGRFENCTRL0_TRSW </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_SGLNAMIXCTRL  ----------------------------
// SVD Line: 69691

unsigned int RAC_SGLNAMIXCTRL __AT (0x40084114);



// ------------------------  Field Item: RAC_SGLNAMIXCTRL_CASCODEBIAS  ----------------------------
// SVD Line: 69700

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_CASCODEBIAS
//    <name> CASCODEBIAS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40084114) CASCODEBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGLNAMIXCTRL >> 8) & 0x7), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGLNAMIXCTRL_LOBIAS  ------------------------------
// SVD Line: 69707

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_LOBIAS
//    <name> LOBIAS </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40084114) LOBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGLNAMIXCTRL >> 11) & 0x7), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_SGLNAMIXCTRL_VREG  -------------------------------
// SVD Line: 69714

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_VREG
//    <name> VREG </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40084114) VREG </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGLNAMIXCTRL >> 14) & 0x7), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGLNAMIXCTRL_RFBIAS  ------------------------------
// SVD Line: 69721

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_RFBIAS
//    <name> RFBIAS </name>
//    <rw> 
//    <i> [Bits 19..17] RW (@ 0x40084114) RFBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGLNAMIXCTRL >> 17) & 0x7), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x7UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: RAC_SGLNAMIXCTRL_RISEFALLATT  ----------------------------
// SVD Line: 69728

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_RISEFALLATT
//    <name> RISEFALLATT </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40084114) RISEFALLATT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGLNAMIXCTRL >> 20) & 0x7), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: RAC_SGLNAMIXCTRL_SGREGAMPCURR  ---------------------------
// SVD Line: 69735

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_SGREGAMPCURR
//    <name> SGREGAMPCURR </name>
//    <rw> 
//    <i> [Bits 25..23] RW (@ 0x40084114) SGREGAMPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGLNAMIXCTRL >> 23) & 0x7), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x7UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Field Item: RAC_SGLNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN  -----------------------
// SVD Line: 69742

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN
//    <name> LNAMIXAUXSYNTHINPUTEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40084114) LNAMIXAUXSYNTHINPUTEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGLNAMIXCTRL ) </loc>
//      <o.26..26> LNAMIXAUXSYNTHINPUTEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_SGLNAMIXCTRL_SGREGAMPBWRED  ---------------------------
// SVD Line: 69749

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_SGREGAMPBWRED
//    <name> SGREGAMPBWRED </name>
//    <rw> 
//    <i> [Bits 29..28] RW (@ 0x40084114) SGREGAMPBWRED </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGLNAMIXCTRL >> 28) & 0x3), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x3UL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGLNAMIXCTRL_ENLOAD  ------------------------------
// SVD Line: 69756

//  <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_ENLOAD
//    <name> ENLOAD </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40084114) ENLOAD </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGLNAMIXCTRL ) </loc>
//      <o.30..30> ENLOAD
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: RAC_SGLNAMIXCTRL  --------------------------------
// SVD Line: 69691

//  <rtree> SFDITEM_REG__RAC_SGLNAMIXCTRL
//    <name> SGLNAMIXCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084114) SGLNAMIXCTRL </i>
//    <loc> ( (unsigned int)((RAC_SGLNAMIXCTRL >> 0) & 0xFFFFFFFF), ((RAC_SGLNAMIXCTRL = (RAC_SGLNAMIXCTRL & ~(0x77FFFF00UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x77FFFF00) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_CASCODEBIAS </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_LOBIAS </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_VREG </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_RFBIAS </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_RISEFALLATT </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_SGREGAMPCURR </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_LNAMIXAUXSYNTHINPUTEN </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_SGREGAMPBWRED </item>
//    <item> SFDITEM_FIELD__RAC_SGLNAMIXCTRL_ENLOAD </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_SGPACTRL0  ------------------------------
// SVD Line: 69765

unsigned int RAC_SGPACTRL0 __AT (0x40084118);



// ---------------------------  Field Item: RAC_SGPACTRL0_BOOTSTRAP  ------------------------------
// SVD Line: 69774

//  <item> SFDITEM_FIELD__RAC_SGPACTRL0_BOOTSTRAP
//    <name> BOOTSTRAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40084118) BOOTSTRAP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPACTRL0 ) </loc>
//      <o.3..3> BOOTSTRAP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGPACTRL0_SGVBATDET  ------------------------------
// SVD Line: 69781

//  <item> SFDITEM_FIELD__RAC_SGPACTRL0_SGVBATDET
//    <name> SGVBATDET </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40084118) SGVBATDET </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPACTRL0 ) </loc>
//      <o.5..5> SGVBATDET
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_SGPACTRL0_CASCODE  -------------------------------
// SVD Line: 69788

//  <item> SFDITEM_FIELD__RAC_SGPACTRL0_CASCODE
//    <name> CASCODE </name>
//    <rw> 
//    <i> [Bits 13..6] RW (@ 0x40084118) CASCODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPACTRL0 >> 6) & 0xFF), ((RAC_SGPACTRL0 = (RAC_SGPACTRL0 & ~(0xFFUL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_SGPACTRL0_SLICE  --------------------------------
// SVD Line: 69795

//  <item> SFDITEM_FIELD__RAC_SGPACTRL0_SLICE
//    <name> SLICE </name>
//    <rw> 
//    <i> [Bits 21..14] RW (@ 0x40084118) SLICE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPACTRL0 >> 14) & 0xFF), ((RAC_SGPACTRL0 = (RAC_SGPACTRL0 & ~(0xFFUL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_SGPACTRL0_STRIPE  --------------------------------
// SVD Line: 69802

//  <item> SFDITEM_FIELD__RAC_SGPACTRL0_STRIPE
//    <name> STRIPE </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x40084118) STRIPE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPACTRL0 >> 24) & 0x1F), ((RAC_SGPACTRL0 = (RAC_SGPACTRL0 & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_SGPACTRL0_DACGLITCHCTRL  ----------------------------
// SVD Line: 69809

//  <item> SFDITEM_FIELD__RAC_SGPACTRL0_DACGLITCHCTRL
//    <name> DACGLITCHCTRL </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40084118) DACGLITCHCTRL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPACTRL0 ) </loc>
//      <o.30..30> DACGLITCHCTRL
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_SGPACTRL0_CASCODEBYPASSEN  ---------------------------
// SVD Line: 69816

//  <item> SFDITEM_FIELD__RAC_SGPACTRL0_CASCODEBYPASSEN
//    <name> CASCODEBYPASSEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40084118) CASCODEBYPASSEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPACTRL0 ) </loc>
//      <o.31..31> CASCODEBYPASSEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_SGPACTRL0  ---------------------------------
// SVD Line: 69765

//  <rtree> SFDITEM_REG__RAC_SGPACTRL0
//    <name> SGPACTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084118) SGPACTRL0 </i>
//    <loc> ( (unsigned int)((RAC_SGPACTRL0 >> 0) & 0xFFFFFFFF), ((RAC_SGPACTRL0 = (RAC_SGPACTRL0 & ~(0xDF3FFFE8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xDF3FFFE8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SGPACTRL0_BOOTSTRAP </item>
//    <item> SFDITEM_FIELD__RAC_SGPACTRL0_SGVBATDET </item>
//    <item> SFDITEM_FIELD__RAC_SGPACTRL0_CASCODE </item>
//    <item> SFDITEM_FIELD__RAC_SGPACTRL0_SLICE </item>
//    <item> SFDITEM_FIELD__RAC_SGPACTRL0_STRIPE </item>
//    <item> SFDITEM_FIELD__RAC_SGPACTRL0_DACGLITCHCTRL </item>
//    <item> SFDITEM_FIELD__RAC_SGPACTRL0_CASCODEBYPASSEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_SGPAPKDCTRL  -----------------------------
// SVD Line: 69825

unsigned int RAC_SGPAPKDCTRL __AT (0x4008411C);



// ----------------------------  Field Item: RAC_SGPAPKDCTRL_PKDEN  -------------------------------
// SVD Line: 69834

//  <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_PKDEN
//    <name> PKDEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008411C) PKDEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPAPKDCTRL ) </loc>
//      <o.0..0> PKDEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGPAPKDCTRL_VTLSEL  -------------------------------
// SVD Line: 69841

//  <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_VTLSEL
//    <name> VTLSEL </name>
//    <rw> 
//    <i> [Bits 6..2] RW (@ 0x4008411C) VTLSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPAPKDCTRL >> 2) & 0x1F), ((RAC_SGPAPKDCTRL = (RAC_SGPAPKDCTRL & ~(0x1FUL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGPAPKDCTRL_VTHSEL  -------------------------------
// SVD Line: 69848

//  <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_VTHSEL
//    <name> VTHSEL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x4008411C) VTHSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPAPKDCTRL >> 8) & 0x1F), ((RAC_SGPAPKDCTRL = (RAC_SGPAPKDCTRL & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SGPAPKDCTRL_CAPSEL  -------------------------------
// SVD Line: 69855

//  <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_CAPSEL
//    <name> CAPSEL </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x4008411C) CAPSEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPAPKDCTRL >> 14) & 0x3), ((RAC_SGPAPKDCTRL = (RAC_SGPAPKDCTRL & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_SGPAPKDCTRL_I2VCM  -------------------------------
// SVD Line: 69862

//  <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_I2VCM
//    <name> I2VCM </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x4008411C) I2VCM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPAPKDCTRL >> 18) & 0x3), ((RAC_SGPAPKDCTRL = (RAC_SGPAPKDCTRL & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_SGPAPKDCTRL_PKDBIASTH  -----------------------------
// SVD Line: 69869

//  <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_PKDBIASTH
//    <name> PKDBIASTH </name>
//    <rw> 
//    <i> [Bits 24..22] RW (@ 0x4008411C) PKDBIASTH </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPAPKDCTRL >> 22) & 0x7), ((RAC_SGPAPKDCTRL = (RAC_SGPAPKDCTRL & ~(0x7UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_SGPAPKDCTRL  --------------------------------
// SVD Line: 69825

//  <rtree> SFDITEM_REG__RAC_SGPAPKDCTRL
//    <name> SGPAPKDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008411C) SGPAPKDCTRL </i>
//    <loc> ( (unsigned int)((RAC_SGPAPKDCTRL >> 0) & 0xFFFFFFFF), ((RAC_SGPAPKDCTRL = (RAC_SGPAPKDCTRL & ~(0x1CCDF7DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1CCDF7D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_PKDEN </item>
//    <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_VTLSEL </item>
//    <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_VTHSEL </item>
//    <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_CAPSEL </item>
//    <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_I2VCM </item>
//    <item> SFDITEM_FIELD__RAC_SGPAPKDCTRL_PKDBIASTH </item>
//  </rtree>
//  


// ------------------------  Register Item Address: RAC_SGPABIASCTRL0  ----------------------------
// SVD Line: 69878

unsigned int RAC_SGPABIASCTRL0 __AT (0x40084120);



// --------------------------  Field Item: RAC_SGPABIASCTRL0_LDOBIAS  -----------------------------
// SVD Line: 69887

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_LDOBIAS
//    <name> LDOBIAS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084120) LDOBIAS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPABIASCTRL0 ) </loc>
//      <o.0..0> LDOBIAS
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SGPABIASCTRL0_PABIAS  ------------------------------
// SVD Line: 69894

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_PABIAS
//    <name> PABIAS </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40084120) PABIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL0 >> 2) & 0x3), ((RAC_SGPABIASCTRL0 = (RAC_SGPABIASCTRL0 & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_SGPABIASCTRL0_BUF0BIAS  -----------------------------
// SVD Line: 69901

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_BUF0BIAS
//    <name> BUF0BIAS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40084120) BUF0BIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL0 >> 6) & 0x3), ((RAC_SGPABIASCTRL0 = (RAC_SGPABIASCTRL0 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_SGPABIASCTRL0_BUF12BIAS  ----------------------------
// SVD Line: 69908

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_BUF12BIAS
//    <name> BUF12BIAS </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40084120) BUF12BIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL0 >> 10) & 0x3), ((RAC_SGPABIASCTRL0 = (RAC_SGPABIASCTRL0 & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_SGPABIASCTRL0_TXPOWER  -----------------------------
// SVD Line: 69915

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_TXPOWER
//    <name> TXPOWER </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40084120) TXPOWER </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPABIASCTRL0 ) </loc>
//      <o.22..22> TXPOWER
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_SGPABIASCTRL0_CMGAIN  ------------------------------
// SVD Line: 69922

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_CMGAIN
//    <name> CMGAIN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40084120) CMGAIN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPABIASCTRL0 ) </loc>
//      <o.23..23> CMGAIN
//    </check>
//  </item>
//  


// --------------------  Field Item: RAC_SGPABIASCTRL0_SGDACFILTBANDWIDTH  ------------------------
// SVD Line: 69929

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_SGDACFILTBANDWIDTH
//    <name> SGDACFILTBANDWIDTH </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40084120) SGDACFILTBANDWIDTH </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL0 >> 24) & 0x7), ((RAC_SGPABIASCTRL0 = (RAC_SGPABIASCTRL0 & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: RAC_SGPABIASCTRL0  -------------------------------
// SVD Line: 69878

//  <rtree> SFDITEM_REG__RAC_SGPABIASCTRL0
//    <name> SGPABIASCTRL0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084120) SGPABIASCTRL0 </i>
//    <loc> ( (unsigned int)((RAC_SGPABIASCTRL0 >> 0) & 0xFFFFFFFF), ((RAC_SGPABIASCTRL0 = (RAC_SGPABIASCTRL0 & ~(0x7C00CCDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C00CCD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_LDOBIAS </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_PABIAS </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_BUF0BIAS </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_BUF12BIAS </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_TXPOWER </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_CMGAIN </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL0_SGDACFILTBANDWIDTH </item>
//  </rtree>
//  


// ------------------------  Register Item Address: RAC_SGPABIASCTRL1  ----------------------------
// SVD Line: 69938

unsigned int RAC_SGPABIASCTRL1 __AT (0x40084124);



// ---------------------------  Field Item: RAC_SGPABIASCTRL1_VLDO  -------------------------------
// SVD Line: 69947

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VLDO
//    <name> VLDO </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40084124) VLDO </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL1 >> 0) & 0x7), ((RAC_SGPABIASCTRL1 = (RAC_SGPABIASCTRL1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_SGPABIASCTRL1_VLDOFB  ------------------------------
// SVD Line: 69954

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VLDOFB
//    <name> VLDOFB </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40084124) VLDOFB </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL1 >> 4) & 0x3), ((RAC_SGPABIASCTRL1 = (RAC_SGPABIASCTRL1 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: RAC_SGPABIASCTRL1_VCASCODEHV  ----------------------------
// SVD Line: 69961

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VCASCODEHV
//    <name> VCASCODEHV </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40084124) VCASCODEHV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL1 >> 8) & 0x7), ((RAC_SGPABIASCTRL1 = (RAC_SGPABIASCTRL1 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: RAC_SGPABIASCTRL1_VCASCODELV  ----------------------------
// SVD Line: 69968

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VCASCODELV
//    <name> VCASCODELV </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40084124) VCASCODELV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL1 >> 12) & 0x7), ((RAC_SGPABIASCTRL1 = (RAC_SGPABIASCTRL1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: RAC_SGPABIASCTRL1_SGVBATDETTHRESHOLD  ------------------------
// SVD Line: 69975

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_SGVBATDETTHRESHOLD
//    <name> SGVBATDETTHRESHOLD </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40084124) SGVBATDETTHRESHOLD </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SGPABIASCTRL1 >> 18) & 0x3), ((RAC_SGPABIASCTRL1 = (RAC_SGPABIASCTRL1 & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: RAC_SGPABIASCTRL1_SGTRIMLOWVBATCURR  ------------------------
// SVD Line: 69982

//  <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_SGTRIMLOWVBATCURR
//    <name> SGTRIMLOWVBATCURR </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40084124) SGTRIMLOWVBATCURR </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_SGPABIASCTRL1 ) </loc>
//      <o.20..20> SGTRIMLOWVBATCURR
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: RAC_SGPABIASCTRL1  -------------------------------
// SVD Line: 69938

//  <rtree> SFDITEM_REG__RAC_SGPABIASCTRL1
//    <name> SGPABIASCTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084124) SGPABIASCTRL1 </i>
//    <loc> ( (unsigned int)((RAC_SGPABIASCTRL1 >> 0) & 0xFFFFFFFF), ((RAC_SGPABIASCTRL1 = (RAC_SGPABIASCTRL1 & ~(0x1C7737UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1C7737) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VLDO </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VLDOFB </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VCASCODEHV </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_VCASCODELV </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_SGVBATDETTHRESHOLD </item>
//    <item> SFDITEM_FIELD__RAC_SGPABIASCTRL1_SGTRIMLOWVBATCURR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_RFSTATUS  ------------------------------
// SVD Line: 69991

unsigned int RAC_RFSTATUS __AT (0x40084128);



// -------------------------  Field Item: RAC_RFSTATUS_MODRAMPUPDONE  -----------------------------
// SVD Line: 70000

//  <item> SFDITEM_FIELD__RAC_RFSTATUS_MODRAMPUPDONE
//    <name> MODRAMPUPDONE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40084128) MODRAMPUPDONE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFSTATUS ) </loc>
//      <o.0..0> MODRAMPUPDONE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFSTATUS_PAVHIGH  --------------------------------
// SVD Line: 70007

//  <item> SFDITEM_FIELD__RAC_RFSTATUS_PAVHIGH
//    <name> PAVHIGH </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40084128) PAVHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFSTATUS ) </loc>
//      <o.1..1> PAVHIGH
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_RFSTATUS_PAVLOW  --------------------------------
// SVD Line: 70014

//  <item> SFDITEM_FIELD__RAC_RFSTATUS_PAVLOW
//    <name> PAVLOW </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40084128) PAVLOW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFSTATUS ) </loc>
//      <o.2..2> PAVLOW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_RFSTATUS_PABATHIGH  -------------------------------
// SVD Line: 70021

//  <item> SFDITEM_FIELD__RAC_RFSTATUS_PABATHIGH
//    <name> PABATHIGH </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40084128) PABATHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFSTATUS ) </loc>
//      <o.3..3> PABATHIGH
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_RFSTATUS  ----------------------------------
// SVD Line: 69991

//  <rtree> SFDITEM_REG__RAC_RFSTATUS
//    <name> RFSTATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40084128) RFSTATUS </i>
//    <loc> ( (unsigned int)((RAC_RFSTATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RAC_RFSTATUS_MODRAMPUPDONE </item>
//    <item> SFDITEM_FIELD__RAC_RFSTATUS_PAVHIGH </item>
//    <item> SFDITEM_FIELD__RAC_RFSTATUS_PAVLOW </item>
//    <item> SFDITEM_FIELD__RAC_RFSTATUS_PABATHIGH </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_RFBIASCTRL  -----------------------------
// SVD Line: 70030

unsigned int RAC_RFBIASCTRL __AT (0x4008412C);



// ---------------------------  Field Item: RAC_RFBIASCTRL_LDOVREF  -------------------------------
// SVD Line: 70039

//  <item> SFDITEM_FIELD__RAC_RFBIASCTRL_LDOVREF
//    <name> LDOVREF </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4008412C) LDOVREF </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RFBIASCTRL >> 0) & 0x7), ((RAC_RFBIASCTRL = (RAC_RFBIASCTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_RFBIASCTRL_LDOAMPCURR  -----------------------------
// SVD Line: 70046

//  <item> SFDITEM_FIELD__RAC_RFBIASCTRL_LDOAMPCURR
//    <name> LDOAMPCURR </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4008412C) LDOAMPCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RFBIASCTRL >> 4) & 0x7), ((RAC_RFBIASCTRL = (RAC_RFBIASCTRL & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: RAC_RFBIASCTRL_STARTUPSUPPLY  ----------------------------
// SVD Line: 70053

//  <item> SFDITEM_FIELD__RAC_RFBIASCTRL_STARTUPSUPPLY
//    <name> STARTUPSUPPLY </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4008412C) STARTUPSUPPLY </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFBIASCTRL ) </loc>
//      <o.16..16> STARTUPSUPPLY
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_RFBIASCTRL_STARTUPCORE  -----------------------------
// SVD Line: 70060

//  <item> SFDITEM_FIELD__RAC_RFBIASCTRL_STARTUPCORE
//    <name> STARTUPCORE </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4008412C) STARTUPCORE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFBIASCTRL ) </loc>
//      <o.17..17> STARTUPCORE
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_RFBIASCTRL_DISBOOTSTRAP  ----------------------------
// SVD Line: 70067

//  <item> SFDITEM_FIELD__RAC_RFBIASCTRL_DISBOOTSTRAP
//    <name> DISBOOTSTRAP </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4008412C) DISBOOTSTRAP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_RFBIASCTRL ) </loc>
//      <o.18..18> DISBOOTSTRAP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: RAC_RFBIASCTRL  ---------------------------------
// SVD Line: 70030

//  <rtree> SFDITEM_REG__RAC_RFBIASCTRL
//    <name> RFBIASCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008412C) RFBIASCTRL </i>
//    <loc> ( (unsigned int)((RAC_RFBIASCTRL >> 0) & 0xFFFFFFFF), ((RAC_RFBIASCTRL = (RAC_RFBIASCTRL & ~(0x70077UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70077) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_RFBIASCTRL_LDOVREF </item>
//    <item> SFDITEM_FIELD__RAC_RFBIASCTRL_LDOAMPCURR </item>
//    <item> SFDITEM_FIELD__RAC_RFBIASCTRL_STARTUPSUPPLY </item>
//    <item> SFDITEM_FIELD__RAC_RFBIASCTRL_STARTUPCORE </item>
//    <item> SFDITEM_FIELD__RAC_RFBIASCTRL_DISBOOTSTRAP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_RFBIASCAL  ------------------------------
// SVD Line: 70076

unsigned int RAC_RFBIASCAL __AT (0x40084130);



// -----------------------------  Field Item: RAC_RFBIASCAL_VREF  ---------------------------------
// SVD Line: 70085

//  <item> SFDITEM_FIELD__RAC_RFBIASCAL_VREF
//    <name> VREF </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40084130) VREF </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RFBIASCAL >> 0) & 0x3F), ((RAC_RFBIASCAL = (RAC_RFBIASCAL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_RFBIASCAL_BIAS  ---------------------------------
// SVD Line: 70092

//  <item> SFDITEM_FIELD__RAC_RFBIASCAL_BIAS
//    <name> BIAS </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40084130) BIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RFBIASCAL >> 8) & 0x3F), ((RAC_RFBIASCAL = (RAC_RFBIASCAL & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_RFBIASCAL_TEMPCO  --------------------------------
// SVD Line: 70099

//  <item> SFDITEM_FIELD__RAC_RFBIASCAL_TEMPCO
//    <name> TEMPCO </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40084130) TEMPCO </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RFBIASCAL >> 16) & 0x3F), ((RAC_RFBIASCAL = (RAC_RFBIASCAL & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RAC_RFBIASCAL  ---------------------------------
// SVD Line: 70076

//  <rtree> SFDITEM_REG__RAC_RFBIASCAL
//    <name> RFBIASCAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084130) RFBIASCAL </i>
//    <loc> ( (unsigned int)((RAC_RFBIASCAL >> 0) & 0xFFFFFFFF), ((RAC_RFBIASCAL = (RAC_RFBIASCAL & ~(0x3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_RFBIASCAL_VREF </item>
//    <item> SFDITEM_FIELD__RAC_RFBIASCAL_BIAS </item>
//    <item> SFDITEM_FIELD__RAC_RFBIASCAL_TEMPCO </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_LNAMIXCTRL1  -----------------------------
// SVD Line: 70108

unsigned int RAC_LNAMIXCTRL1 __AT (0x40084134);



// ------------------------  Field Item: RAC_LNAMIXCTRL1_TRIMAUXPLLCLK  ---------------------------
// SVD Line: 70117

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMAUXPLLCLK
//    <name> TRIMAUXPLLCLK </name>
//    <rw> 
//    <i> [Bits 4..1] RW (@ 0x40084134) TRIMAUXPLLCLK </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL1 >> 1) & 0xF), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0xFUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: RAC_LNAMIXCTRL1_TRIMTRSWGATEV  ---------------------------
// SVD Line: 70124

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMTRSWGATEV
//    <name> TRIMTRSWGATEV </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40084134) TRIMTRSWGATEV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL1 >> 5) & 0x3), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_LNAMIXCTRL1_TRIMVCASLDO  ----------------------------
// SVD Line: 70131

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMVCASLDO
//    <name> TRIMVCASLDO </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40084134) TRIMVCASLDO </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LNAMIXCTRL1 ) </loc>
//      <o.7..7> TRIMVCASLDO
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_LNAMIXCTRL1_TRIMVREFLDO  ----------------------------
// SVD Line: 70138

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMVREFLDO
//    <name> TRIMVREFLDO </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40084134) TRIMVREFLDO </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL1 >> 8) & 0x7), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_LNAMIXCTRL1_TRIMVREGMIN  ----------------------------
// SVD Line: 70145

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMVREGMIN
//    <name> TRIMVREGMIN </name>
//    <rw> 
//    <i> [Bits 12..11] RW (@ 0x40084134) TRIMVREGMIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL1 >> 11) & 0x3), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0x3UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RAC_LNAMIXCTRL1_TRIMAUXBIAS  ----------------------------
// SVD Line: 70152

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMAUXBIAS
//    <name> TRIMAUXBIAS </name>
//    <rw> 
//    <i> [Bits 14..13] RW (@ 0x40084134) TRIMAUXBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL1 >> 13) & 0x3), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0x3UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_LNAMIXCTRL1_ENBIASCAL  -----------------------------
// SVD Line: 70159

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_ENBIASCAL
//    <name> ENBIASCAL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40084134) ENBIASCAL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LNAMIXCTRL1 ) </loc>
//      <o.15..15> ENBIASCAL
//    </check>
//  </item>
//  


// ------------------------  Field Item: RAC_LNAMIXCTRL1_STATUSBIASCAL  ---------------------------
// SVD Line: 70166

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_STATUSBIASCAL
//    <name> STATUSBIASCAL </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40084134) STATUSBIASCAL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_LNAMIXCTRL1 ) </loc>
//      <o.16..16> STATUSBIASCAL
//    </check>
//  </item>
//  


// -----------------------  Field Item: RAC_LNAMIXCTRL1_TRIMAUXPLLGAIN  ---------------------------
// SVD Line: 70173

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMAUXPLLGAIN
//    <name> TRIMAUXPLLGAIN </name>
//    <rw> 
//    <i> [Bits 20..17] RW (@ 0x40084134) TRIMAUXPLLGAIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL1 >> 17) & 0xF), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0xFUL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_LNAMIXCTRL1_TRIMLDOAMPBWRED  --------------------------
// SVD Line: 70180

//  <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMLDOAMPBWRED
//    <name> TRIMLDOAMPBWRED </name>
//    <rw> 
//    <i> [Bits 22..21] RW (@ 0x40084134) TRIMLDOAMPBWRED </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_LNAMIXCTRL1 >> 21) & 0x3), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0x3UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_LNAMIXCTRL1  --------------------------------
// SVD Line: 70108

//  <rtree> SFDITEM_REG__RAC_LNAMIXCTRL1
//    <name> LNAMIXCTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084134) LNAMIXCTRL1 </i>
//    <loc> ( (unsigned int)((RAC_LNAMIXCTRL1 >> 0) & 0xFFFFFFFF), ((RAC_LNAMIXCTRL1 = (RAC_LNAMIXCTRL1 & ~(0x7FFFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMAUXPLLCLK </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMTRSWGATEV </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMVCASLDO </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMVREFLDO </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMVREGMIN </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMAUXBIAS </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_ENBIASCAL </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_STATUSBIASCAL </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMAUXPLLGAIN </item>
//    <item> SFDITEM_FIELD__RAC_LNAMIXCTRL1_TRIMLDOAMPBWRED </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_IFPGACTRL  ------------------------------
// SVD Line: 70189

unsigned int RAC_IFPGACTRL __AT (0x40084138);



// -----------------------------  Field Item: RAC_IFPGACTRL_VLDO  ---------------------------------
// SVD Line: 70198

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_VLDO
//    <name> VLDO </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40084138) VLDO </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACTRL >> 1) & 0x7), ((RAC_IFPGACTRL = (RAC_IFPGACTRL & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFPGACTRL_BANDSEL  -------------------------------
// SVD Line: 70205

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_BANDSEL
//    <name> BANDSEL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40084138) BANDSEL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFPGACTRL ) </loc>
//      <o.4..4> BANDSEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_IFPGACTRL_CASCBIAS  -------------------------------
// SVD Line: 70212

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_CASCBIAS
//    <name> CASCBIAS </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40084138) CASCBIAS </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACTRL >> 5) & 0x7), ((RAC_IFPGACTRL = (RAC_IFPGACTRL & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFPGACTRL_TRIMVCASLDO  -----------------------------
// SVD Line: 70219

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVCASLDO
//    <name> TRIMVCASLDO </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40084138) TRIMVCASLDO </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFPGACTRL ) </loc>
//      <o.8..8> TRIMVCASLDO
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFPGACTRL_TRIMVCM  -------------------------------
// SVD Line: 70226

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVCM
//    <name> TRIMVCM </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x40084138) TRIMVCM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACTRL >> 9) & 0x7), ((RAC_IFPGACTRL = (RAC_IFPGACTRL & ~(0x7UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFPGACTRL_TRIMVREFLDO  -----------------------------
// SVD Line: 70233

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVREFLDO
//    <name> TRIMVREFLDO </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40084138) TRIMVREFLDO </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACTRL >> 12) & 0x7), ((RAC_IFPGACTRL = (RAC_IFPGACTRL & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFPGACTRL_TRIMVREGMIN  -----------------------------
// SVD Line: 70240

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVREGMIN
//    <name> TRIMVREGMIN </name>
//    <rw> 
//    <i> [Bits 16..15] RW (@ 0x40084138) TRIMVREGMIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACTRL >> 15) & 0x3), ((RAC_IFPGACTRL = (RAC_IFPGACTRL & ~(0x3UL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFPGACTRL_ENHYST  --------------------------------
// SVD Line: 70247

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_ENHYST
//    <name> ENHYST </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40084138) ENHYST </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFPGACTRL ) </loc>
//      <o.17..17> ENHYST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFPGACTRL_ENOFFD  --------------------------------
// SVD Line: 70254

//  <item> SFDITEM_FIELD__RAC_IFPGACTRL_ENOFFD
//    <name> ENOFFD </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40084138) ENOFFD </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFPGACTRL ) </loc>
//      <o.18..18> ENOFFD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_IFPGACTRL  ---------------------------------
// SVD Line: 70189

//  <rtree> SFDITEM_REG__RAC_IFPGACTRL
//    <name> IFPGACTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084138) IFPGACTRL </i>
//    <loc> ( (unsigned int)((RAC_IFPGACTRL >> 0) & 0xFFFFFFFF), ((RAC_IFPGACTRL = (RAC_IFPGACTRL & ~(0x7FFFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_VLDO </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_BANDSEL </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_CASCBIAS </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVCASLDO </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVCM </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVREFLDO </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_TRIMVREGMIN </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_ENHYST </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACTRL_ENOFFD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_IFPGACAL  ------------------------------
// SVD Line: 70263

unsigned int RAC_IFPGACAL __AT (0x4008413C);



// -----------------------------  Field Item: RAC_IFPGACAL_IRAMP  ---------------------------------
// SVD Line: 70272

//  <item> SFDITEM_FIELD__RAC_IFPGACAL_IRAMP
//    <name> IRAMP </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x4008413C) IRAMP </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACAL >> 0) & 0x7F), ((RAC_IFPGACAL = (RAC_IFPGACAL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFPGACAL_IRPHASE  --------------------------------
// SVD Line: 70279

//  <item> SFDITEM_FIELD__RAC_IFPGACAL_IRPHASE
//    <name> IRPHASE </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x4008413C) IRPHASE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACAL >> 8) & 0x7F), ((RAC_IFPGACAL = (RAC_IFPGACAL & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFPGACAL_OFFSETI  --------------------------------
// SVD Line: 70286

//  <item> SFDITEM_FIELD__RAC_IFPGACAL_OFFSETI
//    <name> OFFSETI </name>
//    <rw> 
//    <i> [Bits 22..16] RW (@ 0x4008413C) OFFSETI </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACAL >> 16) & 0x7F), ((RAC_IFPGACAL = (RAC_IFPGACAL & ~(0x7FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFPGACAL_OFFSETQ  --------------------------------
// SVD Line: 70293

//  <item> SFDITEM_FIELD__RAC_IFPGACAL_OFFSETQ
//    <name> OFFSETQ </name>
//    <rw> 
//    <i> [Bits 30..24] RW (@ 0x4008413C) OFFSETQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFPGACAL >> 24) & 0x7F), ((RAC_IFPGACAL = (RAC_IFPGACAL & ~(0x7FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RAC_IFPGACAL  ----------------------------------
// SVD Line: 70263

//  <rtree> SFDITEM_REG__RAC_IFPGACAL
//    <name> IFPGACAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008413C) IFPGACAL </i>
//    <loc> ( (unsigned int)((RAC_IFPGACAL >> 0) & 0xFFFFFFFF), ((RAC_IFPGACAL = (RAC_IFPGACAL & ~(0x7F7F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IFPGACAL_IRAMP </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACAL_IRPHASE </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACAL_OFFSETI </item>
//    <item> SFDITEM_FIELD__RAC_IFPGACAL_OFFSETQ </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_IFFILTCTRL  -----------------------------
// SVD Line: 70302

unsigned int RAC_IFFILTCTRL __AT (0x40084140);



// --------------------------  Field Item: RAC_IFFILTCTRL_BANDWIDTH  ------------------------------
// SVD Line: 70311

//  <item> SFDITEM_FIELD__RAC_IFFILTCTRL_BANDWIDTH
//    <name> BANDWIDTH </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40084140) BANDWIDTH </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFFILTCTRL >> 0) & 0xF), ((RAC_IFFILTCTRL = (RAC_IFFILTCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_IFFILTCTRL_CENTFREQ  ------------------------------
// SVD Line: 70318

//  <item> SFDITEM_FIELD__RAC_IFFILTCTRL_CENTFREQ
//    <name> CENTFREQ </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40084140) CENTFREQ </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFFILTCTRL >> 5) & 0x7), ((RAC_IFFILTCTRL = (RAC_IFFILTCTRL & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_IFFILTCTRL_VCM  ---------------------------------
// SVD Line: 70325

//  <item> SFDITEM_FIELD__RAC_IFFILTCTRL_VCM
//    <name> VCM </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40084140) VCM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFFILTCTRL >> 18) & 0x3), ((RAC_IFFILTCTRL = (RAC_IFFILTCTRL & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_IFFILTCTRL_VREG  --------------------------------
// SVD Line: 70332

//  <item> SFDITEM_FIELD__RAC_IFFILTCTRL_VREG
//    <name> VREG </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x40084140) VREG </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFFILTCTRL >> 21) & 0x7), ((RAC_IFFILTCTRL = (RAC_IFFILTCTRL & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFFILTCTRL_DROOP  --------------------------------
// SVD Line: 70339

//  <item> SFDITEM_FIELD__RAC_IFFILTCTRL_DROOP
//    <name> DROOP </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40084140) DROOP </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFFILTCTRL >> 25) & 0x3), ((RAC_IFFILTCTRL = (RAC_IFFILTCTRL & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFFILTCTRL_INPUTSHORT  -----------------------------
// SVD Line: 70346

//  <item> SFDITEM_FIELD__RAC_IFFILTCTRL_INPUTSHORT
//    <name> INPUTSHORT </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40084140) INPUTSHORT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFFILTCTRL ) </loc>
//      <o.31..31> INPUTSHORT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: RAC_IFFILTCTRL  ---------------------------------
// SVD Line: 70302

//  <rtree> SFDITEM_REG__RAC_IFFILTCTRL
//    <name> IFFILTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084140) IFFILTCTRL </i>
//    <loc> ( (unsigned int)((RAC_IFFILTCTRL >> 0) & 0xFFFFFFFF), ((RAC_IFFILTCTRL = (RAC_IFFILTCTRL & ~(0x86EC00EFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x86EC00EF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IFFILTCTRL_BANDWIDTH </item>
//    <item> SFDITEM_FIELD__RAC_IFFILTCTRL_CENTFREQ </item>
//    <item> SFDITEM_FIELD__RAC_IFFILTCTRL_VCM </item>
//    <item> SFDITEM_FIELD__RAC_IFFILTCTRL_VREG </item>
//    <item> SFDITEM_FIELD__RAC_IFFILTCTRL_DROOP </item>
//    <item> SFDITEM_FIELD__RAC_IFFILTCTRL_INPUTSHORT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RAC_IFADCCTRL  ------------------------------
// SVD Line: 70355

unsigned int RAC_IFADCCTRL __AT (0x40084144);



// ---------------------------  Field Item: RAC_IFADCCTRL_REALMODE  -------------------------------
// SVD Line: 70364

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_REALMODE
//    <name> REALMODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084144) REALMODE </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCTRL ) </loc>
//      <o.0..0> REALMODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_IFADCCTRL_INPUTSEL  -------------------------------
// SVD Line: 70371

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_INPUTSEL
//    <name> INPUTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084144) INPUTSEL </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCTRL ) </loc>
//      <o.1..1> INPUTSEL
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_IFADCCTRL_INPUTSCALE  ------------------------------
// SVD Line: 70378

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_INPUTSCALE
//    <name> INPUTSCALE </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40084144) INPUTSCALE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 2) & 0x3), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFADCCTRL_SHORTI  --------------------------------
// SVD Line: 70385

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_SHORTI
//    <name> SHORTI </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40084144) SHORTI </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCTRL ) </loc>
//      <o.4..4> SHORTI
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFADCCTRL_SHORTQ  --------------------------------
// SVD Line: 70392

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_SHORTQ
//    <name> SHORTQ </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40084144) SHORTQ </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCTRL ) </loc>
//      <o.5..5> SHORTQ
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_IFADCCTRL_VLDOSERIES  ------------------------------
// SVD Line: 70399

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOSERIES
//    <name> VLDOSERIES </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x40084144) VLDOSERIES </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 6) & 0x7), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x7UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: RAC_IFADCCTRL_VLDOSERIESCURR  ----------------------------
// SVD Line: 70406

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOSERIESCURR
//    <name> VLDOSERIESCURR </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x40084144) VLDOSERIESCURR </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 9) & 0x7), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x7UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_IFADCCTRL_VLDOSHUNT  ------------------------------
// SVD Line: 70413

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOSHUNT
//    <name> VLDOSHUNT </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40084144) VLDOSHUNT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 12) & 0x3), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFADCCTRL_VLDOCLKGEN  ------------------------------
// SVD Line: 70420

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOCLKGEN
//    <name> VLDOCLKGEN </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40084144) VLDOCLKGEN </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 14) & 0x3), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RAC_IFADCCTRL_VCM  ---------------------------------
// SVD Line: 70427

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_VCM
//    <name> VCM </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40084144) VCM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 16) & 0x7), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFADCCTRL_OTA1CURRENT  -----------------------------
// SVD Line: 70434

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_OTA1CURRENT
//    <name> OTA1CURRENT </name>
//    <rw> 
//    <i> [Bits 20..19] RW (@ 0x40084144) OTA1CURRENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 19) & 0x3), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x3UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFADCCTRL_OTA2CURRENT  -----------------------------
// SVD Line: 70441

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_OTA2CURRENT
//    <name> OTA2CURRENT </name>
//    <rw> 
//    <i> [Bits 22..21] RW (@ 0x40084144) OTA2CURRENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 21) & 0x3), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x3UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_IFADCCTRL_OTA3CURRENT  -----------------------------
// SVD Line: 70448

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_OTA3CURRENT
//    <name> OTA3CURRENT </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40084144) OTA3CURRENT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 23) & 0x3), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: RAC_IFADCCTRL_SATURATIONDETDIS  ---------------------------
// SVD Line: 70455

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_SATURATIONDETDIS
//    <name> SATURATIONDETDIS </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40084144) SATURATIONDETDIS </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCTRL ) </loc>
//      <o.25..25> SATURATIONDETDIS
//    </check>
//  </item>
//  


// -------------------------  Field Item: RAC_IFADCCTRL_REGENCLKDELAY  ----------------------------
// SVD Line: 70462

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_REGENCLKDELAY
//    <name> REGENCLKDELAY </name>
//    <rw> 
//    <i> [Bits 28..26] RW (@ 0x40084144) REGENCLKDELAY </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_IFADCCTRL >> 26) & 0x7), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x7UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_IFADCCTRL_ENABLECLK  ------------------------------
// SVD Line: 70469

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_ENABLECLK
//    <name> ENABLECLK </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40084144) ENABLECLK </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCTRL ) </loc>
//      <o.29..29> ENABLECLK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RAC_IFADCCTRL_INVERTCLK  ------------------------------
// SVD Line: 70476

//  <item> SFDITEM_FIELD__RAC_IFADCCTRL_INVERTCLK
//    <name> INVERTCLK </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40084144) INVERTCLK </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCTRL ) </loc>
//      <o.30..30> INVERTCLK
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_IFADCCTRL  ---------------------------------
// SVD Line: 70355

//  <rtree> SFDITEM_REG__RAC_IFADCCTRL
//    <name> IFADCCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084144) IFADCCTRL </i>
//    <loc> ( (unsigned int)((RAC_IFADCCTRL >> 0) & 0xFFFFFFFF), ((RAC_IFADCCTRL = (RAC_IFADCCTRL & ~(0x7FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_REALMODE </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_INPUTSEL </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_INPUTSCALE </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_SHORTI </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_SHORTQ </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOSERIES </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOSERIESCURR </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOSHUNT </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_VLDOCLKGEN </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_VCM </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_OTA1CURRENT </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_OTA2CURRENT </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_OTA3CURRENT </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_SATURATIONDETDIS </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_REGENCLKDELAY </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_ENABLECLK </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCTRL_INVERTCLK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_IFADCCAL  ------------------------------
// SVD Line: 70485

unsigned int RAC_IFADCCAL __AT (0x40084148);



// -----------------------------  Field Item: RAC_IFADCCAL_CALEN  ---------------------------------
// SVD Line: 70494

//  <item> SFDITEM_FIELD__RAC_IFADCCAL_CALEN
//    <name> CALEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40084148) CALEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCAL ) </loc>
//      <o.4..4> CALEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RAC_IFADCCAL_RCCALOUT  -------------------------------
// SVD Line: 70501

//  <item> SFDITEM_FIELD__RAC_IFADCCAL_RCCALOUT
//    <name> RCCALOUT </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40084148) RCCALOUT </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_IFADCCAL ) </loc>
//      <o.5..5> RCCALOUT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_IFADCCAL  ----------------------------------
// SVD Line: 70485

//  <rtree> SFDITEM_REG__RAC_IFADCCAL
//    <name> IFADCCAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084148) IFADCCAL </i>
//    <loc> ( (unsigned int)((RAC_IFADCCAL >> 0) & 0xFFFFFFFF), ((RAC_IFADCCAL = (RAC_IFADCCAL & ~(0x10UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x10) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_IFADCCAL_CALEN </item>
//    <item> SFDITEM_FIELD__RAC_IFADCCAL_RCCALOUT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RAC_PAENCTRL  ------------------------------
// SVD Line: 70510

unsigned int RAC_PAENCTRL __AT (0x4008414C);



// ----------------------------  Field Item: RAC_PAENCTRL_PACTUNEN  -------------------------------
// SVD Line: 70519

//  <item> SFDITEM_FIELD__RAC_PAENCTRL_PACTUNEN
//    <name> PACTUNEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008414C) PACTUNEN </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PAENCTRL ) </loc>
//      <o.2..2> PACTUNEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RAC_PAENCTRL_PARAMP  --------------------------------
// SVD Line: 70526

//  <item> SFDITEM_FIELD__RAC_PAENCTRL_PARAMP
//    <name> PARAMP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008414C) PARAMP </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_PAENCTRL ) </loc>
//      <o.8..8> PARAMP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RAC_PAENCTRL  ----------------------------------
// SVD Line: 70510

//  <rtree> SFDITEM_REG__RAC_PAENCTRL
//    <name> PAENCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008414C) PAENCTRL </i>
//    <loc> ( (unsigned int)((RAC_PAENCTRL >> 0) & 0xFFFFFFFF), ((RAC_PAENCTRL = (RAC_PAENCTRL & ~(0x104UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x104) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_PAENCTRL_PACTUNEN </item>
//    <item> SFDITEM_FIELD__RAC_PAENCTRL_PARAMP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RAC_PACTUNECTRL  -----------------------------
// SVD Line: 70535

unsigned int RAC_PACTUNECTRL __AT (0x40084150);



// ---------------------------  Field Item: RAC_PACTUNECTRL_PACTUNE  ------------------------------
// SVD Line: 70544

//  <item> SFDITEM_FIELD__RAC_PACTUNECTRL_PACTUNE
//    <name> PACTUNE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40084150) PACTUNE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PACTUNECTRL >> 0) & 0x7), ((RAC_PACTUNECTRL = (RAC_PACTUNECTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: RAC_PACTUNECTRL_SGPACTUNE  -----------------------------
// SVD Line: 70551

//  <item> SFDITEM_FIELD__RAC_PACTUNECTRL_SGPACTUNE
//    <name> SGPACTUNE </name>
//    <rw> 
//    <i> [Bits 8..4] RW (@ 0x40084150) SGPACTUNE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_PACTUNECTRL >> 4) & 0x1F), ((RAC_PACTUNECTRL = (RAC_PACTUNECTRL & ~(0x1FUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RAC_PACTUNECTRL  --------------------------------
// SVD Line: 70535

//  <rtree> SFDITEM_REG__RAC_PACTUNECTRL
//    <name> PACTUNECTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084150) PACTUNECTRL </i>
//    <loc> ( (unsigned int)((RAC_PACTUNECTRL >> 0) & 0xFFFFFFFF), ((RAC_PACTUNECTRL = (RAC_PACTUNECTRL & ~(0x1F7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_PACTUNECTRL_PACTUNE </item>
//    <item> SFDITEM_FIELD__RAC_PACTUNECTRL_SGPACTUNE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RAC_RCTUNE  -------------------------------
// SVD Line: 70560

unsigned int RAC_RCTUNE __AT (0x40084154);



// ---------------------------  Field Item: RAC_RCTUNE_IFADCRCTUNE  -------------------------------
// SVD Line: 70569

//  <item> SFDITEM_FIELD__RAC_RCTUNE_IFADCRCTUNE
//    <name> IFADCRCTUNE </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40084154) IFADCRCTUNE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RCTUNE >> 0) & 0x3F), ((RAC_RCTUNE = (RAC_RCTUNE & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RAC_RCTUNE_IFFILT  ---------------------------------
// SVD Line: 70576

//  <item> SFDITEM_FIELD__RAC_RCTUNE_IFFILT
//    <name> IFFILT </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40084154) IFFILT </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_RCTUNE >> 16) & 0x3F), ((RAC_RCTUNE = (RAC_RCTUNE & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RAC_RCTUNE  -----------------------------------
// SVD Line: 70560

//  <rtree> SFDITEM_REG__RAC_RCTUNE
//    <name> RCTUNE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084154) RCTUNE </i>
//    <loc> ( (unsigned int)((RAC_RCTUNE >> 0) & 0xFFFFFFFF), ((RAC_RCTUNE = (RAC_RCTUNE & ~(0x3F003FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F003F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_RCTUNE_IFADCRCTUNE </item>
//    <item> SFDITEM_FIELD__RAC_RCTUNE_IFFILT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RAC_APC  ---------------------------------
// SVD Line: 70585

unsigned int RAC_APC __AT (0x40084158);



// ---------------------------  Field Item: RAC_APC_ENPASTATUSVDDPA  ------------------------------
// SVD Line: 70594

//  <item> SFDITEM_FIELD__RAC_APC_ENPASTATUSVDDPA
//    <name> ENPASTATUSVDDPA </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40084158) ENPASTATUSVDDPA </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_APC ) </loc>
//      <o.0..0> ENPASTATUSVDDPA
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_APC_ENPASTATUSPKDVTH  ------------------------------
// SVD Line: 70601

//  <item> SFDITEM_FIELD__RAC_APC_ENPASTATUSPKDVTH
//    <name> ENPASTATUSPKDVTH </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40084158) ENPASTATUSPKDVTH </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_APC ) </loc>
//      <o.1..1> ENPASTATUSPKDVTH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RAC_APC_ENAPCSW  ----------------------------------
// SVD Line: 70608

//  <item> SFDITEM_FIELD__RAC_APC_ENAPCSW
//    <name> ENAPCSW </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40084158) ENAPCSW </i>
//    <check> 
//      <loc> ( (unsigned int) RAC_APC ) </loc>
//      <o.2..2> ENAPCSW
//    </check>
//  </item>
//  


// --------------------------  Field Item: RAC_APC_AMPCONTROLLIMITSW  -----------------------------
// SVD Line: 70615

//  <item> SFDITEM_FIELD__RAC_APC_AMPCONTROLLIMITSW
//    <name> AMPCONTROLLIMITSW </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40084158) AMPCONTROLLIMITSW </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_APC >> 24) & 0xFF), ((RAC_APC = (RAC_APC & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RAC_APC  ------------------------------------
// SVD Line: 70585

//  <rtree> SFDITEM_REG__RAC_APC
//    <name> APC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40084158) APC </i>
//    <loc> ( (unsigned int)((RAC_APC >> 0) & 0xFFFFFFFF), ((RAC_APC = (RAC_APC & ~(0xFF000007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF000007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_APC_ENPASTATUSVDDPA </item>
//    <item> SFDITEM_FIELD__RAC_APC_ENPASTATUSPKDVTH </item>
//    <item> SFDITEM_FIELD__RAC_APC_ENAPCSW </item>
//    <item> SFDITEM_FIELD__RAC_APC_AMPCONTROLLIMITSW </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RAC_SPARE  --------------------------------
// SVD Line: 70624

unsigned int RAC_SPARE __AT (0x4008415C);



// ----------------------------  Field Item: RAC_SPARE_SYNTHSPARE  --------------------------------
// SVD Line: 70633

//  <item> SFDITEM_FIELD__RAC_SPARE_SYNTHSPARE
//    <name> SYNTHSPARE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4008415C) SYNTHSPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 0) & 0xFF), ((RAC_SPARE = (RAC_SPARE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SPARE_LNAMIXERSPARE  ------------------------------
// SVD Line: 70640

//  <item> SFDITEM_FIELD__RAC_SPARE_LNAMIXERSPARE
//    <name> LNAMIXERSPARE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4008415C) LNAMIXERSPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 8) & 0x3), ((RAC_SPARE = (RAC_SPARE & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_SPARE_IFFILTSPARE  -------------------------------
// SVD Line: 70647

//  <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE
//    <name> IFFILTSPARE </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x4008415C) IFFILTSPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 10) & 0x7), ((RAC_SPARE = (RAC_SPARE & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_SPARE_IFPGASPARE  --------------------------------
// SVD Line: 70654

//  <item> SFDITEM_FIELD__RAC_SPARE_IFPGASPARE
//    <name> IFPGASPARE </name>
//    <rw> 
//    <i> [Bits 14..13] RW (@ 0x4008415C) IFPGASPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 13) & 0x3), ((RAC_SPARE = (RAC_SPARE & ~(0x3UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SPARE_IFFILTSPARE0  -------------------------------
// SVD Line: 70661

//  <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE0
//    <name> IFFILTSPARE0 </name>
//    <rw> 
//    <i> [Bits 16..15] RW (@ 0x4008415C) IFFILTSPARE0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 15) & 0x3), ((RAC_SPARE = (RAC_SPARE & ~(0x3UL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SPARE_IFFILTSPARE1  -------------------------------
// SVD Line: 70668

//  <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE1
//    <name> IFFILTSPARE1 </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x4008415C) IFFILTSPARE1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 17) & 0x3), ((RAC_SPARE = (RAC_SPARE & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SPARE_IFFILTSPARE2  -------------------------------
// SVD Line: 70675

//  <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE2
//    <name> IFFILTSPARE2 </name>
//    <rw> 
//    <i> [Bits 20..19] RW (@ 0x4008415C) IFFILTSPARE2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 19) & 0x3), ((RAC_SPARE = (RAC_SPARE & ~(0x3UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RAC_SPARE_IFADCSPARE  --------------------------------
// SVD Line: 70682

//  <item> SFDITEM_FIELD__RAC_SPARE_IFADCSPARE
//    <name> IFADCSPARE </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x4008415C) IFADCSPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 21) & 0x7), ((RAC_SPARE = (RAC_SPARE & ~(0x7UL << 21 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 21 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RAC_SPARE_PASPARE  ---------------------------------
// SVD Line: 70689

//  <item> SFDITEM_FIELD__RAC_SPARE_PASPARE
//    <name> PASPARE </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x4008415C) PASPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 24) & 0x7), ((RAC_SPARE = (RAC_SPARE & ~(0x7UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RAC_SPARE_SGPASPARE  --------------------------------
// SVD Line: 70696

//  <item> SFDITEM_FIELD__RAC_SPARE_SGPASPARE
//    <name> SGPASPARE </name>
//    <rw> 
//    <i> [Bits 29..27] RW (@ 0x4008415C) SGPASPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 27) & 0x7), ((RAC_SPARE = (RAC_SPARE & ~(0x7UL << 27 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 27 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RAC_SPARE_SGLNAMIXSPARE  ------------------------------
// SVD Line: 70703

//  <item> SFDITEM_FIELD__RAC_SPARE_SGLNAMIXSPARE
//    <name> SGLNAMIXSPARE </name>
//    <rw> 
//    <i> [Bits 31..30] RW (@ 0x4008415C) SGLNAMIXSPARE </i>
//    <edit> 
//      <loc> ( (unsigned char)((RAC_SPARE >> 30) & 0x3), ((RAC_SPARE = (RAC_SPARE & ~(0x3UL << 30 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 30 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RAC_SPARE  -----------------------------------
// SVD Line: 70624

//  <rtree> SFDITEM_REG__RAC_SPARE
//    <name> SPARE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008415C) SPARE </i>
//    <loc> ( (unsigned int)((RAC_SPARE >> 0) & 0xFFFFFFFF), ((RAC_SPARE = (RAC_SPARE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RAC_SPARE_SYNTHSPARE </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_LNAMIXERSPARE </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_IFPGASPARE </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE0 </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE1 </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_IFFILTSPARE2 </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_IFADCSPARE </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_PASPARE </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_SGPASPARE </item>
//    <item> SFDITEM_FIELD__RAC_SPARE_SGLNAMIXSPARE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RAC  --------------------------------------
// SVD Line: 67024

//  <view> RAC
//    <name> RAC </name>
//    <item> SFDITEM_REG__RAC_RXENSRCEN </item>
//    <item> SFDITEM_REG__RAC_STATUS </item>
//    <item> SFDITEM_REG__RAC_CMD </item>
//    <item> SFDITEM_REG__RAC_CTRL </item>
//    <item> SFDITEM_REG__RAC_FORCESTATE </item>
//    <item> SFDITEM_REG__RAC_IF </item>
//    <item> SFDITEM_REG__RAC_IFS </item>
//    <item> SFDITEM_REG__RAC_IFC </item>
//    <item> SFDITEM_REG__RAC_IEN </item>
//    <item> SFDITEM_REG__RAC_LVDSCTRL </item>
//    <item> SFDITEM_REG__RAC_LVDSIDLESEQ </item>
//    <item> SFDITEM_REG__RAC_LVDSROUTE </item>
//    <item> SFDITEM_REG__RAC_HFXORETIMECTRL </item>
//    <item> SFDITEM_REG__RAC_HFXORETIMESTATUS </item>
//    <item> SFDITEM_REG__RAC_TESTCTRL </item>
//    <item> SFDITEM_REG__RAC_SEQSTATUS </item>
//    <item> SFDITEM_REG__RAC_SEQCMD </item>
//    <item> SFDITEM_REG__RAC_BREAKPOINT </item>
//    <item> SFDITEM_REG__RAC_R0 </item>
//    <item> SFDITEM_REG__RAC_R1 </item>
//    <item> SFDITEM_REG__RAC_R2 </item>
//    <item> SFDITEM_REG__RAC_R3 </item>
//    <item> SFDITEM_REG__RAC_R4 </item>
//    <item> SFDITEM_REG__RAC_R5 </item>
//    <item> SFDITEM_REG__RAC_R6 </item>
//    <item> SFDITEM_REG__RAC_R7 </item>
//    <item> SFDITEM_REG__RAC_WAITMASK </item>
//    <item> SFDITEM_REG__RAC_WAITSNSH </item>
//    <item> SFDITEM_REG__RAC_STIMER </item>
//    <item> SFDITEM_REG__RAC_STIMERCOMP </item>
//    <item> SFDITEM_REG__RAC_VECTADDR </item>
//    <item> SFDITEM_REG__RAC_SEQCTRL </item>
//    <item> SFDITEM_REG__RAC_PRESC </item>
//    <item> SFDITEM_REG__RAC_SR0 </item>
//    <item> SFDITEM_REG__RAC_SR1 </item>
//    <item> SFDITEM_REG__RAC_SR2 </item>
//    <item> SFDITEM_REG__RAC_SR3 </item>
//    <item> SFDITEM_REG__RAC_SYNTHENCTRL </item>
//    <item> SFDITEM_REG__RAC_SYNTHREGCTRL </item>
//    <item> SFDITEM_REG__RAC_VCOCTRL </item>
//    <item> SFDITEM_REG__RAC_MMDCTRL </item>
//    <item> SFDITEM_REG__RAC_CHPCTRL </item>
//    <item> SFDITEM_REG__RAC_CHPCAL </item>
//    <item> SFDITEM_REG__RAC_LPFCTRL </item>
//    <item> SFDITEM_REG__RAC_SYNTHCTRL </item>
//    <item> SFDITEM_REG__RAC_AUXCTRL </item>
//    <item> SFDITEM_REG__RAC_AUXENCTRL </item>
//    <item> SFDITEM_REG__RAC_RFENCTRL </item>
//    <item> SFDITEM_REG__RAC_RFENCTRL0 </item>
//    <item> SFDITEM_REG__RAC_LNAMIXCTRL </item>
//    <item> SFDITEM_REG__RAC_PACTRL0 </item>
//    <item> SFDITEM_REG__RAC_PAPKDCTRL </item>
//    <item> SFDITEM_REG__RAC_PABIASCTRL0 </item>
//    <item> SFDITEM_REG__RAC_PABIASCTRL1 </item>
//    <item> SFDITEM_REG__RAC_SGRFENCTRL0 </item>
//    <item> SFDITEM_REG__RAC_SGLNAMIXCTRL </item>
//    <item> SFDITEM_REG__RAC_SGPACTRL0 </item>
//    <item> SFDITEM_REG__RAC_SGPAPKDCTRL </item>
//    <item> SFDITEM_REG__RAC_SGPABIASCTRL0 </item>
//    <item> SFDITEM_REG__RAC_SGPABIASCTRL1 </item>
//    <item> SFDITEM_REG__RAC_RFSTATUS </item>
//    <item> SFDITEM_REG__RAC_RFBIASCTRL </item>
//    <item> SFDITEM_REG__RAC_RFBIASCAL </item>
//    <item> SFDITEM_REG__RAC_LNAMIXCTRL1 </item>
//    <item> SFDITEM_REG__RAC_IFPGACTRL </item>
//    <item> SFDITEM_REG__RAC_IFPGACAL </item>
//    <item> SFDITEM_REG__RAC_IFFILTCTRL </item>
//    <item> SFDITEM_REG__RAC_IFADCCTRL </item>
//    <item> SFDITEM_REG__RAC_IFADCCAL </item>
//    <item> SFDITEM_REG__RAC_PAENCTRL </item>
//    <item> SFDITEM_REG__RAC_PACTUNECTRL </item>
//    <item> SFDITEM_REG__RAC_RCTUNE </item>
//    <item> SFDITEM_REG__RAC_APC </item>
//    <item> SFDITEM_REG__RAC_SPARE </item>
//  </view>
//  


// ---------------------------  Register Item Address: SYNTH_STATUS  ------------------------------
// SVD Line: 70728

unsigned int SYNTH_STATUS __AT (0x40083000);



// -----------------------------  Field Item: SYNTH_STATUS_INLOCK  --------------------------------
// SVD Line: 70737

//  <item> SFDITEM_FIELD__SYNTH_STATUS_INLOCK
//    <name> INLOCK </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40083000) INLOCK </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.0..0> INLOCK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_STATUS_IFFREQEN  -------------------------------
// SVD Line: 70744

//  <item> SFDITEM_FIELD__SYNTH_STATUS_IFFREQEN
//    <name> IFFREQEN </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40083000) IFFREQEN </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.1..1> IFFREQEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_STATUS_SYNTHREADY  ------------------------------
// SVD Line: 70751

//  <item> SFDITEM_FIELD__SYNTH_STATUS_SYNTHREADY
//    <name> SYNTHREADY </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40083000) SYNTHREADY </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.2..2> SYNTHREADY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_STATUS_AUXINLOCK  -------------------------------
// SVD Line: 70758

//  <item> SFDITEM_FIELD__SYNTH_STATUS_AUXINLOCK
//    <name> AUXINLOCK </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40083000) AUXINLOCK </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.4..4> AUXINLOCK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_STATUS_AUXRUNNING  ------------------------------
// SVD Line: 70765

//  <item> SFDITEM_FIELD__SYNTH_STATUS_AUXRUNNING
//    <name> AUXRUNNING </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40083000) AUXRUNNING </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.5..5> AUXRUNNING
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYNTH_STATUS_CAPCALRUNNING  -----------------------------
// SVD Line: 70772

//  <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALRUNNING
//    <name> CAPCALRUNNING </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40083000) CAPCALRUNNING </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.8..8> CAPCALRUNNING
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_STATUS_CAPCALBITRESULT  ----------------------------
// SVD Line: 70779

//  <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALBITRESULT
//    <name> CAPCALBITRESULT </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40083000) CAPCALBITRESULT </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.9..9> CAPCALBITRESULT
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYNTH_STATUS_CAPCALFULLWAIT  ----------------------------
// SVD Line: 70786

//  <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALFULLWAIT
//    <name> CAPCALFULLWAIT </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40083000) CAPCALFULLWAIT </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.10..10> CAPCALFULLWAIT
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_STATUS_AUXCAPCALRUNNING  ---------------------------
// SVD Line: 70793

//  <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCAPCALRUNNING
//    <name> AUXCAPCALRUNNING </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40083000) AUXCAPCALRUNNING </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.11..11> AUXCAPCALRUNNING
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_STATUS_AUXCALBITRESULT  ----------------------------
// SVD Line: 70800

//  <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCALBITRESULT
//    <name> AUXCALBITRESULT </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x40083000) AUXCALBITRESULT </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.12..12> AUXCALBITRESULT
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYNTH_STATUS_AUXCALFULLWAIT  ----------------------------
// SVD Line: 70807

//  <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCALFULLWAIT
//    <name> AUXCALFULLWAIT </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x40083000) AUXCALFULLWAIT </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.13..13> AUXCALFULLWAIT
//    </check>
//  </item>
//  


// --------------------------  Field Item: SYNTH_STATUS_CAPCALERROR  ------------------------------
// SVD Line: 70814

//  <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALERROR
//    <name> CAPCALERROR </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40083000) CAPCALERROR </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.14..14> CAPCALERROR
//    </check>
//  </item>
//  


// --------------------------  Field Item: SYNTH_STATUS_AUXCALERROR  ------------------------------
// SVD Line: 70821

//  <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCALERROR
//    <name> AUXCALERROR </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40083000) AUXCALERROR </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.15..15> AUXCALERROR
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYNTH_STATUS_VCOFREQACTIVE  -----------------------------
// SVD Line: 70828

//  <item> SFDITEM_FIELD__SYNTH_STATUS_VCOFREQACTIVE
//    <name> VCOFREQACTIVE </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40083000) VCOFREQACTIVE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.16..16> VCOFREQACTIVE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_STATUS_VCOVARBANK  ------------------------------
// SVD Line: 70835

//  <item> SFDITEM_FIELD__SYNTH_STATUS_VCOVARBANK
//    <name> VCOVARBANK </name>
//    <r> 
//    <i> [Bits 22..17] RO (@ 0x40083000) VCOVARBANK </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_STATUS >> 17) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_STATUS_VCOAMPOK  -------------------------------
// SVD Line: 70842

//  <item> SFDITEM_FIELD__SYNTH_STATUS_VCOAMPOK
//    <name> VCOAMPOK </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40083000) VCOAMPOK </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.24..24> VCOAMPOK
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_STATUS_CHPALLOWTRISTATE  ---------------------------
// SVD Line: 70849

//  <item> SFDITEM_FIELD__SYNTH_STATUS_CHPALLOWTRISTATE
//    <name> CHPALLOWTRISTATE </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x40083000) CHPALLOWTRISTATE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_STATUS ) </loc>
//      <o.26..26> CHPALLOWTRISTATE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SYNTH_STATUS  ----------------------------------
// SVD Line: 70728

//  <rtree> SFDITEM_REG__SYNTH_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40083000) STATUS </i>
//    <loc> ( (unsigned int)((SYNTH_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_INLOCK </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_IFFREQEN </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_SYNTHREADY </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_AUXINLOCK </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_AUXRUNNING </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALRUNNING </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALBITRESULT </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALFULLWAIT </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCAPCALRUNNING </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCALBITRESULT </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCALFULLWAIT </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_CAPCALERROR </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_AUXCALERROR </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_VCOFREQACTIVE </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_VCOVARBANK </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_VCOAMPOK </item>
//    <item> SFDITEM_FIELD__SYNTH_STATUS_CHPALLOWTRISTATE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYNTH_CMD  --------------------------------
// SVD Line: 70858

unsigned int SYNTH_CMD __AT (0x40083004);



// ----------------------------  Field Item: SYNTH_CMD_SYNTHSTART  --------------------------------
// SVD Line: 70867

//  <item> SFDITEM_FIELD__SYNTH_CMD_SYNTHSTART
//    <name> SYNTHSTART </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40083004) SYNTHSTART </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.0..0> SYNTHSTART
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CMD_SYNTHSTOP  --------------------------------
// SVD Line: 70874

//  <item> SFDITEM_FIELD__SYNTH_CMD_SYNTHSTOP
//    <name> SYNTHSTOP </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40083004) SYNTHSTOP </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.1..1> SYNTHSTOP
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CMD_ENABLEIF  ---------------------------------
// SVD Line: 70881

//  <item> SFDITEM_FIELD__SYNTH_CMD_ENABLEIF
//    <name> ENABLEIF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40083004) ENABLEIF </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.2..2> ENABLEIF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CMD_DISABLEIF  --------------------------------
// SVD Line: 70888

//  <item> SFDITEM_FIELD__SYNTH_CMD_DISABLEIF
//    <name> DISABLEIF </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40083004) DISABLEIF </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.3..3> DISABLEIF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_CMD_CAPCALSTART  -------------------------------
// SVD Line: 70895

//  <item> SFDITEM_FIELD__SYNTH_CMD_CAPCALSTART
//    <name> CAPCALSTART </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40083004) CAPCALSTART </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.4..4> CAPCALSTART
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CMD_AUXSTART  ---------------------------------
// SVD Line: 70902

//  <item> SFDITEM_FIELD__SYNTH_CMD_AUXSTART
//    <name> AUXSTART </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40083004) AUXSTART </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.6..6> AUXSTART
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_CMD_AUXSTOP  ---------------------------------
// SVD Line: 70909

//  <item> SFDITEM_FIELD__SYNTH_CMD_AUXSTOP
//    <name> AUXSTOP </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40083004) AUXSTOP </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.7..7> AUXSTOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: SYNTH_CMD_AUXCAPCALSTART  ------------------------------
// SVD Line: 70916

//  <item> SFDITEM_FIELD__SYNTH_CMD_AUXCAPCALSTART
//    <name> AUXCAPCALSTART </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40083004) AUXCAPCALSTART </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.8..8> AUXCAPCALSTART
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SYNTH_CMD_VCOUP  ----------------------------------
// SVD Line: 70923

//  <item> SFDITEM_FIELD__SYNTH_CMD_VCOUP
//    <name> VCOUP </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40083004) VCOUP </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.9..9> VCOUP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_CMD_VCODOWN  ---------------------------------
// SVD Line: 70930

//  <item> SFDITEM_FIELD__SYNTH_CMD_VCODOWN
//    <name> VCODOWN </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40083004) VCODOWN </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CMD ) </loc>
//      <o.10..10> VCODOWN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SYNTH_CMD  -----------------------------------
// SVD Line: 70858

//  <rtree> SFDITEM_REG__SYNTH_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40083004) CMD </i>
//    <loc> ( (unsigned int)((SYNTH_CMD >> 0) & 0xFFFFFFFF), ((SYNTH_CMD = (SYNTH_CMD & ~(0x7DFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7DF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CMD_SYNTHSTART </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_SYNTHSTOP </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_ENABLEIF </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_DISABLEIF </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_CAPCALSTART </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_AUXSTART </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_AUXSTOP </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_AUXCAPCALSTART </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_VCOUP </item>
//    <item> SFDITEM_FIELD__SYNTH_CMD_VCODOWN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYNTH_CTRL  -------------------------------
// SVD Line: 70939

unsigned int SYNTH_CTRL __AT (0x40083008);



// --------------------------  Field Item: SYNTH_CTRL_DITHERDSMINPUT  -----------------------------
// SVD Line: 70948

//  <item> SFDITEM_FIELD__SYNTH_CTRL_DITHERDSMINPUT
//    <name> DITHERDSMINPUT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40083008) DITHERDSMINPUT </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CTRL ) </loc>
//      <o.0..0> DITHERDSMINPUT
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYNTH_CTRL_DITHERDSMOUTPUT  -----------------------------
// SVD Line: 70955

//  <item> SFDITEM_FIELD__SYNTH_CTRL_DITHERDSMOUTPUT
//    <name> DITHERDSMOUTPUT </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40083008) DITHERDSMOUTPUT </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CTRL >> 1) & 0x7), ((SYNTH_CTRL = (SYNTH_CTRL & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_CTRL_DITHERDAC  --------------------------------
// SVD Line: 70962

//  <item> SFDITEM_FIELD__SYNTH_CTRL_DITHERDAC
//    <name> DITHERDAC </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40083008) DITHERDAC </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CTRL >> 4) & 0xF), ((SYNTH_CTRL = (SYNTH_CTRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CTRL_DSMMODE  ---------------------------------
// SVD Line: 70969

//  <item> SFDITEM_FIELD__SYNTH_CTRL_DSMMODE
//    <name> DSMMODE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40083008) DSMMODE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CTRL ) </loc>
//      <o.8..8> DSMMODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CTRL_LSBFORCE  --------------------------------
// SVD Line: 70976

//  <item> SFDITEM_FIELD__SYNTH_CTRL_LSBFORCE
//    <name> LSBFORCE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40083008) LSBFORCE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CTRL ) </loc>
//      <o.9..9> LSBFORCE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SYNTH_CTRL_LOCKTHRESHOLD  ------------------------------
// SVD Line: 70983

//  <item> SFDITEM_FIELD__SYNTH_CTRL_LOCKTHRESHOLD
//    <name> LOCKTHRESHOLD </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40083008) LOCKTHRESHOLD </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CTRL >> 10) & 0x7), ((SYNTH_CTRL = (SYNTH_CTRL & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SYNTH_CTRL_AUXLOCKTHRESHOLD  ----------------------------
// SVD Line: 70990

//  <item> SFDITEM_FIELD__SYNTH_CTRL_AUXLOCKTHRESHOLD
//    <name> AUXLOCKTHRESHOLD </name>
//    <rw> 
//    <i> [Bits 15..13] RW (@ 0x40083008) AUXLOCKTHRESHOLD </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CTRL >> 13) & 0x7), ((SYNTH_CTRL = (SYNTH_CTRL & ~(0x7UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CTRL_PRSMUX0  ---------------------------------
// SVD Line: 70997

//  <item> SFDITEM_FIELD__SYNTH_CTRL_PRSMUX0
//    <name> PRSMUX0 </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40083008) PRSMUX0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CTRL >> 16) & 0x7), ((SYNTH_CTRL = (SYNTH_CTRL & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_CTRL_PRSMUX1  ---------------------------------
// SVD Line: 71004

//  <item> SFDITEM_FIELD__SYNTH_CTRL_PRSMUX1
//    <name> PRSMUX1 </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40083008) PRSMUX1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CTRL >> 20) & 0x7), ((SYNTH_CTRL = (SYNTH_CTRL & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SYNTH_CTRL_TRISTATEPOSTPONE  ----------------------------
// SVD Line: 71011

//  <item> SFDITEM_FIELD__SYNTH_CTRL_TRISTATEPOSTPONE
//    <name> TRISTATEPOSTPONE </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40083008) TRISTATEPOSTPONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CTRL ) </loc>
//      <o.29..29> TRISTATEPOSTPONE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_CTRL_INTEGERMODE  -------------------------------
// SVD Line: 71018

//  <item> SFDITEM_FIELD__SYNTH_CTRL_INTEGERMODE
//    <name> INTEGERMODE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40083008) INTEGERMODE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CTRL ) </loc>
//      <o.30..30> INTEGERMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SYNTH_CTRL_MMDSCANTESTEN  ------------------------------
// SVD Line: 71025

//  <item> SFDITEM_FIELD__SYNTH_CTRL_MMDSCANTESTEN
//    <name> MMDSCANTESTEN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40083008) MMDSCANTESTEN </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CTRL ) </loc>
//      <o.31..31> MMDSCANTESTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SYNTH_CTRL  -----------------------------------
// SVD Line: 70939

//  <rtree> SFDITEM_REG__SYNTH_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083008) CTRL </i>
//    <loc> ( (unsigned int)((SYNTH_CTRL >> 0) & 0xFFFFFFFF), ((SYNTH_CTRL = (SYNTH_CTRL & ~(0xE077FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE077FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_DITHERDSMINPUT </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_DITHERDSMOUTPUT </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_DITHERDAC </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_DSMMODE </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_LSBFORCE </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_LOCKTHRESHOLD </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_AUXLOCKTHRESHOLD </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_PRSMUX0 </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_PRSMUX1 </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_TRISTATEPOSTPONE </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_INTEGERMODE </item>
//    <item> SFDITEM_FIELD__SYNTH_CTRL_MMDSCANTESTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SYNTH_CALCTRL  ------------------------------
// SVD Line: 71034

unsigned int SYNTH_CALCTRL __AT (0x4008300C);



// ---------------------------  Field Item: SYNTH_CALCTRL_NUMCYCLES  ------------------------------
// SVD Line: 71043

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_NUMCYCLES
//    <name> NUMCYCLES </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4008300C) NUMCYCLES </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CALCTRL >> 0) & 0xF), ((SYNTH_CALCTRL = (SYNTH_CALCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYNTH_CALCTRL_CAPCALSIDE  ------------------------------
// SVD Line: 71050

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALSIDE
//    <name> CAPCALSIDE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008300C) CAPCALSIDE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.4..4> CAPCALSIDE
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYNTH_CALCTRL_CAPCALENDMODE  ----------------------------
// SVD Line: 71057

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALENDMODE
//    <name> CAPCALENDMODE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008300C) CAPCALENDMODE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.5..5> CAPCALENDMODE
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_CALCTRL_CAPCALCYCLEWAIT  ---------------------------
// SVD Line: 71064

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALCYCLEWAIT
//    <name> CAPCALCYCLEWAIT </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4008300C) CAPCALCYCLEWAIT </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CALCTRL >> 6) & 0x3), ((SYNTH_CALCTRL = (SYNTH_CALCTRL & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SYNTH_CALCTRL_CAPCALWAITMODE  ----------------------------
// SVD Line: 71071

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALWAITMODE
//    <name> CAPCALWAITMODE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008300C) CAPCALWAITMODE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.8..8> CAPCALWAITMODE
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYNTH_CALCTRL_CAPCALSINGLESTEP  ---------------------------
// SVD Line: 71078

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALSINGLESTEP
//    <name> CAPCALSINGLESTEP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4008300C) CAPCALSINGLESTEP </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.9..9> CAPCALSINGLESTEP
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYNTH_CALCTRL_STARTUPTIMING  ----------------------------
// SVD Line: 71085

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_STARTUPTIMING
//    <name> STARTUPTIMING </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x4008300C) STARTUPTIMING </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CALCTRL >> 10) & 0x1F), ((SYNTH_CALCTRL = (SYNTH_CALCTRL & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SYNTH_CALCTRL_AUXCALCYCLES  -----------------------------
// SVD Line: 71092

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALCYCLES
//    <name> AUXCALCYCLES </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x4008300C) AUXCALCYCLES </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CALCTRL >> 16) & 0x7), ((SYNTH_CALCTRL = (SYNTH_CALCTRL & ~(0x7UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: SYNTH_CALCTRL_AUXCALACCURACY  ----------------------------
// SVD Line: 71099

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALACCURACY
//    <name> AUXCALACCURACY </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4008300C) AUXCALACCURACY </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.19..19> AUXCALACCURACY
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_CALCTRL_AUXCALCYCLEWAIT  ---------------------------
// SVD Line: 71106

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALCYCLEWAIT
//    <name> AUXCALCYCLEWAIT </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x4008300C) AUXCALCYCLEWAIT </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CALCTRL >> 20) & 0x3), ((SYNTH_CALCTRL = (SYNTH_CALCTRL & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYNTH_CALCTRL_AUXCALSINGLESTEP  ---------------------------
// SVD Line: 71113

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALSINGLESTEP
//    <name> AUXCALSINGLESTEP </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4008300C) AUXCALSINGLESTEP </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.22..22> AUXCALSINGLESTEP
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_CALCTRL_SYNTHOVERRIDEEN  ---------------------------
// SVD Line: 71120

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_SYNTHOVERRIDEEN
//    <name> SYNTHOVERRIDEEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4008300C) SYNTHOVERRIDEEN </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.24..24> SYNTHOVERRIDEEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_CALCTRL_CLKLOADDENOMVAL  ---------------------------
// SVD Line: 71127

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_CLKLOADDENOMVAL
//    <name> CLKLOADDENOMVAL </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4008300C) CLKLOADDENOMVAL </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.25..25> CLKLOADDENOMVAL
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYNTH_CALCTRL_PRESCALERRESETVAL  --------------------------
// SVD Line: 71134

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_PRESCALERRESETVAL
//    <name> PRESCALERRESETVAL </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4008300C) PRESCALERRESETVAL </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.26..26> PRESCALERRESETVAL
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYNTH_CALCTRL_COUNTERRESETVAL  ---------------------------
// SVD Line: 71141

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_COUNTERRESETVAL
//    <name> COUNTERRESETVAL </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4008300C) COUNTERRESETVAL </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.27..27> COUNTERRESETVAL
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYNTH_CALCTRL_AUXPLLOVERRIDEEN  ---------------------------
// SVD Line: 71148

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXPLLOVERRIDEEN
//    <name> AUXPLLOVERRIDEEN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4008300C) AUXPLLOVERRIDEEN </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.28..28> AUXPLLOVERRIDEEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYNTH_CALCTRL_AUXPLLMMDRESETVAL  --------------------------
// SVD Line: 71155

//  <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXPLLMMDRESETVAL
//    <name> AUXPLLMMDRESETVAL </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4008300C) AUXPLLMMDRESETVAL </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CALCTRL ) </loc>
//      <o.29..29> AUXPLLMMDRESETVAL
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SYNTH_CALCTRL  ---------------------------------
// SVD Line: 71034

//  <rtree> SFDITEM_REG__SYNTH_CALCTRL
//    <name> CALCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008300C) CALCTRL </i>
//    <loc> ( (unsigned int)((SYNTH_CALCTRL >> 0) & 0xFFFFFFFF), ((SYNTH_CALCTRL = (SYNTH_CALCTRL & ~(0x3F7F7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F7F7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_NUMCYCLES </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALSIDE </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALENDMODE </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALCYCLEWAIT </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALWAITMODE </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_CAPCALSINGLESTEP </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_STARTUPTIMING </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALCYCLES </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALACCURACY </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALCYCLEWAIT </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXCALSINGLESTEP </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_SYNTHOVERRIDEEN </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_CLKLOADDENOMVAL </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_PRESCALERRESETVAL </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_COUNTERRESETVAL </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXPLLOVERRIDEEN </item>
//    <item> SFDITEM_FIELD__SYNTH_CALCTRL_AUXPLLMMDRESETVAL </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SYNTH_VCDACCTRL  -----------------------------
// SVD Line: 71164

unsigned int SYNTH_VCDACCTRL __AT (0x40083024);



// --------------------------  Field Item: SYNTH_VCDACCTRL_VCDACVAL  ------------------------------
// SVD Line: 71173

//  <item> SFDITEM_FIELD__SYNTH_VCDACCTRL_VCDACVAL
//    <name> VCDACVAL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40083024) VCDACVAL </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_VCDACCTRL >> 0) & 0x3F), ((SYNTH_VCDACCTRL = (SYNTH_VCDACCTRL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_VCDACCTRL_EN  ---------------------------------
// SVD Line: 71180

//  <item> SFDITEM_FIELD__SYNTH_VCDACCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40083024) EN </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_VCDACCTRL ) </loc>
//      <o.6..6> EN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SYNTH_VCDACCTRL  --------------------------------
// SVD Line: 71164

//  <rtree> SFDITEM_REG__SYNTH_VCDACCTRL
//    <name> VCDACCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083024) VCDACCTRL </i>
//    <loc> ( (unsigned int)((SYNTH_VCDACCTRL >> 0) & 0xFFFFFFFF), ((SYNTH_VCDACCTRL = (SYNTH_VCDACCTRL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_VCDACCTRL_VCDACVAL </item>
//    <item> SFDITEM_FIELD__SYNTH_VCDACCTRL_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYNTH_FREQ  -------------------------------
// SVD Line: 71189

unsigned int SYNTH_FREQ __AT (0x4008302C);



// -------------------------------  Field Item: SYNTH_FREQ_FREQ  ----------------------------------
// SVD Line: 71198

//  <item> SFDITEM_FIELD__SYNTH_FREQ_FREQ
//    <name> FREQ </name>
//    <rw> 
//    <i> [Bits 27..0] RW (@ 0x4008302C) FREQ </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYNTH_FREQ >> 0) & 0xFFFFFFF), ((SYNTH_FREQ = (SYNTH_FREQ & ~(0xFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYNTH_FREQ  -----------------------------------
// SVD Line: 71189

//  <rtree> SFDITEM_REG__SYNTH_FREQ
//    <name> FREQ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008302C) FREQ </i>
//    <loc> ( (unsigned int)((SYNTH_FREQ >> 0) & 0xFFFFFFFF), ((SYNTH_FREQ = (SYNTH_FREQ & ~(0xFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_FREQ_FREQ </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SYNTH_IFFREQ  ------------------------------
// SVD Line: 71207

unsigned int SYNTH_IFFREQ __AT (0x40083030);



// -----------------------------  Field Item: SYNTH_IFFREQ_IFFREQ  --------------------------------
// SVD Line: 71216

//  <item> SFDITEM_FIELD__SYNTH_IFFREQ_IFFREQ
//    <name> IFFREQ </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x40083030) IFFREQ </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYNTH_IFFREQ >> 0) & 0xFFFFF), ((SYNTH_IFFREQ = (SYNTH_IFFREQ & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IFFREQ_LOSIDE  --------------------------------
// SVD Line: 71223

//  <item> SFDITEM_FIELD__SYNTH_IFFREQ_LOSIDE
//    <name> LOSIDE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40083030) LOSIDE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFFREQ ) </loc>
//      <o.20..20> LOSIDE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SYNTH_IFFREQ  ----------------------------------
// SVD Line: 71207

//  <rtree> SFDITEM_REG__SYNTH_IFFREQ
//    <name> IFFREQ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083030) IFFREQ </i>
//    <loc> ( (unsigned int)((SYNTH_IFFREQ >> 0) & 0xFFFFFFFF), ((SYNTH_IFFREQ = (SYNTH_IFFREQ & ~(0x1FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_IFFREQ_IFFREQ </item>
//    <item> SFDITEM_FIELD__SYNTH_IFFREQ_LOSIDE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SYNTH_DIVCTRL  ------------------------------
// SVD Line: 71232

unsigned int SYNTH_DIVCTRL __AT (0x40083034);



// -------------------------  Field Item: SYNTH_DIVCTRL_LODIVFREQCTRL  ----------------------------
// SVD Line: 71241

//  <item> SFDITEM_FIELD__SYNTH_DIVCTRL_LODIVFREQCTRL
//    <name> LODIVFREQCTRL </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40083034) LODIVFREQCTRL </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYNTH_DIVCTRL >> 0) & 0x1FF), ((SYNTH_DIVCTRL = (SYNTH_DIVCTRL & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYNTH_DIVCTRL_AUXLODIVFREQCTRL  ---------------------------
// SVD Line: 71248

//  <item> SFDITEM_FIELD__SYNTH_DIVCTRL_AUXLODIVFREQCTRL
//    <name> AUXLODIVFREQCTRL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40083034) AUXLODIVFREQCTRL </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_DIVCTRL >> 16) & 0x3F), ((SYNTH_DIVCTRL = (SYNTH_DIVCTRL & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SYNTH_DIVCTRL  ---------------------------------
// SVD Line: 71232

//  <rtree> SFDITEM_REG__SYNTH_DIVCTRL
//    <name> DIVCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083034) DIVCTRL </i>
//    <loc> ( (unsigned int)((SYNTH_DIVCTRL >> 0) & 0xFFFFFFFF), ((SYNTH_DIVCTRL = (SYNTH_DIVCTRL & ~(0x3F01FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F01FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_DIVCTRL_LODIVFREQCTRL </item>
//    <item> SFDITEM_FIELD__SYNTH_DIVCTRL_AUXLODIVFREQCTRL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SYNTH_CHCTRL  ------------------------------
// SVD Line: 71257

unsigned int SYNTH_CHCTRL __AT (0x40083038);



// ------------------------------  Field Item: SYNTH_CHCTRL_CHNO  ---------------------------------
// SVD Line: 71266

//  <item> SFDITEM_FIELD__SYNTH_CHCTRL_CHNO
//    <name> CHNO </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40083038) CHNO </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CHCTRL >> 0) & 0x3F), ((SYNTH_CHCTRL = (SYNTH_CHCTRL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SYNTH_CHCTRL  ----------------------------------
// SVD Line: 71257

//  <rtree> SFDITEM_REG__SYNTH_CHCTRL
//    <name> CHCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083038) CHCTRL </i>
//    <loc> ( (unsigned int)((SYNTH_CHCTRL >> 0) & 0xFFFFFFFF), ((SYNTH_CHCTRL = (SYNTH_CHCTRL & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CHCTRL_CHNO </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYNTH_CHSP  -------------------------------
// SVD Line: 71275

unsigned int SYNTH_CHSP __AT (0x4008303C);



// -------------------------------  Field Item: SYNTH_CHSP_CHSP  ----------------------------------
// SVD Line: 71284

//  <item> SFDITEM_FIELD__SYNTH_CHSP_CHSP
//    <name> CHSP </name>
//    <rw> 
//    <i> [Bits 17..0] RW (@ 0x4008303C) CHSP </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYNTH_CHSP >> 0) & 0x3FFFF), ((SYNTH_CHSP = (SYNTH_CHSP & ~(0x3FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYNTH_CHSP  -----------------------------------
// SVD Line: 71275

//  <rtree> SFDITEM_REG__SYNTH_CHSP
//    <name> CHSP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008303C) CHSP </i>
//    <loc> ( (unsigned int)((SYNTH_CHSP >> 0) & 0xFFFFFFFF), ((SYNTH_CHSP = (SYNTH_CHSP & ~(0x3FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CHSP_CHSP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SYNTH_CALOFFSET  -----------------------------
// SVD Line: 71293

unsigned int SYNTH_CALOFFSET __AT (0x40083040);



// --------------------------  Field Item: SYNTH_CALOFFSET_CALOFFSET  -----------------------------
// SVD Line: 71302

//  <item> SFDITEM_FIELD__SYNTH_CALOFFSET_CALOFFSET
//    <name> CALOFFSET </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x40083040) CALOFFSET </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYNTH_CALOFFSET >> 0) & 0x7FFF), ((SYNTH_CALOFFSET = (SYNTH_CALOFFSET & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SYNTH_CALOFFSET  --------------------------------
// SVD Line: 71293

//  <rtree> SFDITEM_REG__SYNTH_CALOFFSET
//    <name> CALOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083040) CALOFFSET </i>
//    <loc> ( (unsigned int)((SYNTH_CALOFFSET >> 0) & 0xFFFFFFFF), ((SYNTH_CALOFFSET = (SYNTH_CALOFFSET & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CALOFFSET_CALOFFSET </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SYNTH_VCOTUNING  -----------------------------
// SVD Line: 71311

unsigned int SYNTH_VCOTUNING __AT (0x40083044);



// --------------------------  Field Item: SYNTH_VCOTUNING_VCOTUNING  -----------------------------
// SVD Line: 71320

//  <item> SFDITEM_FIELD__SYNTH_VCOTUNING_VCOTUNING
//    <name> VCOTUNING </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40083044) VCOTUNING </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_VCOTUNING >> 0) & 0xFF), ((SYNTH_VCOTUNING = (SYNTH_VCOTUNING & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SYNTH_VCOTUNING  --------------------------------
// SVD Line: 71311

//  <rtree> SFDITEM_REG__SYNTH_VCOTUNING
//    <name> VCOTUNING </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083044) VCOTUNING </i>
//    <loc> ( (unsigned int)((SYNTH_VCOTUNING >> 0) & 0xFFFFFFFF), ((SYNTH_VCOTUNING = (SYNTH_VCOTUNING & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_VCOTUNING_VCOTUNING </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SYNTH_VCORANGE  -----------------------------
// SVD Line: 71329

unsigned int SYNTH_VCORANGE __AT (0x4008304C);



// -----------------------------  Field Item: SYNTH_VCORANGE_MODE  --------------------------------
// SVD Line: 71338

//  <item> SFDITEM_FIELD__SYNTH_VCORANGE_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4008304C) MODE </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_VCORANGE >> 0) & 0x3), ((SYNTH_VCORANGE = (SYNTH_VCORANGE & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYNTH_VCORANGE_SWITCHMODE  -----------------------------
// SVD Line: 71345

//  <item> SFDITEM_FIELD__SYNTH_VCORANGE_SWITCHMODE
//    <name> SWITCHMODE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008304C) SWITCHMODE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_VCORANGE ) </loc>
//      <o.2..2> SWITCHMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: SYNTH_VCORANGE_HIGHTHRESH  -----------------------------
// SVD Line: 71352

//  <item> SFDITEM_FIELD__SYNTH_VCORANGE_HIGHTHRESH
//    <name> HIGHTHRESH </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x4008304C) HIGHTHRESH </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_VCORANGE >> 3) & 0x3), ((SYNTH_VCORANGE = (SYNTH_VCORANGE & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYNTH_VCORANGE_LOWTHRESH  ------------------------------
// SVD Line: 71359

//  <item> SFDITEM_FIELD__SYNTH_VCORANGE_LOWTHRESH
//    <name> LOWTHRESH </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4008304C) LOWTHRESH </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_VCORANGE >> 5) & 0x3), ((SYNTH_VCORANGE = (SYNTH_VCORANGE & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SYNTH_VCORANGE  ---------------------------------
// SVD Line: 71329

//  <rtree> SFDITEM_REG__SYNTH_VCORANGE
//    <name> VCORANGE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008304C) VCORANGE </i>
//    <loc> ( (unsigned int)((SYNTH_VCORANGE >> 0) & 0xFFFFFFFF), ((SYNTH_VCORANGE = (SYNTH_VCORANGE & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_VCORANGE_MODE </item>
//    <item> SFDITEM_FIELD__SYNTH_VCORANGE_SWITCHMODE </item>
//    <item> SFDITEM_FIELD__SYNTH_VCORANGE_HIGHTHRESH </item>
//    <item> SFDITEM_FIELD__SYNTH_VCORANGE_LOWTHRESH </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SYNTH_VCOGAIN  ------------------------------
// SVD Line: 71368

unsigned int SYNTH_VCOGAIN __AT (0x40083050);



// ----------------------------  Field Item: SYNTH_VCOGAIN_VCOGAIN  -------------------------------
// SVD Line: 71377

//  <item> SFDITEM_FIELD__SYNTH_VCOGAIN_VCOGAIN
//    <name> VCOGAIN </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40083050) VCOGAIN </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_VCOGAIN >> 0) & 0x3F), ((SYNTH_VCOGAIN = (SYNTH_VCOGAIN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SYNTH_VCOGAIN  ---------------------------------
// SVD Line: 71368

//  <rtree> SFDITEM_REG__SYNTH_VCOGAIN
//    <name> VCOGAIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083050) VCOGAIN </i>
//    <loc> ( (unsigned int)((SYNTH_VCOGAIN >> 0) & 0xFFFFFFFF), ((SYNTH_VCOGAIN = (SYNTH_VCOGAIN & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_VCOGAIN_VCOGAIN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SYNTH_AUXVCOTUNING  ---------------------------
// SVD Line: 71386

unsigned int SYNTH_AUXVCOTUNING __AT (0x40083054);



// -----------------------  Field Item: SYNTH_AUXVCOTUNING_AUXVCOTUNING  --------------------------
// SVD Line: 71395

//  <item> SFDITEM_FIELD__SYNTH_AUXVCOTUNING_AUXVCOTUNING
//    <name> AUXVCOTUNING </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40083054) AUXVCOTUNING </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_AUXVCOTUNING >> 0) & 0x7F), ((SYNTH_AUXVCOTUNING = (SYNTH_AUXVCOTUNING & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SYNTH_AUXVCOTUNING  -------------------------------
// SVD Line: 71386

//  <rtree> SFDITEM_REG__SYNTH_AUXVCOTUNING
//    <name> AUXVCOTUNING </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083054) AUXVCOTUNING </i>
//    <loc> ( (unsigned int)((SYNTH_AUXVCOTUNING >> 0) & 0xFFFFFFFF), ((SYNTH_AUXVCOTUNING = (SYNTH_AUXVCOTUNING & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_AUXVCOTUNING_AUXVCOTUNING </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SYNTH_AUXFREQ  ------------------------------
// SVD Line: 71404

unsigned int SYNTH_AUXFREQ __AT (0x40083058);



// ---------------------------  Field Item: SYNTH_AUXFREQ_MMDDENOM  -------------------------------
// SVD Line: 71413

//  <item> SFDITEM_FIELD__SYNTH_AUXFREQ_MMDDENOM
//    <name> MMDDENOM </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40083058) MMDDENOM </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_AUXFREQ >> 0) & 0x7F), ((SYNTH_AUXFREQ = (SYNTH_AUXFREQ & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: SYNTH_AUXFREQ  ---------------------------------
// SVD Line: 71404

//  <rtree> SFDITEM_REG__SYNTH_AUXFREQ
//    <name> AUXFREQ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083058) AUXFREQ </i>
//    <loc> ( (unsigned int)((SYNTH_AUXFREQ >> 0) & 0xFFFFFFFF), ((SYNTH_AUXFREQ = (SYNTH_AUXFREQ & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_AUXFREQ_MMDDENOM </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SYNTH_AUXVCDACCTRL  ---------------------------
// SVD Line: 71422

unsigned int SYNTH_AUXVCDACCTRL __AT (0x4008305C);



// --------------------------  Field Item: SYNTH_AUXVCDACCTRL_VALUE  ------------------------------
// SVD Line: 71431

//  <item> SFDITEM_FIELD__SYNTH_AUXVCDACCTRL_VALUE
//    <name> VALUE </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4008305C) VALUE </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_AUXVCDACCTRL >> 0) & 0xF), ((SYNTH_AUXVCDACCTRL = (SYNTH_AUXVCDACCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_AUXVCDACCTRL_EN  -------------------------------
// SVD Line: 71438

//  <item> SFDITEM_FIELD__SYNTH_AUXVCDACCTRL_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008305C) EN </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_AUXVCDACCTRL ) </loc>
//      <o.4..4> EN
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: SYNTH_AUXVCDACCTRL  -------------------------------
// SVD Line: 71422

//  <rtree> SFDITEM_REG__SYNTH_AUXVCDACCTRL
//    <name> AUXVCDACCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008305C) AUXVCDACCTRL </i>
//    <loc> ( (unsigned int)((SYNTH_AUXVCDACCTRL >> 0) & 0xFFFFFFFF), ((SYNTH_AUXVCDACCTRL = (SYNTH_AUXVCDACCTRL & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_AUXVCDACCTRL_VALUE </item>
//    <item> SFDITEM_FIELD__SYNTH_AUXVCDACCTRL_EN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SYNTH_CHPDACCTRL  ----------------------------
// SVD Line: 71447

unsigned int SYNTH_CHPDACCTRL __AT (0x40083060);



// -------------------------  Field Item: SYNTH_CHPDACCTRL_CHPDACVAL  -----------------------------
// SVD Line: 71456

//  <item> SFDITEM_FIELD__SYNTH_CHPDACCTRL_CHPDACVAL
//    <name> CHPDACVAL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40083060) CHPDACVAL </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYNTH_CHPDACCTRL >> 0) & 0xFF), ((SYNTH_CHPDACCTRL = (SYNTH_CHPDACCTRL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYNTH_CHPDACCTRL_OVERRIDE  -----------------------------
// SVD Line: 71463

//  <item> SFDITEM_FIELD__SYNTH_CHPDACCTRL_OVERRIDE
//    <name> OVERRIDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40083060) OVERRIDE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_CHPDACCTRL ) </loc>
//      <o.8..8> OVERRIDE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: SYNTH_CHPDACCTRL  --------------------------------
// SVD Line: 71447

//  <rtree> SFDITEM_REG__SYNTH_CHPDACCTRL
//    <name> CHPDACCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083060) CHPDACCTRL </i>
//    <loc> ( (unsigned int)((SYNTH_CHPDACCTRL >> 0) & 0xFFFFFFFF), ((SYNTH_CHPDACCTRL = (SYNTH_CHPDACCTRL & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CHPDACCTRL_CHPDACVAL </item>
//    <item> SFDITEM_FIELD__SYNTH_CHPDACCTRL_OVERRIDE </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SYNTH_CAPCALCYCLECNT  --------------------------
// SVD Line: 71472

unsigned int SYNTH_CAPCALCYCLECNT __AT (0x40083064);



// ---------------------  Field Item: SYNTH_CAPCALCYCLECNT_CAPCALCYCLECNT  ------------------------
// SVD Line: 71481

//  <item> SFDITEM_FIELD__SYNTH_CAPCALCYCLECNT_CAPCALCYCLECNT
//    <name> CAPCALCYCLECNT </name>
//    <rw> 
//    <i> [Bits 9..0] RW (@ 0x40083064) CAPCALCYCLECNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYNTH_CAPCALCYCLECNT >> 0) & 0x3FF), ((SYNTH_CAPCALCYCLECNT = (SYNTH_CAPCALCYCLECNT & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: SYNTH_CAPCALCYCLECNT  ------------------------------
// SVD Line: 71472

//  <rtree> SFDITEM_REG__SYNTH_CAPCALCYCLECNT
//    <name> CAPCALCYCLECNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40083064) CAPCALCYCLECNT </i>
//    <loc> ( (unsigned int)((SYNTH_CAPCALCYCLECNT >> 0) & 0xFFFFFFFF), ((SYNTH_CAPCALCYCLECNT = (SYNTH_CAPCALCYCLECNT & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_CAPCALCYCLECNT_CAPCALCYCLECNT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SYNTH_IF  --------------------------------
// SVD Line: 71490

unsigned int SYNTH_IF __AT (0x40083070);



// -------------------------------  Field Item: SYNTH_IF_LOCKED  ----------------------------------
// SVD Line: 71499

//  <item> SFDITEM_FIELD__SYNTH_IF_LOCKED
//    <name> LOCKED </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40083070) LOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IF_UNLOCKED  ---------------------------------
// SVD Line: 71506

//  <item> SFDITEM_FIELD__SYNTH_IF_UNLOCKED
//    <name> UNLOCKED </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40083070) UNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.1..1> UNLOCKED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IF_CAPCALDONE  --------------------------------
// SVD Line: 71513

//  <item> SFDITEM_FIELD__SYNTH_IF_CAPCALDONE
//    <name> CAPCALDONE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40083070) CAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.2..2> CAPCALDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IF_VCOHIGH  ----------------------------------
// SVD Line: 71520

//  <item> SFDITEM_FIELD__SYNTH_IF_VCOHIGH
//    <name> VCOHIGH </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40083070) VCOHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.4..4> VCOHIGH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SYNTH_IF_VCOLOW  ----------------------------------
// SVD Line: 71527

//  <item> SFDITEM_FIELD__SYNTH_IF_VCOLOW
//    <name> VCOLOW </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40083070) VCOLOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.5..5> VCOLOW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_IF_AUXCAPCALDONE  -------------------------------
// SVD Line: 71534

//  <item> SFDITEM_FIELD__SYNTH_IF_AUXCAPCALDONE
//    <name> AUXCAPCALDONE </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40083070) AUXCAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.6..6> AUXCAPCALDONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IF_AUXLOCKED  ---------------------------------
// SVD Line: 71541

//  <item> SFDITEM_FIELD__SYNTH_IF_AUXLOCKED
//    <name> AUXLOCKED </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40083070) AUXLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.7..7> AUXLOCKED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_IF_AUXUNLOCKED  --------------------------------
// SVD Line: 71548

//  <item> SFDITEM_FIELD__SYNTH_IF_AUXUNLOCKED
//    <name> AUXUNLOCKED </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40083070) AUXUNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IF ) </loc>
//      <o.8..8> AUXUNLOCKED
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SYNTH_IF  ------------------------------------
// SVD Line: 71490

//  <rtree> SFDITEM_REG__SYNTH_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40083070) IF </i>
//    <loc> ( (unsigned int)((SYNTH_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SYNTH_IF_LOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IF_UNLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IF_CAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IF_VCOHIGH </item>
//    <item> SFDITEM_FIELD__SYNTH_IF_VCOLOW </item>
//    <item> SFDITEM_FIELD__SYNTH_IF_AUXCAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IF_AUXLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IF_AUXUNLOCKED </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYNTH_IFS  --------------------------------
// SVD Line: 71557

unsigned int SYNTH_IFS __AT (0x40083074);



// ------------------------------  Field Item: SYNTH_IFS_LOCKED  ----------------------------------
// SVD Line: 71566

//  <item> SFDITEM_FIELD__SYNTH_IFS_LOCKED
//    <name> LOCKED </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40083074) LOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IFS_UNLOCKED  ---------------------------------
// SVD Line: 71573

//  <item> SFDITEM_FIELD__SYNTH_IFS_UNLOCKED
//    <name> UNLOCKED </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40083074) UNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.1..1> UNLOCKED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_IFS_CAPCALDONE  --------------------------------
// SVD Line: 71580

//  <item> SFDITEM_FIELD__SYNTH_IFS_CAPCALDONE
//    <name> CAPCALDONE </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40083074) CAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.2..2> CAPCALDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IFS_VCOHIGH  ---------------------------------
// SVD Line: 71587

//  <item> SFDITEM_FIELD__SYNTH_IFS_VCOHIGH
//    <name> VCOHIGH </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40083074) VCOHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.4..4> VCOHIGH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IFS_VCOLOW  ----------------------------------
// SVD Line: 71594

//  <item> SFDITEM_FIELD__SYNTH_IFS_VCOLOW
//    <name> VCOLOW </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40083074) VCOLOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.5..5> VCOLOW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_IFS_AUXCAPCALDONE  ------------------------------
// SVD Line: 71601

//  <item> SFDITEM_FIELD__SYNTH_IFS_AUXCAPCALDONE
//    <name> AUXCAPCALDONE </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40083074) AUXCAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.6..6> AUXCAPCALDONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IFS_AUXLOCKED  --------------------------------
// SVD Line: 71608

//  <item> SFDITEM_FIELD__SYNTH_IFS_AUXLOCKED
//    <name> AUXLOCKED </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40083074) AUXLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.7..7> AUXLOCKED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_IFS_AUXUNLOCKED  -------------------------------
// SVD Line: 71615

//  <item> SFDITEM_FIELD__SYNTH_IFS_AUXUNLOCKED
//    <name> AUXUNLOCKED </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40083074) AUXUNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFS ) </loc>
//      <o.8..8> AUXUNLOCKED
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SYNTH_IFS  -----------------------------------
// SVD Line: 71557

//  <rtree> SFDITEM_REG__SYNTH_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40083074) IFS </i>
//    <loc> ( (unsigned int)((SYNTH_IFS >> 0) & 0xFFFFFFFF), ((SYNTH_IFS = (SYNTH_IFS & ~(0x1F7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_IFS_LOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IFS_UNLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IFS_CAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IFS_VCOHIGH </item>
//    <item> SFDITEM_FIELD__SYNTH_IFS_VCOLOW </item>
//    <item> SFDITEM_FIELD__SYNTH_IFS_AUXCAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IFS_AUXLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IFS_AUXUNLOCKED </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYNTH_IFC  --------------------------------
// SVD Line: 71624

unsigned int SYNTH_IFC __AT (0x40083078);



// ------------------------------  Field Item: SYNTH_IFC_LOCKED  ----------------------------------
// SVD Line: 71633

//  <item> SFDITEM_FIELD__SYNTH_IFC_LOCKED
//    <name> LOCKED </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40083078) LOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IFC_UNLOCKED  ---------------------------------
// SVD Line: 71640

//  <item> SFDITEM_FIELD__SYNTH_IFC_UNLOCKED
//    <name> UNLOCKED </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40083078) UNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.1..1> UNLOCKED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_IFC_CAPCALDONE  --------------------------------
// SVD Line: 71647

//  <item> SFDITEM_FIELD__SYNTH_IFC_CAPCALDONE
//    <name> CAPCALDONE </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40083078) CAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.2..2> CAPCALDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IFC_VCOHIGH  ---------------------------------
// SVD Line: 71654

//  <item> SFDITEM_FIELD__SYNTH_IFC_VCOHIGH
//    <name> VCOHIGH </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40083078) VCOHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.4..4> VCOHIGH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IFC_VCOLOW  ----------------------------------
// SVD Line: 71661

//  <item> SFDITEM_FIELD__SYNTH_IFC_VCOLOW
//    <name> VCOLOW </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40083078) VCOLOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.5..5> VCOLOW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_IFC_AUXCAPCALDONE  ------------------------------
// SVD Line: 71668

//  <item> SFDITEM_FIELD__SYNTH_IFC_AUXCAPCALDONE
//    <name> AUXCAPCALDONE </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40083078) AUXCAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.6..6> AUXCAPCALDONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IFC_AUXLOCKED  --------------------------------
// SVD Line: 71675

//  <item> SFDITEM_FIELD__SYNTH_IFC_AUXLOCKED
//    <name> AUXLOCKED </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40083078) AUXLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.7..7> AUXLOCKED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_IFC_AUXUNLOCKED  -------------------------------
// SVD Line: 71682

//  <item> SFDITEM_FIELD__SYNTH_IFC_AUXUNLOCKED
//    <name> AUXUNLOCKED </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40083078) AUXUNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IFC ) </loc>
//      <o.8..8> AUXUNLOCKED
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SYNTH_IFC  -----------------------------------
// SVD Line: 71624

//  <rtree> SFDITEM_REG__SYNTH_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40083078) IFC </i>
//    <loc> ( (unsigned int)((SYNTH_IFC >> 0) & 0xFFFFFFFF), ((SYNTH_IFC = (SYNTH_IFC & ~(0x1F7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_IFC_LOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IFC_UNLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IFC_CAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IFC_VCOHIGH </item>
//    <item> SFDITEM_FIELD__SYNTH_IFC_VCOLOW </item>
//    <item> SFDITEM_FIELD__SYNTH_IFC_AUXCAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IFC_AUXLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IFC_AUXUNLOCKED </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYNTH_IEN  --------------------------------
// SVD Line: 71691

unsigned int SYNTH_IEN __AT (0x4008307C);



// ------------------------------  Field Item: SYNTH_IEN_LOCKED  ----------------------------------
// SVD Line: 71700

//  <item> SFDITEM_FIELD__SYNTH_IEN_LOCKED
//    <name> LOCKED </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4008307C) LOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.0..0> LOCKED
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IEN_UNLOCKED  ---------------------------------
// SVD Line: 71707

//  <item> SFDITEM_FIELD__SYNTH_IEN_UNLOCKED
//    <name> UNLOCKED </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4008307C) UNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.1..1> UNLOCKED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_IEN_CAPCALDONE  --------------------------------
// SVD Line: 71714

//  <item> SFDITEM_FIELD__SYNTH_IEN_CAPCALDONE
//    <name> CAPCALDONE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4008307C) CAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.2..2> CAPCALDONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IEN_VCOHIGH  ---------------------------------
// SVD Line: 71721

//  <item> SFDITEM_FIELD__SYNTH_IEN_VCOHIGH
//    <name> VCOHIGH </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4008307C) VCOHIGH </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.4..4> VCOHIGH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SYNTH_IEN_VCOLOW  ----------------------------------
// SVD Line: 71728

//  <item> SFDITEM_FIELD__SYNTH_IEN_VCOLOW
//    <name> VCOLOW </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4008307C) VCOLOW </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.5..5> VCOLOW
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYNTH_IEN_AUXCAPCALDONE  ------------------------------
// SVD Line: 71735

//  <item> SFDITEM_FIELD__SYNTH_IEN_AUXCAPCALDONE
//    <name> AUXCAPCALDONE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4008307C) AUXCAPCALDONE </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.6..6> AUXCAPCALDONE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SYNTH_IEN_AUXLOCKED  --------------------------------
// SVD Line: 71742

//  <item> SFDITEM_FIELD__SYNTH_IEN_AUXLOCKED
//    <name> AUXLOCKED </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4008307C) AUXLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.7..7> AUXLOCKED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: SYNTH_IEN_AUXUNLOCKED  -------------------------------
// SVD Line: 71749

//  <item> SFDITEM_FIELD__SYNTH_IEN_AUXUNLOCKED
//    <name> AUXUNLOCKED </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4008307C) AUXUNLOCKED </i>
//    <check> 
//      <loc> ( (unsigned int) SYNTH_IEN ) </loc>
//      <o.8..8> AUXUNLOCKED
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SYNTH_IEN  -----------------------------------
// SVD Line: 71691

//  <rtree> SFDITEM_REG__SYNTH_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008307C) IEN </i>
//    <loc> ( (unsigned int)((SYNTH_IEN >> 0) & 0xFFFFFFFF), ((SYNTH_IEN = (SYNTH_IEN & ~(0x1F7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYNTH_IEN_LOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IEN_UNLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IEN_CAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IEN_VCOHIGH </item>
//    <item> SFDITEM_FIELD__SYNTH_IEN_VCOLOW </item>
//    <item> SFDITEM_FIELD__SYNTH_IEN_AUXCAPCALDONE </item>
//    <item> SFDITEM_FIELD__SYNTH_IEN_AUXLOCKED </item>
//    <item> SFDITEM_FIELD__SYNTH_IEN_AUXUNLOCKED </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: SYNTH  -------------------------------------
// SVD Line: 70714

//  <view> SYNTH
//    <name> SYNTH </name>
//    <item> SFDITEM_REG__SYNTH_STATUS </item>
//    <item> SFDITEM_REG__SYNTH_CMD </item>
//    <item> SFDITEM_REG__SYNTH_CTRL </item>
//    <item> SFDITEM_REG__SYNTH_CALCTRL </item>
//    <item> SFDITEM_REG__SYNTH_VCDACCTRL </item>
//    <item> SFDITEM_REG__SYNTH_FREQ </item>
//    <item> SFDITEM_REG__SYNTH_IFFREQ </item>
//    <item> SFDITEM_REG__SYNTH_DIVCTRL </item>
//    <item> SFDITEM_REG__SYNTH_CHCTRL </item>
//    <item> SFDITEM_REG__SYNTH_CHSP </item>
//    <item> SFDITEM_REG__SYNTH_CALOFFSET </item>
//    <item> SFDITEM_REG__SYNTH_VCOTUNING </item>
//    <item> SFDITEM_REG__SYNTH_VCORANGE </item>
//    <item> SFDITEM_REG__SYNTH_VCOGAIN </item>
//    <item> SFDITEM_REG__SYNTH_AUXVCOTUNING </item>
//    <item> SFDITEM_REG__SYNTH_AUXFREQ </item>
//    <item> SFDITEM_REG__SYNTH_AUXVCDACCTRL </item>
//    <item> SFDITEM_REG__SYNTH_CHPDACCTRL </item>
//    <item> SFDITEM_REG__SYNTH_CAPCALCYCLECNT </item>
//    <item> SFDITEM_REG__SYNTH_IF </item>
//    <item> SFDITEM_REG__SYNTH_IFS </item>
//    <item> SFDITEM_REG__SYNTH_IFC </item>
//    <item> SFDITEM_REG__SYNTH_IEN </item>
//  </view>
//  


// --------------------------  Register Item Address: PROTIMER_CTRL  ------------------------------
// SVD Line: 71774

unsigned int PROTIMER_CTRL __AT (0x40085000);



// ---------------------------  Field Item: PROTIMER_CTRL_DEBUGRUN  -------------------------------
// SVD Line: 71783

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_DEBUGRUN
//    <name> DEBUGRUN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40085000) DEBUGRUN </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CTRL ) </loc>
//      <o.1..1> DEBUGRUN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CTRL_DMACLRACT  ------------------------------
// SVD Line: 71790

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_DMACLRACT
//    <name> DMACLRACT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40085000) DMACLRACT </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CTRL ) </loc>
//      <o.2..2> DMACLRACT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PROTIMER_CTRL_OSMEN  --------------------------------
// SVD Line: 71797

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_OSMEN
//    <name> OSMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40085000) One-Shot Mode Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CTRL ) </loc>
//      <o.4..4> OSMEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CTRL_ZEROSTARTEN  -----------------------------
// SVD Line: 71804

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_ZEROSTARTEN
//    <name> ZEROSTARTEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40085000) Start from zero enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CTRL ) </loc>
//      <o.5..5> ZEROSTARTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CTRL_PRECNTSRC  ------------------------------
// SVD Line: 71811

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_PRECNTSRC
//    <name> PRECNTSRC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40085000) Selects clock to Pre-counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_CTRL >> 8) & 0x3), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CTRL_BASECNTSRC  ------------------------------
// SVD Line: 71818

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_BASECNTSRC
//    <name> BASECNTSRC </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40085000) BASECNTSRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_CTRL >> 12) & 0x3), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CTRL_WRAPCNTSRC  ------------------------------
// SVD Line: 71825

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_WRAPCNTSRC
//    <name> WRAPCNTSRC </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40085000) WRAPCNTSRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_CTRL >> 16) & 0x3), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CTRL_TOUT0SRC  -------------------------------
// SVD Line: 71832

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT0SRC
//    <name> TOUT0SRC </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40085000) TOUT0SRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_CTRL >> 20) & 0x3), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_CTRL_TOUT0SYNCSRC  -----------------------------
// SVD Line: 71839

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT0SYNCSRC
//    <name> TOUT0SYNCSRC </name>
//    <rw> 
//    <i> [Bits 23..22] RW (@ 0x40085000) TOUT0SYNCSRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_CTRL >> 22) & 0x3), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CTRL_TOUT1SRC  -------------------------------
// SVD Line: 71846

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT1SRC
//    <name> TOUT1SRC </name>
//    <rw> 
//    <i> [Bits 25..24] RW (@ 0x40085000) TOUT1SRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_CTRL >> 24) & 0x3), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3UL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_CTRL_TOUT1SYNCSRC  -----------------------------
// SVD Line: 71853

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT1SYNCSRC
//    <name> TOUT1SYNCSRC </name>
//    <rw> 
//    <i> [Bits 27..26] RW (@ 0x40085000) TOUT1SYNCSRC </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_CTRL >> 26) & 0x3), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3UL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CTRL_TOUT0MODE  ------------------------------
// SVD Line: 71860

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT0MODE
//    <name> TOUT0MODE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40085000) Repeat Mode </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CTRL ) </loc>
//      <o.28..28> TOUT0MODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CTRL_TOUT1MODE  ------------------------------
// SVD Line: 71867

//  <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT1MODE
//    <name> TOUT1MODE </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40085000) Repeat Mode </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CTRL ) </loc>
//      <o.29..29> TOUT1MODE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PROTIMER_CTRL  ---------------------------------
// SVD Line: 71774

//  <rtree> SFDITEM_REG__PROTIMER_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085000) CTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_CTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_CTRL = (PROTIMER_CTRL & ~(0x3FF33336UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF33336) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_DEBUGRUN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_DMACLRACT </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_OSMEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_ZEROSTARTEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_PRECNTSRC </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_BASECNTSRC </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_WRAPCNTSRC </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT0SRC </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT0SYNCSRC </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT1SRC </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT1SYNCSRC </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT0MODE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CTRL_TOUT1MODE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PROTIMER_CMD  ------------------------------
// SVD Line: 71876

unsigned int PROTIMER_CMD __AT (0x40085004);



// -----------------------------  Field Item: PROTIMER_CMD_START  ---------------------------------
// SVD Line: 71885

//  <item> SFDITEM_FIELD__PROTIMER_CMD_START
//    <name> START </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40085004) Start PROTIMER </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CMD_RTCSYNCSTART  -----------------------------
// SVD Line: 71892

//  <item> SFDITEM_FIELD__PROTIMER_CMD_RTCSYNCSTART
//    <name> RTCSYNCSTART </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40085004) Start PROTIMER Synchronized with RTCC </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.1..1> RTCSYNCSTART
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_CMD_STOP  ---------------------------------
// SVD Line: 71899

//  <item> SFDITEM_FIELD__PROTIMER_CMD_STOP
//    <name> STOP </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40085004) STOP </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.2..2> STOP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CMD_TOUT0START  ------------------------------
// SVD Line: 71906

//  <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT0START
//    <name> TOUT0START </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40085004) TOUT0START </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.4..4> TOUT0START
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CMD_TOUT0STOP  -------------------------------
// SVD Line: 71913

//  <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT0STOP
//    <name> TOUT0STOP </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40085004) TOUT0STOP </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.5..5> TOUT0STOP
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CMD_TOUT1START  ------------------------------
// SVD Line: 71920

//  <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT1START
//    <name> TOUT1START </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40085004) TOUT1START </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.6..6> TOUT1START
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CMD_TOUT1STOP  -------------------------------
// SVD Line: 71927

//  <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT1STOP
//    <name> TOUT1STOP </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40085004) TOUT1STOP </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.7..7> TOUT1STOP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_CMD_LBTSTART  -------------------------------
// SVD Line: 71934

//  <item> SFDITEM_FIELD__PROTIMER_CMD_LBTSTART
//    <name> LBTSTART </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40085004) LBTSTART </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.16..16> LBTSTART
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_CMD_LBTSTOP  --------------------------------
// SVD Line: 71941

//  <item> SFDITEM_FIELD__PROTIMER_CMD_LBTSTOP
//    <name> LBTSTOP </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x40085004) LBTSTOP </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CMD ) </loc>
//      <o.18..18> LBTSTOP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PROTIMER_CMD  ----------------------------------
// SVD Line: 71876

//  <rtree> SFDITEM_REG__PROTIMER_CMD
//    <name> CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40085004) CMD </i>
//    <loc> ( (unsigned int)((PROTIMER_CMD >> 0) & 0xFFFFFFFF), ((PROTIMER_CMD = (PROTIMER_CMD & ~(0x500F7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x500F7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_START </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_RTCSYNCSTART </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_STOP </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT0START </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT0STOP </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT1START </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_TOUT1STOP </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_LBTSTART </item>
//    <item> SFDITEM_FIELD__PROTIMER_CMD_LBTSTOP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_PRSCTRL  ----------------------------
// SVD Line: 71950

unsigned int PROTIMER_PRSCTRL __AT (0x40085008);



// -------------------------  Field Item: PROTIMER_PRSCTRL_STARTPRSEN  ----------------------------
// SVD Line: 71959

//  <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STARTPRSEN
//    <name> STARTPRSEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40085008) STARTPRSEN </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_PRSCTRL ) </loc>
//      <o.1..1> STARTPRSEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_PRSCTRL_STARTEDGE  -----------------------------
// SVD Line: 71966

//  <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STARTEDGE
//    <name> STARTEDGE </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40085008) STARTEDGE </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_PRSCTRL >> 2) & 0x3), ((PROTIMER_PRSCTRL = (PROTIMER_PRSCTRL & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_PRSCTRL_STOPPRSEN  -----------------------------
// SVD Line: 71973

//  <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STOPPRSEN
//    <name> STOPPRSEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40085008) STOPPRSEN </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_PRSCTRL ) </loc>
//      <o.9..9> STOPPRSEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_PRSCTRL_STOPEDGE  -----------------------------
// SVD Line: 71980

//  <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STOPEDGE
//    <name> STOPEDGE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40085008) STOPEDGE </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_PRSCTRL >> 10) & 0x3), ((PROTIMER_PRSCTRL = (PROTIMER_PRSCTRL & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: PROTIMER_PRSCTRL_RTCCTRIGGERPRSEN  -------------------------
// SVD Line: 71987

//  <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_RTCCTRIGGERPRSEN
//    <name> RTCCTRIGGERPRSEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40085008) Enable RTCC Trigger from PRS. </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_PRSCTRL ) </loc>
//      <o.17..17> RTCCTRIGGERPRSEN
//    </check>
//  </item>
//  


// ----------------------  Field Item: PROTIMER_PRSCTRL_RTCCTRIGGEREDGE  --------------------------
// SVD Line: 71994

//  <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_RTCCTRIGGEREDGE
//    <name> RTCCTRIGGEREDGE </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40085008) RTCCTRIGGEREDGE </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_PRSCTRL >> 18) & 0x3), ((PROTIMER_PRSCTRL = (PROTIMER_PRSCTRL & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_PRSCTRL  --------------------------------
// SVD Line: 71950

//  <rtree> SFDITEM_REG__PROTIMER_PRSCTRL
//    <name> PRSCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085008) PRSCTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_PRSCTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_PRSCTRL = (PROTIMER_PRSCTRL & ~(0xE0E0EUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE0E0E) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STARTPRSEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STARTEDGE </item>
//    <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STOPPRSEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_STOPEDGE </item>
//    <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_RTCCTRIGGERPRSEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_PRSCTRL_RTCCTRIGGEREDGE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_STATUS  -----------------------------
// SVD Line: 72003

unsigned int PROTIMER_STATUS __AT (0x4008500C);



// ---------------------------  Field Item: PROTIMER_STATUS_RUNNING  ------------------------------
// SVD Line: 72012

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_RUNNING
//    <name> RUNNING </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4008500C) RUNNING </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.0..0> RUNNING
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_STATUS_LBTSYNC  ------------------------------
// SVD Line: 72019

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_LBTSYNC
//    <name> LBTSYNC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4008500C) LBTSYNC </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.1..1> LBTSYNC
//    </check>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_STATUS_LBTRUNNING  -----------------------------
// SVD Line: 72026

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_LBTRUNNING
//    <name> LBTRUNNING </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4008500C) LBTRUNNING </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.2..2> LBTRUNNING
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_STATUS_LBTPAUSED  -----------------------------
// SVD Line: 72033

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_LBTPAUSED
//    <name> LBTPAUSED </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4008500C) LBTPAUSED </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.3..3> LBTPAUSED
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_STATUS_TOUT0RUNNING  ----------------------------
// SVD Line: 72040

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT0RUNNING
//    <name> TOUT0RUNNING </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4008500C) TOUT0RUNNING </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.4..4> TOUT0RUNNING
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_STATUS_TOUT0SYNC  -----------------------------
// SVD Line: 72047

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT0SYNC
//    <name> TOUT0SYNC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4008500C) TOUT0SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.5..5> TOUT0SYNC
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_STATUS_TOUT1RUNNING  ----------------------------
// SVD Line: 72054

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT1RUNNING
//    <name> TOUT1RUNNING </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4008500C) TOUT1RUNNING </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.6..6> TOUT1RUNNING
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_STATUS_TOUT1SYNC  -----------------------------
// SVD Line: 72061

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT1SYNC
//    <name> TOUT1SYNC </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4008500C) TOUT1SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.7..7> TOUT1SYNC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_STATUS_ICV0  --------------------------------
// SVD Line: 72068

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV0
//    <name> ICV0 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4008500C) ICV0 </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.8..8> ICV0
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_STATUS_ICV1  --------------------------------
// SVD Line: 72075

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV1
//    <name> ICV1 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4008500C) ICV1 </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.9..9> ICV1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_STATUS_ICV2  --------------------------------
// SVD Line: 72082

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV2
//    <name> ICV2 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4008500C) ICV2 </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.10..10> ICV2
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_STATUS_ICV3  --------------------------------
// SVD Line: 72089

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV3
//    <name> ICV3 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4008500C) ICV3 </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.11..11> ICV3
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_STATUS_ICV4  --------------------------------
// SVD Line: 72096

//  <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV4
//    <name> ICV4 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4008500C) ICV4 </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_STATUS ) </loc>
//      <o.12..12> ICV4
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: PROTIMER_STATUS  --------------------------------
// SVD Line: 72003

//  <rtree> SFDITEM_REG__PROTIMER_STATUS
//    <name> STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008500C) STATUS </i>
//    <loc> ( (unsigned int)((PROTIMER_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_RUNNING </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_LBTSYNC </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_LBTRUNNING </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_LBTPAUSED </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT0RUNNING </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT0SYNC </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT1RUNNING </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_TOUT1SYNC </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_STATUS_ICV4 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_PRECNT  -----------------------------
// SVD Line: 72105

unsigned int PROTIMER_PRECNT __AT (0x40085010);



// ---------------------------  Field Item: PROTIMER_PRECNT_PRECNT  -------------------------------
// SVD Line: 72114

//  <item> SFDITEM_FIELD__PROTIMER_PRECNT_PRECNT
//    <name> PRECNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085010) PRECNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_PRECNT >> 0) & 0xFFFF), ((PROTIMER_PRECNT = (PROTIMER_PRECNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PROTIMER_PRECNT  --------------------------------
// SVD Line: 72105

//  <rtree> SFDITEM_REG__PROTIMER_PRECNT
//    <name> PRECNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085010) PRECNT </i>
//    <loc> ( (unsigned int)((PROTIMER_PRECNT >> 0) & 0xFFFFFFFF), ((PROTIMER_PRECNT = (PROTIMER_PRECNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_PRECNT_PRECNT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_BASECNT  ----------------------------
// SVD Line: 72123

unsigned int PROTIMER_BASECNT __AT (0x40085014);



// --------------------------  Field Item: PROTIMER_BASECNT_BASECNT  ------------------------------
// SVD Line: 72132

//  <item> SFDITEM_FIELD__PROTIMER_BASECNT_BASECNT
//    <name> BASECNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085014) BASECNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_BASECNT >> 0) & 0xFFFF), ((PROTIMER_BASECNT = (PROTIMER_BASECNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_BASECNT  --------------------------------
// SVD Line: 72123

//  <rtree> SFDITEM_REG__PROTIMER_BASECNT
//    <name> BASECNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085014) BASECNT </i>
//    <loc> ( (unsigned int)((PROTIMER_BASECNT >> 0) & 0xFFFFFFFF), ((PROTIMER_BASECNT = (PROTIMER_BASECNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_BASECNT_BASECNT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_WRAPCNT  ----------------------------
// SVD Line: 72141

unsigned int PROTIMER_WRAPCNT __AT (0x40085018);



// --------------------------  Field Item: PROTIMER_WRAPCNT_WRAPCNT  ------------------------------
// SVD Line: 72150

//  <item> SFDITEM_FIELD__PROTIMER_WRAPCNT_WRAPCNT
//    <name> WRAPCNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085018) WRAPCNT </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_WRAPCNT >> 0) & 0xFFFFFFFF), ((PROTIMER_WRAPCNT = (PROTIMER_WRAPCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_WRAPCNT  --------------------------------
// SVD Line: 72141

//  <rtree> SFDITEM_REG__PROTIMER_WRAPCNT
//    <name> WRAPCNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085018) WRAPCNT </i>
//    <loc> ( (unsigned int)((PROTIMER_WRAPCNT >> 0) & 0xFFFFFFFF), ((PROTIMER_WRAPCNT = (PROTIMER_WRAPCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_WRAPCNT_WRAPCNT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_BASEPRE  ----------------------------
// SVD Line: 72159

unsigned int PROTIMER_BASEPRE __AT (0x4008501C);



// --------------------------  Field Item: PROTIMER_BASEPRE_PRECNTV  ------------------------------
// SVD Line: 72168

//  <item> SFDITEM_FIELD__PROTIMER_BASEPRE_PRECNTV
//    <name> PRECNTV </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x4008501C) PRECNTV </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_BASEPRE >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_BASEPRE_BASECNTV  -----------------------------
// SVD Line: 72175

//  <item> SFDITEM_FIELD__PROTIMER_BASEPRE_BASECNTV
//    <name> BASECNTV </name>
//    <r> 
//    <i> [Bits 31..16] RO (@ 0x4008501C) BASECNTV </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_BASEPRE >> 16) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_BASEPRE  --------------------------------
// SVD Line: 72159

//  <rtree> SFDITEM_REG__PROTIMER_BASEPRE
//    <name> BASEPRE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008501C) BASEPRE </i>
//    <loc> ( (unsigned int)((PROTIMER_BASEPRE >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_BASEPRE_PRECNTV </item>
//    <item> SFDITEM_FIELD__PROTIMER_BASEPRE_BASECNTV </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_LWRAPCNT  ----------------------------
// SVD Line: 72184

unsigned int PROTIMER_LWRAPCNT __AT (0x40085020);



// -------------------------  Field Item: PROTIMER_LWRAPCNT_LWRAPCNT  -----------------------------
// SVD Line: 72193

//  <item> SFDITEM_FIELD__PROTIMER_LWRAPCNT_LWRAPCNT
//    <name> LWRAPCNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40085020) LWRAPCNT </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_LWRAPCNT >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_LWRAPCNT  -------------------------------
// SVD Line: 72184

//  <rtree> SFDITEM_REG__PROTIMER_LWRAPCNT
//    <name> LWRAPCNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40085020) LWRAPCNT </i>
//    <loc> ( (unsigned int)((PROTIMER_LWRAPCNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_LWRAPCNT_LWRAPCNT </item>
//  </rtree>
//  


// ----------------------  Register Item Address: PROTIMER_PRECNTTOPADJ  --------------------------
// SVD Line: 72202

unsigned int PROTIMER_PRECNTTOPADJ __AT (0x40085024);



// ---------------------  Field Item: PROTIMER_PRECNTTOPADJ_PRECNTTOPADJ  -------------------------
// SVD Line: 72211

//  <item> SFDITEM_FIELD__PROTIMER_PRECNTTOPADJ_PRECNTTOPADJ
//    <name> PRECNTTOPADJ </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085024) PRECNTTOPADJ </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_PRECNTTOPADJ >> 0) & 0xFFFF), ((PROTIMER_PRECNTTOPADJ = (PROTIMER_PRECNTTOPADJ & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: PROTIMER_PRECNTTOPADJ  -----------------------------
// SVD Line: 72202

//  <rtree> SFDITEM_REG__PROTIMER_PRECNTTOPADJ
//    <name> PRECNTTOPADJ </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085024) PRECNTTOPADJ </i>
//    <loc> ( (unsigned int)((PROTIMER_PRECNTTOPADJ >> 0) & 0xFFFFFFFF), ((PROTIMER_PRECNTTOPADJ = (PROTIMER_PRECNTTOPADJ & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_PRECNTTOPADJ_PRECNTTOPADJ </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_PRECNTTOP  ---------------------------
// SVD Line: 72220

unsigned int PROTIMER_PRECNTTOP __AT (0x40085028);



// ----------------------  Field Item: PROTIMER_PRECNTTOP_PRECNTTOPFRAC  --------------------------
// SVD Line: 72229

//  <item> SFDITEM_FIELD__PROTIMER_PRECNTTOP_PRECNTTOPFRAC
//    <name> PRECNTTOPFRAC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40085028) PRECNTTOPFRAC </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_PRECNTTOP >> 0) & 0xFF), ((PROTIMER_PRECNTTOP = (PROTIMER_PRECNTTOP & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_PRECNTTOP_PRECNTTOP  ----------------------------
// SVD Line: 72236

//  <item> SFDITEM_FIELD__PROTIMER_PRECNTTOP_PRECNTTOP
//    <name> PRECNTTOP </name>
//    <rw> 
//    <i> [Bits 23..8] RW (@ 0x40085028) PRECNTTOP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_PRECNTTOP >> 8) & 0xFFFF), ((PROTIMER_PRECNTTOP = (PROTIMER_PRECNTTOP & ~(0xFFFFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: PROTIMER_PRECNTTOP  -------------------------------
// SVD Line: 72220

//  <rtree> SFDITEM_REG__PROTIMER_PRECNTTOP
//    <name> PRECNTTOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085028) PRECNTTOP </i>
//    <loc> ( (unsigned int)((PROTIMER_PRECNTTOP >> 0) & 0xFFFFFFFF), ((PROTIMER_PRECNTTOP = (PROTIMER_PRECNTTOP & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_PRECNTTOP_PRECNTTOPFRAC </item>
//    <item> SFDITEM_FIELD__PROTIMER_PRECNTTOP_PRECNTTOP </item>
//  </rtree>
//  


// -----------------------  Register Item Address: PROTIMER_BASECNTTOP  ---------------------------
// SVD Line: 72245

unsigned int PROTIMER_BASECNTTOP __AT (0x4008502C);



// -----------------------  Field Item: PROTIMER_BASECNTTOP_BASECNTTOP  ---------------------------
// SVD Line: 72254

//  <item> SFDITEM_FIELD__PROTIMER_BASECNTTOP_BASECNTTOP
//    <name> BASECNTTOP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008502C) BASECNTTOP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_BASECNTTOP >> 0) & 0xFFFF), ((PROTIMER_BASECNTTOP = (PROTIMER_BASECNTTOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: PROTIMER_BASECNTTOP  ------------------------------
// SVD Line: 72245

//  <rtree> SFDITEM_REG__PROTIMER_BASECNTTOP
//    <name> BASECNTTOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008502C) BASECNTTOP </i>
//    <loc> ( (unsigned int)((PROTIMER_BASECNTTOP >> 0) & 0xFFFFFFFF), ((PROTIMER_BASECNTTOP = (PROTIMER_BASECNTTOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_BASECNTTOP_BASECNTTOP </item>
//  </rtree>
//  


// -----------------------  Register Item Address: PROTIMER_WRAPCNTTOP  ---------------------------
// SVD Line: 72263

unsigned int PROTIMER_WRAPCNTTOP __AT (0x40085030);



// -----------------------  Field Item: PROTIMER_WRAPCNTTOP_WRAPCNTTOP  ---------------------------
// SVD Line: 72272

//  <item> SFDITEM_FIELD__PROTIMER_WRAPCNTTOP_WRAPCNTTOP
//    <name> WRAPCNTTOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085030) WRAPCNTTOP </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_WRAPCNTTOP >> 0) & 0xFFFFFFFF), ((PROTIMER_WRAPCNTTOP = (PROTIMER_WRAPCNTTOP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: PROTIMER_WRAPCNTTOP  ------------------------------
// SVD Line: 72263

//  <rtree> SFDITEM_REG__PROTIMER_WRAPCNTTOP
//    <name> WRAPCNTTOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085030) WRAPCNTTOP </i>
//    <loc> ( (unsigned int)((PROTIMER_WRAPCNTTOP >> 0) & 0xFFFFFFFF), ((PROTIMER_WRAPCNTTOP = (PROTIMER_WRAPCNTTOP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_WRAPCNTTOP_WRAPCNTTOP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_TOUT0CNT  ----------------------------
// SVD Line: 72281

unsigned int PROTIMER_TOUT0CNT __AT (0x40085034);



// -------------------------  Field Item: PROTIMER_TOUT0CNT_TOUT0PCNT  ----------------------------
// SVD Line: 72290

//  <item> SFDITEM_FIELD__PROTIMER_TOUT0CNT_TOUT0PCNT
//    <name> TOUT0PCNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085034) TOUT0PCNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT0CNT >> 0) & 0xFFFF), ((PROTIMER_TOUT0CNT = (PROTIMER_TOUT0CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_TOUT0CNT_TOUT0CNT  -----------------------------
// SVD Line: 72297

//  <item> SFDITEM_FIELD__PROTIMER_TOUT0CNT_TOUT0CNT
//    <name> TOUT0CNT </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40085034) TOUT0CNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT0CNT >> 16) & 0xFFFF), ((PROTIMER_TOUT0CNT = (PROTIMER_TOUT0CNT & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_TOUT0CNT  -------------------------------
// SVD Line: 72281

//  <rtree> SFDITEM_REG__PROTIMER_TOUT0CNT
//    <name> TOUT0CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085034) TOUT0CNT </i>
//    <loc> ( (unsigned int)((PROTIMER_TOUT0CNT >> 0) & 0xFFFFFFFF), ((PROTIMER_TOUT0CNT = (PROTIMER_TOUT0CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT0CNT_TOUT0PCNT </item>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT0CNT_TOUT0CNT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: PROTIMER_TOUT0CNTTOP  --------------------------
// SVD Line: 72306

unsigned int PROTIMER_TOUT0CNTTOP __AT (0x40085038);



// ----------------------  Field Item: PROTIMER_TOUT0CNTTOP_TOUT0PCNTTOP  -------------------------
// SVD Line: 72315

//  <item> SFDITEM_FIELD__PROTIMER_TOUT0CNTTOP_TOUT0PCNTTOP
//    <name> TOUT0PCNTTOP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085038) TOUT0PCNTTOP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT0CNTTOP >> 0) & 0xFFFF), ((PROTIMER_TOUT0CNTTOP = (PROTIMER_TOUT0CNTTOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: PROTIMER_TOUT0CNTTOP_TOUT0CNTTOP  --------------------------
// SVD Line: 72322

//  <item> SFDITEM_FIELD__PROTIMER_TOUT0CNTTOP_TOUT0CNTTOP
//    <name> TOUT0CNTTOP </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40085038) TOUT0CNTTOP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT0CNTTOP >> 16) & 0xFFFF), ((PROTIMER_TOUT0CNTTOP = (PROTIMER_TOUT0CNTTOP & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: PROTIMER_TOUT0CNTTOP  ------------------------------
// SVD Line: 72306

//  <rtree> SFDITEM_REG__PROTIMER_TOUT0CNTTOP
//    <name> TOUT0CNTTOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085038) TOUT0CNTTOP </i>
//    <loc> ( (unsigned int)((PROTIMER_TOUT0CNTTOP >> 0) & 0xFFFFFFFF), ((PROTIMER_TOUT0CNTTOP = (PROTIMER_TOUT0CNTTOP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT0CNTTOP_TOUT0PCNTTOP </item>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT0CNTTOP_TOUT0CNTTOP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_TOUT0COMP  ---------------------------
// SVD Line: 72331

unsigned int PROTIMER_TOUT0COMP __AT (0x4008503C);



// ----------------------  Field Item: PROTIMER_TOUT0COMP_TOUT0PCNTCOMP  --------------------------
// SVD Line: 72340

//  <item> SFDITEM_FIELD__PROTIMER_TOUT0COMP_TOUT0PCNTCOMP
//    <name> TOUT0PCNTCOMP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008503C) TOUT0PCNTCOMP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT0COMP >> 0) & 0xFFFF), ((PROTIMER_TOUT0COMP = (PROTIMER_TOUT0COMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: PROTIMER_TOUT0COMP_TOUT0CNTCOMP  --------------------------
// SVD Line: 72347

//  <item> SFDITEM_FIELD__PROTIMER_TOUT0COMP_TOUT0CNTCOMP
//    <name> TOUT0CNTCOMP </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4008503C) TOUT0CNTCOMP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT0COMP >> 16) & 0xFFFF), ((PROTIMER_TOUT0COMP = (PROTIMER_TOUT0COMP & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: PROTIMER_TOUT0COMP  -------------------------------
// SVD Line: 72331

//  <rtree> SFDITEM_REG__PROTIMER_TOUT0COMP
//    <name> TOUT0COMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008503C) TOUT0COMP </i>
//    <loc> ( (unsigned int)((PROTIMER_TOUT0COMP >> 0) & 0xFFFFFFFF), ((PROTIMER_TOUT0COMP = (PROTIMER_TOUT0COMP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT0COMP_TOUT0PCNTCOMP </item>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT0COMP_TOUT0CNTCOMP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_TOUT1CNT  ----------------------------
// SVD Line: 72356

unsigned int PROTIMER_TOUT1CNT __AT (0x40085040);



// -------------------------  Field Item: PROTIMER_TOUT1CNT_TOUT1PCNT  ----------------------------
// SVD Line: 72365

//  <item> SFDITEM_FIELD__PROTIMER_TOUT1CNT_TOUT1PCNT
//    <name> TOUT1PCNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085040) TOUT1PCNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT1CNT >> 0) & 0xFFFF), ((PROTIMER_TOUT1CNT = (PROTIMER_TOUT1CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_TOUT1CNT_TOUT1CNT  -----------------------------
// SVD Line: 72372

//  <item> SFDITEM_FIELD__PROTIMER_TOUT1CNT_TOUT1CNT
//    <name> TOUT1CNT </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40085040) TOUT1CNT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT1CNT >> 16) & 0xFFFF), ((PROTIMER_TOUT1CNT = (PROTIMER_TOUT1CNT & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_TOUT1CNT  -------------------------------
// SVD Line: 72356

//  <rtree> SFDITEM_REG__PROTIMER_TOUT1CNT
//    <name> TOUT1CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085040) TOUT1CNT </i>
//    <loc> ( (unsigned int)((PROTIMER_TOUT1CNT >> 0) & 0xFFFFFFFF), ((PROTIMER_TOUT1CNT = (PROTIMER_TOUT1CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT1CNT_TOUT1PCNT </item>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT1CNT_TOUT1CNT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: PROTIMER_TOUT1CNTTOP  --------------------------
// SVD Line: 72381

unsigned int PROTIMER_TOUT1CNTTOP __AT (0x40085044);



// ----------------------  Field Item: PROTIMER_TOUT1CNTTOP_TOUT1PCNTTOP  -------------------------
// SVD Line: 72390

//  <item> SFDITEM_FIELD__PROTIMER_TOUT1CNTTOP_TOUT1PCNTTOP
//    <name> TOUT1PCNTTOP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085044) TOUT1PCNTTOP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT1CNTTOP >> 0) & 0xFFFF), ((PROTIMER_TOUT1CNTTOP = (PROTIMER_TOUT1CNTTOP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: PROTIMER_TOUT1CNTTOP_TOUT1CNTTOP  --------------------------
// SVD Line: 72397

//  <item> SFDITEM_FIELD__PROTIMER_TOUT1CNTTOP_TOUT1CNTTOP
//    <name> TOUT1CNTTOP </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40085044) TOUT1CNTTOP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT1CNTTOP >> 16) & 0xFFFF), ((PROTIMER_TOUT1CNTTOP = (PROTIMER_TOUT1CNTTOP & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: PROTIMER_TOUT1CNTTOP  ------------------------------
// SVD Line: 72381

//  <rtree> SFDITEM_REG__PROTIMER_TOUT1CNTTOP
//    <name> TOUT1CNTTOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085044) TOUT1CNTTOP </i>
//    <loc> ( (unsigned int)((PROTIMER_TOUT1CNTTOP >> 0) & 0xFFFFFFFF), ((PROTIMER_TOUT1CNTTOP = (PROTIMER_TOUT1CNTTOP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT1CNTTOP_TOUT1PCNTTOP </item>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT1CNTTOP_TOUT1CNTTOP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_TOUT1COMP  ---------------------------
// SVD Line: 72406

unsigned int PROTIMER_TOUT1COMP __AT (0x40085048);



// ----------------------  Field Item: PROTIMER_TOUT1COMP_TOUT1PCNTCOMP  --------------------------
// SVD Line: 72415

//  <item> SFDITEM_FIELD__PROTIMER_TOUT1COMP_TOUT1PCNTCOMP
//    <name> TOUT1PCNTCOMP </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085048) TOUT1PCNTCOMP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT1COMP >> 0) & 0xFFFF), ((PROTIMER_TOUT1COMP = (PROTIMER_TOUT1COMP & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: PROTIMER_TOUT1COMP_TOUT1CNTCOMP  --------------------------
// SVD Line: 72422

//  <item> SFDITEM_FIELD__PROTIMER_TOUT1COMP_TOUT1CNTCOMP
//    <name> TOUT1CNTCOMP </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40085048) TOUT1CNTCOMP </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_TOUT1COMP >> 16) & 0xFFFF), ((PROTIMER_TOUT1COMP = (PROTIMER_TOUT1COMP & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: PROTIMER_TOUT1COMP  -------------------------------
// SVD Line: 72406

//  <rtree> SFDITEM_REG__PROTIMER_TOUT1COMP
//    <name> TOUT1COMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085048) TOUT1COMP </i>
//    <loc> ( (unsigned int)((PROTIMER_TOUT1COMP >> 0) & 0xFFFFFFFF), ((PROTIMER_TOUT1COMP = (PROTIMER_TOUT1COMP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT1COMP_TOUT1PCNTCOMP </item>
//    <item> SFDITEM_FIELD__PROTIMER_TOUT1COMP_TOUT1CNTCOMP </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_LBTCTRL  ----------------------------
// SVD Line: 72431

unsigned int PROTIMER_LBTCTRL __AT (0x4008504C);



// --------------------------  Field Item: PROTIMER_LBTCTRL_STARTEXP  -----------------------------
// SVD Line: 72440

//  <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_STARTEXP
//    <name> STARTEXP </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4008504C) STARTEXP </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_LBTCTRL >> 0) & 0xF), ((PROTIMER_LBTCTRL = (PROTIMER_LBTCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_LBTCTRL_MAXEXP  ------------------------------
// SVD Line: 72447

//  <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_MAXEXP
//    <name> MAXEXP </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4008504C) MAXEXP </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_LBTCTRL >> 4) & 0xF), ((PROTIMER_LBTCTRL = (PROTIMER_LBTCTRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_LBTCTRL_CCADELAY  -----------------------------
// SVD Line: 72454

//  <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_CCADELAY
//    <name> CCADELAY </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x4008504C) CCADELAY </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_LBTCTRL >> 8) & 0x1F), ((PROTIMER_LBTCTRL = (PROTIMER_LBTCTRL & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_LBTCTRL_CCAREPEAT  -----------------------------
// SVD Line: 72461

//  <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_CCAREPEAT
//    <name> CCAREPEAT </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4008504C) CCAREPEAT </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_LBTCTRL >> 16) & 0xF), ((PROTIMER_LBTCTRL = (PROTIMER_LBTCTRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_LBTCTRL_FIXEDBACKOFF  ---------------------------
// SVD Line: 72468

//  <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_FIXEDBACKOFF
//    <name> FIXEDBACKOFF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4008504C) FIXEDBACKOFF </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_LBTCTRL ) </loc>
//      <o.20..20> FIXEDBACKOFF
//    </check>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_LBTCTRL_RETRYLIMIT  ----------------------------
// SVD Line: 72475

//  <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_RETRYLIMIT
//    <name> RETRYLIMIT </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4008504C) RETRYLIMIT </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_LBTCTRL >> 24) & 0xF), ((PROTIMER_LBTCTRL = (PROTIMER_LBTCTRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_LBTCTRL  --------------------------------
// SVD Line: 72431

//  <rtree> SFDITEM_REG__PROTIMER_LBTCTRL
//    <name> LBTCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008504C) LBTCTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_LBTCTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_LBTCTRL = (PROTIMER_LBTCTRL & ~(0xF1F1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF1F1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_STARTEXP </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_MAXEXP </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_CCADELAY </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_CCAREPEAT </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_FIXEDBACKOFF </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTCTRL_RETRYLIMIT </item>
//  </rtree>
//  


// -----------------------  Register Item Address: PROTIMER_LBTPRSCTRL  ---------------------------
// SVD Line: 72484

unsigned int PROTIMER_LBTPRSCTRL __AT (0x40085050);



// ----------------------  Field Item: PROTIMER_LBTPRSCTRL_LBTSTARTPRSEN  -------------------------
// SVD Line: 72493

//  <item> SFDITEM_FIELD__PROTIMER_LBTPRSCTRL_LBTSTARTPRSEN
//    <name> LBTSTARTPRSEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40085050) LBTSTARTPRSEN </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_LBTPRSCTRL ) </loc>
//      <o.8..8> LBTSTARTPRSEN
//    </check>
//  </item>
//  


// ----------------------  Field Item: PROTIMER_LBTPRSCTRL_LBTPAUSEPRSEN  -------------------------
// SVD Line: 72500

//  <item> SFDITEM_FIELD__PROTIMER_LBTPRSCTRL_LBTPAUSEPRSEN
//    <name> LBTPAUSEPRSEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40085050) Enable LBT pause commands from PRS. </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_LBTPRSCTRL ) </loc>
//      <o.16..16> LBTPAUSEPRSEN
//    </check>
//  </item>
//  


// ----------------------  Field Item: PROTIMER_LBTPRSCTRL_LBTSTOPPRSEN  --------------------------
// SVD Line: 72507

//  <item> SFDITEM_FIELD__PROTIMER_LBTPRSCTRL_LBTSTOPPRSEN
//    <name> LBTSTOPPRSEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40085050) Enable LBT stop commands from PRS. </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_LBTPRSCTRL ) </loc>
//      <o.24..24> LBTSTOPPRSEN
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: PROTIMER_LBTPRSCTRL  ------------------------------
// SVD Line: 72484

//  <rtree> SFDITEM_REG__PROTIMER_LBTPRSCTRL
//    <name> LBTPRSCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085050) LBTPRSCTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_LBTPRSCTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_LBTPRSCTRL = (PROTIMER_LBTPRSCTRL & ~(0x1010100UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1010100) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_LBTPRSCTRL_LBTSTARTPRSEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTPRSCTRL_LBTPAUSEPRSEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTPRSCTRL_LBTSTOPPRSEN </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_LBTSTATE  ----------------------------
// SVD Line: 72516

unsigned int PROTIMER_LBTSTATE __AT (0x40085054);



// -------------------------  Field Item: PROTIMER_LBTSTATE_TOUT0PCNT  ----------------------------
// SVD Line: 72525

//  <item> SFDITEM_FIELD__PROTIMER_LBTSTATE_TOUT0PCNT
//    <name> TOUT0PCNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085054) TOUT0PCNT value to be saved </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_LBTSTATE >> 0) & 0xFFFF), ((PROTIMER_LBTSTATE = (PROTIMER_LBTSTATE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_LBTSTATE_TOUT0CNT  -----------------------------
// SVD Line: 72532

//  <item> SFDITEM_FIELD__PROTIMER_LBTSTATE_TOUT0CNT
//    <name> TOUT0CNT </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40085054) TOUT0CNT value to be saved </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_LBTSTATE >> 16) & 0xFFFF), ((PROTIMER_LBTSTATE = (PROTIMER_LBTSTATE & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_LBTSTATE  -------------------------------
// SVD Line: 72516

//  <rtree> SFDITEM_REG__PROTIMER_LBTSTATE
//    <name> LBTSTATE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40085054) LBTSTATE </i>
//    <loc> ( (unsigned int)((PROTIMER_LBTSTATE >> 0) & 0xFFFFFFFF), ((PROTIMER_LBTSTATE = (PROTIMER_LBTSTATE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_LBTSTATE_TOUT0PCNT </item>
//    <item> SFDITEM_FIELD__PROTIMER_LBTSTATE_TOUT0CNT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_RANDOM  -----------------------------
// SVD Line: 72541

unsigned int PROTIMER_RANDOM __AT (0x40085058);



// ---------------------------  Field Item: PROTIMER_RANDOM_RANDOM  -------------------------------
// SVD Line: 72550

//  <item> SFDITEM_FIELD__PROTIMER_RANDOM_RANDOM
//    <name> RANDOM </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085058) RANDOM </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_RANDOM >> 0) & 0xFFFF), ((PROTIMER_RANDOM = (PROTIMER_RANDOM & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PROTIMER_RANDOM  --------------------------------
// SVD Line: 72541

//  <rtree> SFDITEM_REG__PROTIMER_RANDOM
//    <name> RANDOM </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085058) RANDOM </i>
//    <loc> ( (unsigned int)((PROTIMER_RANDOM >> 0) & 0xFFFFFFFF), ((PROTIMER_RANDOM = (PROTIMER_RANDOM & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_RANDOM_RANDOM </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PROTIMER_IF  -------------------------------
// SVD Line: 72559

unsigned int PROTIMER_IF __AT (0x4008505C);



// ----------------------------  Field Item: PROTIMER_IF_PRECNTOF  --------------------------------
// SVD Line: 72568

//  <item> SFDITEM_FIELD__PROTIMER_IF_PRECNTOF
//    <name> PRECNTOF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4008505C) PRECNT Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.0..0> PRECNTOF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_IF_BASECNTOF  -------------------------------
// SVD Line: 72575

//  <item> SFDITEM_FIELD__PROTIMER_IF_BASECNTOF
//    <name> BASECNTOF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4008505C) BASECNT Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.1..1> BASECNTOF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_IF_WRAPCNTOF  -------------------------------
// SVD Line: 72582

//  <item> SFDITEM_FIELD__PROTIMER_IF_WRAPCNTOF
//    <name> WRAPCNTOF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4008505C) WRAPCNT Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.2..2> WRAPCNTOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IF_TOUT0  ---------------------------------
// SVD Line: 72589

//  <item> SFDITEM_FIELD__PROTIMER_IF_TOUT0
//    <name> TOUT0 </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4008505C) TOUT0 underflow interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.4..4> TOUT0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IF_TOUT1  ---------------------------------
// SVD Line: 72596

//  <item> SFDITEM_FIELD__PROTIMER_IF_TOUT1
//    <name> TOUT1 </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4008505C) TOUT1 underflow interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.5..5> TOUT1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IF_TOUT0MATCH  -------------------------------
// SVD Line: 72603

//  <item> SFDITEM_FIELD__PROTIMER_IF_TOUT0MATCH
//    <name> TOUT0MATCH </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4008505C) TOUT0 compare match interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.6..6> TOUT0MATCH
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IF_TOUT1MATCH  -------------------------------
// SVD Line: 72610

//  <item> SFDITEM_FIELD__PROTIMER_IF_TOUT1MATCH
//    <name> TOUT1MATCH </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4008505C) TOUT1 compare match interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.7..7> TOUT1MATCH
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PROTIMER_IF_CC0  ----------------------------------
// SVD Line: 72617

//  <item> SFDITEM_FIELD__PROTIMER_IF_CC0
//    <name> CC0 </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4008505C) CC Channel 0 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.8..8> CC0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PROTIMER_IF_CC1  ----------------------------------
// SVD Line: 72624

//  <item> SFDITEM_FIELD__PROTIMER_IF_CC1
//    <name> CC1 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4008505C) CC Channel 1 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.9..9> CC1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PROTIMER_IF_CC2  ----------------------------------
// SVD Line: 72631

//  <item> SFDITEM_FIELD__PROTIMER_IF_CC2
//    <name> CC2 </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4008505C) CC Channel 2 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.10..10> CC2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PROTIMER_IF_CC3  ----------------------------------
// SVD Line: 72638

//  <item> SFDITEM_FIELD__PROTIMER_IF_CC3
//    <name> CC3 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4008505C) CC Channel 3 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.11..11> CC3
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PROTIMER_IF_CC4  ----------------------------------
// SVD Line: 72645

//  <item> SFDITEM_FIELD__PROTIMER_IF_CC4
//    <name> CC4 </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4008505C) CC Channel 4 Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.12..12> CC4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IF_COF0  ----------------------------------
// SVD Line: 72652

//  <item> SFDITEM_FIELD__PROTIMER_IF_COF0
//    <name> COF0 </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4008505C) CC Channel 0 Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.16..16> COF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IF_COF1  ----------------------------------
// SVD Line: 72659

//  <item> SFDITEM_FIELD__PROTIMER_IF_COF1
//    <name> COF1 </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4008505C) CC Channel 1 Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.17..17> COF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IF_COF2  ----------------------------------
// SVD Line: 72666

//  <item> SFDITEM_FIELD__PROTIMER_IF_COF2
//    <name> COF2 </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4008505C) CC Channel 2 Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.18..18> COF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IF_COF3  ----------------------------------
// SVD Line: 72673

//  <item> SFDITEM_FIELD__PROTIMER_IF_COF3
//    <name> COF3 </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4008505C) CC Channel 3 Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.19..19> COF3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IF_COF4  ----------------------------------
// SVD Line: 72680

//  <item> SFDITEM_FIELD__PROTIMER_IF_COF4
//    <name> COF4 </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4008505C) CC Channel 4 Overflow Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.20..20> COF4
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IF_LBTSUCCESS  -------------------------------
// SVD Line: 72687

//  <item> SFDITEM_FIELD__PROTIMER_IF_LBTSUCCESS
//    <name> LBTSUCCESS </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x4008505C) Listen Before Talk Success </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.24..24> LBTSUCCESS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IF_LBTFAILURE  -------------------------------
// SVD Line: 72694

//  <item> SFDITEM_FIELD__PROTIMER_IF_LBTFAILURE
//    <name> LBTFAILURE </name>
//    <r> 
//    <i> [Bit 25] RO (@ 0x4008505C) Listen Before Talk Failure </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.25..25> LBTFAILURE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_IF_LBTPAUSED  -------------------------------
// SVD Line: 72701

//  <item> SFDITEM_FIELD__PROTIMER_IF_LBTPAUSED
//    <name> LBTPAUSED </name>
//    <r> 
//    <i> [Bit 26] RO (@ 0x4008505C) Listen Before Talk Paused </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.26..26> LBTPAUSED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_IF_LBTRETRY  --------------------------------
// SVD Line: 72708

//  <item> SFDITEM_FIELD__PROTIMER_IF_LBTRETRY
//    <name> LBTRETRY </name>
//    <r> 
//    <i> [Bit 27] RO (@ 0x4008505C) Listen Before Talk Retry </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.27..27> LBTRETRY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IF_RTCCSYNCHED  ------------------------------
// SVD Line: 72715

//  <item> SFDITEM_FIELD__PROTIMER_IF_RTCCSYNCHED
//    <name> RTCCSYNCHED </name>
//    <r> 
//    <i> [Bit 28] RO (@ 0x4008505C) PROTIMER synchronized with the RTCC </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.28..28> RTCCSYNCHED
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_IF_TOUT0MATCHLBT  -----------------------------
// SVD Line: 72722

//  <item> SFDITEM_FIELD__PROTIMER_IF_TOUT0MATCHLBT
//    <name> TOUT0MATCHLBT </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x4008505C) TOUT0 compare match interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IF ) </loc>
//      <o.29..29> TOUT0MATCHLBT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: PROTIMER_IF  ----------------------------------
// SVD Line: 72559

//  <rtree> SFDITEM_REG__PROTIMER_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4008505C) IF </i>
//    <loc> ( (unsigned int)((PROTIMER_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_IF_PRECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_BASECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_WRAPCNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_TOUT0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_TOUT1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_TOUT0MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_TOUT1MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_CC0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_CC1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_CC2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_CC3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_CC4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_COF0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_COF1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_COF2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_COF3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_COF4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_LBTSUCCESS </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_LBTFAILURE </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_LBTPAUSED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_LBTRETRY </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_RTCCSYNCHED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IF_TOUT0MATCHLBT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PROTIMER_IFS  ------------------------------
// SVD Line: 72731

unsigned int PROTIMER_IFS __AT (0x40085060);



// ----------------------------  Field Item: PROTIMER_IFS_PRECNTOF  -------------------------------
// SVD Line: 72740

//  <item> SFDITEM_FIELD__PROTIMER_IFS_PRECNTOF
//    <name> PRECNTOF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40085060) PRECNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.0..0> PRECNTOF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFS_BASECNTOF  -------------------------------
// SVD Line: 72747

//  <item> SFDITEM_FIELD__PROTIMER_IFS_BASECNTOF
//    <name> BASECNTOF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40085060) BASECNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.1..1> BASECNTOF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFS_WRAPCNTOF  -------------------------------
// SVD Line: 72754

//  <item> SFDITEM_FIELD__PROTIMER_IFS_WRAPCNTOF
//    <name> WRAPCNTOF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40085060) WRAPCNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.2..2> WRAPCNTOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PROTIMER_IFS_TOUT0  ---------------------------------
// SVD Line: 72761

//  <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT0
//    <name> TOUT0 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40085060) TOUT0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.4..4> TOUT0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PROTIMER_IFS_TOUT1  ---------------------------------
// SVD Line: 72768

//  <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT1
//    <name> TOUT1 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40085060) TOUT1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.5..5> TOUT1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFS_TOUT0MATCH  ------------------------------
// SVD Line: 72775

//  <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT0MATCH
//    <name> TOUT0MATCH </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40085060) TOUT0MATCH Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.6..6> TOUT0MATCH
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFS_TOUT1MATCH  ------------------------------
// SVD Line: 72782

//  <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT1MATCH
//    <name> TOUT1MATCH </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40085060) TOUT1MATCH Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.7..7> TOUT1MATCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_CC0  ----------------------------------
// SVD Line: 72789

//  <item> SFDITEM_FIELD__PROTIMER_IFS_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40085060) CC0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.8..8> CC0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_CC1  ----------------------------------
// SVD Line: 72796

//  <item> SFDITEM_FIELD__PROTIMER_IFS_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40085060) CC1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.9..9> CC1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_CC2  ----------------------------------
// SVD Line: 72803

//  <item> SFDITEM_FIELD__PROTIMER_IFS_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40085060) CC2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.10..10> CC2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_CC3  ----------------------------------
// SVD Line: 72810

//  <item> SFDITEM_FIELD__PROTIMER_IFS_CC3
//    <name> CC3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40085060) CC3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.11..11> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_CC4  ----------------------------------
// SVD Line: 72817

//  <item> SFDITEM_FIELD__PROTIMER_IFS_CC4
//    <name> CC4 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40085060) CC4 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.12..12> CC4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_COF0  ---------------------------------
// SVD Line: 72824

//  <item> SFDITEM_FIELD__PROTIMER_IFS_COF0
//    <name> COF0 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40085060) COF0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.16..16> COF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_COF1  ---------------------------------
// SVD Line: 72831

//  <item> SFDITEM_FIELD__PROTIMER_IFS_COF1
//    <name> COF1 </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40085060) COF1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.17..17> COF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_COF2  ---------------------------------
// SVD Line: 72838

//  <item> SFDITEM_FIELD__PROTIMER_IFS_COF2
//    <name> COF2 </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x40085060) COF2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.18..18> COF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_COF3  ---------------------------------
// SVD Line: 72845

//  <item> SFDITEM_FIELD__PROTIMER_IFS_COF3
//    <name> COF3 </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x40085060) COF3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.19..19> COF3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFS_COF4  ---------------------------------
// SVD Line: 72852

//  <item> SFDITEM_FIELD__PROTIMER_IFS_COF4
//    <name> COF4 </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x40085060) COF4 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.20..20> COF4
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFS_LBTSUCCESS  ------------------------------
// SVD Line: 72859

//  <item> SFDITEM_FIELD__PROTIMER_IFS_LBTSUCCESS
//    <name> LBTSUCCESS </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x40085060) LBTSUCCESS Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.24..24> LBTSUCCESS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFS_LBTFAILURE  ------------------------------
// SVD Line: 72866

//  <item> SFDITEM_FIELD__PROTIMER_IFS_LBTFAILURE
//    <name> LBTFAILURE </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x40085060) LBTFAILURE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.25..25> LBTFAILURE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFS_LBTPAUSED  -------------------------------
// SVD Line: 72873

//  <item> SFDITEM_FIELD__PROTIMER_IFS_LBTPAUSED
//    <name> LBTPAUSED </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x40085060) LBTPAUSED Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.26..26> LBTPAUSED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_IFS_LBTRETRY  -------------------------------
// SVD Line: 72880

//  <item> SFDITEM_FIELD__PROTIMER_IFS_LBTRETRY
//    <name> LBTRETRY </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x40085060) LBTRETRY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.27..27> LBTRETRY
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_IFS_RTCCSYNCHED  ------------------------------
// SVD Line: 72887

//  <item> SFDITEM_FIELD__PROTIMER_IFS_RTCCSYNCHED
//    <name> RTCCSYNCHED </name>
//    <w> 
//    <i> [Bit 28] WO (@ 0x40085060) RTCCSYNCHED Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.28..28> RTCCSYNCHED
//    </check>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_IFS_TOUT0MATCHLBT  -----------------------------
// SVD Line: 72894

//  <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT0MATCHLBT
//    <name> TOUT0MATCHLBT </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40085060) TOUT0MATCHLBT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFS ) </loc>
//      <o.29..29> TOUT0MATCHLBT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PROTIMER_IFS  ----------------------------------
// SVD Line: 72731

//  <rtree> SFDITEM_REG__PROTIMER_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40085060) IFS </i>
//    <loc> ( (unsigned int)((PROTIMER_IFS >> 0) & 0xFFFFFFFF), ((PROTIMER_IFS = (PROTIMER_IFS & ~(0x3F1F1FF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F1F1FF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_PRECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_BASECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_WRAPCNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT0MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT1MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_CC0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_CC1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_CC2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_CC3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_CC4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_COF0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_COF1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_COF2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_COF3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_COF4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_LBTSUCCESS </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_LBTFAILURE </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_LBTPAUSED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_LBTRETRY </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_RTCCSYNCHED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFS_TOUT0MATCHLBT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PROTIMER_IFC  ------------------------------
// SVD Line: 72903

unsigned int PROTIMER_IFC __AT (0x40085064);



// ----------------------------  Field Item: PROTIMER_IFC_PRECNTOF  -------------------------------
// SVD Line: 72912

//  <item> SFDITEM_FIELD__PROTIMER_IFC_PRECNTOF
//    <name> PRECNTOF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40085064) PRECNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.0..0> PRECNTOF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFC_BASECNTOF  -------------------------------
// SVD Line: 72919

//  <item> SFDITEM_FIELD__PROTIMER_IFC_BASECNTOF
//    <name> BASECNTOF </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40085064) BASECNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.1..1> BASECNTOF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFC_WRAPCNTOF  -------------------------------
// SVD Line: 72926

//  <item> SFDITEM_FIELD__PROTIMER_IFC_WRAPCNTOF
//    <name> WRAPCNTOF </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40085064) WRAPCNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.2..2> WRAPCNTOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PROTIMER_IFC_TOUT0  ---------------------------------
// SVD Line: 72933

//  <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT0
//    <name> TOUT0 </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40085064) TOUT0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.4..4> TOUT0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PROTIMER_IFC_TOUT1  ---------------------------------
// SVD Line: 72940

//  <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT1
//    <name> TOUT1 </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40085064) TOUT1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.5..5> TOUT1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFC_TOUT0MATCH  ------------------------------
// SVD Line: 72947

//  <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT0MATCH
//    <name> TOUT0MATCH </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40085064) TOUT0MATCH Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.6..6> TOUT0MATCH
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFC_TOUT1MATCH  ------------------------------
// SVD Line: 72954

//  <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT1MATCH
//    <name> TOUT1MATCH </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40085064) TOUT1MATCH Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.7..7> TOUT1MATCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_CC0  ----------------------------------
// SVD Line: 72961

//  <item> SFDITEM_FIELD__PROTIMER_IFC_CC0
//    <name> CC0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40085064) CC0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.8..8> CC0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_CC1  ----------------------------------
// SVD Line: 72968

//  <item> SFDITEM_FIELD__PROTIMER_IFC_CC1
//    <name> CC1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40085064) CC1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.9..9> CC1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_CC2  ----------------------------------
// SVD Line: 72975

//  <item> SFDITEM_FIELD__PROTIMER_IFC_CC2
//    <name> CC2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40085064) CC2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.10..10> CC2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_CC3  ----------------------------------
// SVD Line: 72982

//  <item> SFDITEM_FIELD__PROTIMER_IFC_CC3
//    <name> CC3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40085064) CC3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.11..11> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_CC4  ----------------------------------
// SVD Line: 72989

//  <item> SFDITEM_FIELD__PROTIMER_IFC_CC4
//    <name> CC4 </name>
//    <w> 
//    <i> [Bit 12] WO (@ 0x40085064) CC4 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.12..12> CC4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_COF0  ---------------------------------
// SVD Line: 72996

//  <item> SFDITEM_FIELD__PROTIMER_IFC_COF0
//    <name> COF0 </name>
//    <w> 
//    <i> [Bit 16] WO (@ 0x40085064) COF0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.16..16> COF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_COF1  ---------------------------------
// SVD Line: 73003

//  <item> SFDITEM_FIELD__PROTIMER_IFC_COF1
//    <name> COF1 </name>
//    <w> 
//    <i> [Bit 17] WO (@ 0x40085064) COF1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.17..17> COF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_COF2  ---------------------------------
// SVD Line: 73010

//  <item> SFDITEM_FIELD__PROTIMER_IFC_COF2
//    <name> COF2 </name>
//    <w> 
//    <i> [Bit 18] WO (@ 0x40085064) COF2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.18..18> COF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_COF3  ---------------------------------
// SVD Line: 73017

//  <item> SFDITEM_FIELD__PROTIMER_IFC_COF3
//    <name> COF3 </name>
//    <w> 
//    <i> [Bit 19] WO (@ 0x40085064) COF3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.19..19> COF3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IFC_COF4  ---------------------------------
// SVD Line: 73024

//  <item> SFDITEM_FIELD__PROTIMER_IFC_COF4
//    <name> COF4 </name>
//    <w> 
//    <i> [Bit 20] WO (@ 0x40085064) COF4 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.20..20> COF4
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFC_LBTSUCCESS  ------------------------------
// SVD Line: 73031

//  <item> SFDITEM_FIELD__PROTIMER_IFC_LBTSUCCESS
//    <name> LBTSUCCESS </name>
//    <w> 
//    <i> [Bit 24] WO (@ 0x40085064) LBTSUCCESS Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.24..24> LBTSUCCESS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFC_LBTFAILURE  ------------------------------
// SVD Line: 73038

//  <item> SFDITEM_FIELD__PROTIMER_IFC_LBTFAILURE
//    <name> LBTFAILURE </name>
//    <w> 
//    <i> [Bit 25] WO (@ 0x40085064) LBTFAILURE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.25..25> LBTFAILURE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IFC_LBTPAUSED  -------------------------------
// SVD Line: 73045

//  <item> SFDITEM_FIELD__PROTIMER_IFC_LBTPAUSED
//    <name> LBTPAUSED </name>
//    <w> 
//    <i> [Bit 26] WO (@ 0x40085064) LBTPAUSED Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.26..26> LBTPAUSED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_IFC_LBTRETRY  -------------------------------
// SVD Line: 73052

//  <item> SFDITEM_FIELD__PROTIMER_IFC_LBTRETRY
//    <name> LBTRETRY </name>
//    <w> 
//    <i> [Bit 27] WO (@ 0x40085064) LBTRETRY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.27..27> LBTRETRY
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_IFC_RTCCSYNCHED  ------------------------------
// SVD Line: 73059

//  <item> SFDITEM_FIELD__PROTIMER_IFC_RTCCSYNCHED
//    <name> RTCCSYNCHED </name>
//    <w> 
//    <i> [Bit 28] WO (@ 0x40085064) RTCCSYNCHED Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.28..28> RTCCSYNCHED
//    </check>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_IFC_TOUT0MATCHLBT  -----------------------------
// SVD Line: 73066

//  <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT0MATCHLBT
//    <name> TOUT0MATCHLBT </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40085064) TOUT0MATCHLBT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IFC ) </loc>
//      <o.29..29> TOUT0MATCHLBT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PROTIMER_IFC  ----------------------------------
// SVD Line: 72903

//  <rtree> SFDITEM_REG__PROTIMER_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40085064) IFC </i>
//    <loc> ( (unsigned int)((PROTIMER_IFC >> 0) & 0xFFFFFFFF), ((PROTIMER_IFC = (PROTIMER_IFC & ~(0x3F1F1FF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F1F1FF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_PRECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_BASECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_WRAPCNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT0MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT1MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_CC0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_CC1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_CC2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_CC3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_CC4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_COF0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_COF1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_COF2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_COF3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_COF4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_LBTSUCCESS </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_LBTFAILURE </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_LBTPAUSED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_LBTRETRY </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_RTCCSYNCHED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IFC_TOUT0MATCHLBT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PROTIMER_IEN  ------------------------------
// SVD Line: 73075

unsigned int PROTIMER_IEN __AT (0x40085068);



// ----------------------------  Field Item: PROTIMER_IEN_PRECNTOF  -------------------------------
// SVD Line: 73084

//  <item> SFDITEM_FIELD__PROTIMER_IEN_PRECNTOF
//    <name> PRECNTOF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40085068) PRECNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.0..0> PRECNTOF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IEN_BASECNTOF  -------------------------------
// SVD Line: 73091

//  <item> SFDITEM_FIELD__PROTIMER_IEN_BASECNTOF
//    <name> BASECNTOF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40085068) BASECNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.1..1> BASECNTOF
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IEN_WRAPCNTOF  -------------------------------
// SVD Line: 73098

//  <item> SFDITEM_FIELD__PROTIMER_IEN_WRAPCNTOF
//    <name> WRAPCNTOF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40085068) WRAPCNTOF Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.2..2> WRAPCNTOF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PROTIMER_IEN_TOUT0  ---------------------------------
// SVD Line: 73105

//  <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT0
//    <name> TOUT0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40085068) TOUT0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.4..4> TOUT0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PROTIMER_IEN_TOUT1  ---------------------------------
// SVD Line: 73112

//  <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT1
//    <name> TOUT1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40085068) TOUT1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.5..5> TOUT1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IEN_TOUT0MATCH  ------------------------------
// SVD Line: 73119

//  <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT0MATCH
//    <name> TOUT0MATCH </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40085068) TOUT0MATCH Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.6..6> TOUT0MATCH
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IEN_TOUT1MATCH  ------------------------------
// SVD Line: 73126

//  <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT1MATCH
//    <name> TOUT1MATCH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40085068) TOUT1MATCH Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.7..7> TOUT1MATCH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_CC0  ----------------------------------
// SVD Line: 73133

//  <item> SFDITEM_FIELD__PROTIMER_IEN_CC0
//    <name> CC0 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40085068) CC0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.8..8> CC0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_CC1  ----------------------------------
// SVD Line: 73140

//  <item> SFDITEM_FIELD__PROTIMER_IEN_CC1
//    <name> CC1 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40085068) CC1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.9..9> CC1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_CC2  ----------------------------------
// SVD Line: 73147

//  <item> SFDITEM_FIELD__PROTIMER_IEN_CC2
//    <name> CC2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40085068) CC2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.10..10> CC2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_CC3  ----------------------------------
// SVD Line: 73154

//  <item> SFDITEM_FIELD__PROTIMER_IEN_CC3
//    <name> CC3 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40085068) CC3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.11..11> CC3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_CC4  ----------------------------------
// SVD Line: 73161

//  <item> SFDITEM_FIELD__PROTIMER_IEN_CC4
//    <name> CC4 </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40085068) CC4 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.12..12> CC4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_COF0  ---------------------------------
// SVD Line: 73168

//  <item> SFDITEM_FIELD__PROTIMER_IEN_COF0
//    <name> COF0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40085068) COF0 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.16..16> COF0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_COF1  ---------------------------------
// SVD Line: 73175

//  <item> SFDITEM_FIELD__PROTIMER_IEN_COF1
//    <name> COF1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40085068) COF1 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.17..17> COF1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_COF2  ---------------------------------
// SVD Line: 73182

//  <item> SFDITEM_FIELD__PROTIMER_IEN_COF2
//    <name> COF2 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40085068) COF2 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.18..18> COF2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_COF3  ---------------------------------
// SVD Line: 73189

//  <item> SFDITEM_FIELD__PROTIMER_IEN_COF3
//    <name> COF3 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40085068) COF3 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.19..19> COF3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PROTIMER_IEN_COF4  ---------------------------------
// SVD Line: 73196

//  <item> SFDITEM_FIELD__PROTIMER_IEN_COF4
//    <name> COF4 </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40085068) COF4 Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.20..20> COF4
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IEN_LBTSUCCESS  ------------------------------
// SVD Line: 73203

//  <item> SFDITEM_FIELD__PROTIMER_IEN_LBTSUCCESS
//    <name> LBTSUCCESS </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40085068) LBTSUCCESS Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.24..24> LBTSUCCESS
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IEN_LBTFAILURE  ------------------------------
// SVD Line: 73210

//  <item> SFDITEM_FIELD__PROTIMER_IEN_LBTFAILURE
//    <name> LBTFAILURE </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40085068) LBTFAILURE Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.25..25> LBTFAILURE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_IEN_LBTPAUSED  -------------------------------
// SVD Line: 73217

//  <item> SFDITEM_FIELD__PROTIMER_IEN_LBTPAUSED
//    <name> LBTPAUSED </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40085068) LBTPAUSED Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.26..26> LBTPAUSED
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_IEN_LBTRETRY  -------------------------------
// SVD Line: 73224

//  <item> SFDITEM_FIELD__PROTIMER_IEN_LBTRETRY
//    <name> LBTRETRY </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40085068) LBTRETRY Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.27..27> LBTRETRY
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_IEN_RTCCSYNCHED  ------------------------------
// SVD Line: 73231

//  <item> SFDITEM_FIELD__PROTIMER_IEN_RTCCSYNCHED
//    <name> RTCCSYNCHED </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40085068) RTCCSYNCHED Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.28..28> RTCCSYNCHED
//    </check>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_IEN_TOUT0MATCHLBT  -----------------------------
// SVD Line: 73238

//  <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT0MATCHLBT
//    <name> TOUT0MATCHLBT </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40085068) TOUT0MATCHLBT Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_IEN ) </loc>
//      <o.29..29> TOUT0MATCHLBT
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: PROTIMER_IEN  ----------------------------------
// SVD Line: 73075

//  <rtree> SFDITEM_REG__PROTIMER_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085068) IEN </i>
//    <loc> ( (unsigned int)((PROTIMER_IEN >> 0) & 0xFFFFFFFF), ((PROTIMER_IEN = (PROTIMER_IEN & ~(0x3F1F1FF7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F1F1FF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_PRECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_BASECNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_WRAPCNTOF </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT0MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT1MATCH </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_CC0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_CC1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_CC2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_CC3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_CC4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_COF0 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_COF1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_COF2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_COF3 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_COF4 </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_LBTSUCCESS </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_LBTFAILURE </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_LBTPAUSED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_LBTRETRY </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_RTCCSYNCHED </item>
//    <item> SFDITEM_FIELD__PROTIMER_IEN_TOUT0MATCHLBT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_RXCTRL  -----------------------------
// SVD Line: 73247

unsigned int PROTIMER_RXCTRL __AT (0x4008506C);



// -------------------------  Field Item: PROTIMER_RXCTRL_RXSETEVENT1  ----------------------------
// SVD Line: 73256

//  <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXSETEVENT1
//    <name> RXSETEVENT1 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4008506C) \nFirst event that sets RX req signal\n0 : DISABLED = Request is never set\n1 : ALWAYS = Does not wait for any particular event\n2 : PRECNTOF = Pre counter overflow\n3 : BASECNTOF = Base counter overflow\n4 : WRAPCNTOF = Wrap counter overflow\n5 : TOUT0UF = Timeout counter 0 underflow\n6 : TOUT1UF = Timeout counter 1 underflow\n7 : TOUT0MATCH = Timeout counter 0 match\n8 : TOUT1MATCH = Timeout counter 1 match\n9 : CC0 = Channel 0 Capture/Compare event\n10 : CC1 = Channel 1 Capture/Compare event\n11 : CC2 = Channel 2 Capture/Compare event\n12 : CC3 = Channel 3 Capture/Compare event\n13 : CC4 = Channel 4 Capture/Compare event\n14 : TXDONE = MOD indicated that TX completed\n15 : RXDONE = FRC indicated that RX completed\n16 : TXORRXDONE = MOD/FRC indicated that TX or RX completed\n17 : FDET0 = DEMOD indicated that syncword 0 was detected\n18 : FDET1 = DEMOD indicated that syncword 1 was detected\n19 : FDET0OR1 = DEMOD indicated that syncword 0 or 1 was detected\n20 : LBTSUCCESS = LBT completed successfully\n21 : LBTRETRY = LBT detected occupied channel and will try again\n22 : LBTFAILURE = LBT could not start transmission\n23 : ANYLBT = Any LBT event\n24 : CCAACK = A CCA measurement completed\n25 : CCA = A CCA measurement completed, and channel was clear\n26 : NOTCCA = A CCA measurement completed, and channel was busy\n27 : TOUT0MATCHLBT = Timeout counter 0 match occurred during LBT operation\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_RXCTRL ) </loc>
//      <o.4..0> RXSETEVENT1
//        <0=> 0: DISABLED = Request is never set
//        <1=> 1: ALWAYS = Does not wait for any particular event
//        <2=> 2: PRECNTOF = Pre counter overflow
//        <3=> 3: BASECNTOF = Base counter overflow
//        <4=> 4: WRAPCNTOF = Wrap counter overflow
//        <5=> 5: TOUT0UF = Timeout counter 0 underflow
//        <6=> 6: TOUT1UF = Timeout counter 1 underflow
//        <7=> 7: TOUT0MATCH = Timeout counter 0 match
//        <8=> 8: TOUT1MATCH = Timeout counter 1 match
//        <9=> 9: CC0 = Channel 0 Capture/Compare event
//        <10=> 10: CC1 = Channel 1 Capture/Compare event
//        <11=> 11: CC2 = Channel 2 Capture/Compare event
//        <12=> 12: CC3 = Channel 3 Capture/Compare event
//        <13=> 13: CC4 = Channel 4 Capture/Compare event
//        <14=> 14: TXDONE = MOD indicated that TX completed
//        <15=> 15: RXDONE = FRC indicated that RX completed
//        <16=> 16: TXORRXDONE = MOD/FRC indicated that TX or RX completed
//        <17=> 17: FDET0 = DEMOD indicated that syncword 0 was detected
//        <18=> 18: FDET1 = DEMOD indicated that syncword 1 was detected
//        <19=> 19: FDET0OR1 = DEMOD indicated that syncword 0 or 1 was detected
//        <20=> 20: LBTSUCCESS = LBT completed successfully
//        <21=> 21: LBTRETRY = LBT detected occupied channel and will try again
//        <22=> 22: LBTFAILURE = LBT could not start transmission
//        <23=> 23: ANYLBT = Any LBT event
//        <24=> 24: CCAACK = A CCA measurement completed
//        <25=> 25: CCA = A CCA measurement completed, and channel was clear
//        <26=> 26: NOTCCA = A CCA measurement completed, and channel was busy
//        <27=> 27: TOUT0MATCHLBT = Timeout counter 0 match occurred during LBT operation
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_RXCTRL_RXSETEVENT2  ----------------------------
// SVD Line: 73405

//  <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXSETEVENT2
//    <name> RXSETEVENT2 </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x4008506C) Second event that sets RX req signal </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_RXCTRL >> 8) & 0x1F), ((PROTIMER_RXCTRL = (PROTIMER_RXCTRL & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_RXCTRL_RXCLREVENT1  ----------------------------
// SVD Line: 73412

//  <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXCLREVENT1
//    <name> RXCLREVENT1 </name>
//    <rw> 
//    <i> [Bits 20..16] RW (@ 0x4008506C) First event that clears RX req signal </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_RXCTRL >> 16) & 0x1F), ((PROTIMER_RXCTRL = (PROTIMER_RXCTRL & ~(0x1FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_RXCTRL_RXCLREVENT2  ----------------------------
// SVD Line: 73419

//  <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXCLREVENT2
//    <name> RXCLREVENT2 </name>
//    <rw> 
//    <i> [Bits 28..24] RW (@ 0x4008506C) Second event that clears RX req signal </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_RXCTRL >> 24) & 0x1F), ((PROTIMER_RXCTRL = (PROTIMER_RXCTRL & ~(0x1FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PROTIMER_RXCTRL  --------------------------------
// SVD Line: 73247

//  <rtree> SFDITEM_REG__PROTIMER_RXCTRL
//    <name> RXCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008506C) RXCTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_RXCTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_RXCTRL = (PROTIMER_RXCTRL & ~(0x1F1F1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXSETEVENT1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXSETEVENT2 </item>
//    <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXCLREVENT1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_RXCTRL_RXCLREVENT2 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_TXCTRL  -----------------------------
// SVD Line: 73428

unsigned int PROTIMER_TXCTRL __AT (0x40085070);



// -------------------------  Field Item: PROTIMER_TXCTRL_TXSETEVENT1  ----------------------------
// SVD Line: 73437

//  <item> SFDITEM_FIELD__PROTIMER_TXCTRL_TXSETEVENT1
//    <name> TXSETEVENT1 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40085070) \nFirst event that sets TX req signal\n0 : DISABLED = Request is never set\n1 : ALWAYS = Does not wait for any particular event\n2 : PRECNTOF = Pre counter overflow\n3 : BASECNTOF = Base counter overflow\n4 : WRAPCNTOF = Wrap counter overflow\n5 : TOUT0UF = Timeout counter 0 underflow\n6 : TOUT1UF = Timeout counter 1 underflow\n7 : TOUT0MATCH = Timeout counter 0 match\n8 : TOUT1MATCH = Timeout counter 1 match\n9 : CC0 = Channel 0 Capture/Compare event\n10 : CC1 = Channel 1 Capture/Compare event\n11 : CC2 = Channel 2 Capture/Compare event\n12 : CC3 = Channel 3 Capture/Compare event\n13 : CC4 = Channel 4 Capture/Compare event\n14 : TXDONE = MOD indicated that TX completed\n15 : RXDONE = FRC indicated that RX completed\n16 : TXORRXDONE = MOD/FRC indicated that TX or RX completed\n17 : FDET0 = DEMOD indicated that syncword 0 was detected\n18 : FDET1 = DEMOD indicated that syncword 1 was detected\n19 : FDET0OR1 = DEMOD indicated that syncword 0 or 1 was detected\n20 : LBTSUCCESS = LBT completed successfully\n21 : LBTRETRY = LBT detected occupied channel and will try again\n22 : LBTFAILURE = LBT could not start transmission\n23 : ANYLBT = Any LBT event\n24 : CCAACK = A CCA measurement completed\n25 : CCA = A CCA measurement completed, and channel was clear\n26 : NOTCCA = A CCA measurement completed, and channel was busy\n27 : TOUT0MATCHLBT = Timeout counter 0 match occurred during LBT operation\n28 : Reserved - do not use\n29 : Reserved - do not use\n30 : Reserved - do not use\n31 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_TXCTRL ) </loc>
//      <o.4..0> TXSETEVENT1
//        <0=> 0: DISABLED = Request is never set
//        <1=> 1: ALWAYS = Does not wait for any particular event
//        <2=> 2: PRECNTOF = Pre counter overflow
//        <3=> 3: BASECNTOF = Base counter overflow
//        <4=> 4: WRAPCNTOF = Wrap counter overflow
//        <5=> 5: TOUT0UF = Timeout counter 0 underflow
//        <6=> 6: TOUT1UF = Timeout counter 1 underflow
//        <7=> 7: TOUT0MATCH = Timeout counter 0 match
//        <8=> 8: TOUT1MATCH = Timeout counter 1 match
//        <9=> 9: CC0 = Channel 0 Capture/Compare event
//        <10=> 10: CC1 = Channel 1 Capture/Compare event
//        <11=> 11: CC2 = Channel 2 Capture/Compare event
//        <12=> 12: CC3 = Channel 3 Capture/Compare event
//        <13=> 13: CC4 = Channel 4 Capture/Compare event
//        <14=> 14: TXDONE = MOD indicated that TX completed
//        <15=> 15: RXDONE = FRC indicated that RX completed
//        <16=> 16: TXORRXDONE = MOD/FRC indicated that TX or RX completed
//        <17=> 17: FDET0 = DEMOD indicated that syncword 0 was detected
//        <18=> 18: FDET1 = DEMOD indicated that syncword 1 was detected
//        <19=> 19: FDET0OR1 = DEMOD indicated that syncword 0 or 1 was detected
//        <20=> 20: LBTSUCCESS = LBT completed successfully
//        <21=> 21: LBTRETRY = LBT detected occupied channel and will try again
//        <22=> 22: LBTFAILURE = LBT could not start transmission
//        <23=> 23: ANYLBT = Any LBT event
//        <24=> 24: CCAACK = A CCA measurement completed
//        <25=> 25: CCA = A CCA measurement completed, and channel was clear
//        <26=> 26: NOTCCA = A CCA measurement completed, and channel was busy
//        <27=> 27: TOUT0MATCHLBT = Timeout counter 0 match occurred during LBT operation
//        <28=> 28: 
//        <29=> 29: 
//        <30=> 30: 
//        <31=> 31: 
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PROTIMER_TXCTRL_TXSETEVENT2  ----------------------------
// SVD Line: 73586

//  <item> SFDITEM_FIELD__PROTIMER_TXCTRL_TXSETEVENT2
//    <name> TXSETEVENT2 </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x40085070) Second event that sets TX req signal </i>
//    <edit> 
//      <loc> ( (unsigned char)((PROTIMER_TXCTRL >> 8) & 0x1F), ((PROTIMER_TXCTRL = (PROTIMER_TXCTRL & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PROTIMER_TXCTRL  --------------------------------
// SVD Line: 73428

//  <rtree> SFDITEM_REG__PROTIMER_TXCTRL
//    <name> TXCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085070) TXCTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_TXCTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_TXCTRL = (PROTIMER_TXCTRL & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_TXCTRL_TXSETEVENT1 </item>
//    <item> SFDITEM_FIELD__PROTIMER_TXCTRL_TXSETEVENT2 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC0_CTRL  ----------------------------
// SVD Line: 73595

unsigned int PROTIMER_CC0_CTRL __AT (0x40085074);



// --------------------------  Field Item: PROTIMER_CC0_CTRL_ENABLE  ------------------------------
// SVD Line: 73604

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40085074) Channel Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC0_CTRL_CCMODE  ------------------------------
// SVD Line: 73611

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_CCMODE
//    <name> CCMODE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40085074) \nCompare/Capture mode\n0 : COMPARE = Compare mode selected\n1 : CAPTURE = Capture mode selected </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.1..1> CCMODE
//        <0=> 0: COMPARE = Compare mode selected
//        <1=> 1: CAPTURE = Capture mode selected
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC0_CTRL_PREMATCHEN  ----------------------------
// SVD Line: 73630

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_PREMATCHEN
//    <name> PREMATCHEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40085074) Enable PRECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.2..2> PREMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC0_CTRL_BASEMATCHEN  ---------------------------
// SVD Line: 73637

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_BASEMATCHEN
//    <name> BASEMATCHEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40085074) Enable BASECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.3..3> BASEMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC0_CTRL_WRAPMATCHEN  ---------------------------
// SVD Line: 73644

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_WRAPMATCHEN
//    <name> WRAPMATCHEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40085074) Enable WRAPCNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.4..4> WRAPMATCHEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC0_CTRL_OIST  -------------------------------
// SVD Line: 73651

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OIST
//    <name> OIST </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40085074) Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.5..5> OIST
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC0_CTRL_OUTINV  ------------------------------
// SVD Line: 73658

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40085074) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.6..6> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_CC0_CTRL_MOA  -------------------------------
// SVD Line: 73665

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_MOA
//    <name> MOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40085074) \nMatch Output Action\n0 : DISABLED = No action on compare match\n1 : TOGGLE = Toggle output on compare match in COMPARE mode.\n2 : CLEAR = Clear output on compare match in COMPARE mode.\n3 : SET = Set output on compare match in COMPARE mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.9..8> MOA
//        <0=> 0: DISABLED = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match in COMPARE mode.
//        <2=> 2: CLEAR = Clear output on compare match in COMPARE mode.
//        <3=> 3: SET = Set output on compare match in COMPARE mode.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC0_CTRL_OFOA  -------------------------------
// SVD Line: 73694

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OFOA
//    <name> OFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40085074) \nOverflow Output Action\n0 : DISABLED = No action\n1 : TOGGLE = Toggle output when the selected counter has an overflow event.\n2 : CLEAR = Clear output when the selected counter has an overflow event.\n3 : SET = Set output when the selected counter has an overflow event. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.11..10> OFOA
//        <0=> 0: DISABLED = No action
//        <1=> 1: TOGGLE = Toggle output when the selected counter has an overflow event.
//        <2=> 2: CLEAR = Clear output when the selected counter has an overflow event.
//        <3=> 3: SET = Set output when the selected counter has an overflow event.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC0_CTRL_OFSEL  ------------------------------
// SVD Line: 73723

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OFSEL
//    <name> OFSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40085074) \nSelect counter for OFOA bits\n0 : PRECNT = Use PRECNT overflow\n1 : BASECNT = Use BASECNT overflow\n2 : WRAPCNT = Use WRAPCNT overflow\n3 : DISABLED = Disabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.13..12> OFSEL
//        <0=> 0: PRECNT = Use PRECNT overflow
//        <1=> 1: BASECNT = Use BASECNT overflow
//        <2=> 2: WRAPCNT = Use WRAPCNT overflow
//        <3=> 3: DISABLED = Disabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC0_CTRL_PRSCONF  -----------------------------
// SVD Line: 73752

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40085074) \nPRS Configuration\n0 : PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse\n1 : LEVEL = Should be used when OFSEL, OFOA or MOA are specified. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.14..14> PRSCONF
//        <0=> 0: PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse
//        <1=> 1: LEVEL = Should be used when OFSEL, OFOA or MOA are specified.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC0_CTRL_INSEL  ------------------------------
// SVD Line: 73771

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bits 24..21] RW (@ 0x40085074) \nCapture input selection\n0 : PRS = Use the selected PRS channel\n1 : TXDONE = TX completed\n2 : RXDONE = RX completed\n3 : TXORRXDONE = TX or RX completed\n4 : FRAMEDET0 = Demodulator found sync word 0\n5 : FRAMEDET1 = Demodulator found sync word 1\n6 : FDET0OR1 = Demodulator found sync word 0 or 1\n7 : MODSYNCSENT = Modulator sync word sent\n8 : RXEOF = RX at end of frame from demodulator\n9 : PRORTC0 = PRORTC capture/compare 0\n10 : PRORTC1 = PRORTC capture/compare 1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.24..21> INSEL
//        <0=> 0: PRS = Use the selected PRS channel
//        <1=> 1: TXDONE = TX completed
//        <2=> 2: RXDONE = RX completed
//        <3=> 3: TXORRXDONE = TX or RX completed
//        <4=> 4: FRAMEDET0 = Demodulator found sync word 0
//        <5=> 5: FRAMEDET1 = Demodulator found sync word 1
//        <6=> 6: FDET0OR1 = Demodulator found sync word 0 or 1
//        <7=> 7: MODSYNCSENT = Modulator sync word sent
//        <8=> 8: RXEOF = RX at end of frame from demodulator
//        <9=> 9: PRORTC0 = PRORTC capture/compare 0
//        <10=> 10: PRORTC1 = PRORTC capture/compare 1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC0_CTRL_ICEDGE  ------------------------------
// SVD Line: 73835

//  <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40085074) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : DISABLED = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC0_CTRL ) </loc>
//      <o.26..25> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: DISABLED = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC0_CTRL  -------------------------------
// SVD Line: 73595

//  <rtree> SFDITEM_REG__PROTIMER_CC0_CTRL
//    <name> CC0_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085074) CC0_CTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_CC0_CTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_CC0_CTRL = (PROTIMER_CC0_CTRL & ~(0x7E07F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7E07F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_CCMODE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_PREMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_BASEMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_WRAPMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OIST </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_MOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OFOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_OFSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_CTRL_ICEDGE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_CC0_PRE  ----------------------------
// SVD Line: 73866

unsigned int PROTIMER_CC0_PRE __AT (0x40085078);



// ----------------------------  Field Item: PROTIMER_CC0_PRE_PRE  --------------------------------
// SVD Line: 73875

//  <item> SFDITEM_FIELD__PROTIMER_CC0_PRE_PRE
//    <name> PRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085078) CC Channel PRE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC0_PRE >> 0) & 0xFFFF), ((PROTIMER_CC0_PRE = (PROTIMER_CC0_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC0_PRE  --------------------------------
// SVD Line: 73866

//  <rtree> SFDITEM_REG__PROTIMER_CC0_PRE
//    <name> CC0_PRE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085078) CC0_PRE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC0_PRE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC0_PRE = (PROTIMER_CC0_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_PRE_PRE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC0_BASE  ----------------------------
// SVD Line: 73884

unsigned int PROTIMER_CC0_BASE __AT (0x4008507C);



// ---------------------------  Field Item: PROTIMER_CC0_BASE_BASE  -------------------------------
// SVD Line: 73893

//  <item> SFDITEM_FIELD__PROTIMER_CC0_BASE_BASE
//    <name> BASE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008507C) CC Channel BASE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC0_BASE >> 0) & 0xFFFF), ((PROTIMER_CC0_BASE = (PROTIMER_CC0_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC0_BASE  -------------------------------
// SVD Line: 73884

//  <rtree> SFDITEM_REG__PROTIMER_CC0_BASE
//    <name> CC0_BASE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008507C) CC0_BASE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC0_BASE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC0_BASE = (PROTIMER_CC0_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_BASE_BASE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC0_WRAP  ----------------------------
// SVD Line: 73902

unsigned int PROTIMER_CC0_WRAP __AT (0x40085080);



// ---------------------------  Field Item: PROTIMER_CC0_WRAP_WRAP  -------------------------------
// SVD Line: 73911

//  <item> SFDITEM_FIELD__PROTIMER_CC0_WRAP_WRAP
//    <name> WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085080) CC Channel WRAP Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_CC0_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC0_WRAP = (PROTIMER_CC0_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC0_WRAP  -------------------------------
// SVD Line: 73902

//  <rtree> SFDITEM_REG__PROTIMER_CC0_WRAP
//    <name> CC0_WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085080) CC0_WRAP </i>
//    <loc> ( (unsigned int)((PROTIMER_CC0_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC0_WRAP = (PROTIMER_CC0_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC0_WRAP_WRAP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC1_CTRL  ----------------------------
// SVD Line: 73920

unsigned int PROTIMER_CC1_CTRL __AT (0x40085084);



// --------------------------  Field Item: PROTIMER_CC1_CTRL_ENABLE  ------------------------------
// SVD Line: 73929

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40085084) Channel Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC1_CTRL_CCMODE  ------------------------------
// SVD Line: 73936

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_CCMODE
//    <name> CCMODE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40085084) \nCompare/Capture mode\n0 : COMPARE = Compare mode selected\n1 : CAPTURE = Capture mode selected </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.1..1> CCMODE
//        <0=> 0: COMPARE = Compare mode selected
//        <1=> 1: CAPTURE = Capture mode selected
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC1_CTRL_PREMATCHEN  ----------------------------
// SVD Line: 73955

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_PREMATCHEN
//    <name> PREMATCHEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40085084) Enable PRECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.2..2> PREMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC1_CTRL_BASEMATCHEN  ---------------------------
// SVD Line: 73962

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_BASEMATCHEN
//    <name> BASEMATCHEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40085084) Enable BASECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.3..3> BASEMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC1_CTRL_WRAPMATCHEN  ---------------------------
// SVD Line: 73969

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_WRAPMATCHEN
//    <name> WRAPMATCHEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40085084) Enable WRAPCNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.4..4> WRAPMATCHEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC1_CTRL_OIST  -------------------------------
// SVD Line: 73976

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OIST
//    <name> OIST </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40085084) Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.5..5> OIST
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC1_CTRL_OUTINV  ------------------------------
// SVD Line: 73983

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40085084) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.6..6> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_CC1_CTRL_MOA  -------------------------------
// SVD Line: 73990

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_MOA
//    <name> MOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40085084) \nMatch Output Action\n0 : DISABLED = No action on compare match\n1 : TOGGLE = Toggle output on compare match in COMPARE mode.\n2 : CLEAR = Clear output on compare match in COMPARE mode.\n3 : SET = Set output on compare match in COMPARE mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.9..8> MOA
//        <0=> 0: DISABLED = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match in COMPARE mode.
//        <2=> 2: CLEAR = Clear output on compare match in COMPARE mode.
//        <3=> 3: SET = Set output on compare match in COMPARE mode.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC1_CTRL_OFOA  -------------------------------
// SVD Line: 74019

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OFOA
//    <name> OFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40085084) \nOverflow Output Action\n0 : DISABLED = No action\n1 : TOGGLE = Toggle output when the selected counter has an overflow event.\n2 : CLEAR = Clear output when the selected counter has an overflow event.\n3 : SET = Set output when the selected counter has an overflow event. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.11..10> OFOA
//        <0=> 0: DISABLED = No action
//        <1=> 1: TOGGLE = Toggle output when the selected counter has an overflow event.
//        <2=> 2: CLEAR = Clear output when the selected counter has an overflow event.
//        <3=> 3: SET = Set output when the selected counter has an overflow event.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC1_CTRL_OFSEL  ------------------------------
// SVD Line: 74048

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OFSEL
//    <name> OFSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40085084) \nSelect counter for OFOA bits\n0 : PRECNT = Use PRECNT overflow\n1 : BASECNT = Use BASECNT overflow\n2 : WRAPCNT = Use WRAPCNT overflow\n3 : DISABLED = Disabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.13..12> OFSEL
//        <0=> 0: PRECNT = Use PRECNT overflow
//        <1=> 1: BASECNT = Use BASECNT overflow
//        <2=> 2: WRAPCNT = Use WRAPCNT overflow
//        <3=> 3: DISABLED = Disabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC1_CTRL_PRSCONF  -----------------------------
// SVD Line: 74077

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40085084) \nPRS Configuration\n0 : PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse\n1 : LEVEL = Should be used when OFSEL, OFOA or MOA are specified. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.14..14> PRSCONF
//        <0=> 0: PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse
//        <1=> 1: LEVEL = Should be used when OFSEL, OFOA or MOA are specified.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC1_CTRL_INSEL  ------------------------------
// SVD Line: 74096

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bits 24..21] RW (@ 0x40085084) \nCapture input selection\n0 : PRS = Use the selected PRS channel\n1 : TXDONE = TX completed\n2 : RXDONE = RX completed\n3 : TXORRXDONE = TX or RX completed\n4 : FRAMEDET0 = Demodulator found sync word 0\n5 : FRAMEDET1 = Demodulator found sync word 1\n6 : FDET0OR1 = Demodulator found sync word 0 or 1\n7 : MODSYNCSENT = Modulator sync word sent\n8 : RXEOF = RX at end of frame from demodulator\n9 : PRORTC0 = PRORTC capture/compare 0\n10 : PRORTC1 = PRORTC capture/compare 1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.24..21> INSEL
//        <0=> 0: PRS = Use the selected PRS channel
//        <1=> 1: TXDONE = TX completed
//        <2=> 2: RXDONE = RX completed
//        <3=> 3: TXORRXDONE = TX or RX completed
//        <4=> 4: FRAMEDET0 = Demodulator found sync word 0
//        <5=> 5: FRAMEDET1 = Demodulator found sync word 1
//        <6=> 6: FDET0OR1 = Demodulator found sync word 0 or 1
//        <7=> 7: MODSYNCSENT = Modulator sync word sent
//        <8=> 8: RXEOF = RX at end of frame from demodulator
//        <9=> 9: PRORTC0 = PRORTC capture/compare 0
//        <10=> 10: PRORTC1 = PRORTC capture/compare 1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC1_CTRL_ICEDGE  ------------------------------
// SVD Line: 74160

//  <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40085084) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : DISABLED = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC1_CTRL ) </loc>
//      <o.26..25> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: DISABLED = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC1_CTRL  -------------------------------
// SVD Line: 73920

//  <rtree> SFDITEM_REG__PROTIMER_CC1_CTRL
//    <name> CC1_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085084) CC1_CTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_CC1_CTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_CC1_CTRL = (PROTIMER_CC1_CTRL & ~(0x7E07F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7E07F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_CCMODE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_PREMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_BASEMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_WRAPMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OIST </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_MOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OFOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_OFSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_CTRL_ICEDGE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_CC1_PRE  ----------------------------
// SVD Line: 74191

unsigned int PROTIMER_CC1_PRE __AT (0x40085088);



// ----------------------------  Field Item: PROTIMER_CC1_PRE_PRE  --------------------------------
// SVD Line: 74200

//  <item> SFDITEM_FIELD__PROTIMER_CC1_PRE_PRE
//    <name> PRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085088) CC Channel PRE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC1_PRE >> 0) & 0xFFFF), ((PROTIMER_CC1_PRE = (PROTIMER_CC1_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC1_PRE  --------------------------------
// SVD Line: 74191

//  <rtree> SFDITEM_REG__PROTIMER_CC1_PRE
//    <name> CC1_PRE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085088) CC1_PRE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC1_PRE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC1_PRE = (PROTIMER_CC1_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_PRE_PRE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC1_BASE  ----------------------------
// SVD Line: 74209

unsigned int PROTIMER_CC1_BASE __AT (0x4008508C);



// ---------------------------  Field Item: PROTIMER_CC1_BASE_BASE  -------------------------------
// SVD Line: 74218

//  <item> SFDITEM_FIELD__PROTIMER_CC1_BASE_BASE
//    <name> BASE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008508C) CC Channel BASE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC1_BASE >> 0) & 0xFFFF), ((PROTIMER_CC1_BASE = (PROTIMER_CC1_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC1_BASE  -------------------------------
// SVD Line: 74209

//  <rtree> SFDITEM_REG__PROTIMER_CC1_BASE
//    <name> CC1_BASE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008508C) CC1_BASE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC1_BASE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC1_BASE = (PROTIMER_CC1_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_BASE_BASE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC1_WRAP  ----------------------------
// SVD Line: 74227

unsigned int PROTIMER_CC1_WRAP __AT (0x40085090);



// ---------------------------  Field Item: PROTIMER_CC1_WRAP_WRAP  -------------------------------
// SVD Line: 74236

//  <item> SFDITEM_FIELD__PROTIMER_CC1_WRAP_WRAP
//    <name> WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085090) CC Channel WRAP Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_CC1_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC1_WRAP = (PROTIMER_CC1_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC1_WRAP  -------------------------------
// SVD Line: 74227

//  <rtree> SFDITEM_REG__PROTIMER_CC1_WRAP
//    <name> CC1_WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085090) CC1_WRAP </i>
//    <loc> ( (unsigned int)((PROTIMER_CC1_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC1_WRAP = (PROTIMER_CC1_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC1_WRAP_WRAP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC2_CTRL  ----------------------------
// SVD Line: 74245

unsigned int PROTIMER_CC2_CTRL __AT (0x40085094);



// --------------------------  Field Item: PROTIMER_CC2_CTRL_ENABLE  ------------------------------
// SVD Line: 74254

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40085094) Channel Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC2_CTRL_CCMODE  ------------------------------
// SVD Line: 74261

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_CCMODE
//    <name> CCMODE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40085094) \nCompare/Capture mode\n0 : COMPARE = Compare mode selected\n1 : CAPTURE = Capture mode selected </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.1..1> CCMODE
//        <0=> 0: COMPARE = Compare mode selected
//        <1=> 1: CAPTURE = Capture mode selected
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC2_CTRL_PREMATCHEN  ----------------------------
// SVD Line: 74280

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_PREMATCHEN
//    <name> PREMATCHEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40085094) Enable PRECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.2..2> PREMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC2_CTRL_BASEMATCHEN  ---------------------------
// SVD Line: 74287

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_BASEMATCHEN
//    <name> BASEMATCHEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40085094) Enable BASECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.3..3> BASEMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC2_CTRL_WRAPMATCHEN  ---------------------------
// SVD Line: 74294

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_WRAPMATCHEN
//    <name> WRAPMATCHEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40085094) Enable WRAPCNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.4..4> WRAPMATCHEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC2_CTRL_OIST  -------------------------------
// SVD Line: 74301

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OIST
//    <name> OIST </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40085094) Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.5..5> OIST
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC2_CTRL_OUTINV  ------------------------------
// SVD Line: 74308

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40085094) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.6..6> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_CC2_CTRL_MOA  -------------------------------
// SVD Line: 74315

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_MOA
//    <name> MOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40085094) \nMatch Output Action\n0 : DISABLED = No action on compare match\n1 : TOGGLE = Toggle output on compare match in COMPARE mode.\n2 : CLEAR = Clear output on compare match in COMPARE mode.\n3 : SET = Set output on compare match in COMPARE mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.9..8> MOA
//        <0=> 0: DISABLED = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match in COMPARE mode.
//        <2=> 2: CLEAR = Clear output on compare match in COMPARE mode.
//        <3=> 3: SET = Set output on compare match in COMPARE mode.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC2_CTRL_OFOA  -------------------------------
// SVD Line: 74344

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OFOA
//    <name> OFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40085094) \nOverflow Output Action\n0 : DISABLED = No action\n1 : TOGGLE = Toggle output when the selected counter has an overflow event.\n2 : CLEAR = Clear output when the selected counter has an overflow event.\n3 : SET = Set output when the selected counter has an overflow event. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.11..10> OFOA
//        <0=> 0: DISABLED = No action
//        <1=> 1: TOGGLE = Toggle output when the selected counter has an overflow event.
//        <2=> 2: CLEAR = Clear output when the selected counter has an overflow event.
//        <3=> 3: SET = Set output when the selected counter has an overflow event.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC2_CTRL_OFSEL  ------------------------------
// SVD Line: 74373

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OFSEL
//    <name> OFSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40085094) \nSelect counter for OFOA bits\n0 : PRECNT = Use PRECNT overflow\n1 : BASECNT = Use BASECNT overflow\n2 : WRAPCNT = Use WRAPCNT overflow\n3 : DISABLED = Disabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.13..12> OFSEL
//        <0=> 0: PRECNT = Use PRECNT overflow
//        <1=> 1: BASECNT = Use BASECNT overflow
//        <2=> 2: WRAPCNT = Use WRAPCNT overflow
//        <3=> 3: DISABLED = Disabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC2_CTRL_PRSCONF  -----------------------------
// SVD Line: 74402

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40085094) \nPRS Configuration\n0 : PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse\n1 : LEVEL = Should be used when OFSEL, OFOA or MOA are specified. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.14..14> PRSCONF
//        <0=> 0: PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse
//        <1=> 1: LEVEL = Should be used when OFSEL, OFOA or MOA are specified.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC2_CTRL_INSEL  ------------------------------
// SVD Line: 74421

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bits 24..21] RW (@ 0x40085094) \nCapture input selection\n0 : PRS = Use the selected PRS channel\n1 : TXDONE = TX completed\n2 : RXDONE = RX completed\n3 : TXORRXDONE = TX or RX completed\n4 : FRAMEDET0 = Demodulator found sync word 0\n5 : FRAMEDET1 = Demodulator found sync word 1\n6 : FDET0OR1 = Demodulator found sync word 0 or 1\n7 : MODSYNCSENT = Modulator sync word sent\n8 : RXEOF = RX at end of frame from demodulator\n9 : PRORTC0 = PRORTC capture/compare 0\n10 : PRORTC1 = PRORTC capture/compare 1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.24..21> INSEL
//        <0=> 0: PRS = Use the selected PRS channel
//        <1=> 1: TXDONE = TX completed
//        <2=> 2: RXDONE = RX completed
//        <3=> 3: TXORRXDONE = TX or RX completed
//        <4=> 4: FRAMEDET0 = Demodulator found sync word 0
//        <5=> 5: FRAMEDET1 = Demodulator found sync word 1
//        <6=> 6: FDET0OR1 = Demodulator found sync word 0 or 1
//        <7=> 7: MODSYNCSENT = Modulator sync word sent
//        <8=> 8: RXEOF = RX at end of frame from demodulator
//        <9=> 9: PRORTC0 = PRORTC capture/compare 0
//        <10=> 10: PRORTC1 = PRORTC capture/compare 1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC2_CTRL_ICEDGE  ------------------------------
// SVD Line: 74485

//  <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40085094) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : DISABLED = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC2_CTRL ) </loc>
//      <o.26..25> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: DISABLED = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC2_CTRL  -------------------------------
// SVD Line: 74245

//  <rtree> SFDITEM_REG__PROTIMER_CC2_CTRL
//    <name> CC2_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085094) CC2_CTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_CC2_CTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_CC2_CTRL = (PROTIMER_CC2_CTRL & ~(0x7E07F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7E07F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_CCMODE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_PREMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_BASEMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_WRAPMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OIST </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_MOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OFOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_OFSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_CTRL_ICEDGE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_CC2_PRE  ----------------------------
// SVD Line: 74516

unsigned int PROTIMER_CC2_PRE __AT (0x40085098);



// ----------------------------  Field Item: PROTIMER_CC2_PRE_PRE  --------------------------------
// SVD Line: 74525

//  <item> SFDITEM_FIELD__PROTIMER_CC2_PRE_PRE
//    <name> PRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40085098) CC Channel PRE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC2_PRE >> 0) & 0xFFFF), ((PROTIMER_CC2_PRE = (PROTIMER_CC2_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC2_PRE  --------------------------------
// SVD Line: 74516

//  <rtree> SFDITEM_REG__PROTIMER_CC2_PRE
//    <name> CC2_PRE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40085098) CC2_PRE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC2_PRE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC2_PRE = (PROTIMER_CC2_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_PRE_PRE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC2_BASE  ----------------------------
// SVD Line: 74534

unsigned int PROTIMER_CC2_BASE __AT (0x4008509C);



// ---------------------------  Field Item: PROTIMER_CC2_BASE_BASE  -------------------------------
// SVD Line: 74543

//  <item> SFDITEM_FIELD__PROTIMER_CC2_BASE_BASE
//    <name> BASE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4008509C) CC Channel BASE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC2_BASE >> 0) & 0xFFFF), ((PROTIMER_CC2_BASE = (PROTIMER_CC2_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC2_BASE  -------------------------------
// SVD Line: 74534

//  <rtree> SFDITEM_REG__PROTIMER_CC2_BASE
//    <name> CC2_BASE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008509C) CC2_BASE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC2_BASE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC2_BASE = (PROTIMER_CC2_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_BASE_BASE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC2_WRAP  ----------------------------
// SVD Line: 74552

unsigned int PROTIMER_CC2_WRAP __AT (0x400850A0);



// ---------------------------  Field Item: PROTIMER_CC2_WRAP_WRAP  -------------------------------
// SVD Line: 74561

//  <item> SFDITEM_FIELD__PROTIMER_CC2_WRAP_WRAP
//    <name> WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850A0) CC Channel WRAP Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_CC2_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC2_WRAP = (PROTIMER_CC2_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC2_WRAP  -------------------------------
// SVD Line: 74552

//  <rtree> SFDITEM_REG__PROTIMER_CC2_WRAP
//    <name> CC2_WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850A0) CC2_WRAP </i>
//    <loc> ( (unsigned int)((PROTIMER_CC2_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC2_WRAP = (PROTIMER_CC2_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC2_WRAP_WRAP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC3_CTRL  ----------------------------
// SVD Line: 74570

unsigned int PROTIMER_CC3_CTRL __AT (0x400850A4);



// --------------------------  Field Item: PROTIMER_CC3_CTRL_ENABLE  ------------------------------
// SVD Line: 74579

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400850A4) Channel Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC3_CTRL_CCMODE  ------------------------------
// SVD Line: 74586

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_CCMODE
//    <name> CCMODE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400850A4) \nCompare/Capture mode\n0 : COMPARE = Compare mode selected\n1 : CAPTURE = Capture mode selected </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.1..1> CCMODE
//        <0=> 0: COMPARE = Compare mode selected
//        <1=> 1: CAPTURE = Capture mode selected
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC3_CTRL_PREMATCHEN  ----------------------------
// SVD Line: 74605

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_PREMATCHEN
//    <name> PREMATCHEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400850A4) Enable PRECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.2..2> PREMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC3_CTRL_BASEMATCHEN  ---------------------------
// SVD Line: 74612

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_BASEMATCHEN
//    <name> BASEMATCHEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400850A4) Enable BASECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.3..3> BASEMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC3_CTRL_WRAPMATCHEN  ---------------------------
// SVD Line: 74619

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_WRAPMATCHEN
//    <name> WRAPMATCHEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400850A4) Enable WRAPCNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.4..4> WRAPMATCHEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC3_CTRL_OIST  -------------------------------
// SVD Line: 74626

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OIST
//    <name> OIST </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400850A4) Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.5..5> OIST
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC3_CTRL_OUTINV  ------------------------------
// SVD Line: 74633

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400850A4) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.6..6> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_CC3_CTRL_MOA  -------------------------------
// SVD Line: 74640

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_MOA
//    <name> MOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400850A4) \nMatch Output Action\n0 : DISABLED = No action on compare match\n1 : TOGGLE = Toggle output on compare match in COMPARE mode.\n2 : CLEAR = Clear output on compare match in COMPARE mode.\n3 : SET = Set output on compare match in COMPARE mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.9..8> MOA
//        <0=> 0: DISABLED = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match in COMPARE mode.
//        <2=> 2: CLEAR = Clear output on compare match in COMPARE mode.
//        <3=> 3: SET = Set output on compare match in COMPARE mode.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC3_CTRL_OFOA  -------------------------------
// SVD Line: 74669

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OFOA
//    <name> OFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x400850A4) \nOverflow Output Action\n0 : DISABLED = No action\n1 : TOGGLE = Toggle output when the selected counter has an overflow event.\n2 : CLEAR = Clear output when the selected counter has an overflow event.\n3 : SET = Set output when the selected counter has an overflow event. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.11..10> OFOA
//        <0=> 0: DISABLED = No action
//        <1=> 1: TOGGLE = Toggle output when the selected counter has an overflow event.
//        <2=> 2: CLEAR = Clear output when the selected counter has an overflow event.
//        <3=> 3: SET = Set output when the selected counter has an overflow event.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC3_CTRL_OFSEL  ------------------------------
// SVD Line: 74698

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OFSEL
//    <name> OFSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400850A4) \nSelect counter for OFOA bits\n0 : PRECNT = Use PRECNT overflow\n1 : BASECNT = Use BASECNT overflow\n2 : WRAPCNT = Use WRAPCNT overflow\n3 : DISABLED = Disabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.13..12> OFSEL
//        <0=> 0: PRECNT = Use PRECNT overflow
//        <1=> 1: BASECNT = Use BASECNT overflow
//        <2=> 2: WRAPCNT = Use WRAPCNT overflow
//        <3=> 3: DISABLED = Disabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC3_CTRL_PRSCONF  -----------------------------
// SVD Line: 74727

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400850A4) \nPRS Configuration\n0 : PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse\n1 : LEVEL = Should be used when OFSEL, OFOA or MOA are specified. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.14..14> PRSCONF
//        <0=> 0: PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse
//        <1=> 1: LEVEL = Should be used when OFSEL, OFOA or MOA are specified.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC3_CTRL_INSEL  ------------------------------
// SVD Line: 74746

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bits 24..21] RW (@ 0x400850A4) \nCapture input selection\n0 : PRS = Use the selected PRS channel\n1 : TXDONE = TX completed\n2 : RXDONE = RX completed\n3 : TXORRXDONE = TX or RX completed\n4 : FRAMEDET0 = Demodulator found sync word 0\n5 : FRAMEDET1 = Demodulator found sync word 1\n6 : FDET0OR1 = Demodulator found sync word 0 or 1\n7 : MODSYNCSENT = Modulator sync word sent\n8 : RXEOF = RX at end of frame from demodulator\n9 : PRORTC0 = PRORTC capture/compare 0\n10 : PRORTC1 = PRORTC capture/compare 1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.24..21> INSEL
//        <0=> 0: PRS = Use the selected PRS channel
//        <1=> 1: TXDONE = TX completed
//        <2=> 2: RXDONE = RX completed
//        <3=> 3: TXORRXDONE = TX or RX completed
//        <4=> 4: FRAMEDET0 = Demodulator found sync word 0
//        <5=> 5: FRAMEDET1 = Demodulator found sync word 1
//        <6=> 6: FDET0OR1 = Demodulator found sync word 0 or 1
//        <7=> 7: MODSYNCSENT = Modulator sync word sent
//        <8=> 8: RXEOF = RX at end of frame from demodulator
//        <9=> 9: PRORTC0 = PRORTC capture/compare 0
//        <10=> 10: PRORTC1 = PRORTC capture/compare 1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC3_CTRL_ICEDGE  ------------------------------
// SVD Line: 74810

//  <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400850A4) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : DISABLED = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC3_CTRL ) </loc>
//      <o.26..25> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: DISABLED = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC3_CTRL  -------------------------------
// SVD Line: 74570

//  <rtree> SFDITEM_REG__PROTIMER_CC3_CTRL
//    <name> CC3_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850A4) CC3_CTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_CC3_CTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_CC3_CTRL = (PROTIMER_CC3_CTRL & ~(0x7E07F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7E07F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_CCMODE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_PREMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_BASEMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_WRAPMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OIST </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_MOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OFOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_OFSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_CTRL_ICEDGE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_CC3_PRE  ----------------------------
// SVD Line: 74841

unsigned int PROTIMER_CC3_PRE __AT (0x400850A8);



// ----------------------------  Field Item: PROTIMER_CC3_PRE_PRE  --------------------------------
// SVD Line: 74850

//  <item> SFDITEM_FIELD__PROTIMER_CC3_PRE_PRE
//    <name> PRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400850A8) CC Channel PRE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC3_PRE >> 0) & 0xFFFF), ((PROTIMER_CC3_PRE = (PROTIMER_CC3_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC3_PRE  --------------------------------
// SVD Line: 74841

//  <rtree> SFDITEM_REG__PROTIMER_CC3_PRE
//    <name> CC3_PRE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850A8) CC3_PRE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC3_PRE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC3_PRE = (PROTIMER_CC3_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_PRE_PRE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC3_BASE  ----------------------------
// SVD Line: 74859

unsigned int PROTIMER_CC3_BASE __AT (0x400850AC);



// ---------------------------  Field Item: PROTIMER_CC3_BASE_BASE  -------------------------------
// SVD Line: 74868

//  <item> SFDITEM_FIELD__PROTIMER_CC3_BASE_BASE
//    <name> BASE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400850AC) CC Channel BASE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC3_BASE >> 0) & 0xFFFF), ((PROTIMER_CC3_BASE = (PROTIMER_CC3_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC3_BASE  -------------------------------
// SVD Line: 74859

//  <rtree> SFDITEM_REG__PROTIMER_CC3_BASE
//    <name> CC3_BASE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850AC) CC3_BASE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC3_BASE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC3_BASE = (PROTIMER_CC3_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_BASE_BASE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC3_WRAP  ----------------------------
// SVD Line: 74877

unsigned int PROTIMER_CC3_WRAP __AT (0x400850B0);



// ---------------------------  Field Item: PROTIMER_CC3_WRAP_WRAP  -------------------------------
// SVD Line: 74886

//  <item> SFDITEM_FIELD__PROTIMER_CC3_WRAP_WRAP
//    <name> WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850B0) CC Channel WRAP Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_CC3_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC3_WRAP = (PROTIMER_CC3_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC3_WRAP  -------------------------------
// SVD Line: 74877

//  <rtree> SFDITEM_REG__PROTIMER_CC3_WRAP
//    <name> CC3_WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850B0) CC3_WRAP </i>
//    <loc> ( (unsigned int)((PROTIMER_CC3_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC3_WRAP = (PROTIMER_CC3_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC3_WRAP_WRAP </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC4_CTRL  ----------------------------
// SVD Line: 74895

unsigned int PROTIMER_CC4_CTRL __AT (0x400850B4);



// --------------------------  Field Item: PROTIMER_CC4_CTRL_ENABLE  ------------------------------
// SVD Line: 74904

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_ENABLE
//    <name> ENABLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400850B4) Channel Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.0..0> ENABLE
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC4_CTRL_CCMODE  ------------------------------
// SVD Line: 74911

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_CCMODE
//    <name> CCMODE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400850B4) \nCompare/Capture mode\n0 : COMPARE = Compare mode selected\n1 : CAPTURE = Capture mode selected </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.1..1> CCMODE
//        <0=> 0: COMPARE = Compare mode selected
//        <1=> 1: CAPTURE = Capture mode selected
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC4_CTRL_PREMATCHEN  ----------------------------
// SVD Line: 74930

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_PREMATCHEN
//    <name> PREMATCHEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400850B4) Enable PRECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.2..2> PREMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC4_CTRL_BASEMATCHEN  ---------------------------
// SVD Line: 74937

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_BASEMATCHEN
//    <name> BASEMATCHEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400850B4) Enable BASECNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.3..3> BASEMATCHEN
//    </check>
//  </item>
//  


// ------------------------  Field Item: PROTIMER_CC4_CTRL_WRAPMATCHEN  ---------------------------
// SVD Line: 74944

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_WRAPMATCHEN
//    <name> WRAPMATCHEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400850B4) Enable WRAPCNT matching </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.4..4> WRAPMATCHEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC4_CTRL_OIST  -------------------------------
// SVD Line: 74951

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OIST
//    <name> OIST </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400850B4) Output Initial State </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.5..5> OIST
//    </check>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC4_CTRL_OUTINV  ------------------------------
// SVD Line: 74958

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OUTINV
//    <name> OUTINV </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400850B4) Output Invert </i>
//    <check> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.6..6> OUTINV
//    </check>
//  </item>
//  


// ----------------------------  Field Item: PROTIMER_CC4_CTRL_MOA  -------------------------------
// SVD Line: 74965

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_MOA
//    <name> MOA </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400850B4) \nMatch Output Action\n0 : DISABLED = No action on compare match\n1 : TOGGLE = Toggle output on compare match in COMPARE mode.\n2 : CLEAR = Clear output on compare match in COMPARE mode.\n3 : SET = Set output on compare match in COMPARE mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.9..8> MOA
//        <0=> 0: DISABLED = No action on compare match
//        <1=> 1: TOGGLE = Toggle output on compare match in COMPARE mode.
//        <2=> 2: CLEAR = Clear output on compare match in COMPARE mode.
//        <3=> 3: SET = Set output on compare match in COMPARE mode.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC4_CTRL_OFOA  -------------------------------
// SVD Line: 74994

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OFOA
//    <name> OFOA </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x400850B4) \nOverflow Output Action\n0 : DISABLED = No action\n1 : TOGGLE = Toggle output when the selected counter has an overflow event.\n2 : CLEAR = Clear output when the selected counter has an overflow event.\n3 : SET = Set output when the selected counter has an overflow event. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.11..10> OFOA
//        <0=> 0: DISABLED = No action
//        <1=> 1: TOGGLE = Toggle output when the selected counter has an overflow event.
//        <2=> 2: CLEAR = Clear output when the selected counter has an overflow event.
//        <3=> 3: SET = Set output when the selected counter has an overflow event.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC4_CTRL_OFSEL  ------------------------------
// SVD Line: 75023

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OFSEL
//    <name> OFSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400850B4) \nSelect counter for OFOA bits\n0 : PRECNT = Use PRECNT overflow\n1 : BASECNT = Use BASECNT overflow\n2 : WRAPCNT = Use WRAPCNT overflow\n3 : DISABLED = Disabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.13..12> OFSEL
//        <0=> 0: PRECNT = Use PRECNT overflow
//        <1=> 1: BASECNT = Use BASECNT overflow
//        <2=> 2: WRAPCNT = Use WRAPCNT overflow
//        <3=> 3: DISABLED = Disabled
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC4_CTRL_PRSCONF  -----------------------------
// SVD Line: 75052

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_PRSCONF
//    <name> PRSCONF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400850B4) \nPRS Configuration\n0 : PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse\n1 : LEVEL = Should be used when OFSEL, OFOA or MOA are specified. </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.14..14> PRSCONF
//        <0=> 0: PULSE = Each CC event will generate a one HFRADIOCLK cycle high pulse
//        <1=> 1: LEVEL = Should be used when OFSEL, OFOA or MOA are specified.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PROTIMER_CC4_CTRL_INSEL  ------------------------------
// SVD Line: 75071

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_INSEL
//    <name> INSEL </name>
//    <rw> 
//    <i> [Bits 24..21] RW (@ 0x400850B4) \nCapture input selection\n0 : PRS = Use the selected PRS channel\n1 : TXDONE = TX completed\n2 : RXDONE = RX completed\n3 : TXORRXDONE = TX or RX completed\n4 : FRAMEDET0 = Demodulator found sync word 0\n5 : FRAMEDET1 = Demodulator found sync word 1\n6 : FDET0OR1 = Demodulator found sync word 0 or 1\n7 : MODSYNCSENT = Modulator sync word sent\n8 : RXEOF = RX at end of frame from demodulator\n9 : PRORTC0 = PRORTC capture/compare 0\n10 : PRORTC1 = PRORTC capture/compare 1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.24..21> INSEL
//        <0=> 0: PRS = Use the selected PRS channel
//        <1=> 1: TXDONE = TX completed
//        <2=> 2: RXDONE = RX completed
//        <3=> 3: TXORRXDONE = TX or RX completed
//        <4=> 4: FRAMEDET0 = Demodulator found sync word 0
//        <5=> 5: FRAMEDET1 = Demodulator found sync word 1
//        <6=> 6: FDET0OR1 = Demodulator found sync word 0 or 1
//        <7=> 7: MODSYNCSENT = Modulator sync word sent
//        <8=> 8: RXEOF = RX at end of frame from demodulator
//        <9=> 9: PRORTC0 = PRORTC capture/compare 0
//        <10=> 10: PRORTC1 = PRORTC capture/compare 1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PROTIMER_CC4_CTRL_ICEDGE  ------------------------------
// SVD Line: 75135

//  <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_ICEDGE
//    <name> ICEDGE </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400850B4) \nInput Capture Edge Select\n0 : RISING = Rising edges detected\n1 : FALLING = Falling edges detected\n2 : BOTH = Both edges detected\n3 : DISABLED = No edge detection, signal is left as it is </i>
//    <combo> 
//      <loc> ( (unsigned int) PROTIMER_CC4_CTRL ) </loc>
//      <o.26..25> ICEDGE
//        <0=> 0: RISING = Rising edges detected
//        <1=> 1: FALLING = Falling edges detected
//        <2=> 2: BOTH = Both edges detected
//        <3=> 3: DISABLED = No edge detection, signal is left as it is
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC4_CTRL  -------------------------------
// SVD Line: 74895

//  <rtree> SFDITEM_REG__PROTIMER_CC4_CTRL
//    <name> CC4_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850B4) CC4_CTRL </i>
//    <loc> ( (unsigned int)((PROTIMER_CC4_CTRL >> 0) & 0xFFFFFFFF), ((PROTIMER_CC4_CTRL = (PROTIMER_CC4_CTRL & ~(0x7E07F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7E07F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_ENABLE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_CCMODE </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_PREMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_BASEMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_WRAPMATCHEN </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OIST </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OUTINV </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_MOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OFOA </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_OFSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_PRSCONF </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_INSEL </item>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_CTRL_ICEDGE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: PROTIMER_CC4_PRE  ----------------------------
// SVD Line: 75166

unsigned int PROTIMER_CC4_PRE __AT (0x400850B8);



// ----------------------------  Field Item: PROTIMER_CC4_PRE_PRE  --------------------------------
// SVD Line: 75175

//  <item> SFDITEM_FIELD__PROTIMER_CC4_PRE_PRE
//    <name> PRE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400850B8) CC Channel PRE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC4_PRE >> 0) & 0xFFFF), ((PROTIMER_CC4_PRE = (PROTIMER_CC4_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC4_PRE  --------------------------------
// SVD Line: 75166

//  <rtree> SFDITEM_REG__PROTIMER_CC4_PRE
//    <name> CC4_PRE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850B8) CC4_PRE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC4_PRE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC4_PRE = (PROTIMER_CC4_PRE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_PRE_PRE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC4_BASE  ----------------------------
// SVD Line: 75184

unsigned int PROTIMER_CC4_BASE __AT (0x400850BC);



// ---------------------------  Field Item: PROTIMER_CC4_BASE_BASE  -------------------------------
// SVD Line: 75193

//  <item> SFDITEM_FIELD__PROTIMER_CC4_BASE_BASE
//    <name> BASE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400850BC) CC Channel BASE Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PROTIMER_CC4_BASE >> 0) & 0xFFFF), ((PROTIMER_CC4_BASE = (PROTIMER_CC4_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC4_BASE  -------------------------------
// SVD Line: 75184

//  <rtree> SFDITEM_REG__PROTIMER_CC4_BASE
//    <name> CC4_BASE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850BC) CC4_BASE </i>
//    <loc> ( (unsigned int)((PROTIMER_CC4_BASE >> 0) & 0xFFFFFFFF), ((PROTIMER_CC4_BASE = (PROTIMER_CC4_BASE & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_BASE_BASE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PROTIMER_CC4_WRAP  ----------------------------
// SVD Line: 75202

unsigned int PROTIMER_CC4_WRAP __AT (0x400850C0);



// ---------------------------  Field Item: PROTIMER_CC4_WRAP_WRAP  -------------------------------
// SVD Line: 75211

//  <item> SFDITEM_FIELD__PROTIMER_CC4_WRAP_WRAP
//    <name> WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850C0) CC Channel WRAP Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((PROTIMER_CC4_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC4_WRAP = (PROTIMER_CC4_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PROTIMER_CC4_WRAP  -------------------------------
// SVD Line: 75202

//  <rtree> SFDITEM_REG__PROTIMER_CC4_WRAP
//    <name> CC4_WRAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400850C0) CC4_WRAP </i>
//    <loc> ( (unsigned int)((PROTIMER_CC4_WRAP >> 0) & 0xFFFFFFFF), ((PROTIMER_CC4_WRAP = (PROTIMER_CC4_WRAP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PROTIMER_CC4_WRAP_WRAP </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: PROTIMER  -----------------------------------
// SVD Line: 71760

//  <view> PROTIMER
//    <name> PROTIMER </name>
//    <item> SFDITEM_REG__PROTIMER_CTRL </item>
//    <item> SFDITEM_REG__PROTIMER_CMD </item>
//    <item> SFDITEM_REG__PROTIMER_PRSCTRL </item>
//    <item> SFDITEM_REG__PROTIMER_STATUS </item>
//    <item> SFDITEM_REG__PROTIMER_PRECNT </item>
//    <item> SFDITEM_REG__PROTIMER_BASECNT </item>
//    <item> SFDITEM_REG__PROTIMER_WRAPCNT </item>
//    <item> SFDITEM_REG__PROTIMER_BASEPRE </item>
//    <item> SFDITEM_REG__PROTIMER_LWRAPCNT </item>
//    <item> SFDITEM_REG__PROTIMER_PRECNTTOPADJ </item>
//    <item> SFDITEM_REG__PROTIMER_PRECNTTOP </item>
//    <item> SFDITEM_REG__PROTIMER_BASECNTTOP </item>
//    <item> SFDITEM_REG__PROTIMER_WRAPCNTTOP </item>
//    <item> SFDITEM_REG__PROTIMER_TOUT0CNT </item>
//    <item> SFDITEM_REG__PROTIMER_TOUT0CNTTOP </item>
//    <item> SFDITEM_REG__PROTIMER_TOUT0COMP </item>
//    <item> SFDITEM_REG__PROTIMER_TOUT1CNT </item>
//    <item> SFDITEM_REG__PROTIMER_TOUT1CNTTOP </item>
//    <item> SFDITEM_REG__PROTIMER_TOUT1COMP </item>
//    <item> SFDITEM_REG__PROTIMER_LBTCTRL </item>
//    <item> SFDITEM_REG__PROTIMER_LBTPRSCTRL </item>
//    <item> SFDITEM_REG__PROTIMER_LBTSTATE </item>
//    <item> SFDITEM_REG__PROTIMER_RANDOM </item>
//    <item> SFDITEM_REG__PROTIMER_IF </item>
//    <item> SFDITEM_REG__PROTIMER_IFS </item>
//    <item> SFDITEM_REG__PROTIMER_IFC </item>
//    <item> SFDITEM_REG__PROTIMER_IEN </item>
//    <item> SFDITEM_REG__PROTIMER_RXCTRL </item>
//    <item> SFDITEM_REG__PROTIMER_TXCTRL </item>
//    <item> SFDITEM_REG__PROTIMER_CC0_CTRL </item>
//    <item> SFDITEM_REG__PROTIMER_CC0_PRE </item>
//    <item> SFDITEM_REG__PROTIMER_CC0_BASE </item>
//    <item> SFDITEM_REG__PROTIMER_CC0_WRAP </item>
//    <item> SFDITEM_REG__PROTIMER_CC1_CTRL </item>
//    <item> SFDITEM_REG__PROTIMER_CC1_PRE </item>
//    <item> SFDITEM_REG__PROTIMER_CC1_BASE </item>
//    <item> SFDITEM_REG__PROTIMER_CC1_WRAP </item>
//    <item> SFDITEM_REG__PROTIMER_CC2_CTRL </item>
//    <item> SFDITEM_REG__PROTIMER_CC2_PRE </item>
//    <item> SFDITEM_REG__PROTIMER_CC2_BASE </item>
//    <item> SFDITEM_REG__PROTIMER_CC2_WRAP </item>
//    <item> SFDITEM_REG__PROTIMER_CC3_CTRL </item>
//    <item> SFDITEM_REG__PROTIMER_CC3_PRE </item>
//    <item> SFDITEM_REG__PROTIMER_CC3_BASE </item>
//    <item> SFDITEM_REG__PROTIMER_CC3_WRAP </item>
//    <item> SFDITEM_REG__PROTIMER_CC4_CTRL </item>
//    <item> SFDITEM_REG__PROTIMER_CC4_PRE </item>
//    <item> SFDITEM_REG__PROTIMER_CC4_BASE </item>
//    <item> SFDITEM_REG__PROTIMER_CC4_WRAP </item>
//  </view>
//  


// ---------------------------  Register Item Address: RFSENSE_CTRL  ------------------------------
// SVD Line: 75236

unsigned int RFSENSE_CTRL __AT (0x40088000);



// ------------------------------  Field Item: RFSENSE_CTRL_CTRL  ---------------------------------
// SVD Line: 75245

//  <item> SFDITEM_FIELD__RFSENSE_CTRL_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088000) CTRL </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_CTRL >> 0) & 0xFFFFFFFF), ((RFSENSE_CTRL = (RFSENSE_CTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RFSENSE_CTRL  ----------------------------------
// SVD Line: 75236

//  <rtree> SFDITEM_REG__RFSENSE_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088000) CTRL </i>
//    <loc> ( (unsigned int)((RFSENSE_CTRL >> 0) & 0xFFFFFFFF), ((RFSENSE_CTRL = (RFSENSE_CTRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_CTRL_CTRL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: RFSENSE_PERIODSEL  ----------------------------
// SVD Line: 75254

unsigned int RFSENSE_PERIODSEL __AT (0x40088004);



// -------------------------  Field Item: RFSENSE_PERIODSEL_PERIODSEL  ----------------------------
// SVD Line: 75263

//  <item> SFDITEM_FIELD__RFSENSE_PERIODSEL_PERIODSEL
//    <name> PERIODSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088004) PERIODSEL </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_PERIODSEL >> 0) & 0xFFFFFFFF), ((RFSENSE_PERIODSEL = (RFSENSE_PERIODSEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: RFSENSE_PERIODSEL  -------------------------------
// SVD Line: 75254

//  <rtree> SFDITEM_REG__RFSENSE_PERIODSEL
//    <name> PERIODSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088004) PERIODSEL </i>
//    <loc> ( (unsigned int)((RFSENSE_PERIODSEL >> 0) & 0xFFFFFFFF), ((RFSENSE_PERIODSEL = (RFSENSE_PERIODSEL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_PERIODSEL_PERIODSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RFSENSE_CNT  -------------------------------
// SVD Line: 75272

unsigned int RFSENSE_CNT __AT (0x40088008);



// -------------------------------  Field Item: RFSENSE_CNT_CNT  ----------------------------------
// SVD Line: 75281

//  <item> SFDITEM_FIELD__RFSENSE_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088008) CNT </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_CNT >> 0) & 0xFFFFFFFF), ((RFSENSE_CNT = (RFSENSE_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RFSENSE_CNT  ----------------------------------
// SVD Line: 75272

//  <rtree> SFDITEM_REG__RFSENSE_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088008) CNT </i>
//    <loc> ( (unsigned int)((RFSENSE_CNT >> 0) & 0xFFFFFFFF), ((RFSENSE_CNT = (RFSENSE_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_CNT_CNT </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RFSENSE_EM4WUEN  -----------------------------
// SVD Line: 75290

unsigned int RFSENSE_EM4WUEN __AT (0x40088010);



// ---------------------------  Field Item: RFSENSE_EM4WUEN_EM4WUEN  ------------------------------
// SVD Line: 75299

//  <item> SFDITEM_FIELD__RFSENSE_EM4WUEN_EM4WUEN
//    <name> EM4WUEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088010) EM4WUEN </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_EM4WUEN >> 0) & 0xFFFFFFFF), ((RFSENSE_EM4WUEN = (RFSENSE_EM4WUEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RFSENSE_EM4WUEN  --------------------------------
// SVD Line: 75290

//  <rtree> SFDITEM_REG__RFSENSE_EM4WUEN
//    <name> EM4WUEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088010) EM4WUEN </i>
//    <loc> ( (unsigned int)((RFSENSE_EM4WUEN >> 0) & 0xFFFFFFFF), ((RFSENSE_EM4WUEN = (RFSENSE_EM4WUEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_EM4WUEN_EM4WUEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RFSENSE_CALIB  ------------------------------
// SVD Line: 75308

unsigned int RFSENSE_CALIB __AT (0x40088014);



// -----------------------------  Field Item: RFSENSE_CALIB_CALIB  --------------------------------
// SVD Line: 75317

//  <item> SFDITEM_FIELD__RFSENSE_CALIB_CALIB
//    <name> CALIB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088014) CALIB </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_CALIB >> 0) & 0xFFFFFFFF), ((RFSENSE_CALIB = (RFSENSE_CALIB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RFSENSE_CALIB  ---------------------------------
// SVD Line: 75308

//  <rtree> SFDITEM_REG__RFSENSE_CALIB
//    <name> CALIB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088014) CALIB </i>
//    <loc> ( (unsigned int)((RFSENSE_CALIB >> 0) & 0xFFFFFFFF), ((RFSENSE_CALIB = (RFSENSE_CALIB & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_CALIB_CALIB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RFSENSE_IF  -------------------------------
// SVD Line: 75326

unsigned int RFSENSE_IF __AT (0x40088018);



// --------------------------------  Field Item: RFSENSE_IF_IF  -----------------------------------
// SVD Line: 75335

//  <item> SFDITEM_FIELD__RFSENSE_IF_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40088018) IF </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RFSENSE_IF  -----------------------------------
// SVD Line: 75326

//  <rtree> SFDITEM_REG__RFSENSE_IF
//    <name> IF </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40088018) IF </i>
//    <loc> ( (unsigned int)((RFSENSE_IF >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_IF_IF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RFSENSE_IFS  -------------------------------
// SVD Line: 75344

unsigned int RFSENSE_IFS __AT (0x4008801C);



// -------------------------------  Field Item: RFSENSE_IFS_IFS  ----------------------------------
// SVD Line: 75353

//  <item> SFDITEM_FIELD__RFSENSE_IFS_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4008801C) IFS </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_IFS >> 0) & 0x0), ((RFSENSE_IFS = (RFSENSE_IFS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RFSENSE_IFS  ----------------------------------
// SVD Line: 75344

//  <rtree> SFDITEM_REG__RFSENSE_IFS
//    <name> IFS </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4008801C) IFS </i>
//    <loc> ( (unsigned int)((RFSENSE_IFS >> 0) & 0xFFFFFFFF), ((RFSENSE_IFS = (RFSENSE_IFS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_IFS_IFS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RFSENSE_IFC  -------------------------------
// SVD Line: 75362

unsigned int RFSENSE_IFC __AT (0x40088020);



// -------------------------------  Field Item: RFSENSE_IFC_IFC  ----------------------------------
// SVD Line: 75371

//  <item> SFDITEM_FIELD__RFSENSE_IFC_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40088020) IFC </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_IFC >> 0) & 0x0), ((RFSENSE_IFC = (RFSENSE_IFC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RFSENSE_IFC  ----------------------------------
// SVD Line: 75362

//  <rtree> SFDITEM_REG__RFSENSE_IFC
//    <name> IFC </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40088020) IFC </i>
//    <loc> ( (unsigned int)((RFSENSE_IFC >> 0) & 0xFFFFFFFF), ((RFSENSE_IFC = (RFSENSE_IFC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_IFC_IFC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RFSENSE_IEN  -------------------------------
// SVD Line: 75380

unsigned int RFSENSE_IEN __AT (0x40088024);



// -------------------------------  Field Item: RFSENSE_IEN_IEN  ----------------------------------
// SVD Line: 75389

//  <item> SFDITEM_FIELD__RFSENSE_IEN_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088024) IEN </i>
//    <edit> 
//      <loc> ( (unsigned int)((RFSENSE_IEN >> 0) & 0xFFFFFFFF), ((RFSENSE_IEN = (RFSENSE_IEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RFSENSE_IEN  ----------------------------------
// SVD Line: 75380

//  <rtree> SFDITEM_REG__RFSENSE_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40088024) IEN </i>
//    <loc> ( (unsigned int)((RFSENSE_IEN >> 0) & 0xFFFFFFFF), ((RFSENSE_IEN = (RFSENSE_IEN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RFSENSE_IEN_IEN </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: RFSENSE  ------------------------------------
// SVD Line: 75222

//  <view> RFSENSE
//    <name> RFSENSE </name>
//    <item> SFDITEM_REG__RFSENSE_CTRL </item>
//    <item> SFDITEM_REG__RFSENSE_PERIODSEL </item>
//    <item> SFDITEM_REG__RFSENSE_CNT </item>
//    <item> SFDITEM_REG__RFSENSE_EM4WUEN </item>
//    <item> SFDITEM_REG__RFSENSE_CALIB </item>
//    <item> SFDITEM_REG__RFSENSE_IF </item>
//    <item> SFDITEM_REG__RFSENSE_IFS </item>
//    <item> SFDITEM_REG__RFSENSE_IFC </item>
//    <item> SFDITEM_REG__RFSENSE_IEN </item>
//  </view>
//  


// --------------------------  Register Item Address: BUFC_BUF0_CTRL  -----------------------------
// SVD Line: 75414

unsigned int BUFC_BUF0_CTRL __AT (0x40081000);



// -----------------------------  Field Item: BUFC_BUF0_CTRL_SIZE  --------------------------------
// SVD Line: 75423

//  <item> SFDITEM_FIELD__BUFC_BUF0_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40081000) \nBuffer Size\n0 : SIZE64 = Sets Buffer size to 64 bytes\n1 : SIZE128 = Sets Buffer size to 128 bytes\n2 : SIZE256 = Sets Buffer size to 256 bytes\n3 : SIZE512 = Sets Buffer size to 512 bytes\n4 : SIZE1024 = Sets Buffer size to 1024 bytes\n5 : SIZE2048 = Sets Buffer size to 2048 bytes\n6 : SIZE4096 = Sets Buffer size to 4096 bytes\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF0_CTRL ) </loc>
//      <o.2..0> SIZE
//        <0=> 0: SIZE64 = Sets Buffer size to 64 bytes
//        <1=> 1: SIZE128 = Sets Buffer size to 128 bytes
//        <2=> 2: SIZE256 = Sets Buffer size to 256 bytes
//        <3=> 3: SIZE512 = Sets Buffer size to 512 bytes
//        <4=> 4: SIZE1024 = Sets Buffer size to 1024 bytes
//        <5=> 5: SIZE2048 = Sets Buffer size to 2048 bytes
//        <6=> 6: SIZE4096 = Sets Buffer size to 4096 bytes
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF0_CTRL  ---------------------------------
// SVD Line: 75414

//  <rtree> SFDITEM_REG__BUFC_BUF0_CTRL
//    <name> BUF0_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081000) BUF0_CTRL </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_CTRL >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_CTRL = (BUFC_BUF0_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_CTRL_SIZE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF0_ADDR  -----------------------------
// SVD Line: 75469

unsigned int BUFC_BUF0_ADDR __AT (0x40081004);



// -----------------------------  Field Item: BUFC_BUF0_ADDR_ADDR  --------------------------------
// SVD Line: 75478

//  <item> SFDITEM_FIELD__BUFC_BUF0_ADDR_ADDR
//    <name> ADDR </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40081004) Buffer Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF0_ADDR >> 0) & 0xFFFFFF), ((BUFC_BUF0_ADDR = (BUFC_BUF0_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF0_ADDR  ---------------------------------
// SVD Line: 75469

//  <rtree> SFDITEM_REG__BUFC_BUF0_ADDR
//    <name> BUF0_ADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081004) BUF0_ADDR </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_ADDR >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_ADDR = (BUFC_BUF0_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_ADDR_ADDR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: BUFC_BUF0_WRITEOFFSET  --------------------------
// SVD Line: 75487

unsigned int BUFC_BUF0_WRITEOFFSET __AT (0x40081008);



// ----------------------  Field Item: BUFC_BUF0_WRITEOFFSET_WRITEOFFSET  -------------------------
// SVD Line: 75496

//  <item> SFDITEM_FIELD__BUFC_BUF0_WRITEOFFSET_WRITEOFFSET
//    <name> WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x40081008) Write Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF0_WRITEOFFSET >> 0) & 0x1FFF), ((BUFC_BUF0_WRITEOFFSET = (BUFC_BUF0_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF0_WRITEOFFSET  -----------------------------
// SVD Line: 75487

//  <rtree> SFDITEM_REG__BUFC_BUF0_WRITEOFFSET
//    <name> BUF0_WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081008) BUF0_WRITEOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_WRITEOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_WRITEOFFSET = (BUFC_BUF0_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_WRITEOFFSET_WRITEOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF0_READOFFSET  --------------------------
// SVD Line: 75505

unsigned int BUFC_BUF0_READOFFSET __AT (0x4008100C);



// -----------------------  Field Item: BUFC_BUF0_READOFFSET_READOFFSET  --------------------------
// SVD Line: 75514

//  <item> SFDITEM_FIELD__BUFC_BUF0_READOFFSET_READOFFSET
//    <name> READOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x4008100C) Read Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF0_READOFFSET >> 0) & 0x1FFF), ((BUFC_BUF0_READOFFSET = (BUFC_BUF0_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF0_READOFFSET  ------------------------------
// SVD Line: 75505

//  <rtree> SFDITEM_REG__BUFC_BUF0_READOFFSET
//    <name> BUF0_READOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008100C) BUF0_READOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_READOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_READOFFSET = (BUFC_BUF0_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_READOFFSET_READOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF0_WRITESTART  --------------------------
// SVD Line: 75523

unsigned int BUFC_BUF0_WRITESTART __AT (0x40081010);



// -----------------------  Field Item: BUFC_BUF0_WRITESTART_WRITESTART  --------------------------
// SVD Line: 75532

//  <item> SFDITEM_FIELD__BUFC_BUF0_WRITESTART_WRITESTART
//    <name> WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081010) WRITESTART </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF0_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_WRITESTART = (BUFC_BUF0_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF0_WRITESTART  ------------------------------
// SVD Line: 75523

//  <rtree> SFDITEM_REG__BUFC_BUF0_WRITESTART
//    <name> BUF0_WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081010) BUF0_WRITESTART </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_WRITESTART = (BUFC_BUF0_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_WRITESTART_WRITESTART </item>
//  </rtree>
//  


// ------------------------  Register Item Address: BUFC_BUF0_READDATA  ---------------------------
// SVD Line: 75541

unsigned int BUFC_BUF0_READDATA __AT (0x40081014);



// -------------------------  Field Item: BUFC_BUF0_READDATA_READDATA  ----------------------------
// SVD Line: 75550

//  <item> SFDITEM_FIELD__BUFC_BUF0_READDATA_READDATA
//    <name> READDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40081014) Buffer Read Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF0_READDATA >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF0_READDATA  -------------------------------
// SVD Line: 75541

//  <rtree> SFDITEM_REG__BUFC_BUF0_READDATA
//    <name> BUF0_READDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40081014) BUF0_READDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_READDATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_READDATA_READDATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF0_WRITEDATA  ---------------------------
// SVD Line: 75559

unsigned int BUFC_BUF0_WRITEDATA __AT (0x40081018);



// ------------------------  Field Item: BUFC_BUF0_WRITEDATA_WRITEDATA  ---------------------------
// SVD Line: 75568

//  <item> SFDITEM_FIELD__BUFC_BUF0_WRITEDATA_WRITEDATA
//    <name> WRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x40081018) Buffer Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF0_WRITEDATA >> 0) & 0x0), ((BUFC_BUF0_WRITEDATA = (BUFC_BUF0_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF0_WRITEDATA  ------------------------------
// SVD Line: 75559

//  <rtree> SFDITEM_REG__BUFC_BUF0_WRITEDATA
//    <name> BUF0_WRITEDATA </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40081018) BUF0_WRITEDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_WRITEDATA >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_WRITEDATA = (BUFC_BUF0_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_WRITEDATA_WRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF0_XWRITE  ----------------------------
// SVD Line: 75577

unsigned int BUFC_BUF0_XWRITE __AT (0x4008101C);



// ------------------------  Field Item: BUFC_BUF0_XWRITE_XORWRITEDATA  ---------------------------
// SVD Line: 75586

//  <item> SFDITEM_FIELD__BUFC_BUF0_XWRITE_XORWRITEDATA
//    <name> XORWRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x4008101C) Buffer XOR Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF0_XWRITE >> 0) & 0x0), ((BUFC_BUF0_XWRITE = (BUFC_BUF0_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF0_XWRITE  --------------------------------
// SVD Line: 75577

//  <rtree> SFDITEM_REG__BUFC_BUF0_XWRITE
//    <name> BUF0_XWRITE </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4008101C) BUF0_XWRITE </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_XWRITE >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_XWRITE = (BUFC_BUF0_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_XWRITE_XORWRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF0_STATUS  ----------------------------
// SVD Line: 75595

unsigned int BUFC_BUF0_STATUS __AT (0x40081020);



// ---------------------------  Field Item: BUFC_BUF0_STATUS_BYTES  -------------------------------
// SVD Line: 75604

//  <item> SFDITEM_FIELD__BUFC_BUF0_STATUS_BYTES
//    <name> BYTES </name>
//    <r> 
//    <i> [Bits 12..0] RO (@ 0x40081020) Number of Bytes in the Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF0_STATUS >> 0) & 0x1FFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: BUFC_BUF0_STATUS_THRESHOLDFLAG  ---------------------------
// SVD Line: 75611

//  <item> SFDITEM_FIELD__BUFC_BUF0_STATUS_THRESHOLDFLAG
//    <name> THRESHOLDFLAG </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40081020) Buffer Threshold Flag </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF0_STATUS ) </loc>
//      <o.20..20> THRESHOLDFLAG
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF0_STATUS  --------------------------------
// SVD Line: 75595

//  <rtree> SFDITEM_REG__BUFC_BUF0_STATUS
//    <name> BUF0_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40081020) BUF0_STATUS </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_STATUS_BYTES </item>
//    <item> SFDITEM_FIELD__BUFC_BUF0_STATUS_THRESHOLDFLAG </item>
//  </rtree>
//  


// ---------------------  Register Item Address: BUFC_BUF0_THRESHOLDCTRL  -------------------------
// SVD Line: 75620

unsigned int BUFC_BUF0_THRESHOLDCTRL __AT (0x40081024);



// ----------------------  Field Item: BUFC_BUF0_THRESHOLDCTRL_THRESHOLD  -------------------------
// SVD Line: 75629

//  <item> SFDITEM_FIELD__BUFC_BUF0_THRESHOLDCTRL_THRESHOLD
//    <name> THRESHOLD </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40081024) Buffer Threshold Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF0_THRESHOLDCTRL >> 0) & 0xFFF), ((BUFC_BUF0_THRESHOLDCTRL = (BUFC_BUF0_THRESHOLDCTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: BUFC_BUF0_THRESHOLDCTRL_THRESHOLDMODE  -----------------------
// SVD Line: 75636

//  <item> SFDITEM_FIELD__BUFC_BUF0_THRESHOLDCTRL_THRESHOLDMODE
//    <name> THRESHOLDMODE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40081024) \nBuffer Threshold Mode\n0 : LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD\n1 : LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF0_THRESHOLDCTRL ) </loc>
//      <o.13..13> THRESHOLDMODE
//        <0=> 0: LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD
//        <1=> 1: LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: BUFC_BUF0_THRESHOLDCTRL  ----------------------------
// SVD Line: 75620

//  <rtree> SFDITEM_REG__BUFC_BUF0_THRESHOLDCTRL
//    <name> BUF0_THRESHOLDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081024) BUF0_THRESHOLDCTRL </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_THRESHOLDCTRL >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_THRESHOLDCTRL = (BUFC_BUF0_THRESHOLDCTRL & ~(0x2FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_THRESHOLDCTRL_THRESHOLD </item>
//    <item> SFDITEM_FIELD__BUFC_BUF0_THRESHOLDCTRL_THRESHOLDMODE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF0_CMD  ------------------------------
// SVD Line: 75657

unsigned int BUFC_BUF0_CMD __AT (0x40081028);



// -----------------------------  Field Item: BUFC_BUF0_CMD_CLEAR  --------------------------------
// SVD Line: 75666

//  <item> SFDITEM_FIELD__BUFC_BUF0_CMD_CLEAR
//    <name> CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40081028) Buffer Clear </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF0_CMD ) </loc>
//      <o.0..0> CLEAR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: BUFC_BUF0_CMD_PREFETCH  -------------------------------
// SVD Line: 75673

//  <item> SFDITEM_FIELD__BUFC_BUF0_CMD_PREFETCH
//    <name> PREFETCH </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40081028) Prefetch </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF0_CMD ) </loc>
//      <o.1..1> PREFETCH
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BUFC_BUF0_CMD  ---------------------------------
// SVD Line: 75657

//  <rtree> SFDITEM_REG__BUFC_BUF0_CMD
//    <name> BUF0_CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40081028) BUF0_CMD </i>
//    <loc> ( (unsigned int)((BUFC_BUF0_CMD >> 0) & 0xFFFFFFFF), ((BUFC_BUF0_CMD = (BUFC_BUF0_CMD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF0_CMD_CLEAR </item>
//    <item> SFDITEM_FIELD__BUFC_BUF0_CMD_PREFETCH </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF1_CTRL  -----------------------------
// SVD Line: 75682

unsigned int BUFC_BUF1_CTRL __AT (0x40081030);



// -----------------------------  Field Item: BUFC_BUF1_CTRL_SIZE  --------------------------------
// SVD Line: 75691

//  <item> SFDITEM_FIELD__BUFC_BUF1_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40081030) \nBuffer Size\n0 : SIZE64 = Sets Buffer size to 64 bytes\n1 : SIZE128 = Sets Buffer size to 128 bytes\n2 : SIZE256 = Sets Buffer size to 256 bytes\n3 : SIZE512 = Sets Buffer size to 512 bytes\n4 : SIZE1024 = Sets Buffer size to 1024 bytes\n5 : SIZE2048 = Sets Buffer size to 2048 bytes\n6 : SIZE4096 = Sets Buffer size to 4096 bytes\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF1_CTRL ) </loc>
//      <o.2..0> SIZE
//        <0=> 0: SIZE64 = Sets Buffer size to 64 bytes
//        <1=> 1: SIZE128 = Sets Buffer size to 128 bytes
//        <2=> 2: SIZE256 = Sets Buffer size to 256 bytes
//        <3=> 3: SIZE512 = Sets Buffer size to 512 bytes
//        <4=> 4: SIZE1024 = Sets Buffer size to 1024 bytes
//        <5=> 5: SIZE2048 = Sets Buffer size to 2048 bytes
//        <6=> 6: SIZE4096 = Sets Buffer size to 4096 bytes
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF1_CTRL  ---------------------------------
// SVD Line: 75682

//  <rtree> SFDITEM_REG__BUFC_BUF1_CTRL
//    <name> BUF1_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081030) BUF1_CTRL </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_CTRL >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_CTRL = (BUFC_BUF1_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_CTRL_SIZE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF1_ADDR  -----------------------------
// SVD Line: 75737

unsigned int BUFC_BUF1_ADDR __AT (0x40081034);



// -----------------------------  Field Item: BUFC_BUF1_ADDR_ADDR  --------------------------------
// SVD Line: 75746

//  <item> SFDITEM_FIELD__BUFC_BUF1_ADDR_ADDR
//    <name> ADDR </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40081034) Buffer Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF1_ADDR >> 0) & 0xFFFFFF), ((BUFC_BUF1_ADDR = (BUFC_BUF1_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF1_ADDR  ---------------------------------
// SVD Line: 75737

//  <rtree> SFDITEM_REG__BUFC_BUF1_ADDR
//    <name> BUF1_ADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081034) BUF1_ADDR </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_ADDR >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_ADDR = (BUFC_BUF1_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_ADDR_ADDR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: BUFC_BUF1_WRITEOFFSET  --------------------------
// SVD Line: 75755

unsigned int BUFC_BUF1_WRITEOFFSET __AT (0x40081038);



// ----------------------  Field Item: BUFC_BUF1_WRITEOFFSET_WRITEOFFSET  -------------------------
// SVD Line: 75764

//  <item> SFDITEM_FIELD__BUFC_BUF1_WRITEOFFSET_WRITEOFFSET
//    <name> WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x40081038) Write Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF1_WRITEOFFSET >> 0) & 0x1FFF), ((BUFC_BUF1_WRITEOFFSET = (BUFC_BUF1_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF1_WRITEOFFSET  -----------------------------
// SVD Line: 75755

//  <rtree> SFDITEM_REG__BUFC_BUF1_WRITEOFFSET
//    <name> BUF1_WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081038) BUF1_WRITEOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_WRITEOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_WRITEOFFSET = (BUFC_BUF1_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_WRITEOFFSET_WRITEOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF1_READOFFSET  --------------------------
// SVD Line: 75773

unsigned int BUFC_BUF1_READOFFSET __AT (0x4008103C);



// -----------------------  Field Item: BUFC_BUF1_READOFFSET_READOFFSET  --------------------------
// SVD Line: 75782

//  <item> SFDITEM_FIELD__BUFC_BUF1_READOFFSET_READOFFSET
//    <name> READOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x4008103C) Read Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF1_READOFFSET >> 0) & 0x1FFF), ((BUFC_BUF1_READOFFSET = (BUFC_BUF1_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF1_READOFFSET  ------------------------------
// SVD Line: 75773

//  <rtree> SFDITEM_REG__BUFC_BUF1_READOFFSET
//    <name> BUF1_READOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008103C) BUF1_READOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_READOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_READOFFSET = (BUFC_BUF1_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_READOFFSET_READOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF1_WRITESTART  --------------------------
// SVD Line: 75791

unsigned int BUFC_BUF1_WRITESTART __AT (0x40081040);



// -----------------------  Field Item: BUFC_BUF1_WRITESTART_WRITESTART  --------------------------
// SVD Line: 75800

//  <item> SFDITEM_FIELD__BUFC_BUF1_WRITESTART_WRITESTART
//    <name> WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081040) WRITESTART </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF1_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_WRITESTART = (BUFC_BUF1_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF1_WRITESTART  ------------------------------
// SVD Line: 75791

//  <rtree> SFDITEM_REG__BUFC_BUF1_WRITESTART
//    <name> BUF1_WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081040) BUF1_WRITESTART </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_WRITESTART = (BUFC_BUF1_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_WRITESTART_WRITESTART </item>
//  </rtree>
//  


// ------------------------  Register Item Address: BUFC_BUF1_READDATA  ---------------------------
// SVD Line: 75809

unsigned int BUFC_BUF1_READDATA __AT (0x40081044);



// -------------------------  Field Item: BUFC_BUF1_READDATA_READDATA  ----------------------------
// SVD Line: 75818

//  <item> SFDITEM_FIELD__BUFC_BUF1_READDATA_READDATA
//    <name> READDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40081044) Buffer Read Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF1_READDATA >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF1_READDATA  -------------------------------
// SVD Line: 75809

//  <rtree> SFDITEM_REG__BUFC_BUF1_READDATA
//    <name> BUF1_READDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40081044) BUF1_READDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_READDATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_READDATA_READDATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF1_WRITEDATA  ---------------------------
// SVD Line: 75827

unsigned int BUFC_BUF1_WRITEDATA __AT (0x40081048);



// ------------------------  Field Item: BUFC_BUF1_WRITEDATA_WRITEDATA  ---------------------------
// SVD Line: 75836

//  <item> SFDITEM_FIELD__BUFC_BUF1_WRITEDATA_WRITEDATA
//    <name> WRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x40081048) Buffer Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF1_WRITEDATA >> 0) & 0x0), ((BUFC_BUF1_WRITEDATA = (BUFC_BUF1_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF1_WRITEDATA  ------------------------------
// SVD Line: 75827

//  <rtree> SFDITEM_REG__BUFC_BUF1_WRITEDATA
//    <name> BUF1_WRITEDATA </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40081048) BUF1_WRITEDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_WRITEDATA >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_WRITEDATA = (BUFC_BUF1_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_WRITEDATA_WRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF1_XWRITE  ----------------------------
// SVD Line: 75845

unsigned int BUFC_BUF1_XWRITE __AT (0x4008104C);



// ------------------------  Field Item: BUFC_BUF1_XWRITE_XORWRITEDATA  ---------------------------
// SVD Line: 75854

//  <item> SFDITEM_FIELD__BUFC_BUF1_XWRITE_XORWRITEDATA
//    <name> XORWRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x4008104C) Buffer XOR Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF1_XWRITE >> 0) & 0x0), ((BUFC_BUF1_XWRITE = (BUFC_BUF1_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF1_XWRITE  --------------------------------
// SVD Line: 75845

//  <rtree> SFDITEM_REG__BUFC_BUF1_XWRITE
//    <name> BUF1_XWRITE </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4008104C) BUF1_XWRITE </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_XWRITE >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_XWRITE = (BUFC_BUF1_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_XWRITE_XORWRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF1_STATUS  ----------------------------
// SVD Line: 75863

unsigned int BUFC_BUF1_STATUS __AT (0x40081050);



// ---------------------------  Field Item: BUFC_BUF1_STATUS_BYTES  -------------------------------
// SVD Line: 75872

//  <item> SFDITEM_FIELD__BUFC_BUF1_STATUS_BYTES
//    <name> BYTES </name>
//    <r> 
//    <i> [Bits 12..0] RO (@ 0x40081050) Number of Bytes in the Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF1_STATUS >> 0) & 0x1FFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: BUFC_BUF1_STATUS_THRESHOLDFLAG  ---------------------------
// SVD Line: 75879

//  <item> SFDITEM_FIELD__BUFC_BUF1_STATUS_THRESHOLDFLAG
//    <name> THRESHOLDFLAG </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40081050) Buffer Threshold Flag </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF1_STATUS ) </loc>
//      <o.20..20> THRESHOLDFLAG
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF1_STATUS  --------------------------------
// SVD Line: 75863

//  <rtree> SFDITEM_REG__BUFC_BUF1_STATUS
//    <name> BUF1_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40081050) BUF1_STATUS </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_STATUS_BYTES </item>
//    <item> SFDITEM_FIELD__BUFC_BUF1_STATUS_THRESHOLDFLAG </item>
//  </rtree>
//  


// ---------------------  Register Item Address: BUFC_BUF1_THRESHOLDCTRL  -------------------------
// SVD Line: 75888

unsigned int BUFC_BUF1_THRESHOLDCTRL __AT (0x40081054);



// ----------------------  Field Item: BUFC_BUF1_THRESHOLDCTRL_THRESHOLD  -------------------------
// SVD Line: 75897

//  <item> SFDITEM_FIELD__BUFC_BUF1_THRESHOLDCTRL_THRESHOLD
//    <name> THRESHOLD </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40081054) Buffer Threshold Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF1_THRESHOLDCTRL >> 0) & 0xFFF), ((BUFC_BUF1_THRESHOLDCTRL = (BUFC_BUF1_THRESHOLDCTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: BUFC_BUF1_THRESHOLDCTRL_THRESHOLDMODE  -----------------------
// SVD Line: 75904

//  <item> SFDITEM_FIELD__BUFC_BUF1_THRESHOLDCTRL_THRESHOLDMODE
//    <name> THRESHOLDMODE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40081054) \nBuffer Threshold Mode\n0 : LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD\n1 : LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF1_THRESHOLDCTRL ) </loc>
//      <o.13..13> THRESHOLDMODE
//        <0=> 0: LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD
//        <1=> 1: LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: BUFC_BUF1_THRESHOLDCTRL  ----------------------------
// SVD Line: 75888

//  <rtree> SFDITEM_REG__BUFC_BUF1_THRESHOLDCTRL
//    <name> BUF1_THRESHOLDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081054) BUF1_THRESHOLDCTRL </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_THRESHOLDCTRL >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_THRESHOLDCTRL = (BUFC_BUF1_THRESHOLDCTRL & ~(0x2FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_THRESHOLDCTRL_THRESHOLD </item>
//    <item> SFDITEM_FIELD__BUFC_BUF1_THRESHOLDCTRL_THRESHOLDMODE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF1_CMD  ------------------------------
// SVD Line: 75925

unsigned int BUFC_BUF1_CMD __AT (0x40081058);



// -----------------------------  Field Item: BUFC_BUF1_CMD_CLEAR  --------------------------------
// SVD Line: 75934

//  <item> SFDITEM_FIELD__BUFC_BUF1_CMD_CLEAR
//    <name> CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40081058) Buffer Clear </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF1_CMD ) </loc>
//      <o.0..0> CLEAR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: BUFC_BUF1_CMD_PREFETCH  -------------------------------
// SVD Line: 75941

//  <item> SFDITEM_FIELD__BUFC_BUF1_CMD_PREFETCH
//    <name> PREFETCH </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40081058) Prefetch </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF1_CMD ) </loc>
//      <o.1..1> PREFETCH
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BUFC_BUF1_CMD  ---------------------------------
// SVD Line: 75925

//  <rtree> SFDITEM_REG__BUFC_BUF1_CMD
//    <name> BUF1_CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40081058) BUF1_CMD </i>
//    <loc> ( (unsigned int)((BUFC_BUF1_CMD >> 0) & 0xFFFFFFFF), ((BUFC_BUF1_CMD = (BUFC_BUF1_CMD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF1_CMD_CLEAR </item>
//    <item> SFDITEM_FIELD__BUFC_BUF1_CMD_PREFETCH </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF2_CTRL  -----------------------------
// SVD Line: 75950

unsigned int BUFC_BUF2_CTRL __AT (0x40081060);



// -----------------------------  Field Item: BUFC_BUF2_CTRL_SIZE  --------------------------------
// SVD Line: 75959

//  <item> SFDITEM_FIELD__BUFC_BUF2_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40081060) \nBuffer Size\n0 : SIZE64 = Sets Buffer size to 64 bytes\n1 : SIZE128 = Sets Buffer size to 128 bytes\n2 : SIZE256 = Sets Buffer size to 256 bytes\n3 : SIZE512 = Sets Buffer size to 512 bytes\n4 : SIZE1024 = Sets Buffer size to 1024 bytes\n5 : SIZE2048 = Sets Buffer size to 2048 bytes\n6 : SIZE4096 = Sets Buffer size to 4096 bytes\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF2_CTRL ) </loc>
//      <o.2..0> SIZE
//        <0=> 0: SIZE64 = Sets Buffer size to 64 bytes
//        <1=> 1: SIZE128 = Sets Buffer size to 128 bytes
//        <2=> 2: SIZE256 = Sets Buffer size to 256 bytes
//        <3=> 3: SIZE512 = Sets Buffer size to 512 bytes
//        <4=> 4: SIZE1024 = Sets Buffer size to 1024 bytes
//        <5=> 5: SIZE2048 = Sets Buffer size to 2048 bytes
//        <6=> 6: SIZE4096 = Sets Buffer size to 4096 bytes
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF2_CTRL  ---------------------------------
// SVD Line: 75950

//  <rtree> SFDITEM_REG__BUFC_BUF2_CTRL
//    <name> BUF2_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081060) BUF2_CTRL </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_CTRL >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_CTRL = (BUFC_BUF2_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_CTRL_SIZE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF2_ADDR  -----------------------------
// SVD Line: 76005

unsigned int BUFC_BUF2_ADDR __AT (0x40081064);



// -----------------------------  Field Item: BUFC_BUF2_ADDR_ADDR  --------------------------------
// SVD Line: 76014

//  <item> SFDITEM_FIELD__BUFC_BUF2_ADDR_ADDR
//    <name> ADDR </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40081064) Buffer Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF2_ADDR >> 0) & 0xFFFFFF), ((BUFC_BUF2_ADDR = (BUFC_BUF2_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF2_ADDR  ---------------------------------
// SVD Line: 76005

//  <rtree> SFDITEM_REG__BUFC_BUF2_ADDR
//    <name> BUF2_ADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081064) BUF2_ADDR </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_ADDR >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_ADDR = (BUFC_BUF2_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_ADDR_ADDR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: BUFC_BUF2_WRITEOFFSET  --------------------------
// SVD Line: 76023

unsigned int BUFC_BUF2_WRITEOFFSET __AT (0x40081068);



// ----------------------  Field Item: BUFC_BUF2_WRITEOFFSET_WRITEOFFSET  -------------------------
// SVD Line: 76032

//  <item> SFDITEM_FIELD__BUFC_BUF2_WRITEOFFSET_WRITEOFFSET
//    <name> WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x40081068) Write Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF2_WRITEOFFSET >> 0) & 0x1FFF), ((BUFC_BUF2_WRITEOFFSET = (BUFC_BUF2_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF2_WRITEOFFSET  -----------------------------
// SVD Line: 76023

//  <rtree> SFDITEM_REG__BUFC_BUF2_WRITEOFFSET
//    <name> BUF2_WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081068) BUF2_WRITEOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_WRITEOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_WRITEOFFSET = (BUFC_BUF2_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_WRITEOFFSET_WRITEOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF2_READOFFSET  --------------------------
// SVD Line: 76041

unsigned int BUFC_BUF2_READOFFSET __AT (0x4008106C);



// -----------------------  Field Item: BUFC_BUF2_READOFFSET_READOFFSET  --------------------------
// SVD Line: 76050

//  <item> SFDITEM_FIELD__BUFC_BUF2_READOFFSET_READOFFSET
//    <name> READOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x4008106C) Read Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF2_READOFFSET >> 0) & 0x1FFF), ((BUFC_BUF2_READOFFSET = (BUFC_BUF2_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF2_READOFFSET  ------------------------------
// SVD Line: 76041

//  <rtree> SFDITEM_REG__BUFC_BUF2_READOFFSET
//    <name> BUF2_READOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008106C) BUF2_READOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_READOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_READOFFSET = (BUFC_BUF2_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_READOFFSET_READOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF2_WRITESTART  --------------------------
// SVD Line: 76059

unsigned int BUFC_BUF2_WRITESTART __AT (0x40081070);



// -----------------------  Field Item: BUFC_BUF2_WRITESTART_WRITESTART  --------------------------
// SVD Line: 76068

//  <item> SFDITEM_FIELD__BUFC_BUF2_WRITESTART_WRITESTART
//    <name> WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081070) WRITESTART </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF2_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_WRITESTART = (BUFC_BUF2_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF2_WRITESTART  ------------------------------
// SVD Line: 76059

//  <rtree> SFDITEM_REG__BUFC_BUF2_WRITESTART
//    <name> BUF2_WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081070) BUF2_WRITESTART </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_WRITESTART = (BUFC_BUF2_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_WRITESTART_WRITESTART </item>
//  </rtree>
//  


// ------------------------  Register Item Address: BUFC_BUF2_READDATA  ---------------------------
// SVD Line: 76077

unsigned int BUFC_BUF2_READDATA __AT (0x40081074);



// -------------------------  Field Item: BUFC_BUF2_READDATA_READDATA  ----------------------------
// SVD Line: 76086

//  <item> SFDITEM_FIELD__BUFC_BUF2_READDATA_READDATA
//    <name> READDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40081074) Buffer Read Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF2_READDATA >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF2_READDATA  -------------------------------
// SVD Line: 76077

//  <rtree> SFDITEM_REG__BUFC_BUF2_READDATA
//    <name> BUF2_READDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40081074) BUF2_READDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_READDATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_READDATA_READDATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF2_WRITEDATA  ---------------------------
// SVD Line: 76095

unsigned int BUFC_BUF2_WRITEDATA __AT (0x40081078);



// ------------------------  Field Item: BUFC_BUF2_WRITEDATA_WRITEDATA  ---------------------------
// SVD Line: 76104

//  <item> SFDITEM_FIELD__BUFC_BUF2_WRITEDATA_WRITEDATA
//    <name> WRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x40081078) Buffer Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF2_WRITEDATA >> 0) & 0x0), ((BUFC_BUF2_WRITEDATA = (BUFC_BUF2_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF2_WRITEDATA  ------------------------------
// SVD Line: 76095

//  <rtree> SFDITEM_REG__BUFC_BUF2_WRITEDATA
//    <name> BUF2_WRITEDATA </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40081078) BUF2_WRITEDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_WRITEDATA >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_WRITEDATA = (BUFC_BUF2_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_WRITEDATA_WRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF2_XWRITE  ----------------------------
// SVD Line: 76113

unsigned int BUFC_BUF2_XWRITE __AT (0x4008107C);



// ------------------------  Field Item: BUFC_BUF2_XWRITE_XORWRITEDATA  ---------------------------
// SVD Line: 76122

//  <item> SFDITEM_FIELD__BUFC_BUF2_XWRITE_XORWRITEDATA
//    <name> XORWRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x4008107C) Buffer XOR Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF2_XWRITE >> 0) & 0x0), ((BUFC_BUF2_XWRITE = (BUFC_BUF2_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF2_XWRITE  --------------------------------
// SVD Line: 76113

//  <rtree> SFDITEM_REG__BUFC_BUF2_XWRITE
//    <name> BUF2_XWRITE </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4008107C) BUF2_XWRITE </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_XWRITE >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_XWRITE = (BUFC_BUF2_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_XWRITE_XORWRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF2_STATUS  ----------------------------
// SVD Line: 76131

unsigned int BUFC_BUF2_STATUS __AT (0x40081080);



// ---------------------------  Field Item: BUFC_BUF2_STATUS_BYTES  -------------------------------
// SVD Line: 76140

//  <item> SFDITEM_FIELD__BUFC_BUF2_STATUS_BYTES
//    <name> BYTES </name>
//    <r> 
//    <i> [Bits 12..0] RO (@ 0x40081080) Number of Bytes in the Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF2_STATUS >> 0) & 0x1FFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: BUFC_BUF2_STATUS_THRESHOLDFLAG  ---------------------------
// SVD Line: 76147

//  <item> SFDITEM_FIELD__BUFC_BUF2_STATUS_THRESHOLDFLAG
//    <name> THRESHOLDFLAG </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x40081080) Buffer Threshold Flag </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF2_STATUS ) </loc>
//      <o.20..20> THRESHOLDFLAG
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF2_STATUS  --------------------------------
// SVD Line: 76131

//  <rtree> SFDITEM_REG__BUFC_BUF2_STATUS
//    <name> BUF2_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40081080) BUF2_STATUS </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_STATUS_BYTES </item>
//    <item> SFDITEM_FIELD__BUFC_BUF2_STATUS_THRESHOLDFLAG </item>
//  </rtree>
//  


// ----------------------  Register Item Address: BUFC_BUF2_THRESHOLDCTR  -------------------------
// SVD Line: 76156

unsigned int BUFC_BUF2_THRESHOLDCTR __AT (0x40081084);



// ----------------------  Field Item: BUFC_BUF2_THRESHOLDCTR_THRESHOLD  --------------------------
// SVD Line: 76165

//  <item> SFDITEM_FIELD__BUFC_BUF2_THRESHOLDCTR_THRESHOLD
//    <name> THRESHOLD </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40081084) Buffer Threshold Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF2_THRESHOLDCTR >> 0) & 0xFFF), ((BUFC_BUF2_THRESHOLDCTR = (BUFC_BUF2_THRESHOLDCTR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: BUFC_BUF2_THRESHOLDCTR_THRESHOLDMODE  ------------------------
// SVD Line: 76172

//  <item> SFDITEM_FIELD__BUFC_BUF2_THRESHOLDCTR_THRESHOLDMODE
//    <name> THRESHOLDMODE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40081084) \nBuffer Threshold Mode\n0 : LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD\n1 : LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF2_THRESHOLDCTR ) </loc>
//      <o.13..13> THRESHOLDMODE
//        <0=> 0: LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD
//        <1=> 1: LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: BUFC_BUF2_THRESHOLDCTR  -----------------------------
// SVD Line: 76156

//  <rtree> SFDITEM_REG__BUFC_BUF2_THRESHOLDCTR
//    <name> BUF2_THRESHOLDCTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081084) BUF2_THRESHOLDCTR </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_THRESHOLDCTR >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_THRESHOLDCTR = (BUFC_BUF2_THRESHOLDCTR & ~(0x2FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_THRESHOLDCTR_THRESHOLD </item>
//    <item> SFDITEM_FIELD__BUFC_BUF2_THRESHOLDCTR_THRESHOLDMODE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF2_CMD  ------------------------------
// SVD Line: 76193

unsigned int BUFC_BUF2_CMD __AT (0x40081088);



// -----------------------------  Field Item: BUFC_BUF2_CMD_CLEAR  --------------------------------
// SVD Line: 76202

//  <item> SFDITEM_FIELD__BUFC_BUF2_CMD_CLEAR
//    <name> CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40081088) Buffer Clear </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF2_CMD ) </loc>
//      <o.0..0> CLEAR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: BUFC_BUF2_CMD_PREFETCH  -------------------------------
// SVD Line: 76209

//  <item> SFDITEM_FIELD__BUFC_BUF2_CMD_PREFETCH
//    <name> PREFETCH </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40081088) Prefetch </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF2_CMD ) </loc>
//      <o.1..1> PREFETCH
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BUFC_BUF2_CMD  ---------------------------------
// SVD Line: 76193

//  <rtree> SFDITEM_REG__BUFC_BUF2_CMD
//    <name> BUF2_CMD </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40081088) BUF2_CMD </i>
//    <loc> ( (unsigned int)((BUFC_BUF2_CMD >> 0) & 0xFFFFFFFF), ((BUFC_BUF2_CMD = (BUFC_BUF2_CMD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF2_CMD_CLEAR </item>
//    <item> SFDITEM_FIELD__BUFC_BUF2_CMD_PREFETCH </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF3_CTRL  -----------------------------
// SVD Line: 76218

unsigned int BUFC_BUF3_CTRL __AT (0x40081090);



// -----------------------------  Field Item: BUFC_BUF3_CTRL_SIZE  --------------------------------
// SVD Line: 76227

//  <item> SFDITEM_FIELD__BUFC_BUF3_CTRL_SIZE
//    <name> SIZE </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40081090) \nBuffer Size\n0 : SIZE64 = Sets Buffer size to 64 bytes\n1 : SIZE128 = Sets Buffer size to 128 bytes\n2 : SIZE256 = Sets Buffer size to 256 bytes\n3 : SIZE512 = Sets Buffer size to 512 bytes\n4 : SIZE1024 = Sets Buffer size to 1024 bytes\n5 : SIZE2048 = Sets Buffer size to 2048 bytes\n6 : SIZE4096 = Sets Buffer size to 4096 bytes\n7 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF3_CTRL ) </loc>
//      <o.2..0> SIZE
//        <0=> 0: SIZE64 = Sets Buffer size to 64 bytes
//        <1=> 1: SIZE128 = Sets Buffer size to 128 bytes
//        <2=> 2: SIZE256 = Sets Buffer size to 256 bytes
//        <3=> 3: SIZE512 = Sets Buffer size to 512 bytes
//        <4=> 4: SIZE1024 = Sets Buffer size to 1024 bytes
//        <5=> 5: SIZE2048 = Sets Buffer size to 2048 bytes
//        <6=> 6: SIZE4096 = Sets Buffer size to 4096 bytes
//        <7=> 7: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF3_CTRL  ---------------------------------
// SVD Line: 76218

//  <rtree> SFDITEM_REG__BUFC_BUF3_CTRL
//    <name> BUF3_CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081090) BUF3_CTRL </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_CTRL >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_CTRL = (BUFC_BUF3_CTRL & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_CTRL_SIZE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF3_ADDR  -----------------------------
// SVD Line: 76273

unsigned int BUFC_BUF3_ADDR __AT (0x40081094);



// -----------------------------  Field Item: BUFC_BUF3_ADDR_ADDR  --------------------------------
// SVD Line: 76282

//  <item> SFDITEM_FIELD__BUFC_BUF3_ADDR_ADDR
//    <name> ADDR </name>
//    <rw> 
//    <i> [Bits 23..0] RW (@ 0x40081094) Buffer Address </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF3_ADDR >> 0) & 0xFFFFFF), ((BUFC_BUF3_ADDR = (BUFC_BUF3_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: BUFC_BUF3_ADDR  ---------------------------------
// SVD Line: 76273

//  <rtree> SFDITEM_REG__BUFC_BUF3_ADDR
//    <name> BUF3_ADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081094) BUF3_ADDR </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_ADDR >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_ADDR = (BUFC_BUF3_ADDR & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_ADDR_ADDR </item>
//  </rtree>
//  


// ----------------------  Register Item Address: BUFC_BUF3_WRITEOFFSET  --------------------------
// SVD Line: 76291

unsigned int BUFC_BUF3_WRITEOFFSET __AT (0x40081098);



// ----------------------  Field Item: BUFC_BUF3_WRITEOFFSET_WRITEOFFSET  -------------------------
// SVD Line: 76300

//  <item> SFDITEM_FIELD__BUFC_BUF3_WRITEOFFSET_WRITEOFFSET
//    <name> WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x40081098) Write Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF3_WRITEOFFSET >> 0) & 0x1FFF), ((BUFC_BUF3_WRITEOFFSET = (BUFC_BUF3_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF3_WRITEOFFSET  -----------------------------
// SVD Line: 76291

//  <rtree> SFDITEM_REG__BUFC_BUF3_WRITEOFFSET
//    <name> BUF3_WRITEOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40081098) BUF3_WRITEOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_WRITEOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_WRITEOFFSET = (BUFC_BUF3_WRITEOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_WRITEOFFSET_WRITEOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF3_READOFFSET  --------------------------
// SVD Line: 76309

unsigned int BUFC_BUF3_READOFFSET __AT (0x4008109C);



// -----------------------  Field Item: BUFC_BUF3_READOFFSET_READOFFSET  --------------------------
// SVD Line: 76318

//  <item> SFDITEM_FIELD__BUFC_BUF3_READOFFSET_READOFFSET
//    <name> READOFFSET </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x4008109C) Read Offset </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF3_READOFFSET >> 0) & 0x1FFF), ((BUFC_BUF3_READOFFSET = (BUFC_BUF3_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF3_READOFFSET  ------------------------------
// SVD Line: 76309

//  <rtree> SFDITEM_REG__BUFC_BUF3_READOFFSET
//    <name> BUF3_READOFFSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4008109C) BUF3_READOFFSET </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_READOFFSET >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_READOFFSET = (BUFC_BUF3_READOFFSET & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_READOFFSET_READOFFSET </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF3_WRITESTART  --------------------------
// SVD Line: 76327

unsigned int BUFC_BUF3_WRITESTART __AT (0x400810A0);



// -----------------------  Field Item: BUFC_BUF3_WRITESTART_WRITESTART  --------------------------
// SVD Line: 76336

//  <item> SFDITEM_FIELD__BUFC_BUF3_WRITESTART_WRITESTART
//    <name> WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810A0) WRITESTART </i>
//    <edit> 
//      <loc> ( (unsigned int)((BUFC_BUF3_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_WRITESTART = (BUFC_BUF3_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: BUFC_BUF3_WRITESTART  ------------------------------
// SVD Line: 76327

//  <rtree> SFDITEM_REG__BUFC_BUF3_WRITESTART
//    <name> BUF3_WRITESTART </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810A0) BUF3_WRITESTART </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_WRITESTART >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_WRITESTART = (BUFC_BUF3_WRITESTART & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_WRITESTART_WRITESTART </item>
//  </rtree>
//  


// ------------------------  Register Item Address: BUFC_BUF3_READDATA  ---------------------------
// SVD Line: 76345

unsigned int BUFC_BUF3_READDATA __AT (0x400810A4);



// -------------------------  Field Item: BUFC_BUF3_READDATA_READDATA  ----------------------------
// SVD Line: 76354

//  <item> SFDITEM_FIELD__BUFC_BUF3_READDATA_READDATA
//    <name> READDATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x400810A4) Buffer Read Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF3_READDATA >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF3_READDATA  -------------------------------
// SVD Line: 76345

//  <rtree> SFDITEM_REG__BUFC_BUF3_READDATA
//    <name> BUF3_READDATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400810A4) BUF3_READDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_READDATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_READDATA_READDATA </item>
//  </rtree>
//  


// -----------------------  Register Item Address: BUFC_BUF3_WRITEDATA  ---------------------------
// SVD Line: 76363

unsigned int BUFC_BUF3_WRITEDATA __AT (0x400810A8);



// ------------------------  Field Item: BUFC_BUF3_WRITEDATA_WRITEDATA  ---------------------------
// SVD Line: 76372

//  <item> SFDITEM_FIELD__BUFC_BUF3_WRITEDATA_WRITEDATA
//    <name> WRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x400810A8) Buffer Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF3_WRITEDATA >> 0) & 0x0), ((BUFC_BUF3_WRITEDATA = (BUFC_BUF3_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: BUFC_BUF3_WRITEDATA  ------------------------------
// SVD Line: 76363

//  <rtree> SFDITEM_REG__BUFC_BUF3_WRITEDATA
//    <name> BUF3_WRITEDATA </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400810A8) BUF3_WRITEDATA </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_WRITEDATA >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_WRITEDATA = (BUFC_BUF3_WRITEDATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_WRITEDATA_WRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF3_XWRITE  ----------------------------
// SVD Line: 76381

unsigned int BUFC_BUF3_XWRITE __AT (0x400810AC);



// ------------------------  Field Item: BUFC_BUF3_XWRITE_XORWRITEDATA  ---------------------------
// SVD Line: 76390

//  <item> SFDITEM_FIELD__BUFC_BUF3_XWRITE_XORWRITEDATA
//    <name> XORWRITEDATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x400810AC) Buffer XOR Write Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((BUFC_BUF3_XWRITE >> 0) & 0x0), ((BUFC_BUF3_XWRITE = (BUFC_BUF3_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF3_XWRITE  --------------------------------
// SVD Line: 76381

//  <rtree> SFDITEM_REG__BUFC_BUF3_XWRITE
//    <name> BUF3_XWRITE </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400810AC) BUF3_XWRITE </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_XWRITE >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_XWRITE = (BUFC_BUF3_XWRITE & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_XWRITE_XORWRITEDATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: BUFC_BUF3_STATUS  ----------------------------
// SVD Line: 76399

unsigned int BUFC_BUF3_STATUS __AT (0x400810B0);



// ---------------------------  Field Item: BUFC_BUF3_STATUS_BYTES  -------------------------------
// SVD Line: 76408

//  <item> SFDITEM_FIELD__BUFC_BUF3_STATUS_BYTES
//    <name> BYTES </name>
//    <r> 
//    <i> [Bits 12..0] RO (@ 0x400810B0) Number of Bytes in the Buffer </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF3_STATUS >> 0) & 0x1FFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: BUFC_BUF3_STATUS_THRESHOLDFLAG  ---------------------------
// SVD Line: 76415

//  <item> SFDITEM_FIELD__BUFC_BUF3_STATUS_THRESHOLDFLAG
//    <name> THRESHOLDFLAG </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x400810B0) Buffer Threshold Flag </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF3_STATUS ) </loc>
//      <o.20..20> THRESHOLDFLAG
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: BUFC_BUF3_STATUS  --------------------------------
// SVD Line: 76399

//  <rtree> SFDITEM_REG__BUFC_BUF3_STATUS
//    <name> BUF3_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400810B0) BUF3_STATUS </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_STATUS_BYTES </item>
//    <item> SFDITEM_FIELD__BUFC_BUF3_STATUS_THRESHOLDFLAG </item>
//  </rtree>
//  


// ---------------------  Register Item Address: BUFC_BUF3_THRESHOLDCTRL  -------------------------
// SVD Line: 76424

unsigned int BUFC_BUF3_THRESHOLDCTRL __AT (0x400810B4);



// ----------------------  Field Item: BUFC_BUF3_THRESHOLDCTRL_THRESHOLD  -------------------------
// SVD Line: 76433

//  <item> SFDITEM_FIELD__BUFC_BUF3_THRESHOLDCTRL_THRESHOLD
//    <name> THRESHOLD </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x400810B4) Buffer Threshold Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BUFC_BUF3_THRESHOLDCTRL >> 0) & 0xFFF), ((BUFC_BUF3_THRESHOLDCTRL = (BUFC_BUF3_THRESHOLDCTRL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Field Item: BUFC_BUF3_THRESHOLDCTRL_THRESHOLDMODE  -----------------------
// SVD Line: 76440

//  <item> SFDITEM_FIELD__BUFC_BUF3_THRESHOLDCTRL_THRESHOLDMODE
//    <name> THRESHOLDMODE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400810B4) \nBuffer Threshold Mode\n0 : LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD\n1 : LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD </i>
//    <combo> 
//      <loc> ( (unsigned int) BUFC_BUF3_THRESHOLDCTRL ) </loc>
//      <o.13..13> THRESHOLDMODE
//        <0=> 0: LARGER = THRESHOLDIF will be set if BYTES is larger than THRESHOLD
//        <1=> 1: LESSOREQUAL = THRESHOLDIF will be set if BYTES is less than or equal to THRESHOLD
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: BUFC_BUF3_THRESHOLDCTRL  ----------------------------
// SVD Line: 76424

//  <rtree> SFDITEM_REG__BUFC_BUF3_THRESHOLDCTRL
//    <name> BUF3_THRESHOLDCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810B4) BUF3_THRESHOLDCTRL </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_THRESHOLDCTRL >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_THRESHOLDCTRL = (BUFC_BUF3_THRESHOLDCTRL & ~(0x2FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_THRESHOLDCTRL_THRESHOLD </item>
//    <item> SFDITEM_FIELD__BUFC_BUF3_THRESHOLDCTRL_THRESHOLDMODE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BUFC_BUF3_CMD  ------------------------------
// SVD Line: 76461

unsigned int BUFC_BUF3_CMD __AT (0x400810B8);



// -----------------------------  Field Item: BUFC_BUF3_CMD_CLEAR  --------------------------------
// SVD Line: 76473

//  <item> SFDITEM_FIELD__BUFC_BUF3_CMD_CLEAR
//    <name> CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x400810B8) Buffer Clear </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF3_CMD ) </loc>
//      <o.0..0> CLEAR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: BUFC_BUF3_CMD_PREFETCH  -------------------------------
// SVD Line: 76480

//  <item> SFDITEM_FIELD__BUFC_BUF3_CMD_PREFETCH
//    <name> PREFETCH </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x400810B8) Prefetch </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_BUF3_CMD ) </loc>
//      <o.1..1> PREFETCH
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BUFC_BUF3_CMD  ---------------------------------
// SVD Line: 76461

//  <rtree> SFDITEM_REG__BUFC_BUF3_CMD
//    <name> BUF3_CMD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810B8) BUF3_CMD </i>
//    <loc> ( (unsigned int)((BUFC_BUF3_CMD >> 0) & 0xFFFFFFFF), ((BUFC_BUF3_CMD = (BUFC_BUF3_CMD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_BUF3_CMD_CLEAR </item>
//    <item> SFDITEM_FIELD__BUFC_BUF3_CMD_PREFETCH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: BUFC_IF  ---------------------------------
// SVD Line: 76489

unsigned int BUFC_IF __AT (0x400810E0);



// -------------------------------  Field Item: BUFC_IF_BUF0OF  -----------------------------------
// SVD Line: 76498

//  <item> SFDITEM_FIELD__BUFC_IF_BUF0OF
//    <name> BUF0OF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400810E0) Buffer 0 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.0..0> BUF0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF0UF  -----------------------------------
// SVD Line: 76505

//  <item> SFDITEM_FIELD__BUFC_IF_BUF0UF
//    <name> BUF0UF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400810E0) Buffer 0 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.1..1> BUF0UF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF0THR  ----------------------------------
// SVD Line: 76512

//  <item> SFDITEM_FIELD__BUFC_IF_BUF0THR
//    <name> BUF0THR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400810E0) Buffer 0 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.2..2> BUF0THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IF_BUF0CORR  ----------------------------------
// SVD Line: 76519

//  <item> SFDITEM_FIELD__BUFC_IF_BUF0CORR
//    <name> BUF0CORR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400810E0) Buffer 0 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.3..3> BUF0CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF1OF  -----------------------------------
// SVD Line: 76526

//  <item> SFDITEM_FIELD__BUFC_IF_BUF1OF
//    <name> BUF1OF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400810E0) Buffer 1 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.8..8> BUF1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF1UF  -----------------------------------
// SVD Line: 76533

//  <item> SFDITEM_FIELD__BUFC_IF_BUF1UF
//    <name> BUF1UF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400810E0) Buffer 1 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.9..9> BUF1UF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF1THR  ----------------------------------
// SVD Line: 76540

//  <item> SFDITEM_FIELD__BUFC_IF_BUF1THR
//    <name> BUF1THR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400810E0) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.10..10> BUF1THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IF_BUF1CORR  ----------------------------------
// SVD Line: 76547

//  <item> SFDITEM_FIELD__BUFC_IF_BUF1CORR
//    <name> BUF1CORR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400810E0) Buffer 1 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.11..11> BUF1CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF2OF  -----------------------------------
// SVD Line: 76554

//  <item> SFDITEM_FIELD__BUFC_IF_BUF2OF
//    <name> BUF2OF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400810E0) Buffer 2 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.16..16> BUF2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF2UF  -----------------------------------
// SVD Line: 76561

//  <item> SFDITEM_FIELD__BUFC_IF_BUF2UF
//    <name> BUF2UF </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400810E0) Buffer 2 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.17..17> BUF2UF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF2THR  ----------------------------------
// SVD Line: 76568

//  <item> SFDITEM_FIELD__BUFC_IF_BUF2THR
//    <name> BUF2THR </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400810E0) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.18..18> BUF2THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IF_BUF2CORR  ----------------------------------
// SVD Line: 76575

//  <item> SFDITEM_FIELD__BUFC_IF_BUF2CORR
//    <name> BUF2CORR </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400810E0) Buffer 2 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.19..19> BUF2CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF3OF  -----------------------------------
// SVD Line: 76582

//  <item> SFDITEM_FIELD__BUFC_IF_BUF3OF
//    <name> BUF3OF </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400810E0) Buffer 3 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.24..24> BUF3OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF3UF  -----------------------------------
// SVD Line: 76589

//  <item> SFDITEM_FIELD__BUFC_IF_BUF3UF
//    <name> BUF3UF </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400810E0) Buffer 3 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.25..25> BUF3UF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IF_BUF3THR  ----------------------------------
// SVD Line: 76596

//  <item> SFDITEM_FIELD__BUFC_IF_BUF3THR
//    <name> BUF3THR </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400810E0) Buffer 3 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.26..26> BUF3THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IF_BUF3CORR  ----------------------------------
// SVD Line: 76603

//  <item> SFDITEM_FIELD__BUFC_IF_BUF3CORR
//    <name> BUF3CORR </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400810E0) Buffer 3 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.27..27> BUF3CORR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IF_BUSERROR  ----------------------------------
// SVD Line: 76610

//  <item> SFDITEM_FIELD__BUFC_IF_BUSERROR
//    <name> BUSERROR </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400810E0) Bus Error </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IF ) </loc>
//      <o.31..31> BUSERROR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: BUFC_IF  ------------------------------------
// SVD Line: 76489

//  <rtree> SFDITEM_REG__BUFC_IF
//    <name> IF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810E0) IF </i>
//    <loc> ( (unsigned int)((BUFC_IF >> 0) & 0xFFFFFFFF), ((BUFC_IF = (BUFC_IF & ~(0x8F0F0F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F0F0F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF0OF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF0UF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF0THR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF0CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF1OF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF1UF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF1THR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF1CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF2OF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF2UF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF2THR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF2CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF3OF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF3UF </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF3THR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUF3CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IF_BUSERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: BUFC_IFS  --------------------------------
// SVD Line: 76619

unsigned int BUFC_IFS __AT (0x400810E4);



// -------------------------------  Field Item: BUFC_IFS_BUF0OF  ----------------------------------
// SVD Line: 76628

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF0OF
//    <name> BUF0OF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400810E4) Buffer 0 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.0..0> BUF0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFS_BUF0UF  ----------------------------------
// SVD Line: 76635

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF0UF
//    <name> BUF0UF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400810E4) Buffer 0 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.1..1> BUF0UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF0THR  ----------------------------------
// SVD Line: 76642

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF0THR
//    <name> BUF0THR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400810E4) Buffer 0 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.2..2> BUF0THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF0CORR  ---------------------------------
// SVD Line: 76649

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF0CORR
//    <name> BUF0CORR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400810E4) Buffer 0 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.3..3> BUF0CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFS_BUF1OF  ----------------------------------
// SVD Line: 76656

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF1OF
//    <name> BUF1OF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400810E4) Buffer 1 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.8..8> BUF1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFS_BUF1UF  ----------------------------------
// SVD Line: 76663

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF1UF
//    <name> BUF1UF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400810E4) Buffer 1 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.9..9> BUF1UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF1THR  ----------------------------------
// SVD Line: 76670

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF1THR
//    <name> BUF1THR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400810E4) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.10..10> BUF1THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF1CORR  ---------------------------------
// SVD Line: 76677

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF1CORR
//    <name> BUF1CORR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400810E4) Buffer 1 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.11..11> BUF1CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFS_BUF2OF  ----------------------------------
// SVD Line: 76684

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF2OF
//    <name> BUF2OF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400810E4) Buffer 2 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.16..16> BUF2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFS_BUF2UF  ----------------------------------
// SVD Line: 76691

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF2UF
//    <name> BUF2UF </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400810E4) Buffer 2 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.17..17> BUF2UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF2THR  ----------------------------------
// SVD Line: 76698

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF2THR
//    <name> BUF2THR </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400810E4) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.18..18> BUF2THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF2CORR  ---------------------------------
// SVD Line: 76705

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF2CORR
//    <name> BUF2CORR </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400810E4) Buffer 2 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.19..19> BUF2CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFS_BUF3OF  ----------------------------------
// SVD Line: 76712

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF3OF
//    <name> BUF3OF </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400810E4) Buffer 3 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.24..24> BUF3OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFS_BUF3UF  ----------------------------------
// SVD Line: 76719

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF3UF
//    <name> BUF3UF </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400810E4) Buffer 3 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.25..25> BUF3UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF3THR  ----------------------------------
// SVD Line: 76726

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF3THR
//    <name> BUF3THR </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400810E4) Buffer 3 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.26..26> BUF3THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUF3CORR  ---------------------------------
// SVD Line: 76733

//  <item> SFDITEM_FIELD__BUFC_IFS_BUF3CORR
//    <name> BUF3CORR </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400810E4) Buffer 3 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.27..27> BUF3CORR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFS_BUSERROR  ---------------------------------
// SVD Line: 76740

//  <item> SFDITEM_FIELD__BUFC_IFS_BUSERROR
//    <name> BUSERROR </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400810E4) Bus Error </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFS ) </loc>
//      <o.31..31> BUSERROR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: BUFC_IFS  ------------------------------------
// SVD Line: 76619

//  <rtree> SFDITEM_REG__BUFC_IFS
//    <name> IFS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810E4) IFS </i>
//    <loc> ( (unsigned int)((BUFC_IFS >> 0) & 0xFFFFFFFF), ((BUFC_IFS = (BUFC_IFS & ~(0x8F0F0F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F0F0F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF0OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF0UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF0THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF0CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF1OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF1UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF1THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF1CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF2OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF2UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF2THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF2CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF3OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF3UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF3THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUF3CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFS_BUSERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: BUFC_IFC  --------------------------------
// SVD Line: 76749

unsigned int BUFC_IFC __AT (0x400810E8);



// -------------------------------  Field Item: BUFC_IFC_BUF0OF  ----------------------------------
// SVD Line: 76758

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF0OF
//    <name> BUF0OF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400810E8) Buffer 0 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.0..0> BUF0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFC_BUF0UF  ----------------------------------
// SVD Line: 76765

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF0UF
//    <name> BUF0UF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400810E8) Buffer 0 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.1..1> BUF0UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF0THR  ----------------------------------
// SVD Line: 76772

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF0THR
//    <name> BUF0THR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400810E8) Buffer 0 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.2..2> BUF0THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF0CORR  ---------------------------------
// SVD Line: 76779

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF0CORR
//    <name> BUF0CORR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400810E8) Buffer 0 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.3..3> BUF0CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFC_BUF1OF  ----------------------------------
// SVD Line: 76786

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF1OF
//    <name> BUF1OF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400810E8) Buffer 1 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.8..8> BUF1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFC_BUF1UF  ----------------------------------
// SVD Line: 76793

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF1UF
//    <name> BUF1UF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400810E8) Buffer 1 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.9..9> BUF1UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF1THR  ----------------------------------
// SVD Line: 76800

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF1THR
//    <name> BUF1THR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400810E8) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.10..10> BUF1THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF1CORR  ---------------------------------
// SVD Line: 76807

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF1CORR
//    <name> BUF1CORR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400810E8) Buffer 1 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.11..11> BUF1CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFC_BUF2OF  ----------------------------------
// SVD Line: 76814

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF2OF
//    <name> BUF2OF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400810E8) Buffer 2 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.16..16> BUF2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFC_BUF2UF  ----------------------------------
// SVD Line: 76821

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF2UF
//    <name> BUF2UF </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400810E8) Buffer 2 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.17..17> BUF2UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF2THR  ----------------------------------
// SVD Line: 76828

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF2THR
//    <name> BUF2THR </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400810E8) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.18..18> BUF2THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF2CORR  ---------------------------------
// SVD Line: 76835

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF2CORR
//    <name> BUF2CORR </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400810E8) Buffer 2 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.19..19> BUF2CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFC_BUF3OF  ----------------------------------
// SVD Line: 76842

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF3OF
//    <name> BUF3OF </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400810E8) Buffer 3 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.24..24> BUF3OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IFC_BUF3UF  ----------------------------------
// SVD Line: 76849

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF3UF
//    <name> BUF3UF </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400810E8) Buffer 3 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.25..25> BUF3UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF3THR  ----------------------------------
// SVD Line: 76856

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF3THR
//    <name> BUF3THR </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400810E8) Buffer 3 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.26..26> BUF3THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUF3CORR  ---------------------------------
// SVD Line: 76863

//  <item> SFDITEM_FIELD__BUFC_IFC_BUF3CORR
//    <name> BUF3CORR </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400810E8) Buffer 3 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.27..27> BUF3CORR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IFC_BUSERROR  ---------------------------------
// SVD Line: 76870

//  <item> SFDITEM_FIELD__BUFC_IFC_BUSERROR
//    <name> BUSERROR </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400810E8) Bus Error </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IFC ) </loc>
//      <o.31..31> BUSERROR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: BUFC_IFC  ------------------------------------
// SVD Line: 76749

//  <rtree> SFDITEM_REG__BUFC_IFC
//    <name> IFC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810E8) IFC </i>
//    <loc> ( (unsigned int)((BUFC_IFC >> 0) & 0xFFFFFFFF), ((BUFC_IFC = (BUFC_IFC & ~(0x8F0F0F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F0F0F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF0OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF0UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF0THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF0CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF1OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF1UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF1THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF1CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF2OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF2UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF2THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF2CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF3OF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF3UF </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF3THR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUF3CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IFC_BUSERROR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: BUFC_IEN  --------------------------------
// SVD Line: 76879

unsigned int BUFC_IEN __AT (0x400810EC);



// -------------------------------  Field Item: BUFC_IEN_BUF0OF  ----------------------------------
// SVD Line: 76888

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF0OF
//    <name> BUF0OF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400810EC) Buffer 0 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.0..0> BUF0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IEN_BUF0UF  ----------------------------------
// SVD Line: 76895

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF0UF
//    <name> BUF0UF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400810EC) Buffer 0 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.1..1> BUF0UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF0THR  ----------------------------------
// SVD Line: 76902

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF0THR
//    <name> BUF0THR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400810EC) Buffer 0 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.2..2> BUF0THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF0CORR  ---------------------------------
// SVD Line: 76909

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF0CORR
//    <name> BUF0CORR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400810EC) Buffer 0 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.3..3> BUF0CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IEN_BUF1OF  ----------------------------------
// SVD Line: 76916

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF1OF
//    <name> BUF1OF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400810EC) Buffer 1 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.8..8> BUF1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IEN_BUF1UF  ----------------------------------
// SVD Line: 76923

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF1UF
//    <name> BUF1UF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400810EC) Buffer 1 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.9..9> BUF1UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF1THR  ----------------------------------
// SVD Line: 76930

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF1THR
//    <name> BUF1THR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400810EC) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.10..10> BUF1THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF1CORR  ---------------------------------
// SVD Line: 76937

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF1CORR
//    <name> BUF1CORR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400810EC) Buffer 1 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.11..11> BUF1CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IEN_BUF2OF  ----------------------------------
// SVD Line: 76944

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF2OF
//    <name> BUF2OF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400810EC) Buffer 2 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.16..16> BUF2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IEN_BUF2UF  ----------------------------------
// SVD Line: 76951

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF2UF
//    <name> BUF2UF </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400810EC) Buffer 2 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.17..17> BUF2UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF2THR  ----------------------------------
// SVD Line: 76958

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF2THR
//    <name> BUF2THR </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400810EC) Buffer 2 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.18..18> BUF2THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF2CORR  ---------------------------------
// SVD Line: 76965

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF2CORR
//    <name> BUF2CORR </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400810EC) Buffer 2 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.19..19> BUF2CORR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IEN_BUF3OF  ----------------------------------
// SVD Line: 76972

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF3OF
//    <name> BUF3OF </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400810EC) Buffer 3 Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.24..24> BUF3OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: BUFC_IEN_BUF3UF  ----------------------------------
// SVD Line: 76979

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF3UF
//    <name> BUF3UF </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400810EC) Buffer 3 Underflow </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.25..25> BUF3UF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF3THR  ----------------------------------
// SVD Line: 76986

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF3THR
//    <name> BUF3THR </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400810EC) Buffer 3 Threshold Event </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.26..26> BUF3THR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUF3CORR  ---------------------------------
// SVD Line: 76993

//  <item> SFDITEM_FIELD__BUFC_IEN_BUF3CORR
//    <name> BUF3CORR </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400810EC) Buffer 3 Corrupt </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.27..27> BUF3CORR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BUFC_IEN_BUSERROR  ---------------------------------
// SVD Line: 77000

//  <item> SFDITEM_FIELD__BUFC_IEN_BUSERROR
//    <name> BUSERROR </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400810EC) Bus Error </i>
//    <check> 
//      <loc> ( (unsigned int) BUFC_IEN ) </loc>
//      <o.31..31> BUSERROR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: BUFC_IEN  ------------------------------------
// SVD Line: 76879

//  <rtree> SFDITEM_REG__BUFC_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400810EC) IEN </i>
//    <loc> ( (unsigned int)((BUFC_IEN >> 0) & 0xFFFFFFFF), ((BUFC_IEN = (BUFC_IEN & ~(0x8F0F0F0FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F0F0F0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF0OF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF0UF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF0THR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF0CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF1OF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF1UF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF1THR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF1CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF2OF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF2UF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF2THR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF2CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF3OF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF3UF </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF3THR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUF3CORR </item>
//    <item> SFDITEM_FIELD__BUFC_IEN_BUSERROR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: BUFC  -------------------------------------
// SVD Line: 75400

//  <view> BUFC
//    <name> BUFC </name>
//    <item> SFDITEM_REG__BUFC_BUF0_CTRL </item>
//    <item> SFDITEM_REG__BUFC_BUF0_ADDR </item>
//    <item> SFDITEM_REG__BUFC_BUF0_WRITEOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF0_READOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF0_WRITESTART </item>
//    <item> SFDITEM_REG__BUFC_BUF0_READDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF0_WRITEDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF0_XWRITE </item>
//    <item> SFDITEM_REG__BUFC_BUF0_STATUS </item>
//    <item> SFDITEM_REG__BUFC_BUF0_THRESHOLDCTRL </item>
//    <item> SFDITEM_REG__BUFC_BUF0_CMD </item>
//    <item> SFDITEM_REG__BUFC_BUF1_CTRL </item>
//    <item> SFDITEM_REG__BUFC_BUF1_ADDR </item>
//    <item> SFDITEM_REG__BUFC_BUF1_WRITEOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF1_READOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF1_WRITESTART </item>
//    <item> SFDITEM_REG__BUFC_BUF1_READDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF1_WRITEDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF1_XWRITE </item>
//    <item> SFDITEM_REG__BUFC_BUF1_STATUS </item>
//    <item> SFDITEM_REG__BUFC_BUF1_THRESHOLDCTRL </item>
//    <item> SFDITEM_REG__BUFC_BUF1_CMD </item>
//    <item> SFDITEM_REG__BUFC_BUF2_CTRL </item>
//    <item> SFDITEM_REG__BUFC_BUF2_ADDR </item>
//    <item> SFDITEM_REG__BUFC_BUF2_WRITEOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF2_READOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF2_WRITESTART </item>
//    <item> SFDITEM_REG__BUFC_BUF2_READDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF2_WRITEDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF2_XWRITE </item>
//    <item> SFDITEM_REG__BUFC_BUF2_STATUS </item>
//    <item> SFDITEM_REG__BUFC_BUF2_THRESHOLDCTR </item>
//    <item> SFDITEM_REG__BUFC_BUF2_CMD </item>
//    <item> SFDITEM_REG__BUFC_BUF3_CTRL </item>
//    <item> SFDITEM_REG__BUFC_BUF3_ADDR </item>
//    <item> SFDITEM_REG__BUFC_BUF3_WRITEOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF3_READOFFSET </item>
//    <item> SFDITEM_REG__BUFC_BUF3_WRITESTART </item>
//    <item> SFDITEM_REG__BUFC_BUF3_READDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF3_WRITEDATA </item>
//    <item> SFDITEM_REG__BUFC_BUF3_XWRITE </item>
//    <item> SFDITEM_REG__BUFC_BUF3_STATUS </item>
//    <item> SFDITEM_REG__BUFC_BUF3_THRESHOLDCTRL </item>
//    <item> SFDITEM_REG__BUFC_BUF3_CMD </item>
//    <item> SFDITEM_REG__BUFC_IF </item>
//    <item> SFDITEM_REG__BUFC_IFS </item>
//    <item> SFDITEM_REG__BUFC_IFC </item>
//    <item> SFDITEM_REG__BUFC_IEN </item>
//  </view>
//  


// ----------------------------  Register Item Address: SEQ_REG000  -------------------------------
// SVD Line: 77021

unsigned int SEQ_REG000 __AT (0x21000F00);



// -----------------------------  Field Item: SEQ_REG000_ADDRESS  ---------------------------------
// SVD Line: 77030

//  <item> SFDITEM_FIELD__SEQ_REG000_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F00) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG000 >> 0) & 0xFFFFFFFF), ((SEQ_REG000 = (SEQ_REG000 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG000  -----------------------------------
// SVD Line: 77021

//  <rtree> SFDITEM_REG__SEQ_REG000
//    <name> REG000 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F00) REG000 </i>
//    <loc> ( (unsigned int)((SEQ_REG000 >> 0) & 0xFFFFFFFF), ((SEQ_REG000 = (SEQ_REG000 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG000_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG004  -------------------------------
// SVD Line: 77039

unsigned int SEQ_REG004 __AT (0x21000F04);



// -----------------------------  Field Item: SEQ_REG004_ADDRESS  ---------------------------------
// SVD Line: 77048

//  <item> SFDITEM_FIELD__SEQ_REG004_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F04) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG004 >> 0) & 0xFFFFFFFF), ((SEQ_REG004 = (SEQ_REG004 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG004  -----------------------------------
// SVD Line: 77039

//  <rtree> SFDITEM_REG__SEQ_REG004
//    <name> REG004 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F04) REG004 </i>
//    <loc> ( (unsigned int)((SEQ_REG004 >> 0) & 0xFFFFFFFF), ((SEQ_REG004 = (SEQ_REG004 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG004_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG008  -------------------------------
// SVD Line: 77057

unsigned int SEQ_REG008 __AT (0x21000F08);



// -----------------------------  Field Item: SEQ_REG008_ADDRESS  ---------------------------------
// SVD Line: 77066

//  <item> SFDITEM_FIELD__SEQ_REG008_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F08) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG008 >> 0) & 0xFFFFFFFF), ((SEQ_REG008 = (SEQ_REG008 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG008  -----------------------------------
// SVD Line: 77057

//  <rtree> SFDITEM_REG__SEQ_REG008
//    <name> REG008 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F08) REG008 </i>
//    <loc> ( (unsigned int)((SEQ_REG008 >> 0) & 0xFFFFFFFF), ((SEQ_REG008 = (SEQ_REG008 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG008_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG00C  -------------------------------
// SVD Line: 77075

unsigned int SEQ_REG00C __AT (0x21000F0C);



// -----------------------------  Field Item: SEQ_REG00C_ADDRESS  ---------------------------------
// SVD Line: 77084

//  <item> SFDITEM_FIELD__SEQ_REG00C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F0C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG00C >> 0) & 0xFFFFFFFF), ((SEQ_REG00C = (SEQ_REG00C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG00C  -----------------------------------
// SVD Line: 77075

//  <rtree> SFDITEM_REG__SEQ_REG00C
//    <name> REG00C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F0C) REG00C </i>
//    <loc> ( (unsigned int)((SEQ_REG00C >> 0) & 0xFFFFFFFF), ((SEQ_REG00C = (SEQ_REG00C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG00C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG010  -------------------------------
// SVD Line: 77093

unsigned int SEQ_REG010 __AT (0x21000F10);



// -----------------------------  Field Item: SEQ_REG010_ADDRESS  ---------------------------------
// SVD Line: 77102

//  <item> SFDITEM_FIELD__SEQ_REG010_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F10) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG010 >> 0) & 0xFFFFFFFF), ((SEQ_REG010 = (SEQ_REG010 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG010  -----------------------------------
// SVD Line: 77093

//  <rtree> SFDITEM_REG__SEQ_REG010
//    <name> REG010 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F10) REG010 </i>
//    <loc> ( (unsigned int)((SEQ_REG010 >> 0) & 0xFFFFFFFF), ((SEQ_REG010 = (SEQ_REG010 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG010_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG014  -------------------------------
// SVD Line: 77111

unsigned int SEQ_REG014 __AT (0x21000F14);



// -----------------------------  Field Item: SEQ_REG014_ADDRESS  ---------------------------------
// SVD Line: 77120

//  <item> SFDITEM_FIELD__SEQ_REG014_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F14) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG014 >> 0) & 0xFFFFFFFF), ((SEQ_REG014 = (SEQ_REG014 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG014  -----------------------------------
// SVD Line: 77111

//  <rtree> SFDITEM_REG__SEQ_REG014
//    <name> REG014 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F14) REG014 </i>
//    <loc> ( (unsigned int)((SEQ_REG014 >> 0) & 0xFFFFFFFF), ((SEQ_REG014 = (SEQ_REG014 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG014_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG018  -------------------------------
// SVD Line: 77129

unsigned int SEQ_REG018 __AT (0x21000F18);



// -----------------------------  Field Item: SEQ_REG018_ADDRESS  ---------------------------------
// SVD Line: 77138

//  <item> SFDITEM_FIELD__SEQ_REG018_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F18) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG018 >> 0) & 0xFFFFFFFF), ((SEQ_REG018 = (SEQ_REG018 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG018  -----------------------------------
// SVD Line: 77129

//  <rtree> SFDITEM_REG__SEQ_REG018
//    <name> REG018 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F18) REG018 </i>
//    <loc> ( (unsigned int)((SEQ_REG018 >> 0) & 0xFFFFFFFF), ((SEQ_REG018 = (SEQ_REG018 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG018_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG01C  -------------------------------
// SVD Line: 77147

unsigned int SEQ_REG01C __AT (0x21000F1C);



// -----------------------------  Field Item: SEQ_REG01C_ADDRESS  ---------------------------------
// SVD Line: 77156

//  <item> SFDITEM_FIELD__SEQ_REG01C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F1C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG01C >> 0) & 0xFFFFFFFF), ((SEQ_REG01C = (SEQ_REG01C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG01C  -----------------------------------
// SVD Line: 77147

//  <rtree> SFDITEM_REG__SEQ_REG01C
//    <name> REG01C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F1C) REG01C </i>
//    <loc> ( (unsigned int)((SEQ_REG01C >> 0) & 0xFFFFFFFF), ((SEQ_REG01C = (SEQ_REG01C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG01C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG020  -------------------------------
// SVD Line: 77165

unsigned int SEQ_REG020 __AT (0x21000F20);



// -----------------------------  Field Item: SEQ_REG020_ADDRESS  ---------------------------------
// SVD Line: 77174

//  <item> SFDITEM_FIELD__SEQ_REG020_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F20) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG020 >> 0) & 0xFFFFFFFF), ((SEQ_REG020 = (SEQ_REG020 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG020  -----------------------------------
// SVD Line: 77165

//  <rtree> SFDITEM_REG__SEQ_REG020
//    <name> REG020 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F20) REG020 </i>
//    <loc> ( (unsigned int)((SEQ_REG020 >> 0) & 0xFFFFFFFF), ((SEQ_REG020 = (SEQ_REG020 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG020_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG024  -------------------------------
// SVD Line: 77183

unsigned int SEQ_REG024 __AT (0x21000F24);



// -----------------------------  Field Item: SEQ_REG024_ADDRESS  ---------------------------------
// SVD Line: 77192

//  <item> SFDITEM_FIELD__SEQ_REG024_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F24) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG024 >> 0) & 0xFFFFFFFF), ((SEQ_REG024 = (SEQ_REG024 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG024  -----------------------------------
// SVD Line: 77183

//  <rtree> SFDITEM_REG__SEQ_REG024
//    <name> REG024 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F24) REG024 </i>
//    <loc> ( (unsigned int)((SEQ_REG024 >> 0) & 0xFFFFFFFF), ((SEQ_REG024 = (SEQ_REG024 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG024_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG028  -------------------------------
// SVD Line: 77201

unsigned int SEQ_REG028 __AT (0x21000F28);



// -----------------------------  Field Item: SEQ_REG028_ADDRESS  ---------------------------------
// SVD Line: 77210

//  <item> SFDITEM_FIELD__SEQ_REG028_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F28) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG028 >> 0) & 0xFFFFFFFF), ((SEQ_REG028 = (SEQ_REG028 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG028  -----------------------------------
// SVD Line: 77201

//  <rtree> SFDITEM_REG__SEQ_REG028
//    <name> REG028 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F28) REG028 </i>
//    <loc> ( (unsigned int)((SEQ_REG028 >> 0) & 0xFFFFFFFF), ((SEQ_REG028 = (SEQ_REG028 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG028_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG02C  -------------------------------
// SVD Line: 77219

unsigned int SEQ_REG02C __AT (0x21000F2C);



// -----------------------------  Field Item: SEQ_REG02C_ADDRESS  ---------------------------------
// SVD Line: 77228

//  <item> SFDITEM_FIELD__SEQ_REG02C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F2C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG02C >> 0) & 0xFFFFFFFF), ((SEQ_REG02C = (SEQ_REG02C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG02C  -----------------------------------
// SVD Line: 77219

//  <rtree> SFDITEM_REG__SEQ_REG02C
//    <name> REG02C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F2C) REG02C </i>
//    <loc> ( (unsigned int)((SEQ_REG02C >> 0) & 0xFFFFFFFF), ((SEQ_REG02C = (SEQ_REG02C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG02C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG030  -------------------------------
// SVD Line: 77237

unsigned int SEQ_REG030 __AT (0x21000F30);



// -----------------------------  Field Item: SEQ_REG030_ADDRESS  ---------------------------------
// SVD Line: 77246

//  <item> SFDITEM_FIELD__SEQ_REG030_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F30) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG030 >> 0) & 0xFFFFFFFF), ((SEQ_REG030 = (SEQ_REG030 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG030  -----------------------------------
// SVD Line: 77237

//  <rtree> SFDITEM_REG__SEQ_REG030
//    <name> REG030 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F30) REG030 </i>
//    <loc> ( (unsigned int)((SEQ_REG030 >> 0) & 0xFFFFFFFF), ((SEQ_REG030 = (SEQ_REG030 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG030_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG034  -------------------------------
// SVD Line: 77255

unsigned int SEQ_REG034 __AT (0x21000F34);



// -----------------------------  Field Item: SEQ_REG034_ADDRESS  ---------------------------------
// SVD Line: 77264

//  <item> SFDITEM_FIELD__SEQ_REG034_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F34) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG034 >> 0) & 0xFFFFFFFF), ((SEQ_REG034 = (SEQ_REG034 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG034  -----------------------------------
// SVD Line: 77255

//  <rtree> SFDITEM_REG__SEQ_REG034
//    <name> REG034 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F34) REG034 </i>
//    <loc> ( (unsigned int)((SEQ_REG034 >> 0) & 0xFFFFFFFF), ((SEQ_REG034 = (SEQ_REG034 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG034_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG038  -------------------------------
// SVD Line: 77273

unsigned int SEQ_REG038 __AT (0x21000F38);



// -----------------------------  Field Item: SEQ_REG038_ADDRESS  ---------------------------------
// SVD Line: 77282

//  <item> SFDITEM_FIELD__SEQ_REG038_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F38) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG038 >> 0) & 0xFFFFFFFF), ((SEQ_REG038 = (SEQ_REG038 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG038  -----------------------------------
// SVD Line: 77273

//  <rtree> SFDITEM_REG__SEQ_REG038
//    <name> REG038 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F38) REG038 </i>
//    <loc> ( (unsigned int)((SEQ_REG038 >> 0) & 0xFFFFFFFF), ((SEQ_REG038 = (SEQ_REG038 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG038_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG03C  -------------------------------
// SVD Line: 77291

unsigned int SEQ_REG03C __AT (0x21000F3C);



// -----------------------------  Field Item: SEQ_REG03C_ADDRESS  ---------------------------------
// SVD Line: 77300

//  <item> SFDITEM_FIELD__SEQ_REG03C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F3C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG03C >> 0) & 0xFFFFFFFF), ((SEQ_REG03C = (SEQ_REG03C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG03C  -----------------------------------
// SVD Line: 77291

//  <rtree> SFDITEM_REG__SEQ_REG03C
//    <name> REG03C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F3C) REG03C </i>
//    <loc> ( (unsigned int)((SEQ_REG03C >> 0) & 0xFFFFFFFF), ((SEQ_REG03C = (SEQ_REG03C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG03C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG040  -------------------------------
// SVD Line: 77309

unsigned int SEQ_REG040 __AT (0x21000F40);



// -----------------------------  Field Item: SEQ_REG040_ADDRESS  ---------------------------------
// SVD Line: 77318

//  <item> SFDITEM_FIELD__SEQ_REG040_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F40) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG040 >> 0) & 0xFFFFFFFF), ((SEQ_REG040 = (SEQ_REG040 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG040  -----------------------------------
// SVD Line: 77309

//  <rtree> SFDITEM_REG__SEQ_REG040
//    <name> REG040 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F40) REG040 </i>
//    <loc> ( (unsigned int)((SEQ_REG040 >> 0) & 0xFFFFFFFF), ((SEQ_REG040 = (SEQ_REG040 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG040_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG044  -------------------------------
// SVD Line: 77327

unsigned int SEQ_REG044 __AT (0x21000F44);



// -----------------------------  Field Item: SEQ_REG044_ADDRESS  ---------------------------------
// SVD Line: 77336

//  <item> SFDITEM_FIELD__SEQ_REG044_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F44) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG044 >> 0) & 0xFFFFFFFF), ((SEQ_REG044 = (SEQ_REG044 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG044  -----------------------------------
// SVD Line: 77327

//  <rtree> SFDITEM_REG__SEQ_REG044
//    <name> REG044 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F44) REG044 </i>
//    <loc> ( (unsigned int)((SEQ_REG044 >> 0) & 0xFFFFFFFF), ((SEQ_REG044 = (SEQ_REG044 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG044_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG048  -------------------------------
// SVD Line: 77345

unsigned int SEQ_REG048 __AT (0x21000F48);



// -----------------------------  Field Item: SEQ_REG048_ADDRESS  ---------------------------------
// SVD Line: 77354

//  <item> SFDITEM_FIELD__SEQ_REG048_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F48) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG048 >> 0) & 0xFFFFFFFF), ((SEQ_REG048 = (SEQ_REG048 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG048  -----------------------------------
// SVD Line: 77345

//  <rtree> SFDITEM_REG__SEQ_REG048
//    <name> REG048 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F48) REG048 </i>
//    <loc> ( (unsigned int)((SEQ_REG048 >> 0) & 0xFFFFFFFF), ((SEQ_REG048 = (SEQ_REG048 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG048_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG04C  -------------------------------
// SVD Line: 77363

unsigned int SEQ_REG04C __AT (0x21000F4C);



// -----------------------------  Field Item: SEQ_REG04C_ADDRESS  ---------------------------------
// SVD Line: 77372

//  <item> SFDITEM_FIELD__SEQ_REG04C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F4C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG04C >> 0) & 0xFFFFFFFF), ((SEQ_REG04C = (SEQ_REG04C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG04C  -----------------------------------
// SVD Line: 77363

//  <rtree> SFDITEM_REG__SEQ_REG04C
//    <name> REG04C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F4C) REG04C </i>
//    <loc> ( (unsigned int)((SEQ_REG04C >> 0) & 0xFFFFFFFF), ((SEQ_REG04C = (SEQ_REG04C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG04C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG050  -------------------------------
// SVD Line: 77381

unsigned int SEQ_REG050 __AT (0x21000F50);



// -----------------------------  Field Item: SEQ_REG050_ADDRESS  ---------------------------------
// SVD Line: 77390

//  <item> SFDITEM_FIELD__SEQ_REG050_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F50) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG050 >> 0) & 0xFFFFFFFF), ((SEQ_REG050 = (SEQ_REG050 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG050  -----------------------------------
// SVD Line: 77381

//  <rtree> SFDITEM_REG__SEQ_REG050
//    <name> REG050 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F50) REG050 </i>
//    <loc> ( (unsigned int)((SEQ_REG050 >> 0) & 0xFFFFFFFF), ((SEQ_REG050 = (SEQ_REG050 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG050_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG054  -------------------------------
// SVD Line: 77399

unsigned int SEQ_REG054 __AT (0x21000F54);



// -----------------------------  Field Item: SEQ_REG054_ADDRESS  ---------------------------------
// SVD Line: 77408

//  <item> SFDITEM_FIELD__SEQ_REG054_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F54) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG054 >> 0) & 0xFFFFFFFF), ((SEQ_REG054 = (SEQ_REG054 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG054  -----------------------------------
// SVD Line: 77399

//  <rtree> SFDITEM_REG__SEQ_REG054
//    <name> REG054 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F54) REG054 </i>
//    <loc> ( (unsigned int)((SEQ_REG054 >> 0) & 0xFFFFFFFF), ((SEQ_REG054 = (SEQ_REG054 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG054_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG058  -------------------------------
// SVD Line: 77417

unsigned int SEQ_REG058 __AT (0x21000F58);



// -----------------------------  Field Item: SEQ_REG058_ADDRESS  ---------------------------------
// SVD Line: 77426

//  <item> SFDITEM_FIELD__SEQ_REG058_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F58) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG058 >> 0) & 0xFFFFFFFF), ((SEQ_REG058 = (SEQ_REG058 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG058  -----------------------------------
// SVD Line: 77417

//  <rtree> SFDITEM_REG__SEQ_REG058
//    <name> REG058 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F58) REG058 </i>
//    <loc> ( (unsigned int)((SEQ_REG058 >> 0) & 0xFFFFFFFF), ((SEQ_REG058 = (SEQ_REG058 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG058_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG05C  -------------------------------
// SVD Line: 77435

unsigned int SEQ_REG05C __AT (0x21000F5C);



// -----------------------------  Field Item: SEQ_REG05C_ADDRESS  ---------------------------------
// SVD Line: 77444

//  <item> SFDITEM_FIELD__SEQ_REG05C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F5C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG05C >> 0) & 0xFFFFFFFF), ((SEQ_REG05C = (SEQ_REG05C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG05C  -----------------------------------
// SVD Line: 77435

//  <rtree> SFDITEM_REG__SEQ_REG05C
//    <name> REG05C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F5C) REG05C </i>
//    <loc> ( (unsigned int)((SEQ_REG05C >> 0) & 0xFFFFFFFF), ((SEQ_REG05C = (SEQ_REG05C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG05C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG060  -------------------------------
// SVD Line: 77453

unsigned int SEQ_REG060 __AT (0x21000F60);



// -----------------------------  Field Item: SEQ_REG060_ADDRESS  ---------------------------------
// SVD Line: 77462

//  <item> SFDITEM_FIELD__SEQ_REG060_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F60) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG060 >> 0) & 0xFFFFFFFF), ((SEQ_REG060 = (SEQ_REG060 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG060  -----------------------------------
// SVD Line: 77453

//  <rtree> SFDITEM_REG__SEQ_REG060
//    <name> REG060 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F60) REG060 </i>
//    <loc> ( (unsigned int)((SEQ_REG060 >> 0) & 0xFFFFFFFF), ((SEQ_REG060 = (SEQ_REG060 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG060_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG064  -------------------------------
// SVD Line: 77471

unsigned int SEQ_REG064 __AT (0x21000F64);



// -----------------------------  Field Item: SEQ_REG064_ADDRESS  ---------------------------------
// SVD Line: 77480

//  <item> SFDITEM_FIELD__SEQ_REG064_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F64) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG064 >> 0) & 0xFFFFFFFF), ((SEQ_REG064 = (SEQ_REG064 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG064  -----------------------------------
// SVD Line: 77471

//  <rtree> SFDITEM_REG__SEQ_REG064
//    <name> REG064 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F64) REG064 </i>
//    <loc> ( (unsigned int)((SEQ_REG064 >> 0) & 0xFFFFFFFF), ((SEQ_REG064 = (SEQ_REG064 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG064_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG068  -------------------------------
// SVD Line: 77489

unsigned int SEQ_REG068 __AT (0x21000F68);



// -----------------------------  Field Item: SEQ_REG068_ADDRESS  ---------------------------------
// SVD Line: 77498

//  <item> SFDITEM_FIELD__SEQ_REG068_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F68) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG068 >> 0) & 0xFFFFFFFF), ((SEQ_REG068 = (SEQ_REG068 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG068  -----------------------------------
// SVD Line: 77489

//  <rtree> SFDITEM_REG__SEQ_REG068
//    <name> REG068 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F68) REG068 </i>
//    <loc> ( (unsigned int)((SEQ_REG068 >> 0) & 0xFFFFFFFF), ((SEQ_REG068 = (SEQ_REG068 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG068_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG06C  -------------------------------
// SVD Line: 77507

unsigned int SEQ_REG06C __AT (0x21000F6C);



// -----------------------------  Field Item: SEQ_REG06C_ADDRESS  ---------------------------------
// SVD Line: 77516

//  <item> SFDITEM_FIELD__SEQ_REG06C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F6C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG06C >> 0) & 0xFFFFFFFF), ((SEQ_REG06C = (SEQ_REG06C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG06C  -----------------------------------
// SVD Line: 77507

//  <rtree> SFDITEM_REG__SEQ_REG06C
//    <name> REG06C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F6C) REG06C </i>
//    <loc> ( (unsigned int)((SEQ_REG06C >> 0) & 0xFFFFFFFF), ((SEQ_REG06C = (SEQ_REG06C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG06C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG070  -------------------------------
// SVD Line: 77525

unsigned int SEQ_REG070 __AT (0x21000F70);



// -----------------------------  Field Item: SEQ_REG070_ADDRESS  ---------------------------------
// SVD Line: 77534

//  <item> SFDITEM_FIELD__SEQ_REG070_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F70) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG070 >> 0) & 0xFFFFFFFF), ((SEQ_REG070 = (SEQ_REG070 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG070  -----------------------------------
// SVD Line: 77525

//  <rtree> SFDITEM_REG__SEQ_REG070
//    <name> REG070 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F70) REG070 </i>
//    <loc> ( (unsigned int)((SEQ_REG070 >> 0) & 0xFFFFFFFF), ((SEQ_REG070 = (SEQ_REG070 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG070_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG074  -------------------------------
// SVD Line: 77543

unsigned int SEQ_REG074 __AT (0x21000F74);



// -----------------------------  Field Item: SEQ_REG074_ADDRESS  ---------------------------------
// SVD Line: 77552

//  <item> SFDITEM_FIELD__SEQ_REG074_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F74) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG074 >> 0) & 0xFFFFFFFF), ((SEQ_REG074 = (SEQ_REG074 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG074  -----------------------------------
// SVD Line: 77543

//  <rtree> SFDITEM_REG__SEQ_REG074
//    <name> REG074 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F74) REG074 </i>
//    <loc> ( (unsigned int)((SEQ_REG074 >> 0) & 0xFFFFFFFF), ((SEQ_REG074 = (SEQ_REG074 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG074_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG078  -------------------------------
// SVD Line: 77561

unsigned int SEQ_REG078 __AT (0x21000F78);



// -----------------------------  Field Item: SEQ_REG078_ADDRESS  ---------------------------------
// SVD Line: 77570

//  <item> SFDITEM_FIELD__SEQ_REG078_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F78) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG078 >> 0) & 0xFFFFFFFF), ((SEQ_REG078 = (SEQ_REG078 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG078  -----------------------------------
// SVD Line: 77561

//  <rtree> SFDITEM_REG__SEQ_REG078
//    <name> REG078 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F78) REG078 </i>
//    <loc> ( (unsigned int)((SEQ_REG078 >> 0) & 0xFFFFFFFF), ((SEQ_REG078 = (SEQ_REG078 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG078_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG07C  -------------------------------
// SVD Line: 77579

unsigned int SEQ_REG07C __AT (0x21000F7C);



// -----------------------------  Field Item: SEQ_REG07C_ADDRESS  ---------------------------------
// SVD Line: 77588

//  <item> SFDITEM_FIELD__SEQ_REG07C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F7C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG07C >> 0) & 0xFFFFFFFF), ((SEQ_REG07C = (SEQ_REG07C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG07C  -----------------------------------
// SVD Line: 77579

//  <rtree> SFDITEM_REG__SEQ_REG07C
//    <name> REG07C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F7C) REG07C </i>
//    <loc> ( (unsigned int)((SEQ_REG07C >> 0) & 0xFFFFFFFF), ((SEQ_REG07C = (SEQ_REG07C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG07C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG080  -------------------------------
// SVD Line: 77597

unsigned int SEQ_REG080 __AT (0x21000F80);



// -----------------------------  Field Item: SEQ_REG080_ADDRESS  ---------------------------------
// SVD Line: 77606

//  <item> SFDITEM_FIELD__SEQ_REG080_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F80) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG080 >> 0) & 0xFFFFFFFF), ((SEQ_REG080 = (SEQ_REG080 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG080  -----------------------------------
// SVD Line: 77597

//  <rtree> SFDITEM_REG__SEQ_REG080
//    <name> REG080 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F80) REG080 </i>
//    <loc> ( (unsigned int)((SEQ_REG080 >> 0) & 0xFFFFFFFF), ((SEQ_REG080 = (SEQ_REG080 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG080_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG084  -------------------------------
// SVD Line: 77615

unsigned int SEQ_REG084 __AT (0x21000F84);



// -----------------------------  Field Item: SEQ_REG084_ADDRESS  ---------------------------------
// SVD Line: 77624

//  <item> SFDITEM_FIELD__SEQ_REG084_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F84) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG084 >> 0) & 0xFFFFFFFF), ((SEQ_REG084 = (SEQ_REG084 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG084  -----------------------------------
// SVD Line: 77615

//  <rtree> SFDITEM_REG__SEQ_REG084
//    <name> REG084 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F84) REG084 </i>
//    <loc> ( (unsigned int)((SEQ_REG084 >> 0) & 0xFFFFFFFF), ((SEQ_REG084 = (SEQ_REG084 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG084_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG088  -------------------------------
// SVD Line: 77633

unsigned int SEQ_REG088 __AT (0x21000F88);



// -----------------------------  Field Item: SEQ_REG088_ADDRESS  ---------------------------------
// SVD Line: 77642

//  <item> SFDITEM_FIELD__SEQ_REG088_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F88) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG088 >> 0) & 0xFFFFFFFF), ((SEQ_REG088 = (SEQ_REG088 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG088  -----------------------------------
// SVD Line: 77633

//  <rtree> SFDITEM_REG__SEQ_REG088
//    <name> REG088 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F88) REG088 </i>
//    <loc> ( (unsigned int)((SEQ_REG088 >> 0) & 0xFFFFFFFF), ((SEQ_REG088 = (SEQ_REG088 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG088_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG08C  -------------------------------
// SVD Line: 77651

unsigned int SEQ_REG08C __AT (0x21000F8C);



// -----------------------------  Field Item: SEQ_REG08C_ADDRESS  ---------------------------------
// SVD Line: 77660

//  <item> SFDITEM_FIELD__SEQ_REG08C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F8C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG08C >> 0) & 0xFFFFFFFF), ((SEQ_REG08C = (SEQ_REG08C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG08C  -----------------------------------
// SVD Line: 77651

//  <rtree> SFDITEM_REG__SEQ_REG08C
//    <name> REG08C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F8C) REG08C </i>
//    <loc> ( (unsigned int)((SEQ_REG08C >> 0) & 0xFFFFFFFF), ((SEQ_REG08C = (SEQ_REG08C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG08C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG090  -------------------------------
// SVD Line: 77669

unsigned int SEQ_REG090 __AT (0x21000F90);



// -----------------------------  Field Item: SEQ_REG090_ADDRESS  ---------------------------------
// SVD Line: 77678

//  <item> SFDITEM_FIELD__SEQ_REG090_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F90) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG090 >> 0) & 0xFFFFFFFF), ((SEQ_REG090 = (SEQ_REG090 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG090  -----------------------------------
// SVD Line: 77669

//  <rtree> SFDITEM_REG__SEQ_REG090
//    <name> REG090 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F90) REG090 </i>
//    <loc> ( (unsigned int)((SEQ_REG090 >> 0) & 0xFFFFFFFF), ((SEQ_REG090 = (SEQ_REG090 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG090_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG094  -------------------------------
// SVD Line: 77687

unsigned int SEQ_REG094 __AT (0x21000F94);



// -----------------------------  Field Item: SEQ_REG094_ADDRESS  ---------------------------------
// SVD Line: 77696

//  <item> SFDITEM_FIELD__SEQ_REG094_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F94) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG094 >> 0) & 0xFFFFFFFF), ((SEQ_REG094 = (SEQ_REG094 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG094  -----------------------------------
// SVD Line: 77687

//  <rtree> SFDITEM_REG__SEQ_REG094
//    <name> REG094 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F94) REG094 </i>
//    <loc> ( (unsigned int)((SEQ_REG094 >> 0) & 0xFFFFFFFF), ((SEQ_REG094 = (SEQ_REG094 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG094_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG098  -------------------------------
// SVD Line: 77705

unsigned int SEQ_REG098 __AT (0x21000F98);



// -----------------------------  Field Item: SEQ_REG098_ADDRESS  ---------------------------------
// SVD Line: 77714

//  <item> SFDITEM_FIELD__SEQ_REG098_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F98) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG098 >> 0) & 0xFFFFFFFF), ((SEQ_REG098 = (SEQ_REG098 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG098  -----------------------------------
// SVD Line: 77705

//  <rtree> SFDITEM_REG__SEQ_REG098
//    <name> REG098 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F98) REG098 </i>
//    <loc> ( (unsigned int)((SEQ_REG098 >> 0) & 0xFFFFFFFF), ((SEQ_REG098 = (SEQ_REG098 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG098_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG09C  -------------------------------
// SVD Line: 77723

unsigned int SEQ_REG09C __AT (0x21000F9C);



// -----------------------------  Field Item: SEQ_REG09C_ADDRESS  ---------------------------------
// SVD Line: 77732

//  <item> SFDITEM_FIELD__SEQ_REG09C_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F9C) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG09C >> 0) & 0xFFFFFFFF), ((SEQ_REG09C = (SEQ_REG09C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG09C  -----------------------------------
// SVD Line: 77723

//  <rtree> SFDITEM_REG__SEQ_REG09C
//    <name> REG09C </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000F9C) REG09C </i>
//    <loc> ( (unsigned int)((SEQ_REG09C >> 0) & 0xFFFFFFFF), ((SEQ_REG09C = (SEQ_REG09C & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG09C_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0A0  -------------------------------
// SVD Line: 77741

unsigned int SEQ_REG0A0 __AT (0x21000FA0);



// -----------------------------  Field Item: SEQ_REG0A0_ADDRESS  ---------------------------------
// SVD Line: 77750

//  <item> SFDITEM_FIELD__SEQ_REG0A0_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FA0) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0A0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0A0 = (SEQ_REG0A0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0A0  -----------------------------------
// SVD Line: 77741

//  <rtree> SFDITEM_REG__SEQ_REG0A0
//    <name> REG0A0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FA0) REG0A0 </i>
//    <loc> ( (unsigned int)((SEQ_REG0A0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0A0 = (SEQ_REG0A0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0A0_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0A4  -------------------------------
// SVD Line: 77759

unsigned int SEQ_REG0A4 __AT (0x21000FA4);



// -----------------------------  Field Item: SEQ_REG0A4_ADDRESS  ---------------------------------
// SVD Line: 77768

//  <item> SFDITEM_FIELD__SEQ_REG0A4_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FA4) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0A4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0A4 = (SEQ_REG0A4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0A4  -----------------------------------
// SVD Line: 77759

//  <rtree> SFDITEM_REG__SEQ_REG0A4
//    <name> REG0A4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FA4) REG0A4 </i>
//    <loc> ( (unsigned int)((SEQ_REG0A4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0A4 = (SEQ_REG0A4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0A4_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0A8  -------------------------------
// SVD Line: 77777

unsigned int SEQ_REG0A8 __AT (0x21000FA8);



// -----------------------------  Field Item: SEQ_REG0A8_ADDRESS  ---------------------------------
// SVD Line: 77786

//  <item> SFDITEM_FIELD__SEQ_REG0A8_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FA8) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0A8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0A8 = (SEQ_REG0A8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0A8  -----------------------------------
// SVD Line: 77777

//  <rtree> SFDITEM_REG__SEQ_REG0A8
//    <name> REG0A8 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FA8) REG0A8 </i>
//    <loc> ( (unsigned int)((SEQ_REG0A8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0A8 = (SEQ_REG0A8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0A8_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0AC  -------------------------------
// SVD Line: 77795

unsigned int SEQ_REG0AC __AT (0x21000FAC);



// -----------------------------  Field Item: SEQ_REG0AC_ADDRESS  ---------------------------------
// SVD Line: 77804

//  <item> SFDITEM_FIELD__SEQ_REG0AC_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FAC) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0AC >> 0) & 0xFFFFFFFF), ((SEQ_REG0AC = (SEQ_REG0AC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0AC  -----------------------------------
// SVD Line: 77795

//  <rtree> SFDITEM_REG__SEQ_REG0AC
//    <name> REG0AC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FAC) REG0AC </i>
//    <loc> ( (unsigned int)((SEQ_REG0AC >> 0) & 0xFFFFFFFF), ((SEQ_REG0AC = (SEQ_REG0AC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0AC_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0B0  -------------------------------
// SVD Line: 77813

unsigned int SEQ_REG0B0 __AT (0x21000FB0);



// -----------------------------  Field Item: SEQ_REG0B0_ADDRESS  ---------------------------------
// SVD Line: 77822

//  <item> SFDITEM_FIELD__SEQ_REG0B0_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FB0) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0B0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0B0 = (SEQ_REG0B0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0B0  -----------------------------------
// SVD Line: 77813

//  <rtree> SFDITEM_REG__SEQ_REG0B0
//    <name> REG0B0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FB0) REG0B0 </i>
//    <loc> ( (unsigned int)((SEQ_REG0B0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0B0 = (SEQ_REG0B0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0B0_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0B4  -------------------------------
// SVD Line: 77831

unsigned int SEQ_REG0B4 __AT (0x21000FB4);



// -----------------------------  Field Item: SEQ_REG0B4_ADDRESS  ---------------------------------
// SVD Line: 77840

//  <item> SFDITEM_FIELD__SEQ_REG0B4_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FB4) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0B4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0B4 = (SEQ_REG0B4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0B4  -----------------------------------
// SVD Line: 77831

//  <rtree> SFDITEM_REG__SEQ_REG0B4
//    <name> REG0B4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FB4) REG0B4 </i>
//    <loc> ( (unsigned int)((SEQ_REG0B4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0B4 = (SEQ_REG0B4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0B4_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0B8  -------------------------------
// SVD Line: 77849

unsigned int SEQ_REG0B8 __AT (0x21000FB8);



// -----------------------------  Field Item: SEQ_REG0B8_ADDRESS  ---------------------------------
// SVD Line: 77858

//  <item> SFDITEM_FIELD__SEQ_REG0B8_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FB8) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0B8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0B8 = (SEQ_REG0B8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0B8  -----------------------------------
// SVD Line: 77849

//  <rtree> SFDITEM_REG__SEQ_REG0B8
//    <name> REG0B8 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FB8) REG0B8 </i>
//    <loc> ( (unsigned int)((SEQ_REG0B8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0B8 = (SEQ_REG0B8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0B8_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0BC  -------------------------------
// SVD Line: 77867

unsigned int SEQ_REG0BC __AT (0x21000FBC);



// -----------------------------  Field Item: SEQ_REG0BC_ADDRESS  ---------------------------------
// SVD Line: 77876

//  <item> SFDITEM_FIELD__SEQ_REG0BC_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FBC) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0BC >> 0) & 0xFFFFFFFF), ((SEQ_REG0BC = (SEQ_REG0BC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0BC  -----------------------------------
// SVD Line: 77867

//  <rtree> SFDITEM_REG__SEQ_REG0BC
//    <name> REG0BC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FBC) REG0BC </i>
//    <loc> ( (unsigned int)((SEQ_REG0BC >> 0) & 0xFFFFFFFF), ((SEQ_REG0BC = (SEQ_REG0BC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0BC_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0C0  -------------------------------
// SVD Line: 77885

unsigned int SEQ_REG0C0 __AT (0x21000FC0);



// -----------------------------  Field Item: SEQ_REG0C0_ADDRESS  ---------------------------------
// SVD Line: 77894

//  <item> SFDITEM_FIELD__SEQ_REG0C0_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FC0) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0C0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0C0 = (SEQ_REG0C0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0C0  -----------------------------------
// SVD Line: 77885

//  <rtree> SFDITEM_REG__SEQ_REG0C0
//    <name> REG0C0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FC0) REG0C0 </i>
//    <loc> ( (unsigned int)((SEQ_REG0C0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0C0 = (SEQ_REG0C0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0C0_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0C4  -------------------------------
// SVD Line: 77903

unsigned int SEQ_REG0C4 __AT (0x21000FC4);



// -----------------------------  Field Item: SEQ_REG0C4_ADDRESS  ---------------------------------
// SVD Line: 77912

//  <item> SFDITEM_FIELD__SEQ_REG0C4_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FC4) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0C4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0C4 = (SEQ_REG0C4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0C4  -----------------------------------
// SVD Line: 77903

//  <rtree> SFDITEM_REG__SEQ_REG0C4
//    <name> REG0C4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FC4) REG0C4 </i>
//    <loc> ( (unsigned int)((SEQ_REG0C4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0C4 = (SEQ_REG0C4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0C4_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0C8  -------------------------------
// SVD Line: 77921

unsigned int SEQ_REG0C8 __AT (0x21000FC8);



// -----------------------------  Field Item: SEQ_REG0C8_ADDRESS  ---------------------------------
// SVD Line: 77930

//  <item> SFDITEM_FIELD__SEQ_REG0C8_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FC8) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0C8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0C8 = (SEQ_REG0C8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0C8  -----------------------------------
// SVD Line: 77921

//  <rtree> SFDITEM_REG__SEQ_REG0C8
//    <name> REG0C8 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FC8) REG0C8 </i>
//    <loc> ( (unsigned int)((SEQ_REG0C8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0C8 = (SEQ_REG0C8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0C8_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0CC  -------------------------------
// SVD Line: 77939

unsigned int SEQ_REG0CC __AT (0x21000FCC);



// -----------------------------  Field Item: SEQ_REG0CC_ADDRESS  ---------------------------------
// SVD Line: 77948

//  <item> SFDITEM_FIELD__SEQ_REG0CC_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FCC) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0CC >> 0) & 0xFFFFFFFF), ((SEQ_REG0CC = (SEQ_REG0CC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0CC  -----------------------------------
// SVD Line: 77939

//  <rtree> SFDITEM_REG__SEQ_REG0CC
//    <name> REG0CC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FCC) REG0CC </i>
//    <loc> ( (unsigned int)((SEQ_REG0CC >> 0) & 0xFFFFFFFF), ((SEQ_REG0CC = (SEQ_REG0CC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0CC_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0D0  -------------------------------
// SVD Line: 77957

unsigned int SEQ_REG0D0 __AT (0x21000FD0);



// -----------------------------  Field Item: SEQ_REG0D0_ADDRESS  ---------------------------------
// SVD Line: 77966

//  <item> SFDITEM_FIELD__SEQ_REG0D0_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FD0) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0D0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0D0 = (SEQ_REG0D0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0D0  -----------------------------------
// SVD Line: 77957

//  <rtree> SFDITEM_REG__SEQ_REG0D0
//    <name> REG0D0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FD0) REG0D0 </i>
//    <loc> ( (unsigned int)((SEQ_REG0D0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0D0 = (SEQ_REG0D0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0D0_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0D4  -------------------------------
// SVD Line: 77975

unsigned int SEQ_REG0D4 __AT (0x21000FD4);



// -----------------------------  Field Item: SEQ_REG0D4_ADDRESS  ---------------------------------
// SVD Line: 77984

//  <item> SFDITEM_FIELD__SEQ_REG0D4_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FD4) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0D4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0D4 = (SEQ_REG0D4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0D4  -----------------------------------
// SVD Line: 77975

//  <rtree> SFDITEM_REG__SEQ_REG0D4
//    <name> REG0D4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FD4) REG0D4 </i>
//    <loc> ( (unsigned int)((SEQ_REG0D4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0D4 = (SEQ_REG0D4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0D4_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0D8  -------------------------------
// SVD Line: 77993

unsigned int SEQ_REG0D8 __AT (0x21000FD8);



// -----------------------------  Field Item: SEQ_REG0D8_ADDRESS  ---------------------------------
// SVD Line: 78002

//  <item> SFDITEM_FIELD__SEQ_REG0D8_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FD8) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0D8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0D8 = (SEQ_REG0D8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0D8  -----------------------------------
// SVD Line: 77993

//  <rtree> SFDITEM_REG__SEQ_REG0D8
//    <name> REG0D8 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FD8) REG0D8 </i>
//    <loc> ( (unsigned int)((SEQ_REG0D8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0D8 = (SEQ_REG0D8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0D8_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0DC  -------------------------------
// SVD Line: 78011

unsigned int SEQ_REG0DC __AT (0x21000FDC);



// -----------------------------  Field Item: SEQ_REG0DC_ADDRESS  ---------------------------------
// SVD Line: 78020

//  <item> SFDITEM_FIELD__SEQ_REG0DC_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FDC) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0DC >> 0) & 0xFFFFFFFF), ((SEQ_REG0DC = (SEQ_REG0DC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0DC  -----------------------------------
// SVD Line: 78011

//  <rtree> SFDITEM_REG__SEQ_REG0DC
//    <name> REG0DC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FDC) REG0DC </i>
//    <loc> ( (unsigned int)((SEQ_REG0DC >> 0) & 0xFFFFFFFF), ((SEQ_REG0DC = (SEQ_REG0DC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0DC_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0E0  -------------------------------
// SVD Line: 78029

unsigned int SEQ_REG0E0 __AT (0x21000FE0);



// -----------------------------  Field Item: SEQ_REG0E0_ADDRESS  ---------------------------------
// SVD Line: 78038

//  <item> SFDITEM_FIELD__SEQ_REG0E0_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FE0) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0E0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0E0 = (SEQ_REG0E0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0E0  -----------------------------------
// SVD Line: 78029

//  <rtree> SFDITEM_REG__SEQ_REG0E0
//    <name> REG0E0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FE0) REG0E0 </i>
//    <loc> ( (unsigned int)((SEQ_REG0E0 >> 0) & 0xFFFFFFFF), ((SEQ_REG0E0 = (SEQ_REG0E0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0E0_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0E4  -------------------------------
// SVD Line: 78047

unsigned int SEQ_REG0E4 __AT (0x21000FE4);



// -----------------------------  Field Item: SEQ_REG0E4_ADDRESS  ---------------------------------
// SVD Line: 78056

//  <item> SFDITEM_FIELD__SEQ_REG0E4_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FE4) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0E4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0E4 = (SEQ_REG0E4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0E4  -----------------------------------
// SVD Line: 78047

//  <rtree> SFDITEM_REG__SEQ_REG0E4
//    <name> REG0E4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FE4) REG0E4 </i>
//    <loc> ( (unsigned int)((SEQ_REG0E4 >> 0) & 0xFFFFFFFF), ((SEQ_REG0E4 = (SEQ_REG0E4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0E4_ADDRESS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SEQ_REG0E8  -------------------------------
// SVD Line: 78065

unsigned int SEQ_REG0E8 __AT (0x21000FE8);



// -----------------------------  Field Item: SEQ_REG0E8_ADDRESS  ---------------------------------
// SVD Line: 78074

//  <item> SFDITEM_FIELD__SEQ_REG0E8_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FE8) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_REG0E8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0E8 = (SEQ_REG0E8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_REG0E8  -----------------------------------
// SVD Line: 78065

//  <rtree> SFDITEM_REG__SEQ_REG0E8
//    <name> REG0E8 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FE8) REG0E8 </i>
//    <loc> ( (unsigned int)((SEQ_REG0E8 >> 0) & 0xFFFFFFFF), ((SEQ_REG0E8 = (SEQ_REG0E8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_REG0E8_ADDRESS </item>
//  </rtree>
//  


// ---------------------  Register Item Address: SEQ_DYNAMIC_CHPWR_TABLE  -------------------------
// SVD Line: 78083

unsigned int SEQ_DYNAMIC_CHPWR_TABLE __AT (0x21000FEC);



// -----------------------  Field Item: SEQ_DYNAMIC_CHPWR_TABLE_ADDRESS  --------------------------
// SVD Line: 78092

//  <item> SFDITEM_FIELD__SEQ_DYNAMIC_CHPWR_TABLE_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FEC) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_DYNAMIC_CHPWR_TABLE >> 0) & 0xFFFFFFFF), ((SEQ_DYNAMIC_CHPWR_TABLE = (SEQ_DYNAMIC_CHPWR_TABLE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register RTree: SEQ_DYNAMIC_CHPWR_TABLE  ----------------------------
// SVD Line: 78083

//  <rtree> SFDITEM_REG__SEQ_DYNAMIC_CHPWR_TABLE
//    <name> DYNAMIC_CHPWR_TABLE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FEC) DYNAMIC_CHPWR_TABLE </i>
//    <loc> ( (unsigned int)((SEQ_DYNAMIC_CHPWR_TABLE >> 0) & 0xFFFFFFFF), ((SEQ_DYNAMIC_CHPWR_TABLE = (SEQ_DYNAMIC_CHPWR_TABLE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_DYNAMIC_CHPWR_TABLE_ADDRESS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SEQ_PHYINFO  -------------------------------
// SVD Line: 78101

unsigned int SEQ_PHYINFO __AT (0x21000FF0);



// -----------------------------  Field Item: SEQ_PHYINFO_ADDRESS  --------------------------------
// SVD Line: 78110

//  <item> SFDITEM_FIELD__SEQ_PHYINFO_ADDRESS
//    <name> ADDRESS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FF0) ADDRESS </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_PHYINFO >> 0) & 0xFFFFFFFF), ((SEQ_PHYINFO = (SEQ_PHYINFO & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SEQ_PHYINFO  ----------------------------------
// SVD Line: 78101

//  <rtree> SFDITEM_REG__SEQ_PHYINFO
//    <name> PHYINFO </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FF0) PHYINFO </i>
//    <loc> ( (unsigned int)((SEQ_PHYINFO >> 0) & 0xFFFFFFFF), ((SEQ_PHYINFO = (SEQ_PHYINFO & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_PHYINFO_ADDRESS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SEQ_MISC  --------------------------------
// SVD Line: 78119

unsigned int SEQ_MISC __AT (0x21000FF4);



// ------------------------  Field Item: SEQ_MISC_DYNAMIC_SLICER_SW_EN  ---------------------------
// SVD Line: 78128

//  <item> SFDITEM_FIELD__SEQ_MISC_DYNAMIC_SLICER_SW_EN
//    <name> DYNAMIC_SLICER_SW_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x21000FF4) DYNAMIC_SLICER_SW_EN </i>
//    <check> 
//      <loc> ( (unsigned int) SEQ_MISC ) </loc>
//      <o.1..1> DYNAMIC_SLICER_SW_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SEQ_MISC_SQBMODETX  ---------------------------------
// SVD Line: 78135

//  <item> SFDITEM_FIELD__SEQ_MISC_SQBMODETX
//    <name> SQBMODETX </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x21000FF4) SQBMODETX </i>
//    <edit> 
//      <loc> ( (unsigned char)((SEQ_MISC >> 10) & 0x3), ((SEQ_MISC = (SEQ_MISC & ~(0x3UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SEQ_MISC  ------------------------------------
// SVD Line: 78119

//  <rtree> SFDITEM_REG__SEQ_MISC
//    <name> MISC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FF4) MISC </i>
//    <loc> ( (unsigned int)((SEQ_MISC >> 0) & 0xFFFFFFFF), ((SEQ_MISC = (SEQ_MISC & ~(0xC02UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC02) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_MISC_DYNAMIC_SLICER_SW_EN </item>
//    <item> SFDITEM_FIELD__SEQ_MISC_SQBMODETX </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SEQ_SYNTHLPFCTRLRX  ---------------------------
// SVD Line: 78144

unsigned int SEQ_SYNTHLPFCTRLRX __AT (0x21000FF8);



// ----------------------  Field Item: SEQ_SYNTHLPFCTRLRX_SYNTHLPFCTRLRX  -------------------------
// SVD Line: 78153

//  <item> SFDITEM_FIELD__SEQ_SYNTHLPFCTRLRX_SYNTHLPFCTRLRX
//    <name> SYNTHLPFCTRLRX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FF8) SYNTHLPFCTRLRX </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_SYNTHLPFCTRLRX >> 0) & 0xFFFFFFFF), ((SEQ_SYNTHLPFCTRLRX = (SEQ_SYNTHLPFCTRLRX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SEQ_SYNTHLPFCTRLRX  -------------------------------
// SVD Line: 78144

//  <rtree> SFDITEM_REG__SEQ_SYNTHLPFCTRLRX
//    <name> SYNTHLPFCTRLRX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FF8) SYNTHLPFCTRLRX </i>
//    <loc> ( (unsigned int)((SEQ_SYNTHLPFCTRLRX >> 0) & 0xFFFFFFFF), ((SEQ_SYNTHLPFCTRLRX = (SEQ_SYNTHLPFCTRLRX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_SYNTHLPFCTRLRX_SYNTHLPFCTRLRX </item>
//  </rtree>
//  


// ------------------------  Register Item Address: SEQ_SYNTHLPFCTRLTX  ---------------------------
// SVD Line: 78162

unsigned int SEQ_SYNTHLPFCTRLTX __AT (0x21000FFC);



// ----------------------  Field Item: SEQ_SYNTHLPFCTRLTX_SYNTHLPFCTRLTX  -------------------------
// SVD Line: 78171

//  <item> SFDITEM_FIELD__SEQ_SYNTHLPFCTRLTX_SYNTHLPFCTRLTX
//    <name> SYNTHLPFCTRLTX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FFC) SYNTHLPFCTRLTX </i>
//    <edit> 
//      <loc> ( (unsigned int)((SEQ_SYNTHLPFCTRLTX >> 0) & 0xFFFFFFFF), ((SEQ_SYNTHLPFCTRLTX = (SEQ_SYNTHLPFCTRLTX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: SEQ_SYNTHLPFCTRLTX  -------------------------------
// SVD Line: 78162

//  <rtree> SFDITEM_REG__SEQ_SYNTHLPFCTRLTX
//    <name> SYNTHLPFCTRLTX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x21000FFC) SYNTHLPFCTRLTX </i>
//    <loc> ( (unsigned int)((SEQ_SYNTHLPFCTRLTX >> 0) & 0xFFFFFFFF), ((SEQ_SYNTHLPFCTRLTX = (SEQ_SYNTHLPFCTRLTX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEQ_SYNTHLPFCTRLTX_SYNTHLPFCTRLTX </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SEQ  --------------------------------------
// SVD Line: 77011

//  <view> SEQ
//    <name> SEQ </name>
//    <item> SFDITEM_REG__SEQ_REG000 </item>
//    <item> SFDITEM_REG__SEQ_REG004 </item>
//    <item> SFDITEM_REG__SEQ_REG008 </item>
//    <item> SFDITEM_REG__SEQ_REG00C </item>
//    <item> SFDITEM_REG__SEQ_REG010 </item>
//    <item> SFDITEM_REG__SEQ_REG014 </item>
//    <item> SFDITEM_REG__SEQ_REG018 </item>
//    <item> SFDITEM_REG__SEQ_REG01C </item>
//    <item> SFDITEM_REG__SEQ_REG020 </item>
//    <item> SFDITEM_REG__SEQ_REG024 </item>
//    <item> SFDITEM_REG__SEQ_REG028 </item>
//    <item> SFDITEM_REG__SEQ_REG02C </item>
//    <item> SFDITEM_REG__SEQ_REG030 </item>
//    <item> SFDITEM_REG__SEQ_REG034 </item>
//    <item> SFDITEM_REG__SEQ_REG038 </item>
//    <item> SFDITEM_REG__SEQ_REG03C </item>
//    <item> SFDITEM_REG__SEQ_REG040 </item>
//    <item> SFDITEM_REG__SEQ_REG044 </item>
//    <item> SFDITEM_REG__SEQ_REG048 </item>
//    <item> SFDITEM_REG__SEQ_REG04C </item>
//    <item> SFDITEM_REG__SEQ_REG050 </item>
//    <item> SFDITEM_REG__SEQ_REG054 </item>
//    <item> SFDITEM_REG__SEQ_REG058 </item>
//    <item> SFDITEM_REG__SEQ_REG05C </item>
//    <item> SFDITEM_REG__SEQ_REG060 </item>
//    <item> SFDITEM_REG__SEQ_REG064 </item>
//    <item> SFDITEM_REG__SEQ_REG068 </item>
//    <item> SFDITEM_REG__SEQ_REG06C </item>
//    <item> SFDITEM_REG__SEQ_REG070 </item>
//    <item> SFDITEM_REG__SEQ_REG074 </item>
//    <item> SFDITEM_REG__SEQ_REG078 </item>
//    <item> SFDITEM_REG__SEQ_REG07C </item>
//    <item> SFDITEM_REG__SEQ_REG080 </item>
//    <item> SFDITEM_REG__SEQ_REG084 </item>
//    <item> SFDITEM_REG__SEQ_REG088 </item>
//    <item> SFDITEM_REG__SEQ_REG08C </item>
//    <item> SFDITEM_REG__SEQ_REG090 </item>
//    <item> SFDITEM_REG__SEQ_REG094 </item>
//    <item> SFDITEM_REG__SEQ_REG098 </item>
//    <item> SFDITEM_REG__SEQ_REG09C </item>
//    <item> SFDITEM_REG__SEQ_REG0A0 </item>
//    <item> SFDITEM_REG__SEQ_REG0A4 </item>
//    <item> SFDITEM_REG__SEQ_REG0A8 </item>
//    <item> SFDITEM_REG__SEQ_REG0AC </item>
//    <item> SFDITEM_REG__SEQ_REG0B0 </item>
//    <item> SFDITEM_REG__SEQ_REG0B4 </item>
//    <item> SFDITEM_REG__SEQ_REG0B8 </item>
//    <item> SFDITEM_REG__SEQ_REG0BC </item>
//    <item> SFDITEM_REG__SEQ_REG0C0 </item>
//    <item> SFDITEM_REG__SEQ_REG0C4 </item>
//    <item> SFDITEM_REG__SEQ_REG0C8 </item>
//    <item> SFDITEM_REG__SEQ_REG0CC </item>
//    <item> SFDITEM_REG__SEQ_REG0D0 </item>
//    <item> SFDITEM_REG__SEQ_REG0D4 </item>
//    <item> SFDITEM_REG__SEQ_REG0D8 </item>
//    <item> SFDITEM_REG__SEQ_REG0DC </item>
//    <item> SFDITEM_REG__SEQ_REG0E0 </item>
//    <item> SFDITEM_REG__SEQ_REG0E4 </item>
//    <item> SFDITEM_REG__SEQ_REG0E8 </item>
//    <item> SFDITEM_REG__SEQ_DYNAMIC_CHPWR_TABLE </item>
//    <item> SFDITEM_REG__SEQ_PHYINFO </item>
//    <item> SFDITEM_REG__SEQ_MISC </item>
//    <item> SFDITEM_REG__SEQ_SYNTHLPFCTRLRX </item>
//    <item> SFDITEM_REG__SEQ_SYNTHLPFCTRLTX </item>
//  </view>
//  


// ------------------------   IRQ Num definition: EFR32FG1V131F256GM48  ---------------------------
// SVD Line: 2



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M4 Specific Interrupt Numbers  ----------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> MemoryManagement_IRQ
//    <name> MemoryManagement </name>
//    <i> Memory Management, MPU mismatch, including Access Violation and No Match </i>
//    <loc> 4 </loc>
//  </qitem>
//  
//  <qitem> BusFault_IRQ
//    <name> BusFault </name>
//    <i> Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault </i>
//    <loc> 5 </loc>
//  </qitem>
//  
//  <qitem> UsageFault_IRQ
//    <name> UsageFault </name>
//    <i> Usage Fault, i.e. Undef Instruction, Illegal State Transition </i>
//    <loc> 6 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> DebugMonitor_IRQ
//    <name> DebugMonitor </name>
//    <i> Debug Monitor </i>
//    <loc> 12 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// ---------------------  EFR32FG1V131F256GM48 Specific Interrupt Numbers  ------------------------

//  <qitem> EMU_IRQ
//    <name> EMU </name>
//    <i> EMU </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> FRC_PRI_IRQ
//    <name> FRC_PRI </name>
//    <i> FRC_PRI </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> WDOG0_IRQ
//    <name> WDOG0 </name>
//    <i> WDOG0 </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> FRC_IRQ
//    <name> FRC </name>
//    <i> FRC </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> MODEM_IRQ
//    <name> MODEM </name>
//    <i> MODEM </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> RAC_SEQ_IRQ
//    <name> RAC_SEQ </name>
//    <i> RAC_SEQ </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> RAC_RSM_IRQ
//    <name> RAC_RSM </name>
//    <i> RAC_RSM </i>
//    <loc> 22 </loc>
//  </qitem>
//  
//  <qitem> BUFC_IRQ
//    <name> BUFC </name>
//    <i> BUFC </i>
//    <loc> 23 </loc>
//  </qitem>
//  
//  <qitem> LDMA_IRQ
//    <name> LDMA </name>
//    <i> LDMA </i>
//    <loc> 24 </loc>
//  </qitem>
//  
//  <qitem> GPIO_EVEN_IRQ
//    <name> GPIO_EVEN </name>
//    <i> GPIO_EVEN </i>
//    <loc> 25 </loc>
//  </qitem>
//  
//  <qitem> TIMER0_IRQ
//    <name> TIMER0 </name>
//    <i> TIMER0 </i>
//    <loc> 26 </loc>
//  </qitem>
//  
//  <qitem> USART0_RX_IRQ
//    <name> USART0_RX </name>
//    <i> USART0_RX </i>
//    <loc> 27 </loc>
//  </qitem>
//  
//  <qitem> USART0_TX_IRQ
//    <name> USART0_TX </name>
//    <i> USART0_TX </i>
//    <loc> 28 </loc>
//  </qitem>
//  
//  <qitem> ACMP0_IRQ
//    <name> ACMP0 </name>
//    <i> ACMP0 </i>
//    <loc> 29 </loc>
//  </qitem>
//  
//  <qitem> ADC0_IRQ
//    <name> ADC0 </name>
//    <i> ADC0 </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> IDAC0_IRQ
//    <name> IDAC0 </name>
//    <i> IDAC0 </i>
//    <loc> 31 </loc>
//  </qitem>
//  
//  <qitem> I2C0_IRQ
//    <name> I2C0 </name>
//    <i> I2C0 </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> GPIO_ODD_IRQ
//    <name> GPIO_ODD </name>
//    <i> GPIO_ODD </i>
//    <loc> 33 </loc>
//  </qitem>
//  
//  <qitem> TIMER1_IRQ
//    <name> TIMER1 </name>
//    <i> TIMER1 </i>
//    <loc> 34 </loc>
//  </qitem>
//  
//  <qitem> USART1_RX_IRQ
//    <name> USART1_RX </name>
//    <i> USART1_RX </i>
//    <loc> 35 </loc>
//  </qitem>
//  
//  <qitem> USART1_TX_IRQ
//    <name> USART1_TX </name>
//    <i> USART1_TX </i>
//    <loc> 36 </loc>
//  </qitem>
//  
//  <qitem> LEUART0_IRQ
//    <name> LEUART0 </name>
//    <i> LEUART0 </i>
//    <loc> 37 </loc>
//  </qitem>
//  
//  <qitem> PCNT0_IRQ
//    <name> PCNT0 </name>
//    <i> PCNT0 </i>
//    <loc> 38 </loc>
//  </qitem>
//  
//  <qitem> CMU_IRQ
//    <name> CMU </name>
//    <i> CMU </i>
//    <loc> 39 </loc>
//  </qitem>
//  
//  <qitem> MSC_IRQ
//    <name> MSC </name>
//    <i> MSC </i>
//    <loc> 40 </loc>
//  </qitem>
//  
//  <qitem> CRYPTO_IRQ
//    <name> CRYPTO </name>
//    <i> CRYPTO </i>
//    <loc> 41 </loc>
//  </qitem>
//  
//  <qitem> LETIMER0_IRQ
//    <name> LETIMER0 </name>
//    <i> LETIMER0 </i>
//    <loc> 42 </loc>
//  </qitem>
//  
//  <qitem> AGC_IRQ
//    <name> AGC </name>
//    <i> AGC </i>
//    <loc> 43 </loc>
//  </qitem>
//  
//  <qitem> PROTIMER_IRQ
//    <name> PROTIMER </name>
//    <i> PROTIMER </i>
//    <loc> 44 </loc>
//  </qitem>
//  
//  <qitem> RTCC_IRQ
//    <name> RTCC </name>
//    <i> RTCC </i>
//    <loc> 45 </loc>
//  </qitem>
//  
//  <qitem> SYNTH_IRQ
//    <name> SYNTH </name>
//    <i> SYNTH </i>
//    <loc> 46 </loc>
//  </qitem>
//  
//  <qitem> CRYOTIMER_IRQ
//    <name> CRYOTIMER </name>
//    <i> CRYOTIMER </i>
//    <loc> 47 </loc>
//  </qitem>
//  
//  <qitem> RFSENSE_IRQ
//    <name> RFSENSE </name>
//    <i> RFSENSE </i>
//    <loc> 48 </loc>
//  </qitem>
//  
//  <qitem> FPUEH_IRQ
//    <name> FPUEH </name>
//    <i> FPUEH </i>
//    <loc> 49 </loc>
//  </qitem>
//  
//  <irqtable> EFR32FG1V131F256GM48_IRQTable
//    <name> EFR32FG1V131F256GM48 Interrupt Table </name>
//    <nvicPrioBits> 3 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> MemoryManagement_IRQ </qitem>
//    <qitem> BusFault_IRQ </qitem>
//    <qitem> UsageFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> DebugMonitor_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> EMU_IRQ </qitem>
//    <qitem> FRC_PRI_IRQ </qitem>
//    <qitem> WDOG0_IRQ </qitem>
//    <qitem> FRC_IRQ </qitem>
//    <qitem> MODEM_IRQ </qitem>
//    <qitem> RAC_SEQ_IRQ </qitem>
//    <qitem> RAC_RSM_IRQ </qitem>
//    <qitem> BUFC_IRQ </qitem>
//    <qitem> LDMA_IRQ </qitem>
//    <qitem> GPIO_EVEN_IRQ </qitem>
//    <qitem> TIMER0_IRQ </qitem>
//    <qitem> USART0_RX_IRQ </qitem>
//    <qitem> USART0_TX_IRQ </qitem>
//    <qitem> ACMP0_IRQ </qitem>
//    <qitem> ADC0_IRQ </qitem>
//    <qitem> IDAC0_IRQ </qitem>
//    <qitem> I2C0_IRQ </qitem>
//    <qitem> GPIO_ODD_IRQ </qitem>
//    <qitem> TIMER1_IRQ </qitem>
//    <qitem> USART1_RX_IRQ </qitem>
//    <qitem> USART1_TX_IRQ </qitem>
//    <qitem> LEUART0_IRQ </qitem>
//    <qitem> PCNT0_IRQ </qitem>
//    <qitem> CMU_IRQ </qitem>
//    <qitem> MSC_IRQ </qitem>
//    <qitem> CRYPTO_IRQ </qitem>
//    <qitem> LETIMER0_IRQ </qitem>
//    <qitem> AGC_IRQ </qitem>
//    <qitem> PROTIMER_IRQ </qitem>
//    <qitem> RTCC_IRQ </qitem>
//    <qitem> SYNTH_IRQ </qitem>
//    <qitem> CRYOTIMER_IRQ </qitem>
//    <qitem> RFSENSE_IRQ </qitem>
//    <qitem> FPUEH_IRQ </qitem>
//  </irqtable>


// -------------------------------   Menu: EFR32FG1V131F256GM48  ----------------------------------
// SVD Line: 2



// -------------------------  Peripheral Menu: 'EFR32FG1V131F256GM48'  ----------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> ACMP
//    <m> ACMP0 </m>
//    <m> ACMP1 </m>
//  </b>
//  
//  <b> ADC
//    <m> ADC0 </m>
//  </b>
//  
//  <b> AGC
//    <m> AGC </m>
//  </b>
//  
//  <b> BUFC
//    <m> BUFC </m>
//  </b>
//  
//  <b> CMU
//    <m> CMU </m>
//  </b>
//  
//  <b> CRC
//    <m> CRC </m>
//  </b>
//  
//  <b> CRYOTIMER
//    <m> CRYOTIMER </m>
//  </b>
//  
//  <b> CRYPTO
//    <m> CRYPTO </m>
//  </b>
//  
//  <b> EMU
//    <m> EMU </m>
//  </b>
//  
//  <b> FPUEH
//    <m> FPUEH </m>
//  </b>
//  
//  <b> FRC
//    <m> FRC </m>
//  </b>
//  
//  <b> GPCRC
//    <m> GPCRC </m>
//  </b>
//  
//  <b> GPIO
//    <m> GPIO </m>
//  </b>
//  
//  <b> I
//    <m> I2C0 </m>
//  </b>
//  
//  <b> IDAC
//    <m> IDAC0 </m>
//  </b>
//  
//  <b> LDMA
//    <m> LDMA </m>
//  </b>
//  
//  <b> LETIMER
//    <m> LETIMER0 </m>
//  </b>
//  
//  <b> LEUART
//    <m> LEUART0 </m>
//  </b>
//  
//  <b> MODEM
//    <m> MODEM </m>
//  </b>
//  
//  <b> MSC
//    <m> MSC </m>
//  </b>
//  
//  <b> PCNT
//    <m> PCNT0 </m>
//  </b>
//  
//  <b> PROTIMER
//    <m> PROTIMER </m>
//  </b>
//  
//  <b> PRS
//    <m> PRS </m>
//  </b>
//  
//  <b> RAC
//    <m> RAC </m>
//  </b>
//  
//  <b> RFSENSE
//    <m> RFSENSE </m>
//  </b>
//  
//  <b> RMU
//    <m> RMU </m>
//  </b>
//  
//  <b> RTCC
//    <m> RTCC </m>
//  </b>
//  
//  <b> SEQ
//    <m> SEQ </m>
//  </b>
//  
//  <b> SYNTH
//    <m> SYNTH </m>
//  </b>
//  
//  <b> TIMER
//    <m> TIMER0 </m>
//    <m> TIMER1 </m>
//  </b>
//  
//  <b> USART
//    <m> USART0 </m>
//    <m> USART1 </m>
//  </b>
//  
//  <b> WDOG
//    <m> WDOG0 </m>
//  </b>
//  
